<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[Doctrine]]></title>
    <link href="https://staging.doctrine-project.org/blog/categories/release.xml" rel="self"/>
    <link href="https://staging.doctrine-project.org/"/>
    <updated>2018-03-30T21:28:57-04:00</updated>
    <id>https://staging.doctrine-project.org/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[Doctrine ORM 2.5.5 Released]]></title>
            <link href="https://staging.doctrine-project.org/2016/09/10/orm-2-5-5"/>
            <updated>2016-09-10T00:00:00-04:00</updated>
            <id>https://staging.doctrine-project.org/2016/09/10/orm-2-5-5</id>
            <content type="html"><![CDATA[<p>We are happy to announce the immediate availability of Doctrine ORM
<a href="https://github.com/doctrine/doctrine2/releases/tag/v2.5.5">2.5.5</a>.</p>
<p>Following issues were fixed:</p>
<ul><li class="dash">Embeddable classes are now allowed in inheritance trees <a href="https://github.com/doctrine/doctrine2/issues/4097">#4097</a></li>
<li class="dash">Removed some object hash collisions caused by entity merging <a href="https://github.com/doctrine/doctrine2/pull/1465">#1465</a></li>
<li class="dash">Allowed usage of mathematical operators in DQL <code>HAVING</code> clauses <a href="https://github.com/doctrine/doctrine2/pull/5598">#5598</a></li>
<li class="dash">Fixed cloning of proxies with private properties at multiple inheritance levels <a href="https://github.com/doctrine/doctrine2/pull/5755">#5755</a></li>
<li class="dash">Entity insertions are correctly cleared when a specific entity is to be cleared <a href="https://github.com/doctrine/doctrine2/issues/5849">#5849</a></li>
<li class="dash">Corrected hydration of fetch-joins that use composite keys <a href="https://github.com/doctrine/doctrine2/issues/5762">#5762</a></li>
<li class="dash">Metadata exporters now only export the owning side metadata in a one-to-one relation <a href="https://github.com/doctrine/doctrine2/issues/5858">#5858</a></li>
<li class="dash">Corrected hydration of JTI entities when <code>NULL</code> is retrieved for a <code>simple_array</code> or <code>json_array</code> field <a href="https://github.com/doctrine/doctrine2/issues/5989">#5989</a></li>
<li class="dash">Correctly expire L2 cache query caches, based on entity region cache timestamp <a href="https://github.com/doctrine/doctrine2/issues/6001">#6001</a></li>
</ul>

<a id="title.1"></a><h1>Installation</h1>
<p>You can install the ORM component using Composer:</p>
<pre><code class="shell">composer require doctrine/orm:^2.5.5
</code></pre>
<p>Please report any issues you may have with the update on the
<a href="https://github.com/doctrine/doctrine2/issues">issue tracker</a>.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Doctrine DBAL 2.5.5 Released]]></title>
            <link href="https://staging.doctrine-project.org/2016/09/09/dbal-2-5-5"/>
            <updated>2016-09-09T00:00:00-04:00</updated>
            <id>https://staging.doctrine-project.org/2016/09/09/dbal-2-5-5</id>
            <content type="html"><![CDATA[<p>We are happy to announce the immediate availability of Doctrine DBAL
<a href="https://github.com/doctrine/dbal/releases/tag/v2.5.5">2.5.5</a>.</p>
<p>This release contains a huge amount of fixes, specifically:</p>
<ul><li class="dash">Parsing of SQL strings containing single quotes <a href="https://github.com/doctrine/common/pull/842">#842</a></li>
<li class="dash">Listing foreign key names when no DB name is used (use current DB instead) <a href="https://github.com/doctrine/common/pull/856">#856</a></li>
<li class="dash">Verifying if table names correspond on dropped foreign keys <a href="https://github.com/doctrine/common/pull/861">#861</a></li>
<li class="dash">Quoting identifiers in <code>DROP</code> DDL statements <a href="https://github.com/doctrine/common/pull/862">#862</a></li>
<li class="dash">Removing leading slash from database/schema names when using DSNs <a href="https://github.com/doctrine/common/pull/863">#863</a></li>
<li class="dash">Stopped using <code>template1</code> as default database in Postgres <a href="https://github.com/doctrine/common/pull/2279">#2279</a></li>
<li class="dash">Allowing <code>&quot;path&quot;</code> instead of <code>&quot;dbname&quot;</code> in SQLite connections <a href="https://github.com/doctrine/common/pull/2267">#2267</a></li>
<li class="dash">Correcting DB2 boolean columns schema introspection <a href="https://github.com/doctrine/common/pull/2277">#2277</a></li>
<li class="dash">Correcting OCI8 parameter binding, which was broken by upgrading to PHP 7.0 <a href="https://github.com/doctrine/common/pull/2434">#2434</a></li>
<li class="dash">Quoting reserved table names when using <code>TRUNCATE</code> <a href="https://github.com/doctrine/common/pull/2270">#2270</a></li>
<li class="dash">Fixing of DSN parsing when no schema is in the path <a href="https://github.com/doctrine/common/pull/2287">#2287</a></li>
<li class="dash">Correcting query builder, which was adding a <code>FROM</code> clause even with no arguments for it <a href="https://github.com/doctrine/common/pull/2292">#2292</a></li>
<li class="dash">Correcting altering primary key with <code>AUTO_INCREMENT</code> on MySQL (requires dropping/re-adding PK) <a href="https://github.com/doctrine/common/pull/2303">#2303</a></li>
<li class="dash">Moving DB2 pagination (query modification) offset/limit count result to the end of the results <a href="https://github.com/doctrine/common/pull/2310">#2310</a></li>
<li class="dash">Handling <code>Throwable</code> exceptions thrown in <code>Connection#transactional()</code> <a href="https://github.com/doctrine/common/pull/2390">#2390</a></li>
<li class="dash">Correcting logging of parameters passed to a statement via <code>bindParam()</code>  <a href="https://github.com/doctrine/common/pull/2440">#2440</a></li>
<li class="dash">Allowing installation of <code>symfony/console:^3.0</code> <a href="https://github.com/doctrine/common/pull/2484">#2484</a></li>
<li class="dash">Correcing MySQLi statements, which were returning <code>null</code> instead of <code>false</code> on no results <a href="https://github.com/doctrine/common/pull/2497">#2497</a></li>
</ul>

<a id="title.1"></a><h1>Installation</h1>
<p>You can install the DBAL component using Composer:</p>
<pre><code class="shell">composer require doctrine/dbal:^2.5.5
</code></pre>
<p>Please report any issues you may have with the update on the
<a href="https://github.com/doctrine/dbal/issues">issue tracker</a>.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Doctrine Data-Fixtures 1.2.0 Released]]></title>
            <link href="https://staging.doctrine-project.org/2016/06/19/data-fixtures-1-2-0"/>
            <updated>2016-06-19T00:00:00-04:00</updated>
            <id>https://staging.doctrine-project.org/2016/06/19/data-fixtures-1-2-0</id>
            <content type="html"><![CDATA[<p>We are happy to announce the immediate availability of Doctrine Data-Fixtures
<a href="https://github.com/doctrine/data-fixtures/releases/tag/v1.2.0">1.2.0</a>.</p>
<p>This release fixes an issue that prevented further development of <code>doctrine/orm</code>,
since an internal class of the ORM was used inside the <code>doctrine/data-fixtures</code>
package. This issue is now solved by implementing a custom
<code>`TopologicalSorter</code> &lt;https://github.com/doctrine/data-fixtures/blob/v1.2.0/lib/Doctrine/Common/DataFixtures/Sorter/TopologicalSorter.php&gt;<a href="https://github.com/doctrine/data-fixtures/pull/222">_
in the library. `#222</a></p>
<p>Additionally an issue with double escaping caused issues when deleting from tables
with quoted names. <a href="https://github.com/doctrine/data-fixtures/pull/221">#221</a></p>
<p>Please also be aware that this release drops support for PHP 5.5 and below.
Given that PHP 5.5 is going to exit its official
<a href="http://php.net/supported-versions.php">security support schedule</a> very soon,
we strongly recommend that all users upgrade their PHP installations as well.</p>
<a id="title.1"></a><h1>Installation</h1>
<p>You can install the ORM component using Composer:</p>
<pre><code class="shell">composer require doctrine/data-fixtures:^1.2.0
</code></pre>
<p>Please report any issues you may have with the update on the
<a href="https://github.com/doctrine/data-fixtures/issues">issue tracker</a>.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Doctrine ORM 2.5.4 Released]]></title>
            <link href="https://staging.doctrine-project.org/2016/01/05/orm-2-5-4"/>
            <updated>2016-01-05T00:00:00-05:00</updated>
            <id>https://staging.doctrine-project.org/2016/01/05/orm-2-5-4</id>
            <content type="html"><![CDATA[<p>We are happy to announce the immediate availability of Doctrine ORM
<a href="https://github.com/doctrine/doctrine2/releases/tag/v2.5.4">2.5.4</a>.</p>
<p>This release fixes an issue with how identifiers are used when building
second level cache entries during hydration. <a href="https://github.com/doctrine/doctrine2/pull/1568">#1568</a></p>
<a id="title.1"></a><h1>Installation</h1>
<p>You can install the ORM component using Composer:</p>
<pre><code class="shell">composer require doctrine/orm:~2.5.4
</code></pre>
<p>Please report any issues you may have with the update on the
<a href="https://github.com/doctrine/doctrine2/issues">issue tracker</a>.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Doctrine DBAL 2.5.4 and 2.4.5 Released]]></title>
            <link href="https://staging.doctrine-project.org/2016/01/05/dbal-2-5-4-and-2-4-5"/>
            <updated>2016-01-05T00:00:00-05:00</updated>
            <id>https://staging.doctrine-project.org/2016/01/05/dbal-2-5-4-and-2-4-5</id>
            <content type="html"><![CDATA[<p>We are happy to announce the immediate availability of Doctrine DBAL
<a href="https://github.com/doctrine/dbal/releases/tag/v2.5.4">2.5.4</a> and
<a href="https://github.com/doctrine/dbal/releases/tag/v2.4.5">2.4.5</a>.</p>
<a id="title.1"></a><h1>DBAL 2.5.4</h1>
<p>SQLite types weren't correctly identified when whitespace was present in the
table definitions: the DBAL now correctly recognizes that, and ignores the
whitespace. <a href="https://github.com/doctrine/dbal/issues/2272">#2272</a></p>
<p>constant <code>PDO::PGSQL_ATTR_DISABLE_PREPARES</code> is only defined when PGSQL support
for PHP is enabled with PDO. The DBAL now checks whether the constant is available
before relying on it. <a href="https://github.com/doctrine/dbal/issues/2249">#2249</a></p>
<a id="title.2"></a><h1>DBAL 2.4.5</h1>
<p>This release backports a number of fixes that were already present in DBAL 2.5.3.</p>
<p>Specifically, following issues were solved:</p>
<ul><li class="dash">SQLite offset with no limit support <a href="https://github.com/doctrine/dbal/issues/1069">#1069</a></li>
<li class="dash">Fix removing autoincrement column from a primary key <a href="https://github.com/doctrine/dbal/issues/1074">#1074</a></li>
<li class="dash">Infinite recursion on non-unique table/join alias in QueryBuilder <a href="https://github.com/doctrine/dbal/issues/1079">#1079</a></li>
<li class="dash">Fix for bad profiling data, showing an indefinitely long query <a href="https://github.com/doctrine/dbal/issues/1124">#1124</a></li>
<li class="dash">Fix incorrect ordering of columns in clustered indexes on sql server <a href="https://github.com/doctrine/dbal/issues/1129">#1129</a></li>
<li class="dash">Avoid fatal error in <code>array_merge</code> while generating the table creation SQL <a href="https://github.com/doctrine/dbal/issues/1141">#1141</a></li>
<li class="dash"><code>template1</code> as default database for PostgreSQL <a href="https://github.com/doctrine/dbal/issues/1162">#1162</a></li>
</ul>

<p>Please be advised that this is the last 2.4.x release, and except for security releases,
no further patches will be provided for DBAL 2.4: please upgrade to 2.5 as soon as possible.</p>
<a id="title.3"></a><h1>Installation</h1>
<p>You can install the DBAL component using Composer:</p>
<pre><code class="shell">composer require doctrine/dbal:~2.5.4
</code></pre>
<p>Please report any issues you may have with the update on the
<a href="https://github.com/doctrine/dbal/issues">issue tracker</a>.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Cache 1.6.0 Released]]></title>
            <link href="https://staging.doctrine-project.org/2015/12/31/cache-1-6-0"/>
            <updated>2015-12-31T00:00:00-05:00</updated>
            <id>https://staging.doctrine-project.org/2015/12/31/cache-1-6-0</id>
            <content type="html"><![CDATA[<p>We are happy to announce the immediate availability of Doctrine Cache
<a href="https://github.com/doctrine/cache/releases/tag/v1.5.2">1.6.0</a>.</p>
<a id="title.1"></a><h1>Cache 1.6.0</h1>
<p>Support for PHP versions below 5.5.0 was removed: please remember that if
you are still using PHP 5.4.x or lower, the PHP project
<a href="http://php.net/supported-versions.php">does not provide support for those versions anymore</a>. <a href="https://github.com/doctrine/cache/pull/109">#109</a></p>
<p>Native <a href="https://github.com/krakjoe/apcu">APCu</a> support was introduced:
if you run newer versions of APCu, then you can use the
new <a href="https://github.com/doctrine/cache/blob/v1.6.0/lib/Doctrine/Common/Cache/ApcuCache.php">ApcuCache</a>
adapter. <a href="https://github.com/doctrine/cache/pull/117">#115</a></p>
<p>A <a href="https://github.com/doctrine/cache/blob/v1.6.0/lib/Doctrine/Common/Cache/MultiPutCache.php">MultiPutCache</a>
interface was introduced: the
<a href="https://github.com/doctrine/cache/blob/v1.6.0/lib/Doctrine/Common/Cache/CacheProvider.php">CacheProvider</a>
implements it by default now. This interface can lead to improved
performance when saving multiple keys at once, if your cache adapter
supports such an operation. <a href="https://github.com/doctrine/cache/pull/117">#117</a></p>
<p>The <a href="https://github.com/doctrine/cache/blob/v1.6.0/lib/Doctrine/Common/Cache/ArrayCache.php">ArrayCache</a>
now honors the given cache entries TTL, making it possible to use
it even in long running processes without the risk of dealing with
stale data. <a href="https://github.com/doctrine/cache/pull/130">#130</a></p>
<a id="title.2"></a><h1>Installation</h1>
<p>You can install the Cache component using the following <code>composer.json</code> definitions:</p>
<pre><code class="shell">composer require doctrine/cache:^1.6
</code></pre>
<p>Please report any issues you may have with the update on the mailing list or on
<a href="http://www.doctrine-project.org/jira">Jira</a>.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Doctrine ORM 2.5.3 Released]]></title>
            <link href="https://staging.doctrine-project.org/2015/12/25/orm-2-5-3"/>
            <updated>2015-12-25T00:00:00-05:00</updated>
            <id>https://staging.doctrine-project.org/2015/12/25/orm-2-5-3</id>
            <content type="html"><![CDATA[<p>We are happy to announce the immediate availability of Doctrine ORM
<a href="https://github.com/doctrine/doctrine2/releases/tag/v2.5.3">2.5.3</a>.</p>
<p>Dependency constraints on the
<a href="https://github.com/doctrine/common">doctrine/common</a> component supported
versions were corrected, allowing users to install <code>doctrine/common</code>
version <code>2.6.*</code> together with the ORM.
This also means that PHP 7 scalar type-hints and return type declarations are
now reflected in the generated proxy classes. <a href="https://github.com/doctrine/doctrine2/issues/4884">#4884</a></p>
<p>Merging versioned entities caused the merged instance to have a <code>null</code> version:
this is now fixed. <a href="https://github.com/doctrine/doctrine2/issues/1573">#1573</a></p>
<p>It was impossible to use interface names when referencing entity types in DQL: it
is now possible to do so when using
the <a href="https://github.com/doctrine/doctrine2/blob/v2.5.3/lib/Doctrine/ORM/Tools/ResolveTargetEntityListener.php">ResolveTargetEntityListener</a>. <a href="https://github.com/doctrine/doctrine2/issues/1573">#1573</a></p>
<a id="title.1"></a><h1>Installation</h1>
<p>You can install the ORM component using Composer:</p>
<pre><code class="shell">composer require doctrine/orm:~2.5.3
</code></pre>
<p>Please report any issues you may have with the update on the
<a href="https://github.com/doctrine/doctrine2/issues">issue tracker</a>.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Doctrine DBAL 2.5.3 Released]]></title>
            <link href="https://staging.doctrine-project.org/2015/12/25/dbal-2-5-3"/>
            <updated>2015-12-25T00:00:00-05:00</updated>
            <id>https://staging.doctrine-project.org/2015/12/25/dbal-2-5-3</id>
            <content type="html"><![CDATA[<p>We are happy to announce the immediate availability of Doctrine DBAL
<a href="https://github.com/doctrine/dbal/releases/tag/v2.5.3">2.5.3</a>.</p>
<p>The SQLServer platform support for pagination query modification was
completely rewritten, improving stability and code quality as well as
ease of maintenance. <a href="https://github.com/doctrine/dbal/issues/818">#818</a></p>
<p>Dependency constraints on the
<a href="https://github.com/doctrine/common">doctrine/common</a> component supported
versions were corrected, allowing users to install <code>doctrine/common</code>
<code>2.6.*</code> together with the DBAL. <a href="https://github.com/doctrine/dbal/issues/2268">#2268</a></p>
<a id="title.1"></a><h1>Installation</h1>
<p>You can install the DBAL component using Composer:</p>
<pre><code class="shell">composer require doctrine/dbal:~2.5.3
</code></pre>
<p>Please report any issues you may have with the update on the
<a href="https://github.com/doctrine/dbal/issues">issue tracker</a>.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Common 2.5.3 and 2.6.1 Released]]></title>
            <link href="https://staging.doctrine-project.org/2015/12/25/common-2-5-3-and-2-6-1"/>
            <updated>2015-12-25T00:00:00-05:00</updated>
            <id>https://staging.doctrine-project.org/2015/12/25/common-2-5-3-and-2-6-1</id>
            <content type="html"><![CDATA[<p>We are happy to announce the immediate availability of Doctrine Common
<a href="https://github.com/doctrine/common/releases/tag/v2.5.3">2.5.3</a> and
<a href="https://github.com/doctrine/common/releases/tag/v2.6.1">2.6.1</a>.</p>
<a id="title.1"></a><h1>Common 2.5.3</h1>
<p>This release corrects an issue with the precedence of namespaces being
matched by the <code>SymfonyFileLocator</code> <a href="https://github.com/doctrine/common/pull/367">#367</a>.</p>
<a id="title.2"></a><h1>Common 2.6.1</h1>
<p>This release includes all of the fixes reported above for 2.5.3.</p>
<a id="title.3"></a><h1>Installation</h1>
<p>You can install the Common component using Composer and one of the following
<code>composer.json</code> definitions:</p>
<pre><code class="json">{
    &quot;require&quot;: {
        &quot;doctrine/common&quot;: &quot;~2.5.3&quot;
    }
}
</code></pre>
<pre><code class="json">{
    &quot;require&quot;: {
        &quot;doctrine/common&quot;: &quot;~2.6.1&quot;
    }
}
</code></pre>
<p>Please report any issues you may have with the update on the
<a href="https://github.com/doctrine/common/issues">issue tracker</a>.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Common 2.5.2 and 2.6.0 Released]]></title>
            <link href="https://staging.doctrine-project.org/2015/12/04/common-2-5-2-and-2-6-0"/>
            <updated>2015-12-04T00:00:00-05:00</updated>
            <id>https://staging.doctrine-project.org/2015/12/04/common-2-5-2-and-2-6-0</id>
            <content type="html"><![CDATA[<p>We are happy to announce the immediate availability of Doctrine Common
<a href="https://github.com/doctrine/common/releases/tag/v2.5.2">2.5.2</a> and
<a href="https://github.com/doctrine/common/releases/tag/v2.6.0">2.6.0</a>.</p>
<a id="title.1"></a><h1>Common 2.5.2</h1>
<p><code>chmod()</code> warnings caused by proxy generation are now silenced
<a href="https://github.com/doctrine/common/pull/383">#383</a>
<a href="http://www.doctrine-project.org/jira/browse/DCOM-299">DCOM-299</a>.</p>
<p><code>SymfonyFileLocator#getAllClassNames()</code> was dropping some classes: now fixed
<a href="https://github.com/doctrine/common/pull/384">#384</a>
<a href="http://www.doctrine-project.org/jira/browse/DCOM-301">DCOM-301</a>.</p>
<p>Corrected fatal error triggered by <code>AbstractManagerRegistry#getManagerForClass()</code>
when no parent class is found for a proxy
<a href="https://github.com/doctrine/common/pull/387">#387</a>
<a href="http://www.doctrine-project.org/jira/browse/DCOM-303">DCOM-303</a>.</p>
<p>You can find the complete changelog for this release in the
<a href="http://www.doctrine-project.org/jira/projects/DCOM/versions/10820">v2.5.2 release notes</a>.</p>
<a id="title.2"></a><h1>Common 2.6.0</h1>
<p>This release includes all of the fixes reported above for 2.5.2, as well
as following changes:</p>
<p>Proxy generation now supports PHP 7.0+ scalar type hints and return types
<a href="https://github.com/doctrine/common/pull/376">#376</a>
<a href="http://www.doctrine-project.org/jira/browse/DCOM-294">DCOM-294</a>.</p>
<p>Switched autoloading to PSR-4
<a href="https://github.com/doctrine/common/pull/389">#389</a>
<a href="http://www.doctrine-project.org/jira/browse/DCOM-305">DCOM-305</a>.</p>
<p>Added a <code>.gitattributes</code> to the repositories, reducing the size of the
package that is installed by composer
<a href="https://github.com/doctrine/common/pull/380">#380</a>
<a href="http://www.doctrine-project.org/jira/browse/DCOM-296">DCOM-296</a>.</p>
<p>You can find the complete changelog for this release in the
<a href="http://www.doctrine-project.org/jira/projects/DCOM/versions/10735">v2.6.0 release notes</a>.</p>
<a id="title.3"></a><h1>Installation</h1>
<p>You can install the Common component using Composer and one of the following
<code>composer.json</code> definitions:</p>
<pre><code class="json">{
    &quot;require&quot;: {
        &quot;doctrine/common&quot;: &quot;~2.5.2&quot;
    }
}
</code></pre>
<pre><code class="json">{
    &quot;require&quot;: {
        &quot;doctrine/common&quot;: &quot;~2.6.01&quot;
    }
}
</code></pre>
<p>Please report any issues you may have with the update on the mailing list or on
<a href="http://www.doctrine-project.org/jira">Jira</a>.</p>
]]></content>
        </entry>
    </feed>