
window.projectVersion = '1.1.x';

(function(root) {

    var bhIndex = null;
    var rootPath = '';
    var treeHtml = '        <ul>                <li data-name="namespace:Doctrine" class="opened">                    <div style="padding-left:0px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine.html">Doctrine</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Doctrine_MongoDB" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/MongoDB.html">MongoDB</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Doctrine_MongoDB_Event" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/MongoDB/Event.html">Event</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Doctrine_MongoDB_Event_AggregateEventArgs" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/MongoDB/Event/AggregateEventArgs.html">AggregateEventArgs</a>                    </div>                </li>                            <li data-name="class:Doctrine_MongoDB_Event_CreateCollectionEventArgs" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/MongoDB/Event/CreateCollectionEventArgs.html">CreateCollectionEventArgs</a>                    </div>                </li>                            <li data-name="class:Doctrine_MongoDB_Event_DistinctEventArgs" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/MongoDB/Event/DistinctEventArgs.html">DistinctEventArgs</a>                    </div>                </li>                            <li data-name="class:Doctrine_MongoDB_Event_EventArgs" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/MongoDB/Event/EventArgs.html">EventArgs</a>                    </div>                </li>                            <li data-name="class:Doctrine_MongoDB_Event_FindEventArgs" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/MongoDB/Event/FindEventArgs.html">FindEventArgs</a>                    </div>                </li>                            <li data-name="class:Doctrine_MongoDB_Event_GroupEventArgs" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/MongoDB/Event/GroupEventArgs.html">GroupEventArgs</a>                    </div>                </li>                            <li data-name="class:Doctrine_MongoDB_Event_MapReduceEventArgs" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/MongoDB/Event/MapReduceEventArgs.html">MapReduceEventArgs</a>                    </div>                </li>                            <li data-name="class:Doctrine_MongoDB_Event_MutableEventArgs" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/MongoDB/Event/MutableEventArgs.html">MutableEventArgs</a>                    </div>                </li>                            <li data-name="class:Doctrine_MongoDB_Event_NearEventArgs" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/MongoDB/Event/NearEventArgs.html">NearEventArgs</a>                    </div>                </li>                            <li data-name="class:Doctrine_MongoDB_Event_UpdateEventArgs" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/MongoDB/Event/UpdateEventArgs.html">UpdateEventArgs</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Doctrine_MongoDB_Exception" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/MongoDB/Exception.html">Exception</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Doctrine_MongoDB_Exception_ResultException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/MongoDB/Exception/ResultException.html">ResultException</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Doctrine_MongoDB_Query" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/MongoDB/Query.html">Query</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Doctrine_MongoDB_Query_Builder" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/MongoDB/Query/Builder.html">Builder</a>                    </div>                </li>                            <li data-name="class:Doctrine_MongoDB_Query_Expr" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/MongoDB/Query/Expr.html">Expr</a>                    </div>                </li>                            <li data-name="class:Doctrine_MongoDB_Query_Query" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/MongoDB/Query/Query.html">Query</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Doctrine_MongoDB_Util" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/MongoDB/Util.html">Util</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Doctrine_MongoDB_Util_ReadPreference" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/MongoDB/Util/ReadPreference.html">ReadPreference</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Doctrine_MongoDB_ArrayIterator" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/MongoDB/ArrayIterator.html">ArrayIterator</a>                    </div>                </li>                            <li data-name="class:Doctrine_MongoDB_Collection" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/MongoDB/Collection.html">Collection</a>                    </div>                </li>                            <li data-name="class:Doctrine_MongoDB_Configuration" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/MongoDB/Configuration.html">Configuration</a>                    </div>                </li>                            <li data-name="class:Doctrine_MongoDB_Connection" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/MongoDB/Connection.html">Connection</a>                    </div>                </li>                            <li data-name="class:Doctrine_MongoDB_Cursor" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/MongoDB/Cursor.html">Cursor</a>                    </div>                </li>                            <li data-name="class:Doctrine_MongoDB_Database" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/MongoDB/Database.html">Database</a>                    </div>                </li>                            <li data-name="class:Doctrine_MongoDB_EagerCursor" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/MongoDB/EagerCursor.html">EagerCursor</a>                    </div>                </li>                            <li data-name="class:Doctrine_MongoDB_Events" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/MongoDB/Events.html">Events</a>                    </div>                </li>                            <li data-name="class:Doctrine_MongoDB_GridFS" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/MongoDB/GridFS.html">GridFS</a>                    </div>                </li>                            <li data-name="class:Doctrine_MongoDB_GridFSFile" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/MongoDB/GridFSFile.html">GridFSFile</a>                    </div>                </li>                            <li data-name="class:Doctrine_MongoDB_Iterator" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/MongoDB/Iterator.html">Iterator</a>                    </div>                </li>                            <li data-name="class:Doctrine_MongoDB_IteratorAggregate" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/MongoDB/IteratorAggregate.html">IteratorAggregate</a>                    </div>                </li>                            <li data-name="class:Doctrine_MongoDB_Loggable" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/MongoDB/Loggable.html">Loggable</a>                    </div>                </li>                            <li data-name="class:Doctrine_MongoDB_LoggableCollection" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/MongoDB/LoggableCollection.html">LoggableCollection</a>                    </div>                </li>                            <li data-name="class:Doctrine_MongoDB_LoggableCursor" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/MongoDB/LoggableCursor.html">LoggableCursor</a>                    </div>                </li>                            <li data-name="class:Doctrine_MongoDB_LoggableDatabase" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/MongoDB/LoggableDatabase.html">LoggableDatabase</a>                    </div>                </li>                </ul></div>                </li>                </ul></div>                </li>                </ul>';

    var searchTypeClasses = {
        'Namespace': 'label-default',
        'Class': 'label-info',
        'Interface': 'label-primary',
        'Trait': 'label-success',
        'Method': 'label-danger',
        '_': 'label-warning'
    };

    var searchIndex = [
                    
            {"type": "Namespace", "link": "Doctrine.html", "name": "Doctrine", "doc": "Namespace Doctrine"},{"type": "Namespace", "link": "Doctrine/MongoDB.html", "name": "Doctrine\\MongoDB", "doc": "Namespace Doctrine\\MongoDB"},{"type": "Namespace", "link": "Doctrine/MongoDB/Event.html", "name": "Doctrine\\MongoDB\\Event", "doc": "Namespace Doctrine\\MongoDB\\Event"},{"type": "Namespace", "link": "Doctrine/MongoDB/Exception.html", "name": "Doctrine\\MongoDB\\Exception", "doc": "Namespace Doctrine\\MongoDB\\Exception"},{"type": "Namespace", "link": "Doctrine/MongoDB/Query.html", "name": "Doctrine\\MongoDB\\Query", "doc": "Namespace Doctrine\\MongoDB\\Query"},{"type": "Namespace", "link": "Doctrine/MongoDB/Util.html", "name": "Doctrine\\MongoDB\\Util", "doc": "Namespace Doctrine\\MongoDB\\Util"},
            {"type": "Interface", "fromName": "Doctrine\\MongoDB", "fromLink": "Doctrine/MongoDB.html", "link": "Doctrine/MongoDB/Iterator.html", "name": "Doctrine\\MongoDB\\Iterator", "doc": "&quot;Iterator interface.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\Iterator", "fromLink": "Doctrine/MongoDB/Iterator.html", "link": "Doctrine/MongoDB/Iterator.html#method_getSingleResult", "name": "Doctrine\\MongoDB\\Iterator::getSingleResult", "doc": "&quot;Return the first element or null if no elements exist.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Iterator", "fromLink": "Doctrine/MongoDB/Iterator.html", "link": "Doctrine/MongoDB/Iterator.html#method_toArray", "name": "Doctrine\\MongoDB\\Iterator::toArray", "doc": "&quot;Return all elements as an array.&quot;"},
            
            {"type": "Interface", "fromName": "Doctrine\\MongoDB", "fromLink": "Doctrine/MongoDB.html", "link": "Doctrine/MongoDB/IteratorAggregate.html", "name": "Doctrine\\MongoDB\\IteratorAggregate", "doc": "&quot;IteratorAggregate interface.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\IteratorAggregate", "fromLink": "Doctrine/MongoDB/IteratorAggregate.html", "link": "Doctrine/MongoDB/IteratorAggregate.html#method_getSingleResult", "name": "Doctrine\\MongoDB\\IteratorAggregate::getSingleResult", "doc": "&quot;Return the first element or null if no elements exist.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\IteratorAggregate", "fromLink": "Doctrine/MongoDB/IteratorAggregate.html", "link": "Doctrine/MongoDB/IteratorAggregate.html#method_toArray", "name": "Doctrine\\MongoDB\\IteratorAggregate::toArray", "doc": "&quot;Return all elements as an array.&quot;"},
            
            {"type": "Interface", "fromName": "Doctrine\\MongoDB", "fromLink": "Doctrine/MongoDB.html", "link": "Doctrine/MongoDB/Loggable.html", "name": "Doctrine\\MongoDB\\Loggable", "doc": "&quot;Loggable interface.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\Loggable", "fromLink": "Doctrine/MongoDB/Loggable.html", "link": "Doctrine/MongoDB/Loggable.html#method_log", "name": "Doctrine\\MongoDB\\Loggable::log", "doc": "&quot;Log something using the configured logger callable.&quot;"},
            
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB", "fromLink": "Doctrine/MongoDB.html", "link": "Doctrine/MongoDB/ArrayIterator.html", "name": "Doctrine\\MongoDB\\ArrayIterator", "doc": "&quot;ArrayIterator is used to encapsulate document results from commands.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\ArrayIterator", "fromLink": "Doctrine/MongoDB/ArrayIterator.html", "link": "Doctrine/MongoDB/ArrayIterator.html#method___construct", "name": "Doctrine\\MongoDB\\ArrayIterator::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\ArrayIterator", "fromLink": "Doctrine/MongoDB/ArrayIterator.html", "link": "Doctrine/MongoDB/ArrayIterator.html#method_count", "name": "Doctrine\\MongoDB\\ArrayIterator::count", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\ArrayIterator", "fromLink": "Doctrine/MongoDB/ArrayIterator.html", "link": "Doctrine/MongoDB/ArrayIterator.html#method_current", "name": "Doctrine\\MongoDB\\ArrayIterator::current", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\ArrayIterator", "fromLink": "Doctrine/MongoDB/ArrayIterator.html", "link": "Doctrine/MongoDB/ArrayIterator.html#method_first", "name": "Doctrine\\MongoDB\\ArrayIterator::first", "doc": "&quot;Return the first element in the array, or false if the array is empty.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\ArrayIterator", "fromLink": "Doctrine/MongoDB/ArrayIterator.html", "link": "Doctrine/MongoDB/ArrayIterator.html#method_getCommandResult", "name": "Doctrine\\MongoDB\\ArrayIterator::getCommandResult", "doc": "&quot;Get the full result document for the MongoDB command (if available).&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\ArrayIterator", "fromLink": "Doctrine/MongoDB/ArrayIterator.html", "link": "Doctrine/MongoDB/ArrayIterator.html#method_setCommandResult", "name": "Doctrine\\MongoDB\\ArrayIterator::setCommandResult", "doc": "&quot;Set the full result document for the MongoDB command.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\ArrayIterator", "fromLink": "Doctrine/MongoDB/ArrayIterator.html", "link": "Doctrine/MongoDB/ArrayIterator.html#method_getSingleResult", "name": "Doctrine\\MongoDB\\ArrayIterator::getSingleResult", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\ArrayIterator", "fromLink": "Doctrine/MongoDB/ArrayIterator.html", "link": "Doctrine/MongoDB/ArrayIterator.html#method_key", "name": "Doctrine\\MongoDB\\ArrayIterator::key", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\ArrayIterator", "fromLink": "Doctrine/MongoDB/ArrayIterator.html", "link": "Doctrine/MongoDB/ArrayIterator.html#method_last", "name": "Doctrine\\MongoDB\\ArrayIterator::last", "doc": "&quot;Return the last element in the array, or false if the array is empty.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\ArrayIterator", "fromLink": "Doctrine/MongoDB/ArrayIterator.html", "link": "Doctrine/MongoDB/ArrayIterator.html#method_next", "name": "Doctrine\\MongoDB\\ArrayIterator::next", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\ArrayIterator", "fromLink": "Doctrine/MongoDB/ArrayIterator.html", "link": "Doctrine/MongoDB/ArrayIterator.html#method_offsetExists", "name": "Doctrine\\MongoDB\\ArrayIterator::offsetExists", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\ArrayIterator", "fromLink": "Doctrine/MongoDB/ArrayIterator.html", "link": "Doctrine/MongoDB/ArrayIterator.html#method_offsetGet", "name": "Doctrine\\MongoDB\\ArrayIterator::offsetGet", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\ArrayIterator", "fromLink": "Doctrine/MongoDB/ArrayIterator.html", "link": "Doctrine/MongoDB/ArrayIterator.html#method_offsetSet", "name": "Doctrine\\MongoDB\\ArrayIterator::offsetSet", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\ArrayIterator", "fromLink": "Doctrine/MongoDB/ArrayIterator.html", "link": "Doctrine/MongoDB/ArrayIterator.html#method_offsetUnset", "name": "Doctrine\\MongoDB\\ArrayIterator::offsetUnset", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\ArrayIterator", "fromLink": "Doctrine/MongoDB/ArrayIterator.html", "link": "Doctrine/MongoDB/ArrayIterator.html#method_reset", "name": "Doctrine\\MongoDB\\ArrayIterator::reset", "doc": "&quot;Alias of {@link ArrayIterator::rewind()}.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\ArrayIterator", "fromLink": "Doctrine/MongoDB/ArrayIterator.html", "link": "Doctrine/MongoDB/ArrayIterator.html#method_rewind", "name": "Doctrine\\MongoDB\\ArrayIterator::rewind", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\ArrayIterator", "fromLink": "Doctrine/MongoDB/ArrayIterator.html", "link": "Doctrine/MongoDB/ArrayIterator.html#method_toArray", "name": "Doctrine\\MongoDB\\ArrayIterator::toArray", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\ArrayIterator", "fromLink": "Doctrine/MongoDB/ArrayIterator.html", "link": "Doctrine/MongoDB/ArrayIterator.html#method_valid", "name": "Doctrine\\MongoDB\\ArrayIterator::valid", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB", "fromLink": "Doctrine/MongoDB.html", "link": "Doctrine/MongoDB/Collection.html", "name": "Doctrine\\MongoDB\\Collection", "doc": "&quot;Wrapper for the MongoCollection class.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method___construct", "name": "Doctrine\\MongoDB\\Collection::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_aggregate", "name": "Doctrine\\MongoDB\\Collection::aggregate", "doc": "&quot;Invokes the aggregate command.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_batchInsert", "name": "Doctrine\\MongoDB\\Collection::batchInsert", "doc": "&quot;Wrapper method for MongoCollection::batchInsert().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_count", "name": "Doctrine\\MongoDB\\Collection::count", "doc": "&quot;Invokes the count command.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_createDBRef", "name": "Doctrine\\MongoDB\\Collection::createDBRef", "doc": "&quot;Wrapper method for MongoCollection::createDBRef().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_createQueryBuilder", "name": "Doctrine\\MongoDB\\Collection::createQueryBuilder", "doc": "&quot;Creates a new query builder instance.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_deleteIndex", "name": "Doctrine\\MongoDB\\Collection::deleteIndex", "doc": "&quot;Wrapper method for MongoCollection::deleteIndex().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_deleteIndexes", "name": "Doctrine\\MongoDB\\Collection::deleteIndexes", "doc": "&quot;Wrapper method for MongoCollection::deleteIndexes().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_distinct", "name": "Doctrine\\MongoDB\\Collection::distinct", "doc": "&quot;Invokes the distinct command.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_drop", "name": "Doctrine\\MongoDB\\Collection::drop", "doc": "&quot;Wrapper method for MongoCollection::drop().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_ensureIndex", "name": "Doctrine\\MongoDB\\Collection::ensureIndex", "doc": "&quot;Wrapper method for MongoCollection::ensureIndex().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_find", "name": "Doctrine\\MongoDB\\Collection::find", "doc": "&quot;Wrapper method for MongoCollection::find().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_findAndRemove", "name": "Doctrine\\MongoDB\\Collection::findAndRemove", "doc": "&quot;Invokes the findAndModify command with the remove option.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_findAndUpdate", "name": "Doctrine\\MongoDB\\Collection::findAndUpdate", "doc": "&quot;Invokes the findAndModify command with the update option.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_findOne", "name": "Doctrine\\MongoDB\\Collection::findOne", "doc": "&quot;Wrapper method for MongoCollection::findOne().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_getDatabase", "name": "Doctrine\\MongoDB\\Collection::getDatabase", "doc": "&quot;Return the database for this collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_getDBRef", "name": "Doctrine\\MongoDB\\Collection::getDBRef", "doc": "&quot;Wrapper method for MongoCollection::getDBRef().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_getIndexInfo", "name": "Doctrine\\MongoDB\\Collection::getIndexInfo", "doc": "&quot;Wrapper method for MongoCollection::getIndexInfo().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_getMongoCollection", "name": "Doctrine\\MongoDB\\Collection::getMongoCollection", "doc": "&quot;Return the MongoCollection instance being wrapped.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_getName", "name": "Doctrine\\MongoDB\\Collection::getName", "doc": "&quot;Wrapper method for MongoCollection::getName().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_getReadPreference", "name": "Doctrine\\MongoDB\\Collection::getReadPreference", "doc": "&quot;Wrapper method for MongoCollection::getReadPreference().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_setReadPreference", "name": "Doctrine\\MongoDB\\Collection::setReadPreference", "doc": "&quot;Wrapper method for MongoCollection::setReadPreference().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_getSlaveOkay", "name": "Doctrine\\MongoDB\\Collection::getSlaveOkay", "doc": "&quot;Get whether secondary read queries are allowed for this collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_setSlaveOkay", "name": "Doctrine\\MongoDB\\Collection::setSlaveOkay", "doc": "&quot;Set whether secondary read queries are allowed for this collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_group", "name": "Doctrine\\MongoDB\\Collection::group", "doc": "&quot;Invokes the group command.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_insert", "name": "Doctrine\\MongoDB\\Collection::insert", "doc": "&quot;Wrapper method for MongoCollection::insert().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_isFieldIndexed", "name": "Doctrine\\MongoDB\\Collection::isFieldIndexed", "doc": "&quot;Check if a given field name is indexed in MongoDB.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_mapReduce", "name": "Doctrine\\MongoDB\\Collection::mapReduce", "doc": "&quot;Invokes the mapReduce command.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_near", "name": "Doctrine\\MongoDB\\Collection::near", "doc": "&quot;Invokes the geoNear command.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_remove", "name": "Doctrine\\MongoDB\\Collection::remove", "doc": "&quot;Wrapper method for MongoCollection::remove().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_save", "name": "Doctrine\\MongoDB\\Collection::save", "doc": "&quot;Wrapper method for MongoCollection::save().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_update", "name": "Doctrine\\MongoDB\\Collection::update", "doc": "&quot;Wrapper method for MongoCollection::update().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_upsert", "name": "Doctrine\\MongoDB\\Collection::upsert", "doc": "&quot;Invokes {@link Collection::update()} with the upsert option.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_validate", "name": "Doctrine\\MongoDB\\Collection::validate", "doc": "&quot;Wrapper method for MongoCollection::validate().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method___get", "name": "Doctrine\\MongoDB\\Collection::__get", "doc": "&quot;Wrapper method for MongoCollection::__get().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method___toString", "name": "Doctrine\\MongoDB\\Collection::__toString", "doc": "&quot;Wrapper method for MongoCollection::__toString().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_doAggregate", "name": "Doctrine\\MongoDB\\Collection::doAggregate", "doc": "&quot;Execute the aggregate command.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_doBatchInsert", "name": "Doctrine\\MongoDB\\Collection::doBatchInsert", "doc": "&quot;Execute the batchInsert query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_doDistinct", "name": "Doctrine\\MongoDB\\Collection::doDistinct", "doc": "&quot;Execute the distinct command.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_doDrop", "name": "Doctrine\\MongoDB\\Collection::doDrop", "doc": "&quot;Drops the collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_doFind", "name": "Doctrine\\MongoDB\\Collection::doFind", "doc": "&quot;Execute the find query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_doFindAndRemove", "name": "Doctrine\\MongoDB\\Collection::doFindAndRemove", "doc": "&quot;Execute the findAndModify command with the remove option.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_doFindAndUpdate", "name": "Doctrine\\MongoDB\\Collection::doFindAndUpdate", "doc": "&quot;Execute the findAndModify command with the update option.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_doFindOne", "name": "Doctrine\\MongoDB\\Collection::doFindOne", "doc": "&quot;Execute the findOne query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_doGetDBRef", "name": "Doctrine\\MongoDB\\Collection::doGetDBRef", "doc": "&quot;Resolves a database reference.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_doGroup", "name": "Doctrine\\MongoDB\\Collection::doGroup", "doc": "&quot;Execute the group command.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_doInsert", "name": "Doctrine\\MongoDB\\Collection::doInsert", "doc": "&quot;Execute the insert query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_doMapReduce", "name": "Doctrine\\MongoDB\\Collection::doMapReduce", "doc": "&quot;Execute the mapReduce command.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_doNear", "name": "Doctrine\\MongoDB\\Collection::doNear", "doc": "&quot;Execute the geoNear command.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_doRemove", "name": "Doctrine\\MongoDB\\Collection::doRemove", "doc": "&quot;Execute the remove query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_doSave", "name": "Doctrine\\MongoDB\\Collection::doSave", "doc": "&quot;Execute the save query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_doUpdate", "name": "Doctrine\\MongoDB\\Collection::doUpdate", "doc": "&quot;Execute the update query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_retry", "name": "Doctrine\\MongoDB\\Collection::retry", "doc": "&quot;Conditionally retry a closure if it yields an exception.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_wrapCursor", "name": "Doctrine\\MongoDB\\Collection::wrapCursor", "doc": "&quot;Wraps a MongoCursor instance with a Cursor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_convertWriteConcern", "name": "Doctrine\\MongoDB\\Collection::convertWriteConcern", "doc": "&quot;Converts \&quot;safe\&quot; write option to \&quot;w\&quot; for driver versions 1.3.0+.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_convertWriteTimeout", "name": "Doctrine\\MongoDB\\Collection::convertWriteTimeout", "doc": "&quot;Convert \&quot;wtimeout\&quot; write option to \&quot;wTimeoutMS\&quot; for driver version\n1.5.0+.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_convertSocketTimeout", "name": "Doctrine\\MongoDB\\Collection::convertSocketTimeout", "doc": "&quot;Convert \&quot;timeout\&quot; write option to \&quot;socketTimeoutMS\&quot; for driver version\n1.5.0+.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Collection", "fromLink": "Doctrine/MongoDB/Collection.html", "link": "Doctrine/MongoDB/Collection.html#method_splitCommandAndClientOptions", "name": "Doctrine\\MongoDB\\Collection::splitCommandAndClientOptions", "doc": "&quot;Splits a command helper&#039;s options array into command and client options.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB", "fromLink": "Doctrine/MongoDB.html", "link": "Doctrine/MongoDB/Configuration.html", "name": "Doctrine\\MongoDB\\Configuration", "doc": "&quot;Configuration class for creating a Connection.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\Configuration", "fromLink": "Doctrine/MongoDB/Configuration.html", "link": "Doctrine/MongoDB/Configuration.html#method_getLoggerCallable", "name": "Doctrine\\MongoDB\\Configuration::getLoggerCallable", "doc": "&quot;Gets the logger callable.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Configuration", "fromLink": "Doctrine/MongoDB/Configuration.html", "link": "Doctrine/MongoDB/Configuration.html#method_setLoggerCallable", "name": "Doctrine\\MongoDB\\Configuration::setLoggerCallable", "doc": "&quot;Set the logger callable.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Configuration", "fromLink": "Doctrine/MongoDB/Configuration.html", "link": "Doctrine/MongoDB/Configuration.html#method_getMongoCmd", "name": "Doctrine\\MongoDB\\Configuration::getMongoCmd", "doc": "&quot;Get the MongoDB command prefix.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Configuration", "fromLink": "Doctrine/MongoDB/Configuration.html", "link": "Doctrine/MongoDB/Configuration.html#method_setMongoCmd", "name": "Doctrine\\MongoDB\\Configuration::setMongoCmd", "doc": "&quot;Set the MongoDB command prefix.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Configuration", "fromLink": "Doctrine/MongoDB/Configuration.html", "link": "Doctrine/MongoDB/Configuration.html#method_getRetryConnect", "name": "Doctrine\\MongoDB\\Configuration::getRetryConnect", "doc": "&quot;Get the number of times to retry connection attempts after an exception.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Configuration", "fromLink": "Doctrine/MongoDB/Configuration.html", "link": "Doctrine/MongoDB/Configuration.html#method_setRetryConnect", "name": "Doctrine\\MongoDB\\Configuration::setRetryConnect", "doc": "&quot;Set the number of times to retry connection attempts after an exception.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Configuration", "fromLink": "Doctrine/MongoDB/Configuration.html", "link": "Doctrine/MongoDB/Configuration.html#method_getRetryQuery", "name": "Doctrine\\MongoDB\\Configuration::getRetryQuery", "doc": "&quot;Get the number of times to retry queries after an exception.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Configuration", "fromLink": "Doctrine/MongoDB/Configuration.html", "link": "Doctrine/MongoDB/Configuration.html#method_setRetryQuery", "name": "Doctrine\\MongoDB\\Configuration::setRetryQuery", "doc": "&quot;Set the number of times to retry queries after an exception.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB", "fromLink": "Doctrine/MongoDB.html", "link": "Doctrine/MongoDB/Connection.html", "name": "Doctrine\\MongoDB\\Connection", "doc": "&quot;Wrapper for the MongoClient class.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\Connection", "fromLink": "Doctrine/MongoDB/Connection.html", "link": "Doctrine/MongoDB/Connection.html#method___construct", "name": "Doctrine\\MongoDB\\Connection::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Connection", "fromLink": "Doctrine/MongoDB/Connection.html", "link": "Doctrine/MongoDB/Connection.html#method_close", "name": "Doctrine\\MongoDB\\Connection::close", "doc": "&quot;Wrapper method for MongoClient::close().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Connection", "fromLink": "Doctrine/MongoDB/Connection.html", "link": "Doctrine/MongoDB/Connection.html#method_connect", "name": "Doctrine\\MongoDB\\Connection::connect", "doc": "&quot;Wrapper method for MongoClient::connect().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Connection", "fromLink": "Doctrine/MongoDB/Connection.html", "link": "Doctrine/MongoDB/Connection.html#method_dropDatabase", "name": "Doctrine\\MongoDB\\Connection::dropDatabase", "doc": "&quot;Wrapper method for MongoClient::dropDB().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Connection", "fromLink": "Doctrine/MongoDB/Connection.html", "link": "Doctrine/MongoDB/Connection.html#method_getConfiguration", "name": "Doctrine\\MongoDB\\Connection::getConfiguration", "doc": "&quot;Get the Configuration used by this Connection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Connection", "fromLink": "Doctrine/MongoDB/Connection.html", "link": "Doctrine/MongoDB/Connection.html#method_getEventManager", "name": "Doctrine\\MongoDB\\Connection::getEventManager", "doc": "&quot;Get the EventManager used by this Connection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Connection", "fromLink": "Doctrine/MongoDB/Connection.html", "link": "Doctrine/MongoDB/Connection.html#method_getMongo", "name": "Doctrine\\MongoDB\\Connection::getMongo", "doc": "&quot;Get the MongoClient instance being wrapped.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Connection", "fromLink": "Doctrine/MongoDB/Connection.html", "link": "Doctrine/MongoDB/Connection.html#method_setMongo", "name": "Doctrine\\MongoDB\\Connection::setMongo", "doc": "&quot;Set the MongoClient instance to wrap.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Connection", "fromLink": "Doctrine/MongoDB/Connection.html", "link": "Doctrine/MongoDB/Connection.html#method_getMongoClient", "name": "Doctrine\\MongoDB\\Connection::getMongoClient", "doc": "&quot;Get the MongoClient instance being wrapped.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Connection", "fromLink": "Doctrine/MongoDB/Connection.html", "link": "Doctrine/MongoDB/Connection.html#method_getReadPreference", "name": "Doctrine\\MongoDB\\Connection::getReadPreference", "doc": "&quot;Wrapper method for MongoClient::getReadPreference().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Connection", "fromLink": "Doctrine/MongoDB/Connection.html", "link": "Doctrine/MongoDB/Connection.html#method_setReadPreference", "name": "Doctrine\\MongoDB\\Connection::setReadPreference", "doc": "&quot;Wrapper method for MongoClient::setReadPreference().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Connection", "fromLink": "Doctrine/MongoDB/Connection.html", "link": "Doctrine/MongoDB/Connection.html#method_getServer", "name": "Doctrine\\MongoDB\\Connection::getServer", "doc": "&quot;Get the server string.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Connection", "fromLink": "Doctrine/MongoDB/Connection.html", "link": "Doctrine/MongoDB/Connection.html#method_getStatus", "name": "Doctrine\\MongoDB\\Connection::getStatus", "doc": "&quot;Gets the $status property of the wrapped MongoClient instance.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Connection", "fromLink": "Doctrine/MongoDB/Connection.html", "link": "Doctrine/MongoDB/Connection.html#method_initialize", "name": "Doctrine\\MongoDB\\Connection::initialize", "doc": "&quot;Construct the wrapped MongoClient instance if necessary.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Connection", "fromLink": "Doctrine/MongoDB/Connection.html", "link": "Doctrine/MongoDB/Connection.html#method_isConnected", "name": "Doctrine\\MongoDB\\Connection::isConnected", "doc": "&quot;Checks whether the connection is initialized and connected.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Connection", "fromLink": "Doctrine/MongoDB/Connection.html", "link": "Doctrine/MongoDB/Connection.html#method_listDatabases", "name": "Doctrine\\MongoDB\\Connection::listDatabases", "doc": "&quot;Wrapper method for MongoClient::listDBs().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Connection", "fromLink": "Doctrine/MongoDB/Connection.html", "link": "Doctrine/MongoDB/Connection.html#method_log", "name": "Doctrine\\MongoDB\\Connection::log", "doc": "&quot;Log something using the configured logger callable (if available).&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Connection", "fromLink": "Doctrine/MongoDB/Connection.html", "link": "Doctrine/MongoDB/Connection.html#method_selectCollection", "name": "Doctrine\\MongoDB\\Connection::selectCollection", "doc": "&quot;Wrapper method for MongoClient::selectCollection().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Connection", "fromLink": "Doctrine/MongoDB/Connection.html", "link": "Doctrine/MongoDB/Connection.html#method_selectDatabase", "name": "Doctrine\\MongoDB\\Connection::selectDatabase", "doc": "&quot;Wrapper method for MongoClient::selectDatabase().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Connection", "fromLink": "Doctrine/MongoDB/Connection.html", "link": "Doctrine/MongoDB/Connection.html#method___get", "name": "Doctrine\\MongoDB\\Connection::__get", "doc": "&quot;Wrapper method for MongoClient::__get().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Connection", "fromLink": "Doctrine/MongoDB/Connection.html", "link": "Doctrine/MongoDB/Connection.html#method___toString", "name": "Doctrine\\MongoDB\\Connection::__toString", "doc": "&quot;Wrapper method for MongoClient::__toString().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Connection", "fromLink": "Doctrine/MongoDB/Connection.html", "link": "Doctrine/MongoDB/Connection.html#method_doSelectDatabase", "name": "Doctrine\\MongoDB\\Connection::doSelectDatabase", "doc": "&quot;Return a new Database instance.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Connection", "fromLink": "Doctrine/MongoDB/Connection.html", "link": "Doctrine/MongoDB/Connection.html#method_retry", "name": "Doctrine\\MongoDB\\Connection::retry", "doc": "&quot;Conditionally retry a closure if it yields an exception.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Connection", "fromLink": "Doctrine/MongoDB/Connection.html", "link": "Doctrine/MongoDB/Connection.html#method_convertConnectTimeout", "name": "Doctrine\\MongoDB\\Connection::convertConnectTimeout", "doc": "&quot;Converts \&quot;timeout\&quot; MongoClient constructor option to \&quot;connectTimeoutMS\&quot;\nfor driver versions 1.4.0+.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Connection", "fromLink": "Doctrine/MongoDB/Connection.html", "link": "Doctrine/MongoDB/Connection.html#method_convertWriteTimeout", "name": "Doctrine\\MongoDB\\Connection::convertWriteTimeout", "doc": "&quot;Converts \&quot;timeout\&quot; MongoClient constructor option to \&quot;connectTimeoutMS\&quot;\nfor driver versions 1.4.0+.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB", "fromLink": "Doctrine/MongoDB.html", "link": "Doctrine/MongoDB/Cursor.html", "name": "Doctrine\\MongoDB\\Cursor", "doc": "&quot;Wrapper for the PHP MongoCursor class.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method___construct", "name": "Doctrine\\MongoDB\\Cursor::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_addOption", "name": "Doctrine\\MongoDB\\Cursor::addOption", "doc": "&quot;Wrapper method for MongoCursor::addOption().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_batchSize", "name": "Doctrine\\MongoDB\\Cursor::batchSize", "doc": "&quot;Wrapper method for MongoCursor::batchSize().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_count", "name": "Doctrine\\MongoDB\\Cursor::count", "doc": "&quot;Wrapper method for MongoCursor::count().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_current", "name": "Doctrine\\MongoDB\\Cursor::current", "doc": "&quot;Wrapper method for MongoCursor::current().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_dead", "name": "Doctrine\\MongoDB\\Cursor::dead", "doc": "&quot;Wrapper method for MongoCursor::dead().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_explain", "name": "Doctrine\\MongoDB\\Cursor::explain", "doc": "&quot;Wrapper method for MongoCursor::explain().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_fields", "name": "Doctrine\\MongoDB\\Cursor::fields", "doc": "&quot;Wrapper method for MongoCursor::fields().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_getCollection", "name": "Doctrine\\MongoDB\\Cursor::getCollection", "doc": "&quot;Return the collection for this cursor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_getConnection", "name": "Doctrine\\MongoDB\\Cursor::getConnection", "doc": "&quot;Return the connection for this cursor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_getFields", "name": "Doctrine\\MongoDB\\Cursor::getFields", "doc": "&quot;Return the selected fields (projection).&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_getMongoCursor", "name": "Doctrine\\MongoDB\\Cursor::getMongoCursor", "doc": "&quot;Returns the MongoCursor instance being wrapped.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_getNext", "name": "Doctrine\\MongoDB\\Cursor::getNext", "doc": "&quot;Wrapper method for MongoCursor::getNext().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_getQuery", "name": "Doctrine\\MongoDB\\Cursor::getQuery", "doc": "&quot;Return the query criteria.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_getReadPreference", "name": "Doctrine\\MongoDB\\Cursor::getReadPreference", "doc": "&quot;Wrapper method for MongoCursor::getReadPreference().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_setReadPreference", "name": "Doctrine\\MongoDB\\Cursor::setReadPreference", "doc": "&quot;Set the read preference.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_getSingleResult", "name": "Doctrine\\MongoDB\\Cursor::getSingleResult", "doc": "&quot;Reset the cursor and return its first result.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_hasNext", "name": "Doctrine\\MongoDB\\Cursor::hasNext", "doc": "&quot;Wrapper method for MongoCursor::hasNext().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_hint", "name": "Doctrine\\MongoDB\\Cursor::hint", "doc": "&quot;Wrapper method for MongoCursor::hint().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_immortal", "name": "Doctrine\\MongoDB\\Cursor::immortal", "doc": "&quot;Wrapper method for MongoCursor::immortal().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_info", "name": "Doctrine\\MongoDB\\Cursor::info", "doc": "&quot;Wrapper method for MongoCursor::info().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_key", "name": "Doctrine\\MongoDB\\Cursor::key", "doc": "&quot;Wrapper method for MongoCursor::key().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_limit", "name": "Doctrine\\MongoDB\\Cursor::limit", "doc": "&quot;Wrapper method for MongoCursor::limit().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_next", "name": "Doctrine\\MongoDB\\Cursor::next", "doc": "&quot;Wrapper method for MongoCursor::next().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_recreate", "name": "Doctrine\\MongoDB\\Cursor::recreate", "doc": "&quot;Recreates the internal MongoCursor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_reset", "name": "Doctrine\\MongoDB\\Cursor::reset", "doc": "&quot;Wrapper method for MongoCursor::reset().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_rewind", "name": "Doctrine\\MongoDB\\Cursor::rewind", "doc": "&quot;Wrapper method for MongoCursor::rewind().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_setMongoCursorSlaveOkay", "name": "Doctrine\\MongoDB\\Cursor::setMongoCursorSlaveOkay", "doc": "&quot;Set whether secondary read queries are allowed for this cursor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_skip", "name": "Doctrine\\MongoDB\\Cursor::skip", "doc": "&quot;Wrapper method for MongoCursor::skip().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_slaveOkay", "name": "Doctrine\\MongoDB\\Cursor::slaveOkay", "doc": "&quot;Wrapper method for MongoCursor::slaveOkay().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_snapshot", "name": "Doctrine\\MongoDB\\Cursor::snapshot", "doc": "&quot;Wrapper method for MongoCursor::snapshot().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_sort", "name": "Doctrine\\MongoDB\\Cursor::sort", "doc": "&quot;Wrapper method for MongoCursor::sort().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_tailable", "name": "Doctrine\\MongoDB\\Cursor::tailable", "doc": "&quot;Wrapper method for MongoCursor::tailable().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_timeout", "name": "Doctrine\\MongoDB\\Cursor::timeout", "doc": "&quot;Wrapper method for MongoCursor::timeout().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_toArray", "name": "Doctrine\\MongoDB\\Cursor::toArray", "doc": "&quot;Return the cursor&#039;s results as an array.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_valid", "name": "Doctrine\\MongoDB\\Cursor::valid", "doc": "&quot;Wrapper method for MongoCursor::valid().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Cursor", "fromLink": "Doctrine/MongoDB/Cursor.html", "link": "Doctrine/MongoDB/Cursor.html#method_retry", "name": "Doctrine\\MongoDB\\Cursor::retry", "doc": "&quot;Conditionally retry a closure if it yields an exception.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB", "fromLink": "Doctrine/MongoDB.html", "link": "Doctrine/MongoDB/Database.html", "name": "Doctrine\\MongoDB\\Database", "doc": "&quot;Wrapper for the MongoDB class.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method___construct", "name": "Doctrine\\MongoDB\\Database::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_authenticate", "name": "Doctrine\\MongoDB\\Database::authenticate", "doc": "&quot;Wrapper method for MongoDB::authenticate().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_command", "name": "Doctrine\\MongoDB\\Database::command", "doc": "&quot;Wrapper method for MongoDB::command().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_createCollection", "name": "Doctrine\\MongoDB\\Database::createCollection", "doc": "&quot;Wrapper method for MongoDB::createCollection().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_createDBRef", "name": "Doctrine\\MongoDB\\Database::createDBRef", "doc": "&quot;Wrapper method for MongoDB::createDBRef().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_drop", "name": "Doctrine\\MongoDB\\Database::drop", "doc": "&quot;Wrapper method for MongoDB::drop().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_dropCollection", "name": "Doctrine\\MongoDB\\Database::dropCollection", "doc": "&quot;Wrapper method for MongoDB::dropCollection().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_execute", "name": "Doctrine\\MongoDB\\Database::execute", "doc": "&quot;Wrapper method for MongoDB::execute().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_forceError", "name": "Doctrine\\MongoDB\\Database::forceError", "doc": "&quot;Wrapper method for MongoDB::forceError().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_getConnection", "name": "Doctrine\\MongoDB\\Database::getConnection", "doc": "&quot;Return the connection for this database.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_getDBRef", "name": "Doctrine\\MongoDB\\Database::getDBRef", "doc": "&quot;Wrapper method for MongoDB::getDBRef().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_getGridFS", "name": "Doctrine\\MongoDB\\Database::getGridFS", "doc": "&quot;Wrapper method for MongoDB::getGridFS().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_getMongoDB", "name": "Doctrine\\MongoDB\\Database::getMongoDB", "doc": "&quot;Return the MongoDB instance being wrapped.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_getName", "name": "Doctrine\\MongoDB\\Database::getName", "doc": "&quot;Return the name of this database.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_getProfilingLevel", "name": "Doctrine\\MongoDB\\Database::getProfilingLevel", "doc": "&quot;Wrapper method for MongoDB::getProfilingLevel().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_setProfilingLevel", "name": "Doctrine\\MongoDB\\Database::setProfilingLevel", "doc": "&quot;Wrapper method for MongoDB::setProfilingLevel().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_getReadPreference", "name": "Doctrine\\MongoDB\\Database::getReadPreference", "doc": "&quot;Wrapper method for MongoDB::getReadPreference().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_setReadPreference", "name": "Doctrine\\MongoDB\\Database::setReadPreference", "doc": "&quot;Wrapper method for MongoDB::setReadPreference().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_getSlaveOkay", "name": "Doctrine\\MongoDB\\Database::getSlaveOkay", "doc": "&quot;Get whether secondary read queries are allowed for this database.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_setSlaveOkay", "name": "Doctrine\\MongoDB\\Database::setSlaveOkay", "doc": "&quot;Set whether secondary read queries are allowed for this database.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_lastError", "name": "Doctrine\\MongoDB\\Database::lastError", "doc": "&quot;Wrapper method for MongoDB::lastError().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_listCollections", "name": "Doctrine\\MongoDB\\Database::listCollections", "doc": "&quot;Wrapper method for MongoDB::listCollections().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_prevError", "name": "Doctrine\\MongoDB\\Database::prevError", "doc": "&quot;Wrapper method for MongoDB::prevError().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_repair", "name": "Doctrine\\MongoDB\\Database::repair", "doc": "&quot;Wrapper method for MongoDB::repair().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_resetError", "name": "Doctrine\\MongoDB\\Database::resetError", "doc": "&quot;Wrapper method for MongoDB::resetError().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_selectCollection", "name": "Doctrine\\MongoDB\\Database::selectCollection", "doc": "&quot;Wrapper method for MongoDB::selectCollection().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method___get", "name": "Doctrine\\MongoDB\\Database::__get", "doc": "&quot;Wrapper method for MongoDB::__get().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method___toString", "name": "Doctrine\\MongoDB\\Database::__toString", "doc": "&quot;Wrapper method for MongoDB::__toString().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_doGetDBRef", "name": "Doctrine\\MongoDB\\Database::doGetDBRef", "doc": "&quot;Resolves a database reference.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_doCreateCollection", "name": "Doctrine\\MongoDB\\Database::doCreateCollection", "doc": "&quot;Creates a collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_doGetGridFS", "name": "Doctrine\\MongoDB\\Database::doGetGridFS", "doc": "&quot;Return a new GridFS instance.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_doSelectCollection", "name": "Doctrine\\MongoDB\\Database::doSelectCollection", "doc": "&quot;Return a new Collection instance.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_retry", "name": "Doctrine\\MongoDB\\Database::retry", "doc": "&quot;Conditionally retry a closure if it yields an exception.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Database", "fromLink": "Doctrine/MongoDB/Database.html", "link": "Doctrine/MongoDB/Database.html#method_convertSocketTimeout", "name": "Doctrine\\MongoDB\\Database::convertSocketTimeout", "doc": "&quot;Convert \&quot;timeout\&quot; write option to \&quot;socketTimeoutMS\&quot; for driver version\n1.5.0+.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB", "fromLink": "Doctrine/MongoDB.html", "link": "Doctrine/MongoDB/EagerCursor.html", "name": "Doctrine\\MongoDB\\EagerCursor", "doc": "&quot;EagerCursor wraps a Cursor instance and fetches all of its results upon\ninitialization.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\EagerCursor", "fromLink": "Doctrine/MongoDB/EagerCursor.html", "link": "Doctrine/MongoDB/EagerCursor.html#method___construct", "name": "Doctrine\\MongoDB\\EagerCursor::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\EagerCursor", "fromLink": "Doctrine/MongoDB/EagerCursor.html", "link": "Doctrine/MongoDB/EagerCursor.html#method_count", "name": "Doctrine\\MongoDB\\EagerCursor::count", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\EagerCursor", "fromLink": "Doctrine/MongoDB/EagerCursor.html", "link": "Doctrine/MongoDB/EagerCursor.html#method_current", "name": "Doctrine\\MongoDB\\EagerCursor::current", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\EagerCursor", "fromLink": "Doctrine/MongoDB/EagerCursor.html", "link": "Doctrine/MongoDB/EagerCursor.html#method_getCursor", "name": "Doctrine\\MongoDB\\EagerCursor::getCursor", "doc": "&quot;Return the wrapped Cursor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\EagerCursor", "fromLink": "Doctrine/MongoDB/EagerCursor.html", "link": "Doctrine/MongoDB/EagerCursor.html#method_getSingleResult", "name": "Doctrine\\MongoDB\\EagerCursor::getSingleResult", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\EagerCursor", "fromLink": "Doctrine/MongoDB/EagerCursor.html", "link": "Doctrine/MongoDB/EagerCursor.html#method_initialize", "name": "Doctrine\\MongoDB\\EagerCursor::initialize", "doc": "&quot;Initialize the internal data by converting the Cursor to an array.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\EagerCursor", "fromLink": "Doctrine/MongoDB/EagerCursor.html", "link": "Doctrine/MongoDB/EagerCursor.html#method_isInitialized", "name": "Doctrine\\MongoDB\\EagerCursor::isInitialized", "doc": "&quot;Return whether the internal data has been initialized.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\EagerCursor", "fromLink": "Doctrine/MongoDB/EagerCursor.html", "link": "Doctrine/MongoDB/EagerCursor.html#method_key", "name": "Doctrine\\MongoDB\\EagerCursor::key", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\EagerCursor", "fromLink": "Doctrine/MongoDB/EagerCursor.html", "link": "Doctrine/MongoDB/EagerCursor.html#method_next", "name": "Doctrine\\MongoDB\\EagerCursor::next", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\EagerCursor", "fromLink": "Doctrine/MongoDB/EagerCursor.html", "link": "Doctrine/MongoDB/EagerCursor.html#method_rewind", "name": "Doctrine\\MongoDB\\EagerCursor::rewind", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\EagerCursor", "fromLink": "Doctrine/MongoDB/EagerCursor.html", "link": "Doctrine/MongoDB/EagerCursor.html#method_toArray", "name": "Doctrine\\MongoDB\\EagerCursor::toArray", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\EagerCursor", "fromLink": "Doctrine/MongoDB/EagerCursor.html", "link": "Doctrine/MongoDB/EagerCursor.html#method_valid", "name": "Doctrine\\MongoDB\\EagerCursor::valid", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB\\Event", "fromLink": "Doctrine/MongoDB/Event.html", "link": "Doctrine/MongoDB/Event/AggregateEventArgs.html", "name": "Doctrine\\MongoDB\\Event\\AggregateEventArgs", "doc": "&quot;Event args for the aggregate command.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\AggregateEventArgs", "fromLink": "Doctrine/MongoDB/Event/AggregateEventArgs.html", "link": "Doctrine/MongoDB/Event/AggregateEventArgs.html#method___construct", "name": "Doctrine\\MongoDB\\Event\\AggregateEventArgs::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\AggregateEventArgs", "fromLink": "Doctrine/MongoDB/Event/AggregateEventArgs.html", "link": "Doctrine/MongoDB/Event/AggregateEventArgs.html#method_getInvoker", "name": "Doctrine\\MongoDB\\Event\\AggregateEventArgs::getInvoker", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\AggregateEventArgs", "fromLink": "Doctrine/MongoDB/Event/AggregateEventArgs.html", "link": "Doctrine/MongoDB/Event/AggregateEventArgs.html#method_getPipeline", "name": "Doctrine\\MongoDB\\Event\\AggregateEventArgs::getPipeline", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB\\Event", "fromLink": "Doctrine/MongoDB/Event.html", "link": "Doctrine/MongoDB/Event/CreateCollectionEventArgs.html", "name": "Doctrine\\MongoDB\\Event\\CreateCollectionEventArgs", "doc": "&quot;Event args for creating a collection.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\CreateCollectionEventArgs", "fromLink": "Doctrine/MongoDB/Event/CreateCollectionEventArgs.html", "link": "Doctrine/MongoDB/Event/CreateCollectionEventArgs.html#method___construct", "name": "Doctrine\\MongoDB\\Event\\CreateCollectionEventArgs::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\CreateCollectionEventArgs", "fromLink": "Doctrine/MongoDB/Event/CreateCollectionEventArgs.html", "link": "Doctrine/MongoDB/Event/CreateCollectionEventArgs.html#method_getInvoker", "name": "Doctrine\\MongoDB\\Event\\CreateCollectionEventArgs::getInvoker", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\CreateCollectionEventArgs", "fromLink": "Doctrine/MongoDB/Event/CreateCollectionEventArgs.html", "link": "Doctrine/MongoDB/Event/CreateCollectionEventArgs.html#method_getName", "name": "Doctrine\\MongoDB\\Event\\CreateCollectionEventArgs::getName", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\CreateCollectionEventArgs", "fromLink": "Doctrine/MongoDB/Event/CreateCollectionEventArgs.html", "link": "Doctrine/MongoDB/Event/CreateCollectionEventArgs.html#method_getOptions", "name": "Doctrine\\MongoDB\\Event\\CreateCollectionEventArgs::getOptions", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\CreateCollectionEventArgs", "fromLink": "Doctrine/MongoDB/Event/CreateCollectionEventArgs.html", "link": "Doctrine/MongoDB/Event/CreateCollectionEventArgs.html#method_getCapped", "name": "Doctrine\\MongoDB\\Event\\CreateCollectionEventArgs::getCapped", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\CreateCollectionEventArgs", "fromLink": "Doctrine/MongoDB/Event/CreateCollectionEventArgs.html", "link": "Doctrine/MongoDB/Event/CreateCollectionEventArgs.html#method_getSize", "name": "Doctrine\\MongoDB\\Event\\CreateCollectionEventArgs::getSize", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\CreateCollectionEventArgs", "fromLink": "Doctrine/MongoDB/Event/CreateCollectionEventArgs.html", "link": "Doctrine/MongoDB/Event/CreateCollectionEventArgs.html#method_getMax", "name": "Doctrine\\MongoDB\\Event\\CreateCollectionEventArgs::getMax", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB\\Event", "fromLink": "Doctrine/MongoDB/Event.html", "link": "Doctrine/MongoDB/Event/DistinctEventArgs.html", "name": "Doctrine\\MongoDB\\Event\\DistinctEventArgs", "doc": "&quot;Event args for the distinct command.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\DistinctEventArgs", "fromLink": "Doctrine/MongoDB/Event/DistinctEventArgs.html", "link": "Doctrine/MongoDB/Event/DistinctEventArgs.html#method___construct", "name": "Doctrine\\MongoDB\\Event\\DistinctEventArgs::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\DistinctEventArgs", "fromLink": "Doctrine/MongoDB/Event/DistinctEventArgs.html", "link": "Doctrine/MongoDB/Event/DistinctEventArgs.html#method_getInvoker", "name": "Doctrine\\MongoDB\\Event\\DistinctEventArgs::getInvoker", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\DistinctEventArgs", "fromLink": "Doctrine/MongoDB/Event/DistinctEventArgs.html", "link": "Doctrine/MongoDB/Event/DistinctEventArgs.html#method_getField", "name": "Doctrine\\MongoDB\\Event\\DistinctEventArgs::getField", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\DistinctEventArgs", "fromLink": "Doctrine/MongoDB/Event/DistinctEventArgs.html", "link": "Doctrine/MongoDB/Event/DistinctEventArgs.html#method_getQuery", "name": "Doctrine\\MongoDB\\Event\\DistinctEventArgs::getQuery", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB\\Event", "fromLink": "Doctrine/MongoDB/Event.html", "link": "Doctrine/MongoDB/Event/EventArgs.html", "name": "Doctrine\\MongoDB\\Event\\EventArgs", "doc": "&quot;Event args for generic queries.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\EventArgs", "fromLink": "Doctrine/MongoDB/Event/EventArgs.html", "link": "Doctrine/MongoDB/Event/EventArgs.html#method___construct", "name": "Doctrine\\MongoDB\\Event\\EventArgs::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\EventArgs", "fromLink": "Doctrine/MongoDB/Event/EventArgs.html", "link": "Doctrine/MongoDB/Event/EventArgs.html#method_getInvoker", "name": "Doctrine\\MongoDB\\Event\\EventArgs::getInvoker", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\EventArgs", "fromLink": "Doctrine/MongoDB/Event/EventArgs.html", "link": "Doctrine/MongoDB/Event/EventArgs.html#method_getData", "name": "Doctrine\\MongoDB\\Event\\EventArgs::getData", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\EventArgs", "fromLink": "Doctrine/MongoDB/Event/EventArgs.html", "link": "Doctrine/MongoDB/Event/EventArgs.html#method_getOptions", "name": "Doctrine\\MongoDB\\Event\\EventArgs::getOptions", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB\\Event", "fromLink": "Doctrine/MongoDB/Event.html", "link": "Doctrine/MongoDB/Event/FindEventArgs.html", "name": "Doctrine\\MongoDB\\Event\\FindEventArgs", "doc": "&quot;Event args for find queries.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\FindEventArgs", "fromLink": "Doctrine/MongoDB/Event/FindEventArgs.html", "link": "Doctrine/MongoDB/Event/FindEventArgs.html#method___construct", "name": "Doctrine\\MongoDB\\Event\\FindEventArgs::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\FindEventArgs", "fromLink": "Doctrine/MongoDB/Event/FindEventArgs.html", "link": "Doctrine/MongoDB/Event/FindEventArgs.html#method_getInvoker", "name": "Doctrine\\MongoDB\\Event\\FindEventArgs::getInvoker", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\FindEventArgs", "fromLink": "Doctrine/MongoDB/Event/FindEventArgs.html", "link": "Doctrine/MongoDB/Event/FindEventArgs.html#method_getQuery", "name": "Doctrine\\MongoDB\\Event\\FindEventArgs::getQuery", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\FindEventArgs", "fromLink": "Doctrine/MongoDB/Event/FindEventArgs.html", "link": "Doctrine/MongoDB/Event/FindEventArgs.html#method_getFields", "name": "Doctrine\\MongoDB\\Event\\FindEventArgs::getFields", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB\\Event", "fromLink": "Doctrine/MongoDB/Event.html", "link": "Doctrine/MongoDB/Event/GroupEventArgs.html", "name": "Doctrine\\MongoDB\\Event\\GroupEventArgs", "doc": "&quot;Event args for the group command.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\GroupEventArgs", "fromLink": "Doctrine/MongoDB/Event/GroupEventArgs.html", "link": "Doctrine/MongoDB/Event/GroupEventArgs.html#method___construct", "name": "Doctrine\\MongoDB\\Event\\GroupEventArgs::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\GroupEventArgs", "fromLink": "Doctrine/MongoDB/Event/GroupEventArgs.html", "link": "Doctrine/MongoDB/Event/GroupEventArgs.html#method_getInvoker", "name": "Doctrine\\MongoDB\\Event\\GroupEventArgs::getInvoker", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\GroupEventArgs", "fromLink": "Doctrine/MongoDB/Event/GroupEventArgs.html", "link": "Doctrine/MongoDB/Event/GroupEventArgs.html#method_getKeys", "name": "Doctrine\\MongoDB\\Event\\GroupEventArgs::getKeys", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\GroupEventArgs", "fromLink": "Doctrine/MongoDB/Event/GroupEventArgs.html", "link": "Doctrine/MongoDB/Event/GroupEventArgs.html#method_getInitial", "name": "Doctrine\\MongoDB\\Event\\GroupEventArgs::getInitial", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\GroupEventArgs", "fromLink": "Doctrine/MongoDB/Event/GroupEventArgs.html", "link": "Doctrine/MongoDB/Event/GroupEventArgs.html#method_getReduce", "name": "Doctrine\\MongoDB\\Event\\GroupEventArgs::getReduce", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\GroupEventArgs", "fromLink": "Doctrine/MongoDB/Event/GroupEventArgs.html", "link": "Doctrine/MongoDB/Event/GroupEventArgs.html#method_getOptions", "name": "Doctrine\\MongoDB\\Event\\GroupEventArgs::getOptions", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB\\Event", "fromLink": "Doctrine/MongoDB/Event.html", "link": "Doctrine/MongoDB/Event/MapReduceEventArgs.html", "name": "Doctrine\\MongoDB\\Event\\MapReduceEventArgs", "doc": "&quot;Event args for the mapReduce command.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\MapReduceEventArgs", "fromLink": "Doctrine/MongoDB/Event/MapReduceEventArgs.html", "link": "Doctrine/MongoDB/Event/MapReduceEventArgs.html#method___construct", "name": "Doctrine\\MongoDB\\Event\\MapReduceEventArgs::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\MapReduceEventArgs", "fromLink": "Doctrine/MongoDB/Event/MapReduceEventArgs.html", "link": "Doctrine/MongoDB/Event/MapReduceEventArgs.html#method_getInvoker", "name": "Doctrine\\MongoDB\\Event\\MapReduceEventArgs::getInvoker", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\MapReduceEventArgs", "fromLink": "Doctrine/MongoDB/Event/MapReduceEventArgs.html", "link": "Doctrine/MongoDB/Event/MapReduceEventArgs.html#method_getMap", "name": "Doctrine\\MongoDB\\Event\\MapReduceEventArgs::getMap", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\MapReduceEventArgs", "fromLink": "Doctrine/MongoDB/Event/MapReduceEventArgs.html", "link": "Doctrine/MongoDB/Event/MapReduceEventArgs.html#method_getReduce", "name": "Doctrine\\MongoDB\\Event\\MapReduceEventArgs::getReduce", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\MapReduceEventArgs", "fromLink": "Doctrine/MongoDB/Event/MapReduceEventArgs.html", "link": "Doctrine/MongoDB/Event/MapReduceEventArgs.html#method_getOut", "name": "Doctrine\\MongoDB\\Event\\MapReduceEventArgs::getOut", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\MapReduceEventArgs", "fromLink": "Doctrine/MongoDB/Event/MapReduceEventArgs.html", "link": "Doctrine/MongoDB/Event/MapReduceEventArgs.html#method_getQuery", "name": "Doctrine\\MongoDB\\Event\\MapReduceEventArgs::getQuery", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\MapReduceEventArgs", "fromLink": "Doctrine/MongoDB/Event/MapReduceEventArgs.html", "link": "Doctrine/MongoDB/Event/MapReduceEventArgs.html#method_getOptions", "name": "Doctrine\\MongoDB\\Event\\MapReduceEventArgs::getOptions", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB\\Event", "fromLink": "Doctrine/MongoDB/Event.html", "link": "Doctrine/MongoDB/Event/MutableEventArgs.html", "name": "Doctrine\\MongoDB\\Event\\MutableEventArgs", "doc": "&quot;Mutable event args for query and command results.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\MutableEventArgs", "fromLink": "Doctrine/MongoDB/Event/MutableEventArgs.html", "link": "Doctrine/MongoDB/Event/MutableEventArgs.html#method_getData", "name": "Doctrine\\MongoDB\\Event\\MutableEventArgs::getData", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\MutableEventArgs", "fromLink": "Doctrine/MongoDB/Event/MutableEventArgs.html", "link": "Doctrine/MongoDB/Event/MutableEventArgs.html#method_setData", "name": "Doctrine\\MongoDB\\Event\\MutableEventArgs::setData", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\MutableEventArgs", "fromLink": "Doctrine/MongoDB/Event/MutableEventArgs.html", "link": "Doctrine/MongoDB/Event/MutableEventArgs.html#method_isDataChanged", "name": "Doctrine\\MongoDB\\Event\\MutableEventArgs::isDataChanged", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB\\Event", "fromLink": "Doctrine/MongoDB/Event.html", "link": "Doctrine/MongoDB/Event/NearEventArgs.html", "name": "Doctrine\\MongoDB\\Event\\NearEventArgs", "doc": "&quot;Event args for the geoNear command.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\NearEventArgs", "fromLink": "Doctrine/MongoDB/Event/NearEventArgs.html", "link": "Doctrine/MongoDB/Event/NearEventArgs.html#method___construct", "name": "Doctrine\\MongoDB\\Event\\NearEventArgs::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\NearEventArgs", "fromLink": "Doctrine/MongoDB/Event/NearEventArgs.html", "link": "Doctrine/MongoDB/Event/NearEventArgs.html#method_getInvoker", "name": "Doctrine\\MongoDB\\Event\\NearEventArgs::getInvoker", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\NearEventArgs", "fromLink": "Doctrine/MongoDB/Event/NearEventArgs.html", "link": "Doctrine/MongoDB/Event/NearEventArgs.html#method_getQuery", "name": "Doctrine\\MongoDB\\Event\\NearEventArgs::getQuery", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\NearEventArgs", "fromLink": "Doctrine/MongoDB/Event/NearEventArgs.html", "link": "Doctrine/MongoDB/Event/NearEventArgs.html#method_getNear", "name": "Doctrine\\MongoDB\\Event\\NearEventArgs::getNear", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\NearEventArgs", "fromLink": "Doctrine/MongoDB/Event/NearEventArgs.html", "link": "Doctrine/MongoDB/Event/NearEventArgs.html#method_getOptions", "name": "Doctrine\\MongoDB\\Event\\NearEventArgs::getOptions", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB\\Event", "fromLink": "Doctrine/MongoDB/Event.html", "link": "Doctrine/MongoDB/Event/UpdateEventArgs.html", "name": "Doctrine\\MongoDB\\Event\\UpdateEventArgs", "doc": "&quot;Event args for update queries.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\UpdateEventArgs", "fromLink": "Doctrine/MongoDB/Event/UpdateEventArgs.html", "link": "Doctrine/MongoDB/Event/UpdateEventArgs.html#method___construct", "name": "Doctrine\\MongoDB\\Event\\UpdateEventArgs::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\UpdateEventArgs", "fromLink": "Doctrine/MongoDB/Event/UpdateEventArgs.html", "link": "Doctrine/MongoDB/Event/UpdateEventArgs.html#method_getInvoker", "name": "Doctrine\\MongoDB\\Event\\UpdateEventArgs::getInvoker", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\UpdateEventArgs", "fromLink": "Doctrine/MongoDB/Event/UpdateEventArgs.html", "link": "Doctrine/MongoDB/Event/UpdateEventArgs.html#method_getQuery", "name": "Doctrine\\MongoDB\\Event\\UpdateEventArgs::getQuery", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\UpdateEventArgs", "fromLink": "Doctrine/MongoDB/Event/UpdateEventArgs.html", "link": "Doctrine/MongoDB/Event/UpdateEventArgs.html#method_getNewObj", "name": "Doctrine\\MongoDB\\Event\\UpdateEventArgs::getNewObj", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Event\\UpdateEventArgs", "fromLink": "Doctrine/MongoDB/Event/UpdateEventArgs.html", "link": "Doctrine/MongoDB/Event/UpdateEventArgs.html#method_getOptions", "name": "Doctrine\\MongoDB\\Event\\UpdateEventArgs::getOptions", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB", "fromLink": "Doctrine/MongoDB.html", "link": "Doctrine/MongoDB/Events.html", "name": "Doctrine\\MongoDB\\Events", "doc": "&quot;Container class for all Doctrine MongoDB events.&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\MongoDB\\Exception", "fromLink": "Doctrine/MongoDB/Exception.html", "link": "Doctrine/MongoDB/Exception/ResultException.html", "name": "Doctrine\\MongoDB\\Exception\\ResultException", "doc": "&quot;ResultException is thrown when a database command fails.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\Exception\\ResultException", "fromLink": "Doctrine/MongoDB/Exception/ResultException.html", "link": "Doctrine/MongoDB/Exception/ResultException.html#method___construct", "name": "Doctrine\\MongoDB\\Exception\\ResultException::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Exception\\ResultException", "fromLink": "Doctrine/MongoDB/Exception/ResultException.html", "link": "Doctrine/MongoDB/Exception/ResultException.html#method_getDocument", "name": "Doctrine\\MongoDB\\Exception\\ResultException::getDocument", "doc": "&quot;Get the command result document.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB", "fromLink": "Doctrine/MongoDB.html", "link": "Doctrine/MongoDB/GridFS.html", "name": "Doctrine\\MongoDB\\GridFS", "doc": "&quot;Wrapper for the MongoGridFS class.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\GridFS", "fromLink": "Doctrine/MongoDB/GridFS.html", "link": "Doctrine/MongoDB/GridFS.html#method___construct", "name": "Doctrine\\MongoDB\\GridFS::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\GridFS", "fromLink": "Doctrine/MongoDB/GridFS.html", "link": "Doctrine/MongoDB/GridFS.html#method_getMongoCollection", "name": "Doctrine\\MongoDB\\GridFS::getMongoCollection", "doc": "&quot;Return the MongoGridFS instance being wrapped.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\GridFS", "fromLink": "Doctrine/MongoDB/GridFS.html", "link": "Doctrine/MongoDB/GridFS.html#method_storeFile", "name": "Doctrine\\MongoDB\\GridFS::storeFile", "doc": "&quot;Wrapper method for MongoGridFS::storeFile().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\GridFS", "fromLink": "Doctrine/MongoDB/GridFS.html", "link": "Doctrine/MongoDB/GridFS.html#method_doBatchInsert", "name": "Doctrine\\MongoDB\\GridFS::doBatchInsert", "doc": "&quot;Execute the batchInsert query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\GridFS", "fromLink": "Doctrine/MongoDB/GridFS.html", "link": "Doctrine/MongoDB/GridFS.html#method_doFindAndRemove", "name": "Doctrine\\MongoDB\\GridFS::doFindAndRemove", "doc": "&quot;Execute the findAndModify command with the remove option and delete any\nchunks for the document.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\GridFS", "fromLink": "Doctrine/MongoDB/GridFS.html", "link": "Doctrine/MongoDB/GridFS.html#method_doFindOne", "name": "Doctrine\\MongoDB\\GridFS::doFindOne", "doc": "&quot;Execute the findOne query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\GridFS", "fromLink": "Doctrine/MongoDB/GridFS.html", "link": "Doctrine/MongoDB/GridFS.html#method_doInsert", "name": "Doctrine\\MongoDB\\GridFS::doInsert", "doc": "&quot;Execute the insert query and persist the GridFSFile if necessary.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\GridFS", "fromLink": "Doctrine/MongoDB/GridFS.html", "link": "Doctrine/MongoDB/GridFS.html#method_doSave", "name": "Doctrine\\MongoDB\\GridFS::doSave", "doc": "&quot;Execute the save query and persist the GridFSFile if necessary.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\GridFS", "fromLink": "Doctrine/MongoDB/GridFS.html", "link": "Doctrine/MongoDB/GridFS.html#method_doUpdate", "name": "Doctrine\\MongoDB\\GridFS::doUpdate", "doc": "&quot;Execute the update query and persist its GridFSFile if necessary.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB", "fromLink": "Doctrine/MongoDB.html", "link": "Doctrine/MongoDB/GridFSFile.html", "name": "Doctrine\\MongoDB\\GridFSFile", "doc": "&quot;Wrapper for the MongoGridFSFile class.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\GridFSFile", "fromLink": "Doctrine/MongoDB/GridFSFile.html", "link": "Doctrine/MongoDB/GridFSFile.html#method___construct", "name": "Doctrine\\MongoDB\\GridFSFile::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\GridFSFile", "fromLink": "Doctrine/MongoDB/GridFSFile.html", "link": "Doctrine/MongoDB/GridFSFile.html#method_getBytes", "name": "Doctrine\\MongoDB\\GridFSFile::getBytes", "doc": "&quot;Get the bytes for this file.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\GridFSFile", "fromLink": "Doctrine/MongoDB/GridFSFile.html", "link": "Doctrine/MongoDB/GridFSFile.html#method_setBytes", "name": "Doctrine\\MongoDB\\GridFSFile::setBytes", "doc": "&quot;Set the bytes to be persisted and mark the file as dirty.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\GridFSFile", "fromLink": "Doctrine/MongoDB/GridFSFile.html", "link": "Doctrine/MongoDB/GridFSFile.html#method_getFilename", "name": "Doctrine\\MongoDB\\GridFSFile::getFilename", "doc": "&quot;Get the filename for this file.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\GridFSFile", "fromLink": "Doctrine/MongoDB/GridFSFile.html", "link": "Doctrine/MongoDB/GridFSFile.html#method_setFilename", "name": "Doctrine\\MongoDB\\GridFSFile::setFilename", "doc": "&quot;Set the filename to be persisted and mark the file as dirty.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\GridFSFile", "fromLink": "Doctrine/MongoDB/GridFSFile.html", "link": "Doctrine/MongoDB/GridFSFile.html#method_getMongoGridFSFile", "name": "Doctrine\\MongoDB\\GridFSFile::getMongoGridFSFile", "doc": "&quot;Get the PHP MongoGridFSFile instance being wrapped.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\GridFSFile", "fromLink": "Doctrine/MongoDB/GridFSFile.html", "link": "Doctrine/MongoDB/GridFSFile.html#method_setMongoGridFSFile", "name": "Doctrine\\MongoDB\\GridFSFile::setMongoGridFSFile", "doc": "&quot;Set the PHP MongoGridFSFile instance to wrap and mark the file as clean.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\GridFSFile", "fromLink": "Doctrine/MongoDB/GridFSFile.html", "link": "Doctrine/MongoDB/GridFSFile.html#method_getSize", "name": "Doctrine\\MongoDB\\GridFSFile::getSize", "doc": "&quot;Get the size of this file.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\GridFSFile", "fromLink": "Doctrine/MongoDB/GridFSFile.html", "link": "Doctrine/MongoDB/GridFSFile.html#method_hasUnpersistedBytes", "name": "Doctrine\\MongoDB\\GridFSFile::hasUnpersistedBytes", "doc": "&quot;Check whether there are unpersisted bytes.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\GridFSFile", "fromLink": "Doctrine/MongoDB/GridFSFile.html", "link": "Doctrine/MongoDB/GridFSFile.html#method_hasUnpersistedFile", "name": "Doctrine\\MongoDB\\GridFSFile::hasUnpersistedFile", "doc": "&quot;Check whether there is an unpersisted file.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\GridFSFile", "fromLink": "Doctrine/MongoDB/GridFSFile.html", "link": "Doctrine/MongoDB/GridFSFile.html#method_isDirty", "name": "Doctrine\\MongoDB\\GridFSFile::isDirty", "doc": "&quot;Check whether the file is dirty.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\GridFSFile", "fromLink": "Doctrine/MongoDB/GridFSFile.html", "link": "Doctrine/MongoDB/GridFSFile.html#method_write", "name": "Doctrine\\MongoDB\\GridFSFile::write", "doc": "&quot;Writes this file to the path indicated by $filename.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB", "fromLink": "Doctrine/MongoDB.html", "link": "Doctrine/MongoDB/Iterator.html", "name": "Doctrine\\MongoDB\\Iterator", "doc": "&quot;Iterator interface.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\Iterator", "fromLink": "Doctrine/MongoDB/Iterator.html", "link": "Doctrine/MongoDB/Iterator.html#method_getSingleResult", "name": "Doctrine\\MongoDB\\Iterator::getSingleResult", "doc": "&quot;Return the first element or null if no elements exist.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Iterator", "fromLink": "Doctrine/MongoDB/Iterator.html", "link": "Doctrine/MongoDB/Iterator.html#method_toArray", "name": "Doctrine\\MongoDB\\Iterator::toArray", "doc": "&quot;Return all elements as an array.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB", "fromLink": "Doctrine/MongoDB.html", "link": "Doctrine/MongoDB/IteratorAggregate.html", "name": "Doctrine\\MongoDB\\IteratorAggregate", "doc": "&quot;IteratorAggregate interface.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\IteratorAggregate", "fromLink": "Doctrine/MongoDB/IteratorAggregate.html", "link": "Doctrine/MongoDB/IteratorAggregate.html#method_getSingleResult", "name": "Doctrine\\MongoDB\\IteratorAggregate::getSingleResult", "doc": "&quot;Return the first element or null if no elements exist.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\IteratorAggregate", "fromLink": "Doctrine/MongoDB/IteratorAggregate.html", "link": "Doctrine/MongoDB/IteratorAggregate.html#method_toArray", "name": "Doctrine\\MongoDB\\IteratorAggregate::toArray", "doc": "&quot;Return all elements as an array.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB", "fromLink": "Doctrine/MongoDB.html", "link": "Doctrine/MongoDB/Loggable.html", "name": "Doctrine\\MongoDB\\Loggable", "doc": "&quot;Loggable interface.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\Loggable", "fromLink": "Doctrine/MongoDB/Loggable.html", "link": "Doctrine/MongoDB/Loggable.html#method_log", "name": "Doctrine\\MongoDB\\Loggable::log", "doc": "&quot;Log something using the configured logger callable.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB", "fromLink": "Doctrine/MongoDB.html", "link": "Doctrine/MongoDB/LoggableCollection.html", "name": "Doctrine\\MongoDB\\LoggableCollection", "doc": "&quot;Wrapper for the MongoCollection class with logging functionality.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableCollection", "fromLink": "Doctrine/MongoDB/LoggableCollection.html", "link": "Doctrine/MongoDB/LoggableCollection.html#method___construct", "name": "Doctrine\\MongoDB\\LoggableCollection::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableCollection", "fromLink": "Doctrine/MongoDB/LoggableCollection.html", "link": "Doctrine/MongoDB/LoggableCollection.html#method_log", "name": "Doctrine\\MongoDB\\LoggableCollection::log", "doc": "&quot;Log something using the configured logger callable.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableCollection", "fromLink": "Doctrine/MongoDB/LoggableCollection.html", "link": "Doctrine/MongoDB/LoggableCollection.html#method_batchInsert", "name": "Doctrine\\MongoDB\\LoggableCollection::batchInsert", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableCollection", "fromLink": "Doctrine/MongoDB/LoggableCollection.html", "link": "Doctrine/MongoDB/LoggableCollection.html#method_count", "name": "Doctrine\\MongoDB\\LoggableCollection::count", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableCollection", "fromLink": "Doctrine/MongoDB/LoggableCollection.html", "link": "Doctrine/MongoDB/LoggableCollection.html#method_deleteIndex", "name": "Doctrine\\MongoDB\\LoggableCollection::deleteIndex", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableCollection", "fromLink": "Doctrine/MongoDB/LoggableCollection.html", "link": "Doctrine/MongoDB/LoggableCollection.html#method_deleteIndexes", "name": "Doctrine\\MongoDB\\LoggableCollection::deleteIndexes", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableCollection", "fromLink": "Doctrine/MongoDB/LoggableCollection.html", "link": "Doctrine/MongoDB/LoggableCollection.html#method_drop", "name": "Doctrine\\MongoDB\\LoggableCollection::drop", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableCollection", "fromLink": "Doctrine/MongoDB/LoggableCollection.html", "link": "Doctrine/MongoDB/LoggableCollection.html#method_ensureIndex", "name": "Doctrine\\MongoDB\\LoggableCollection::ensureIndex", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableCollection", "fromLink": "Doctrine/MongoDB/LoggableCollection.html", "link": "Doctrine/MongoDB/LoggableCollection.html#method_find", "name": "Doctrine\\MongoDB\\LoggableCollection::find", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableCollection", "fromLink": "Doctrine/MongoDB/LoggableCollection.html", "link": "Doctrine/MongoDB/LoggableCollection.html#method_findOne", "name": "Doctrine\\MongoDB\\LoggableCollection::findOne", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableCollection", "fromLink": "Doctrine/MongoDB/LoggableCollection.html", "link": "Doctrine/MongoDB/LoggableCollection.html#method_getDBRef", "name": "Doctrine\\MongoDB\\LoggableCollection::getDBRef", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableCollection", "fromLink": "Doctrine/MongoDB/LoggableCollection.html", "link": "Doctrine/MongoDB/LoggableCollection.html#method_group", "name": "Doctrine\\MongoDB\\LoggableCollection::group", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableCollection", "fromLink": "Doctrine/MongoDB/LoggableCollection.html", "link": "Doctrine/MongoDB/LoggableCollection.html#method_insert", "name": "Doctrine\\MongoDB\\LoggableCollection::insert", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableCollection", "fromLink": "Doctrine/MongoDB/LoggableCollection.html", "link": "Doctrine/MongoDB/LoggableCollection.html#method_remove", "name": "Doctrine\\MongoDB\\LoggableCollection::remove", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableCollection", "fromLink": "Doctrine/MongoDB/LoggableCollection.html", "link": "Doctrine/MongoDB/LoggableCollection.html#method_save", "name": "Doctrine\\MongoDB\\LoggableCollection::save", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableCollection", "fromLink": "Doctrine/MongoDB/LoggableCollection.html", "link": "Doctrine/MongoDB/LoggableCollection.html#method_update", "name": "Doctrine\\MongoDB\\LoggableCollection::update", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableCollection", "fromLink": "Doctrine/MongoDB/LoggableCollection.html", "link": "Doctrine/MongoDB/LoggableCollection.html#method_validate", "name": "Doctrine\\MongoDB\\LoggableCollection::validate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableCollection", "fromLink": "Doctrine/MongoDB/LoggableCollection.html", "link": "Doctrine/MongoDB/LoggableCollection.html#method_wrapCursor", "name": "Doctrine\\MongoDB\\LoggableCollection::wrapCursor", "doc": "&quot;Wraps a MongoCursor instance with a LoggableCursor.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB", "fromLink": "Doctrine/MongoDB.html", "link": "Doctrine/MongoDB/LoggableCursor.html", "name": "Doctrine\\MongoDB\\LoggableCursor", "doc": "&quot;Wrapper for the MongoCursor class with logging functionality.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableCursor", "fromLink": "Doctrine/MongoDB/LoggableCursor.html", "link": "Doctrine/MongoDB/LoggableCursor.html#method___construct", "name": "Doctrine\\MongoDB\\LoggableCursor::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableCursor", "fromLink": "Doctrine/MongoDB/LoggableCursor.html", "link": "Doctrine/MongoDB/LoggableCursor.html#method_log", "name": "Doctrine\\MongoDB\\LoggableCursor::log", "doc": "&quot;Log something using the configured logger callable.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableCursor", "fromLink": "Doctrine/MongoDB/LoggableCursor.html", "link": "Doctrine/MongoDB/LoggableCursor.html#method_getLoggerCallable", "name": "Doctrine\\MongoDB\\LoggableCursor::getLoggerCallable", "doc": "&quot;Get the logger callable.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableCursor", "fromLink": "Doctrine/MongoDB/LoggableCursor.html", "link": "Doctrine/MongoDB/LoggableCursor.html#method_hint", "name": "Doctrine\\MongoDB\\LoggableCursor::hint", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableCursor", "fromLink": "Doctrine/MongoDB/LoggableCursor.html", "link": "Doctrine/MongoDB/LoggableCursor.html#method_limit", "name": "Doctrine\\MongoDB\\LoggableCursor::limit", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableCursor", "fromLink": "Doctrine/MongoDB/LoggableCursor.html", "link": "Doctrine/MongoDB/LoggableCursor.html#method_skip", "name": "Doctrine\\MongoDB\\LoggableCursor::skip", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableCursor", "fromLink": "Doctrine/MongoDB/LoggableCursor.html", "link": "Doctrine/MongoDB/LoggableCursor.html#method_snapshot", "name": "Doctrine\\MongoDB\\LoggableCursor::snapshot", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableCursor", "fromLink": "Doctrine/MongoDB/LoggableCursor.html", "link": "Doctrine/MongoDB/LoggableCursor.html#method_sort", "name": "Doctrine\\MongoDB\\LoggableCursor::sort", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB", "fromLink": "Doctrine/MongoDB.html", "link": "Doctrine/MongoDB/LoggableDatabase.html", "name": "Doctrine\\MongoDB\\LoggableDatabase", "doc": "&quot;Wrapper for the MongoDB class with logging functionality.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableDatabase", "fromLink": "Doctrine/MongoDB/LoggableDatabase.html", "link": "Doctrine/MongoDB/LoggableDatabase.html#method___construct", "name": "Doctrine\\MongoDB\\LoggableDatabase::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableDatabase", "fromLink": "Doctrine/MongoDB/LoggableDatabase.html", "link": "Doctrine/MongoDB/LoggableDatabase.html#method_log", "name": "Doctrine\\MongoDB\\LoggableDatabase::log", "doc": "&quot;Log something using the configured logger callable.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableDatabase", "fromLink": "Doctrine/MongoDB/LoggableDatabase.html", "link": "Doctrine/MongoDB/LoggableDatabase.html#method_authenticate", "name": "Doctrine\\MongoDB\\LoggableDatabase::authenticate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableDatabase", "fromLink": "Doctrine/MongoDB/LoggableDatabase.html", "link": "Doctrine/MongoDB/LoggableDatabase.html#method_command", "name": "Doctrine\\MongoDB\\LoggableDatabase::command", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableDatabase", "fromLink": "Doctrine/MongoDB/LoggableDatabase.html", "link": "Doctrine/MongoDB/LoggableDatabase.html#method_createCollection", "name": "Doctrine\\MongoDB\\LoggableDatabase::createCollection", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableDatabase", "fromLink": "Doctrine/MongoDB/LoggableDatabase.html", "link": "Doctrine/MongoDB/LoggableDatabase.html#method_drop", "name": "Doctrine\\MongoDB\\LoggableDatabase::drop", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableDatabase", "fromLink": "Doctrine/MongoDB/LoggableDatabase.html", "link": "Doctrine/MongoDB/LoggableDatabase.html#method_execute", "name": "Doctrine\\MongoDB\\LoggableDatabase::execute", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableDatabase", "fromLink": "Doctrine/MongoDB/LoggableDatabase.html", "link": "Doctrine/MongoDB/LoggableDatabase.html#method_getDBRef", "name": "Doctrine\\MongoDB\\LoggableDatabase::getDBRef", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\LoggableDatabase", "fromLink": "Doctrine/MongoDB/LoggableDatabase.html", "link": "Doctrine/MongoDB/LoggableDatabase.html#method_doSelectCollection", "name": "Doctrine\\MongoDB\\LoggableDatabase::doSelectCollection", "doc": "&quot;Return a new LoggableCollection instance.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB\\Query", "fromLink": "Doctrine/MongoDB/Query.html", "link": "Doctrine/MongoDB/Query/Builder.html", "name": "Doctrine\\MongoDB\\Query\\Builder", "doc": "&quot;Fluent interface for building Query objects.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method___construct", "name": "Doctrine\\MongoDB\\Query\\Builder::__construct", "doc": "&quot;Create a new query builder.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_addAnd", "name": "Doctrine\\MongoDB\\Query\\Builder::addAnd", "doc": "&quot;Add an $and clause to the current query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_addManyToSet", "name": "Doctrine\\MongoDB\\Query\\Builder::addManyToSet", "doc": "&quot;Append multiple values to the current array field only if they do not\nalready exist in the array.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_addNor", "name": "Doctrine\\MongoDB\\Query\\Builder::addNor", "doc": "&quot;Add a $nor clause to the current query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_addOr", "name": "Doctrine\\MongoDB\\Query\\Builder::addOr", "doc": "&quot;Add an $or clause to the current query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_addToSet", "name": "Doctrine\\MongoDB\\Query\\Builder::addToSet", "doc": "&quot;Append one or more values to the current array field only if they do not\nalready exist in the array.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_all", "name": "Doctrine\\MongoDB\\Query\\Builder::all", "doc": "&quot;Specify $all criteria for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_count", "name": "Doctrine\\MongoDB\\Query\\Builder::count", "doc": "&quot;Change the query type to count.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_debug", "name": "Doctrine\\MongoDB\\Query\\Builder::debug", "doc": "&quot;Return an array of information about the Builder state for debugging.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_distanceMultiplier", "name": "Doctrine\\MongoDB\\Query\\Builder::distanceMultiplier", "doc": "&quot;Set the \&quot;distanceMultiplier\&quot; option for a geoNear command query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_distinct", "name": "Doctrine\\MongoDB\\Query\\Builder::distinct", "doc": "&quot;Change the query type to a distinct command.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_eagerCursor", "name": "Doctrine\\MongoDB\\Query\\Builder::eagerCursor", "doc": "&quot;Set whether the query should return its result as an EagerCursor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_elemMatch", "name": "Doctrine\\MongoDB\\Query\\Builder::elemMatch", "doc": "&quot;Specify $elemMatch criteria for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_equals", "name": "Doctrine\\MongoDB\\Query\\Builder::equals", "doc": "&quot;Specify an equality match for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_exclude", "name": "Doctrine\\MongoDB\\Query\\Builder::exclude", "doc": "&quot;Set one or more fields to be excluded from the query projection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_exists", "name": "Doctrine\\MongoDB\\Query\\Builder::exists", "doc": "&quot;Specify $exists criteria for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_expr", "name": "Doctrine\\MongoDB\\Query\\Builder::expr", "doc": "&quot;Create a new Expr instance that can be used to build partial expressions\nfor other operator methods.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_field", "name": "Doctrine\\MongoDB\\Query\\Builder::field", "doc": "&quot;Set the current field for building the expression.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_finalize", "name": "Doctrine\\MongoDB\\Query\\Builder::finalize", "doc": "&quot;Set the \&quot;finalize\&quot; option for a mapReduce or group command.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_find", "name": "Doctrine\\MongoDB\\Query\\Builder::find", "doc": "&quot;Change the query type to find.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_findAndRemove", "name": "Doctrine\\MongoDB\\Query\\Builder::findAndRemove", "doc": "&quot;Change the query type to findAndRemove (uses the findAndModify command).&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_findAndUpdate", "name": "Doctrine\\MongoDB\\Query\\Builder::findAndUpdate", "doc": "&quot;Change the query type to findAndUpdate (uses the findAndModify command).&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_geoIntersects", "name": "Doctrine\\MongoDB\\Query\\Builder::geoIntersects", "doc": "&quot;Add $geoIntersects criteria with a GeoJSON geometry to the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_geoNear", "name": "Doctrine\\MongoDB\\Query\\Builder::geoNear", "doc": "&quot;Change the query type to a geoNear command.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_geoWithin", "name": "Doctrine\\MongoDB\\Query\\Builder::geoWithin", "doc": "&quot;Add $geoWithin criteria with a GeoJSON geometry to the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_geoWithinBox", "name": "Doctrine\\MongoDB\\Query\\Builder::geoWithinBox", "doc": "&quot;Add $geoWithin criteria with a $box shape to the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_geoWithinCenter", "name": "Doctrine\\MongoDB\\Query\\Builder::geoWithinCenter", "doc": "&quot;Add $geoWithin criteria with a $center shape to the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_geoWithinCenterSphere", "name": "Doctrine\\MongoDB\\Query\\Builder::geoWithinCenterSphere", "doc": "&quot;Add $geoWithin criteria with a $centerSphere shape to the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_geoWithinPolygon", "name": "Doctrine\\MongoDB\\Query\\Builder::geoWithinPolygon", "doc": "&quot;Add $geoWithin criteria with a $polygon shape to the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_getNewObj", "name": "Doctrine\\MongoDB\\Query\\Builder::getNewObj", "doc": "&quot;Return the expression&#039;s \&quot;new object\&quot;.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_setNewObj", "name": "Doctrine\\MongoDB\\Query\\Builder::setNewObj", "doc": "&quot;Set the expression&#039;s \&quot;new object\&quot;.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_getQuery", "name": "Doctrine\\MongoDB\\Query\\Builder::getQuery", "doc": "&quot;Create a new Query instance from the Builder state.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_getQueryArray", "name": "Doctrine\\MongoDB\\Query\\Builder::getQueryArray", "doc": "&quot;Return the expression&#039;s query criteria.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_setQueryArray", "name": "Doctrine\\MongoDB\\Query\\Builder::setQueryArray", "doc": "&quot;Set the expression&#039;s query criteria.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_getType", "name": "Doctrine\\MongoDB\\Query\\Builder::getType", "doc": "&quot;Get the type of this query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_group", "name": "Doctrine\\MongoDB\\Query\\Builder::group", "doc": "&quot;Change the query type to a group command.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_gt", "name": "Doctrine\\MongoDB\\Query\\Builder::gt", "doc": "&quot;Specify $gt criteria for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_gte", "name": "Doctrine\\MongoDB\\Query\\Builder::gte", "doc": "&quot;Specify $gte criteria for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_hint", "name": "Doctrine\\MongoDB\\Query\\Builder::hint", "doc": "&quot;Set the index hint for the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_immortal", "name": "Doctrine\\MongoDB\\Query\\Builder::immortal", "doc": "&quot;Set the immortal cursor flag.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_in", "name": "Doctrine\\MongoDB\\Query\\Builder::in", "doc": "&quot;Specify $in criteria for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_inc", "name": "Doctrine\\MongoDB\\Query\\Builder::inc", "doc": "&quot;Increment the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_insert", "name": "Doctrine\\MongoDB\\Query\\Builder::insert", "doc": "&quot;Change the query type to insert.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_limit", "name": "Doctrine\\MongoDB\\Query\\Builder::limit", "doc": "&quot;Set the limit for the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_lt", "name": "Doctrine\\MongoDB\\Query\\Builder::lt", "doc": "&quot;Specify $lt criteria for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_lte", "name": "Doctrine\\MongoDB\\Query\\Builder::lte", "doc": "&quot;Specify $lte criteria for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_map", "name": "Doctrine\\MongoDB\\Query\\Builder::map", "doc": "&quot;Change the query type to a mapReduce command.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_mapReduce", "name": "Doctrine\\MongoDB\\Query\\Builder::mapReduce", "doc": "&quot;Change the query type to a mapReduce command.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_mapReduceOptions", "name": "Doctrine\\MongoDB\\Query\\Builder::mapReduceOptions", "doc": "&quot;Set additional options for a mapReduce command.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_maxDistance", "name": "Doctrine\\MongoDB\\Query\\Builder::maxDistance", "doc": "&quot;Set the \&quot;maxDistance\&quot; option for a geoNear command query or add\n$maxDistance criteria to the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_mod", "name": "Doctrine\\MongoDB\\Query\\Builder::mod", "doc": "&quot;Specify $mod criteria for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_multiple", "name": "Doctrine\\MongoDB\\Query\\Builder::multiple", "doc": "&quot;Set the \&quot;multiple\&quot; option for an update query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_near", "name": "Doctrine\\MongoDB\\Query\\Builder::near", "doc": "&quot;Add $near criteria to the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_nearSphere", "name": "Doctrine\\MongoDB\\Query\\Builder::nearSphere", "doc": "&quot;Add $nearSphere criteria to the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_not", "name": "Doctrine\\MongoDB\\Query\\Builder::not", "doc": "&quot;Negates an expression for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_notEqual", "name": "Doctrine\\MongoDB\\Query\\Builder::notEqual", "doc": "&quot;Specify $ne criteria for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_notIn", "name": "Doctrine\\MongoDB\\Query\\Builder::notIn", "doc": "&quot;Specify $nin criteria for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_out", "name": "Doctrine\\MongoDB\\Query\\Builder::out", "doc": "&quot;Set the \&quot;out\&quot; option for a mapReduce command.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_popFirst", "name": "Doctrine\\MongoDB\\Query\\Builder::popFirst", "doc": "&quot;Remove the first element from the current array field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_popLast", "name": "Doctrine\\MongoDB\\Query\\Builder::popLast", "doc": "&quot;Remove the last element from the current array field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_pull", "name": "Doctrine\\MongoDB\\Query\\Builder::pull", "doc": "&quot;Remove all elements matching the given value or expression from the\ncurrent array field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_pullAll", "name": "Doctrine\\MongoDB\\Query\\Builder::pullAll", "doc": "&quot;Remove all elements matching any of the given values from the current\narray field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_push", "name": "Doctrine\\MongoDB\\Query\\Builder::push", "doc": "&quot;Append one or more values to the current array field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_pushAll", "name": "Doctrine\\MongoDB\\Query\\Builder::pushAll", "doc": "&quot;Append multiple values to the current array field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_range", "name": "Doctrine\\MongoDB\\Query\\Builder::range", "doc": "&quot;Specify $gte and $lt criteria for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_reduce", "name": "Doctrine\\MongoDB\\Query\\Builder::reduce", "doc": "&quot;Set the \&quot;reduce\&quot; option for a mapReduce or group command.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_remove", "name": "Doctrine\\MongoDB\\Query\\Builder::remove", "doc": "&quot;Change the query type to remove.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_rename", "name": "Doctrine\\MongoDB\\Query\\Builder::rename", "doc": "&quot;Rename the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_returnNew", "name": "Doctrine\\MongoDB\\Query\\Builder::returnNew", "doc": "&quot;Set the \&quot;new\&quot; option for a findAndUpdate command.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_select", "name": "Doctrine\\MongoDB\\Query\\Builder::select", "doc": "&quot;Set one or more fields to be included in the query projection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_selectElemMatch", "name": "Doctrine\\MongoDB\\Query\\Builder::selectElemMatch", "doc": "&quot;Select only matching embedded documents in an array field for the query\nprojection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_selectSlice", "name": "Doctrine\\MongoDB\\Query\\Builder::selectSlice", "doc": "&quot;Select a slice of an array field for the query projection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_set", "name": "Doctrine\\MongoDB\\Query\\Builder::set", "doc": "&quot;Set the current field to a value.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_setReadPreference", "name": "Doctrine\\MongoDB\\Query\\Builder::setReadPreference", "doc": "&quot;Set the read preference for the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_size", "name": "Doctrine\\MongoDB\\Query\\Builder::size", "doc": "&quot;Specify $size criteria for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_skip", "name": "Doctrine\\MongoDB\\Query\\Builder::skip", "doc": "&quot;Set the skip for the query cursor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_slaveOkay", "name": "Doctrine\\MongoDB\\Query\\Builder::slaveOkay", "doc": "&quot;Set whether the query may be directed to replica set secondaries.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_snapshot", "name": "Doctrine\\MongoDB\\Query\\Builder::snapshot", "doc": "&quot;Set the snapshot cursor flag.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_sort", "name": "Doctrine\\MongoDB\\Query\\Builder::sort", "doc": "&quot;Set one or more field\/order pairs on which to sort the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_spherical", "name": "Doctrine\\MongoDB\\Query\\Builder::spherical", "doc": "&quot;Set the \&quot;spherical\&quot; option for a geoNear command query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_type", "name": "Doctrine\\MongoDB\\Query\\Builder::type", "doc": "&quot;Specify $type criteria for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_unsetField", "name": "Doctrine\\MongoDB\\Query\\Builder::unsetField", "doc": "&quot;Unset the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_update", "name": "Doctrine\\MongoDB\\Query\\Builder::update", "doc": "&quot;Change the query type to update.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_upsert", "name": "Doctrine\\MongoDB\\Query\\Builder::upsert", "doc": "&quot;Set the \&quot;upsert\&quot; option for an update or findAndUpdate query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_where", "name": "Doctrine\\MongoDB\\Query\\Builder::where", "doc": "&quot;Specify a JavaScript expression to use for matching documents.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_withinBox", "name": "Doctrine\\MongoDB\\Query\\Builder::withinBox", "doc": "&quot;Add $within criteria with a $box shape to the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_withinCenter", "name": "Doctrine\\MongoDB\\Query\\Builder::withinCenter", "doc": "&quot;Add $within criteria with a $center shape to the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_withinCenterSphere", "name": "Doctrine\\MongoDB\\Query\\Builder::withinCenterSphere", "doc": "&quot;Add $within criteria with a $centerSphere shape to the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method_withinPolygon", "name": "Doctrine\\MongoDB\\Query\\Builder::withinPolygon", "doc": "&quot;Add $within criteria with a $polygon shape to the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Builder", "fromLink": "Doctrine/MongoDB/Query/Builder.html", "link": "Doctrine/MongoDB/Query/Builder.html#method___clone", "name": "Doctrine\\MongoDB\\Query\\Builder::__clone", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB\\Query", "fromLink": "Doctrine/MongoDB/Query.html", "link": "Doctrine/MongoDB/Query/Expr.html", "name": "Doctrine\\MongoDB\\Query\\Expr", "doc": "&quot;Fluent interface for building query and update expressions.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_addAnd", "name": "Doctrine\\MongoDB\\Query\\Expr::addAnd", "doc": "&quot;Add an $and clause to the current query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_addManyToSet", "name": "Doctrine\\MongoDB\\Query\\Expr::addManyToSet", "doc": "&quot;Append multiple values to the current array field only if they do not\nalready exist in the array.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_addNor", "name": "Doctrine\\MongoDB\\Query\\Expr::addNor", "doc": "&quot;Add a $nor clause to the current query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_addOr", "name": "Doctrine\\MongoDB\\Query\\Expr::addOr", "doc": "&quot;Add an $or clause to the current query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_addToSet", "name": "Doctrine\\MongoDB\\Query\\Expr::addToSet", "doc": "&quot;Append one or more values to the current array field only if they do not\nalready exist in the array.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_all", "name": "Doctrine\\MongoDB\\Query\\Expr::all", "doc": "&quot;Specify $all criteria for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_each", "name": "Doctrine\\MongoDB\\Query\\Expr::each", "doc": "&quot;Add $each criteria to the expression for a $push operation.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_elemMatch", "name": "Doctrine\\MongoDB\\Query\\Expr::elemMatch", "doc": "&quot;Specify $elemMatch criteria for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_equals", "name": "Doctrine\\MongoDB\\Query\\Expr::equals", "doc": "&quot;Specify an equality match for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_exists", "name": "Doctrine\\MongoDB\\Query\\Expr::exists", "doc": "&quot;Specify $exists criteria for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_field", "name": "Doctrine\\MongoDB\\Query\\Expr::field", "doc": "&quot;Set the current field for building the expression.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_geoIntersects", "name": "Doctrine\\MongoDB\\Query\\Expr::geoIntersects", "doc": "&quot;Add $geoIntersects criteria with a GeoJSON geometry to the expression.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_geoWithin", "name": "Doctrine\\MongoDB\\Query\\Expr::geoWithin", "doc": "&quot;Add $geoWithin criteria with a GeoJSON geometry to the expression.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_geoWithinBox", "name": "Doctrine\\MongoDB\\Query\\Expr::geoWithinBox", "doc": "&quot;Add $geoWithin criteria with a $box shape to the expression.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_geoWithinCenter", "name": "Doctrine\\MongoDB\\Query\\Expr::geoWithinCenter", "doc": "&quot;Add $geoWithin criteria with a $center shape to the expression.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_geoWithinCenterSphere", "name": "Doctrine\\MongoDB\\Query\\Expr::geoWithinCenterSphere", "doc": "&quot;Add $geoWithin criteria with a $centerSphere shape to the expression.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_geoWithinPolygon", "name": "Doctrine\\MongoDB\\Query\\Expr::geoWithinPolygon", "doc": "&quot;Add $geoWithin criteria with a $polygon shape to the expression.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_getCurrentField", "name": "Doctrine\\MongoDB\\Query\\Expr::getCurrentField", "doc": "&quot;Return the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_getNewObj", "name": "Doctrine\\MongoDB\\Query\\Expr::getNewObj", "doc": "&quot;Return the \&quot;new object\&quot;.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_setNewObj", "name": "Doctrine\\MongoDB\\Query\\Expr::setNewObj", "doc": "&quot;Set the \&quot;new object\&quot;.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_getQuery", "name": "Doctrine\\MongoDB\\Query\\Expr::getQuery", "doc": "&quot;Return the query criteria.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_setQuery", "name": "Doctrine\\MongoDB\\Query\\Expr::setQuery", "doc": "&quot;Set the query criteria.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_gt", "name": "Doctrine\\MongoDB\\Query\\Expr::gt", "doc": "&quot;Specify $gt criteria for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_gte", "name": "Doctrine\\MongoDB\\Query\\Expr::gte", "doc": "&quot;Specify $gte criteria for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_in", "name": "Doctrine\\MongoDB\\Query\\Expr::in", "doc": "&quot;Specify $in criteria for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_inc", "name": "Doctrine\\MongoDB\\Query\\Expr::inc", "doc": "&quot;Increment the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_lt", "name": "Doctrine\\MongoDB\\Query\\Expr::lt", "doc": "&quot;Specify $lt criteria for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_lte", "name": "Doctrine\\MongoDB\\Query\\Expr::lte", "doc": "&quot;Specify $lte criteria for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_maxDistance", "name": "Doctrine\\MongoDB\\Query\\Expr::maxDistance", "doc": "&quot;Set the $maxDistance option for $near or $nearSphere criteria.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_mod", "name": "Doctrine\\MongoDB\\Query\\Expr::mod", "doc": "&quot;Specify $mod criteria for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_near", "name": "Doctrine\\MongoDB\\Query\\Expr::near", "doc": "&quot;Add $near criteria to the expression.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_nearSphere", "name": "Doctrine\\MongoDB\\Query\\Expr::nearSphere", "doc": "&quot;Add $nearSphere criteria to the expression.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_not", "name": "Doctrine\\MongoDB\\Query\\Expr::not", "doc": "&quot;Negates an expression for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_notEqual", "name": "Doctrine\\MongoDB\\Query\\Expr::notEqual", "doc": "&quot;Specify $ne criteria for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_notIn", "name": "Doctrine\\MongoDB\\Query\\Expr::notIn", "doc": "&quot;Specify $nin criteria for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_operator", "name": "Doctrine\\MongoDB\\Query\\Expr::operator", "doc": "&quot;Defines an operator and value on the expression.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_popFirst", "name": "Doctrine\\MongoDB\\Query\\Expr::popFirst", "doc": "&quot;Remove the first element from the current array field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_popLast", "name": "Doctrine\\MongoDB\\Query\\Expr::popLast", "doc": "&quot;Remove the last element from the current array field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_pull", "name": "Doctrine\\MongoDB\\Query\\Expr::pull", "doc": "&quot;Remove all elements matching the given value or expression from the\ncurrent array field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_pullAll", "name": "Doctrine\\MongoDB\\Query\\Expr::pullAll", "doc": "&quot;Remove all elements matching any of the given values from the current\narray field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_push", "name": "Doctrine\\MongoDB\\Query\\Expr::push", "doc": "&quot;Append one or more values to the current array field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_pushAll", "name": "Doctrine\\MongoDB\\Query\\Expr::pushAll", "doc": "&quot;Append multiple values to the current array field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_range", "name": "Doctrine\\MongoDB\\Query\\Expr::range", "doc": "&quot;Specify $gte and $lt criteria for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_rename", "name": "Doctrine\\MongoDB\\Query\\Expr::rename", "doc": "&quot;Rename the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_set", "name": "Doctrine\\MongoDB\\Query\\Expr::set", "doc": "&quot;Set the current field to a value.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_size", "name": "Doctrine\\MongoDB\\Query\\Expr::size", "doc": "&quot;Specify $size criteria for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_slice", "name": "Doctrine\\MongoDB\\Query\\Expr::slice", "doc": "&quot;Add $slice criteria to the expression for a $push operation.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_sort", "name": "Doctrine\\MongoDB\\Query\\Expr::sort", "doc": "&quot;Add $sort criteria to the expression for a $push operation.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_type", "name": "Doctrine\\MongoDB\\Query\\Expr::type", "doc": "&quot;Specify $type criteria for the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_unsetField", "name": "Doctrine\\MongoDB\\Query\\Expr::unsetField", "doc": "&quot;Unset the current field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_where", "name": "Doctrine\\MongoDB\\Query\\Expr::where", "doc": "&quot;Specify a JavaScript expression to use for matching documents.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_withinBox", "name": "Doctrine\\MongoDB\\Query\\Expr::withinBox", "doc": "&quot;Add $within criteria with a $box shape to the expression.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_withinCenter", "name": "Doctrine\\MongoDB\\Query\\Expr::withinCenter", "doc": "&quot;Add $within criteria with a $center shape to the expression.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_withinCenterSphere", "name": "Doctrine\\MongoDB\\Query\\Expr::withinCenterSphere", "doc": "&quot;Add $within criteria with a $centerSphere shape to the expression.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Expr", "fromLink": "Doctrine/MongoDB/Query/Expr.html", "link": "Doctrine/MongoDB/Query/Expr.html#method_withinPolygon", "name": "Doctrine\\MongoDB\\Query\\Expr::withinPolygon", "doc": "&quot;Add $within criteria with a $polygon shape to the expression.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB\\Query", "fromLink": "Doctrine/MongoDB/Query.html", "link": "Doctrine/MongoDB/Query/Query.html", "name": "Doctrine\\MongoDB\\Query\\Query", "doc": "&quot;Query class used in conjunction with the Builder class for executing queries\nor commands and returning results.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Query", "fromLink": "Doctrine/MongoDB/Query/Query.html", "link": "Doctrine/MongoDB/Query/Query.html#method___construct", "name": "Doctrine\\MongoDB\\Query\\Query::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Query", "fromLink": "Doctrine/MongoDB/Query/Query.html", "link": "Doctrine/MongoDB/Query/Query.html#method_count", "name": "Doctrine\\MongoDB\\Query\\Query::count", "doc": "&quot;Count the number of results for this query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Query", "fromLink": "Doctrine/MongoDB/Query/Query.html", "link": "Doctrine/MongoDB/Query/Query.html#method_debug", "name": "Doctrine\\MongoDB\\Query\\Query::debug", "doc": "&quot;Return an array of information about the query structure for debugging.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Query", "fromLink": "Doctrine/MongoDB/Query/Query.html", "link": "Doctrine/MongoDB/Query/Query.html#method_execute", "name": "Doctrine\\MongoDB\\Query\\Query::execute", "doc": "&quot;Execute the query and return its result.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Query", "fromLink": "Doctrine/MongoDB/Query/Query.html", "link": "Doctrine/MongoDB/Query/Query.html#method_getIterator", "name": "Doctrine\\MongoDB\\Query\\Query::getIterator", "doc": "&quot;Execute the query and return its result, which must be an Iterator.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Query", "fromLink": "Doctrine/MongoDB/Query/Query.html", "link": "Doctrine/MongoDB/Query/Query.html#method_getQuery", "name": "Doctrine\\MongoDB\\Query\\Query::getQuery", "doc": "&quot;Return the query structure.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Query", "fromLink": "Doctrine/MongoDB/Query/Query.html", "link": "Doctrine/MongoDB/Query/Query.html#method_getSingleResult", "name": "Doctrine\\MongoDB\\Query\\Query::getSingleResult", "doc": "&quot;Execute the query and return the first result.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Query", "fromLink": "Doctrine/MongoDB/Query/Query.html", "link": "Doctrine/MongoDB/Query/Query.html#method_getType", "name": "Doctrine\\MongoDB\\Query\\Query::getType", "doc": "&quot;Return the query type.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Query", "fromLink": "Doctrine/MongoDB/Query/Query.html", "link": "Doctrine/MongoDB/Query/Query.html#method_iterate", "name": "Doctrine\\MongoDB\\Query\\Query::iterate", "doc": "&quot;Alias of {@link Query::getIterator()}.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Query", "fromLink": "Doctrine/MongoDB/Query/Query.html", "link": "Doctrine/MongoDB/Query/Query.html#method_toArray", "name": "Doctrine\\MongoDB\\Query\\Query::toArray", "doc": "&quot;Execute the query and return its results as an array.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Query\\Query", "fromLink": "Doctrine/MongoDB/Query/Query.html", "link": "Doctrine/MongoDB/Query/Query.html#method_prepareCursor", "name": "Doctrine\\MongoDB\\Query\\Query::prepareCursor", "doc": "&quot;Prepare the Cursor returned by {@link Query::execute()}.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\MongoDB\\Util", "fromLink": "Doctrine/MongoDB/Util.html", "link": "Doctrine/MongoDB/Util/ReadPreference.html", "name": "Doctrine\\MongoDB\\Util\\ReadPreference", "doc": "&quot;Utility class for converting read preferences.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\MongoDB\\Util\\ReadPreference", "fromLink": "Doctrine/MongoDB/Util/ReadPreference.html", "link": "Doctrine/MongoDB/Util/ReadPreference.html#method_convertNumericType", "name": "Doctrine\\MongoDB\\Util\\ReadPreference::convertNumericType", "doc": "&quot;Converts a numeric type returned by getReadPreference() methods to the\nconstant accepted by setReadPreference() methods.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Util\\ReadPreference", "fromLink": "Doctrine/MongoDB/Util/ReadPreference.html", "link": "Doctrine/MongoDB/Util/ReadPreference.html#method_convertReadPreference", "name": "Doctrine\\MongoDB\\Util\\ReadPreference::convertReadPreference", "doc": "&quot;Converts return values from getReadPreference() methods to the format\naccepted by setReadPreference() methods.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\MongoDB\\Util\\ReadPreference", "fromLink": "Doctrine/MongoDB/Util/ReadPreference.html", "link": "Doctrine/MongoDB/Util/ReadPreference.html#method_convertTagSets", "name": "Doctrine\\MongoDB\\Util\\ReadPreference::convertTagSets", "doc": "&quot;Converts tag sets returned by getReadPreference() methods to the format\naccepted by setReadPreference() methods.&quot;"},
            
            
                                        // Fix trailing commas in the index
        {}
    ];

    /** Tokenizes strings by namespaces and functions */
    function tokenizer(term) {
        if (!term) {
            return [];
        }

        var tokens = [term];
        var meth = term.indexOf('::');

        // Split tokens into methods if "::" is found.
        if (meth > -1) {
            tokens.push(term.substr(meth + 2));
            term = term.substr(0, meth - 2);
        }

        // Split by namespace or fake namespace.
        if (term.indexOf('\\') > -1) {
            tokens = tokens.concat(term.split('\\'));
        } else if (term.indexOf('_') > 0) {
            tokens = tokens.concat(term.split('_'));
        }

        // Merge in splitting the string by case and return
        tokens = tokens.concat(term.match(/(([A-Z]?[^A-Z]*)|([a-z]?[^a-z]*))/g).slice(0,-1));

        return tokens;
    };

    root.Sami = {
        /**
         * Cleans the provided term. If no term is provided, then one is
         * grabbed from the query string "search" parameter.
         */
        cleanSearchTerm: function(term) {
            // Grab from the query string
            if (typeof term === 'undefined') {
                var name = 'search';
                var regex = new RegExp("[\\?&]" + name + "=([^&#]*)");
                var results = regex.exec(location.search);
                if (results === null) {
                    return null;
                }
                term = decodeURIComponent(results[1].replace(/\+/g, " "));
            }

            return term.replace(/<(?:.|\n)*?>/gm, '');
        },

        /** Searches through the index for a given term */
        search: function(term) {
            // Create a new search index if needed
            if (!bhIndex) {
                bhIndex = new Bloodhound({
                    limit: 500,
                    local: searchIndex,
                    datumTokenizer: function (d) {
                        return tokenizer(d.name);
                    },
                    queryTokenizer: Bloodhound.tokenizers.whitespace
                });
                bhIndex.initialize();
            }

            results = [];
            bhIndex.get(term, function(matches) {
                results = matches;
            });

            if (!rootPath) {
                return results;
            }

            // Fix the element links based on the current page depth.
            return $.map(results, function(ele) {
                if (ele.link.indexOf('..') > -1) {
                    return ele;
                }
                ele.link = rootPath + ele.link;
                if (ele.fromLink) {
                    ele.fromLink = rootPath + ele.fromLink;
                }
                return ele;
            });
        },

        /** Get a search class for a specific type */
        getSearchClass: function(type) {
            return searchTypeClasses[type] || searchTypeClasses['_'];
        },

        /** Add the left-nav tree to the site */
        injectApiTree: function(ele) {
            ele.html(treeHtml);
        }
    };

    $(function() {
        // Modify the HTML to work correctly based on the current depth
        rootPath = $('body').attr('data-root-path');
        treeHtml = treeHtml.replace(/href="/g, 'href="' + rootPath);
        Sami.injectApiTree($('#api-tree'));
    });

    return root.Sami;
})(window);

$(function() {

    // Enable the version switcher
    $('#version-switcher').change(function() {
        window.location = $(this).val()
    });

    
        // Toggle left-nav divs on click
        $('#api-tree .hd span').click(function() {
            $(this).parent().parent().toggleClass('opened');
        });

        // Expand the parent namespaces of the current page.
        var expected = $('body').attr('data-name');

        if (expected) {
            // Open the currently selected node and its parents.
            var container = $('#api-tree');
            var node = $('#api-tree li[data-name="' + expected + '"]');
            // Node might not be found when simulating namespaces
            if (node.length > 0) {
                node.addClass('active').addClass('opened');
                node.parents('li').addClass('opened');
                var scrollPos = node.offset().top - container.offset().top + container.scrollTop();
                // Position the item nearer to the top of the screen.
                scrollPos -= 200;
                container.scrollTop(scrollPos);
            }
        }

    
    
        var form = $('#search-form .typeahead');
        form.typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        }, {
            name: 'search',
            displayKey: 'name',
            source: function (q, cb) {
                cb(Sami.search(q));
            }
        });

        // The selection is direct-linked when the user selects a suggestion.
        form.on('typeahead:selected', function(e, suggestion) {
            window.location = suggestion.link;
        });

        // The form is submitted when the user hits enter.
        form.keypress(function (e) {
            if (e.which == 13) {
                $('#search-form').submit();
                return true;
            }
        });

    
});


