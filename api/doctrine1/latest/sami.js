
window.projectVersion = 'master';

(function(root) {

    var bhIndex = null;
    var rootPath = '';
    var treeHtml = '        <ul>                <li data-name="namespace:" class="opened">                    <div style="padding-left:0px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href=".html">[Global Namespace]</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Doctrine" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine.html">Doctrine</a>                    </div>                </li>                            <li data-name="class:Doctrine_Access" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Access.html">Doctrine_Access</a>                    </div>                </li>                            <li data-name="class:Doctrine_Adapter_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Adapter_Exception.html">Doctrine_Adapter_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Adapter_Interface" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Adapter_Interface.html">Doctrine_Adapter_Interface</a>                    </div>                </li>                            <li data-name="class:Doctrine_Adapter_Mock" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Adapter_Mock.html">Doctrine_Adapter_Mock</a>                    </div>                </li>                            <li data-name="class:Doctrine_Adapter_Oracle" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Adapter_Oracle.html">Doctrine_Adapter_Oracle</a>                    </div>                </li>                            <li data-name="class:Doctrine_Adapter_Statement" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Adapter_Statement.html">Doctrine_Adapter_Statement</a>                    </div>                </li>                            <li data-name="class:Doctrine_Adapter_Statement_Interface" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Adapter_Statement_Interface.html">Doctrine_Adapter_Statement_Interface</a>                    </div>                </li>                            <li data-name="class:Doctrine_Adapter_Statement_Mock" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Adapter_Statement_Mock.html">Doctrine_Adapter_Statement_Mock</a>                    </div>                </li>                            <li data-name="class:Doctrine_Adapter_Statement_Oracle" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Adapter_Statement_Oracle.html">Doctrine_Adapter_Statement_Oracle</a>                    </div>                </li>                            <li data-name="class:Doctrine_AuditLog" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_AuditLog.html">Doctrine_AuditLog</a>                    </div>                </li>                            <li data-name="class:Doctrine_AuditLog_Listener" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_AuditLog_Listener.html">Doctrine_AuditLog_Listener</a>                    </div>                </li>                            <li data-name="class:Doctrine_AuditLog_Listener_Microtime" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_AuditLog_Listener_Microtime.html">Doctrine_AuditLog_Listener_Microtime</a>                    </div>                </li>                            <li data-name="class:Doctrine_Builder" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Builder.html">Doctrine_Builder</a>                    </div>                </li>                            <li data-name="class:Doctrine_Cache_Apc" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Cache_Apc.html">Doctrine_Cache_Apc</a>                    </div>                </li>                            <li data-name="class:Doctrine_Cache_Array" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Cache_Array.html">Doctrine_Cache_Array</a>                    </div>                </li>                            <li data-name="class:Doctrine_Cache_Db" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Cache_Db.html">Doctrine_Cache_Db</a>                    </div>                </li>                            <li data-name="class:Doctrine_Cache_Driver" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Cache_Driver.html">Doctrine_Cache_Driver</a>                    </div>                </li>                            <li data-name="class:Doctrine_Cache_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Cache_Exception.html">Doctrine_Cache_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Cache_Interface" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Cache_Interface.html">Doctrine_Cache_Interface</a>                    </div>                </li>                            <li data-name="class:Doctrine_Cache_Memcache" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Cache_Memcache.html">Doctrine_Cache_Memcache</a>                    </div>                </li>                            <li data-name="class:Doctrine_Cache_Xcache" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Cache_Xcache.html">Doctrine_Cache_Xcache</a>                    </div>                </li>                            <li data-name="class:Doctrine_Cli" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Cli.html">Doctrine_Cli</a>                    </div>                </li>                            <li data-name="class:Doctrine_Cli_AnsiColorFormatter" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Cli_AnsiColorFormatter.html">Doctrine_Cli_AnsiColorFormatter</a>                    </div>                </li>                            <li data-name="class:Doctrine_Cli_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Cli_Exception.html">Doctrine_Cli_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Cli_Formatter" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Cli_Formatter.html">Doctrine_Cli_Formatter</a>                    </div>                </li>                            <li data-name="class:Doctrine_Collection" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Collection.html">Doctrine_Collection</a>                    </div>                </li>                            <li data-name="class:Doctrine_Collection_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Collection_Exception.html">Doctrine_Collection_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Collection_Iterator" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Collection_Iterator.html">Doctrine_Collection_Iterator</a>                    </div>                </li>                            <li data-name="class:Doctrine_Collection_Iterator_Expandable" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Collection_Iterator_Expandable.html">Doctrine_Collection_Iterator_Expandable</a>                    </div>                </li>                            <li data-name="class:Doctrine_Collection_Iterator_Normal" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Collection_Iterator_Normal.html">Doctrine_Collection_Iterator_Normal</a>                    </div>                </li>                            <li data-name="class:Doctrine_Collection_Iterator_Offset" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Collection_Iterator_Offset.html">Doctrine_Collection_Iterator_Offset</a>                    </div>                </li>                            <li data-name="class:Doctrine_Collection_Offset" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Collection_Offset.html">Doctrine_Collection_Offset</a>                    </div>                </li>                            <li data-name="class:Doctrine_Collection_OnDemand" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Collection_OnDemand.html">Doctrine_Collection_OnDemand</a>                    </div>                </li>                            <li data-name="class:Doctrine_Column" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Column.html">Doctrine_Column</a>                    </div>                </li>                            <li data-name="class:Doctrine_Compiler" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Compiler.html">Doctrine_Compiler</a>                    </div>                </li>                            <li data-name="class:Doctrine_Compiler_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Compiler_Exception.html">Doctrine_Compiler_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Configurable" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Configurable.html">Doctrine_Configurable</a>                    </div>                </li>                            <li data-name="class:Doctrine_Connection" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Connection.html">Doctrine_Connection</a>                    </div>                </li>                            <li data-name="class:Doctrine_Connection_Common" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Connection_Common.html">Doctrine_Connection_Common</a>                    </div>                </li>                            <li data-name="class:Doctrine_Connection_Db2" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Connection_Db2.html">Doctrine_Connection_Db2</a>                    </div>                </li>                            <li data-name="class:Doctrine_Connection_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Connection_Exception.html">Doctrine_Connection_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Connection_Mock" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Connection_Mock.html">Doctrine_Connection_Mock</a>                    </div>                </li>                            <li data-name="class:Doctrine_Connection_Module" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Connection_Module.html">Doctrine_Connection_Module</a>                    </div>                </li>                            <li data-name="class:Doctrine_Connection_Mssql" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Connection_Mssql.html">Doctrine_Connection_Mssql</a>                    </div>                </li>                            <li data-name="class:Doctrine_Connection_Mssql_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Connection_Mssql_Exception.html">Doctrine_Connection_Mssql_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Connection_Mysql" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Connection_Mysql.html">Doctrine_Connection_Mysql</a>                    </div>                </li>                            <li data-name="class:Doctrine_Connection_Mysql_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Connection_Mysql_Exception.html">Doctrine_Connection_Mysql_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Connection_Oracle" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Connection_Oracle.html">Doctrine_Connection_Oracle</a>                    </div>                </li>                            <li data-name="class:Doctrine_Connection_Oracle_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Connection_Oracle_Exception.html">Doctrine_Connection_Oracle_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Connection_Pgsql" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Connection_Pgsql.html">Doctrine_Connection_Pgsql</a>                    </div>                </li>                            <li data-name="class:Doctrine_Connection_Pgsql_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Connection_Pgsql_Exception.html">Doctrine_Connection_Pgsql_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Connection_Profiler" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Connection_Profiler.html">Doctrine_Connection_Profiler</a>                    </div>                </li>                            <li data-name="class:Doctrine_Connection_Profiler_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Connection_Profiler_Exception.html">Doctrine_Connection_Profiler_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Connection_Sqlite" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Connection_Sqlite.html">Doctrine_Connection_Sqlite</a>                    </div>                </li>                            <li data-name="class:Doctrine_Connection_Sqlite_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Connection_Sqlite_Exception.html">Doctrine_Connection_Sqlite_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Connection_Statement" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Connection_Statement.html">Doctrine_Connection_Statement</a>                    </div>                </li>                            <li data-name="class:Doctrine_Connection_UnitOfWork" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Connection_UnitOfWork.html">Doctrine_Connection_UnitOfWork</a>                    </div>                </li>                            <li data-name="class:Doctrine_Core" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Core.html">Doctrine_Core</a>                    </div>                </li>                            <li data-name="class:Doctrine_Data" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Data.html">Doctrine_Data</a>                    </div>                </li>                            <li data-name="class:Doctrine_DataDict" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_DataDict.html">Doctrine_DataDict</a>                    </div>                </li>                            <li data-name="class:Doctrine_DataDict_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_DataDict_Exception.html">Doctrine_DataDict_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_DataDict_Mssql" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_DataDict_Mssql.html">Doctrine_DataDict_Mssql</a>                    </div>                </li>                            <li data-name="class:Doctrine_DataDict_Mysql" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_DataDict_Mysql.html">Doctrine_DataDict_Mysql</a>                    </div>                </li>                            <li data-name="class:Doctrine_DataDict_Oracle" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_DataDict_Oracle.html">Doctrine_DataDict_Oracle</a>                    </div>                </li>                            <li data-name="class:Doctrine_DataDict_Pgsql" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_DataDict_Pgsql.html">Doctrine_DataDict_Pgsql</a>                    </div>                </li>                            <li data-name="class:Doctrine_DataDict_Sqlite" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_DataDict_Sqlite.html">Doctrine_DataDict_Sqlite</a>                    </div>                </li>                            <li data-name="class:Doctrine_Data_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Data_Exception.html">Doctrine_Data_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Data_Export" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Data_Export.html">Doctrine_Data_Export</a>                    </div>                </li>                            <li data-name="class:Doctrine_Data_Import" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Data_Import.html">Doctrine_Data_Import</a>                    </div>                </li>                            <li data-name="class:Doctrine_Event" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Event.html">Doctrine_Event</a>                    </div>                </li>                            <li data-name="class:Doctrine_EventListener" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_EventListener.html">Doctrine_EventListener</a>                    </div>                </li>                            <li data-name="class:Doctrine_EventListener_Chain" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_EventListener_Chain.html">Doctrine_EventListener_Chain</a>                    </div>                </li>                            <li data-name="class:Doctrine_EventListener_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_EventListener_Exception.html">Doctrine_EventListener_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_EventListener_Interface" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_EventListener_Interface.html">Doctrine_EventListener_Interface</a>                    </div>                </li>                            <li data-name="class:Doctrine_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Exception.html">Doctrine_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Export" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Export.html">Doctrine_Export</a>                    </div>                </li>                            <li data-name="class:Doctrine_Export_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Export_Exception.html">Doctrine_Export_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Export_Mssql" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Export_Mssql.html">Doctrine_Export_Mssql</a>                    </div>                </li>                            <li data-name="class:Doctrine_Export_Mysql" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Export_Mysql.html">Doctrine_Export_Mysql</a>                    </div>                </li>                            <li data-name="class:Doctrine_Export_Oracle" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Export_Oracle.html">Doctrine_Export_Oracle</a>                    </div>                </li>                            <li data-name="class:Doctrine_Export_Pgsql" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Export_Pgsql.html">Doctrine_Export_Pgsql</a>                    </div>                </li>                            <li data-name="class:Doctrine_Export_Reporter" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Export_Reporter.html">Doctrine_Export_Reporter</a>                    </div>                </li>                            <li data-name="class:Doctrine_Export_Schema" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Export_Schema.html">Doctrine_Export_Schema</a>                    </div>                </li>                            <li data-name="class:Doctrine_Export_Sqlite" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Export_Sqlite.html">Doctrine_Export_Sqlite</a>                    </div>                </li>                            <li data-name="class:Doctrine_Expression" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Expression.html">Doctrine_Expression</a>                    </div>                </li>                            <li data-name="class:Doctrine_Expression_Driver" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Expression_Driver.html">Doctrine_Expression_Driver</a>                    </div>                </li>                            <li data-name="class:Doctrine_Expression_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Expression_Exception.html">Doctrine_Expression_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Expression_Mock" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Expression_Mock.html">Doctrine_Expression_Mock</a>                    </div>                </li>                            <li data-name="class:Doctrine_Expression_Mssql" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Expression_Mssql.html">Doctrine_Expression_Mssql</a>                    </div>                </li>                            <li data-name="class:Doctrine_Expression_Mysql" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Expression_Mysql.html">Doctrine_Expression_Mysql</a>                    </div>                </li>                            <li data-name="class:Doctrine_Expression_Oracle" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Expression_Oracle.html">Doctrine_Expression_Oracle</a>                    </div>                </li>                            <li data-name="class:Doctrine_Expression_Pgsql" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Expression_Pgsql.html">Doctrine_Expression_Pgsql</a>                    </div>                </li>                            <li data-name="class:Doctrine_Expression_Sqlite" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Expression_Sqlite.html">Doctrine_Expression_Sqlite</a>                    </div>                </li>                            <li data-name="class:Doctrine_File" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_File.html">Doctrine_File</a>                    </div>                </li>                            <li data-name="class:Doctrine_File_Index" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_File_Index.html">Doctrine_File_Index</a>                    </div>                </li>                            <li data-name="class:Doctrine_Formatter" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Formatter.html">Doctrine_Formatter</a>                    </div>                </li>                            <li data-name="class:Doctrine_Hook" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Hook.html">Doctrine_Hook</a>                    </div>                </li>                            <li data-name="class:Doctrine_Hook_Equal" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Hook_Equal.html">Doctrine_Hook_Equal</a>                    </div>                </li>                            <li data-name="class:Doctrine_Hook_Integer" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Hook_Integer.html">Doctrine_Hook_Integer</a>                    </div>                </li>                            <li data-name="class:Doctrine_Hook_Parser" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Hook_Parser.html">Doctrine_Hook_Parser</a>                    </div>                </li>                            <li data-name="class:Doctrine_Hook_Parser_Complex" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Hook_Parser_Complex.html">Doctrine_Hook_Parser_Complex</a>                    </div>                </li>                            <li data-name="class:Doctrine_Hook_WordLike" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Hook_WordLike.html">Doctrine_Hook_WordLike</a>                    </div>                </li>                            <li data-name="class:Doctrine_Hydrator" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Hydrator.html">Doctrine_Hydrator</a>                    </div>                </li>                            <li data-name="class:Doctrine_Hydrator_Abstract" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Hydrator_Abstract.html">Doctrine_Hydrator_Abstract</a>                    </div>                </li>                            <li data-name="class:Doctrine_Hydrator_ArrayDriver" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Hydrator_ArrayDriver.html">Doctrine_Hydrator_ArrayDriver</a>                    </div>                </li>                            <li data-name="class:Doctrine_Hydrator_ArrayHierarchyDriver" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Hydrator_ArrayHierarchyDriver.html">Doctrine_Hydrator_ArrayHierarchyDriver</a>                    </div>                </li>                            <li data-name="class:Doctrine_Hydrator_ArrayShallowDriver" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Hydrator_ArrayShallowDriver.html">Doctrine_Hydrator_ArrayShallowDriver</a>                    </div>                </li>                            <li data-name="class:Doctrine_Hydrator_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Hydrator_Exception.html">Doctrine_Hydrator_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Hydrator_Graph" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Hydrator_Graph.html">Doctrine_Hydrator_Graph</a>                    </div>                </li>                            <li data-name="class:Doctrine_Hydrator_NoneDriver" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Hydrator_NoneDriver.html">Doctrine_Hydrator_NoneDriver</a>                    </div>                </li>                            <li data-name="class:Doctrine_Hydrator_RecordDriver" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Hydrator_RecordDriver.html">Doctrine_Hydrator_RecordDriver</a>                    </div>                </li>                            <li data-name="class:Doctrine_Hydrator_RecordHierarchyDriver" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Hydrator_RecordHierarchyDriver.html">Doctrine_Hydrator_RecordHierarchyDriver</a>                    </div>                </li>                            <li data-name="class:Doctrine_Hydrator_ScalarDriver" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Hydrator_ScalarDriver.html">Doctrine_Hydrator_ScalarDriver</a>                    </div>                </li>                            <li data-name="class:Doctrine_Hydrator_SingleScalarDriver" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Hydrator_SingleScalarDriver.html">Doctrine_Hydrator_SingleScalarDriver</a>                    </div>                </li>                            <li data-name="class:Doctrine_I18n" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_I18n.html">Doctrine_I18n</a>                    </div>                </li>                            <li data-name="class:Doctrine_I18n_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_I18n_Exception.html">Doctrine_I18n_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Import" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Import.html">Doctrine_Import</a>                    </div>                </li>                            <li data-name="class:Doctrine_Import_Builder" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Import_Builder.html">Doctrine_Import_Builder</a>                    </div>                </li>                            <li data-name="class:Doctrine_Import_Builder_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Import_Builder_Exception.html">Doctrine_Import_Builder_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Import_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Import_Exception.html">Doctrine_Import_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Import_Mssql" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Import_Mssql.html">Doctrine_Import_Mssql</a>                    </div>                </li>                            <li data-name="class:Doctrine_Import_Mysql" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Import_Mysql.html">Doctrine_Import_Mysql</a>                    </div>                </li>                            <li data-name="class:Doctrine_Import_Oracle" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Import_Oracle.html">Doctrine_Import_Oracle</a>                    </div>                </li>                            <li data-name="class:Doctrine_Import_Pgsql" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Import_Pgsql.html">Doctrine_Import_Pgsql</a>                    </div>                </li>                            <li data-name="class:Doctrine_Import_Schema" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Import_Schema.html">Doctrine_Import_Schema</a>                    </div>                </li>                            <li data-name="class:Doctrine_Import_Sqlite" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Import_Sqlite.html">Doctrine_Import_Sqlite</a>                    </div>                </li>                            <li data-name="class:Doctrine_Inflector" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Inflector.html">Doctrine_Inflector</a>                    </div>                </li>                            <li data-name="class:Doctrine_IntegrityMapper" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_IntegrityMapper.html">Doctrine_IntegrityMapper</a>                    </div>                </li>                            <li data-name="class:Doctrine_Lib" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Lib.html">Doctrine_Lib</a>                    </div>                </li>                            <li data-name="class:Doctrine_Locator" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Locator.html">Doctrine_Locator</a>                    </div>                </li>                            <li data-name="class:Doctrine_Locator_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Locator_Exception.html">Doctrine_Locator_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Locator_Injectable" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Locator_Injectable.html">Doctrine_Locator_Injectable</a>                    </div>                </li>                            <li data-name="class:Doctrine_Locking_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Locking_Exception.html">Doctrine_Locking_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Locking_Manager_Pessimistic" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Locking_Manager_Pessimistic.html">Doctrine_Locking_Manager_Pessimistic</a>                    </div>                </li>                            <li data-name="class:Doctrine_Manager" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Manager.html">Doctrine_Manager</a>                    </div>                </li>                            <li data-name="class:Doctrine_Manager_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Manager_Exception.html">Doctrine_Manager_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Migration" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Migration.html">Doctrine_Migration</a>                    </div>                </li>                            <li data-name="class:Doctrine_Migration_Base" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Migration_Base.html">Doctrine_Migration_Base</a>                    </div>                </li>                            <li data-name="class:Doctrine_Migration_Builder" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Migration_Builder.html">Doctrine_Migration_Builder</a>                    </div>                </li>                            <li data-name="class:Doctrine_Migration_Diff" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Migration_Diff.html">Doctrine_Migration_Diff</a>                    </div>                </li>                            <li data-name="class:Doctrine_Migration_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Migration_Exception.html">Doctrine_Migration_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Migration_IrreversibleMigrationException" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Migration_IrreversibleMigrationException.html">Doctrine_Migration_IrreversibleMigrationException</a>                    </div>                </li>                            <li data-name="class:Doctrine_Migration_Process" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Migration_Process.html">Doctrine_Migration_Process</a>                    </div>                </li>                            <li data-name="class:Doctrine_Node" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Node.html">Doctrine_Node</a>                    </div>                </li>                            <li data-name="class:Doctrine_Node_AdjacencyList" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Node_AdjacencyList.html">Doctrine_Node_AdjacencyList</a>                    </div>                </li>                            <li data-name="class:Doctrine_Node_AdjacencyList_LevelOrderIterator" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Node_AdjacencyList_LevelOrderIterator.html">Doctrine_Node_AdjacencyList_LevelOrderIterator</a>                    </div>                </li>                            <li data-name="class:Doctrine_Node_AdjacencyList_PostOrderIterator" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Node_AdjacencyList_PostOrderIterator.html">Doctrine_Node_AdjacencyList_PostOrderIterator</a>                    </div>                </li>                            <li data-name="class:Doctrine_Node_AdjacencyList_PreOrderIterator" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Node_AdjacencyList_PreOrderIterator.html">Doctrine_Node_AdjacencyList_PreOrderIterator</a>                    </div>                </li>                            <li data-name="class:Doctrine_Node_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Node_Exception.html">Doctrine_Node_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Node_Interface" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Node_Interface.html">Doctrine_Node_Interface</a>                    </div>                </li>                            <li data-name="class:Doctrine_Node_MaterializedPath" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Node_MaterializedPath.html">Doctrine_Node_MaterializedPath</a>                    </div>                </li>                            <li data-name="class:Doctrine_Node_MaterializedPath_LevelOrderIterator" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Node_MaterializedPath_LevelOrderIterator.html">Doctrine_Node_MaterializedPath_LevelOrderIterator</a>                    </div>                </li>                            <li data-name="class:Doctrine_Node_MaterializedPath_PostOrderIterator" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Node_MaterializedPath_PostOrderIterator.html">Doctrine_Node_MaterializedPath_PostOrderIterator</a>                    </div>                </li>                            <li data-name="class:Doctrine_Node_MaterializedPath_PreOrderIterator" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Node_MaterializedPath_PreOrderIterator.html">Doctrine_Node_MaterializedPath_PreOrderIterator</a>                    </div>                </li>                            <li data-name="class:Doctrine_Node_NestedSet" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Node_NestedSet.html">Doctrine_Node_NestedSet</a>                    </div>                </li>                            <li data-name="class:Doctrine_Node_NestedSet_LevelOrderIterator" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Node_NestedSet_LevelOrderIterator.html">Doctrine_Node_NestedSet_LevelOrderIterator</a>                    </div>                </li>                            <li data-name="class:Doctrine_Node_NestedSet_PostOrderIterator" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Node_NestedSet_PostOrderIterator.html">Doctrine_Node_NestedSet_PostOrderIterator</a>                    </div>                </li>                            <li data-name="class:Doctrine_Node_NestedSet_PreOrderIterator" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Node_NestedSet_PreOrderIterator.html">Doctrine_Node_NestedSet_PreOrderIterator</a>                    </div>                </li>                            <li data-name="class:Doctrine_Null" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Null.html">Doctrine_Null</a>                    </div>                </li>                            <li data-name="class:Doctrine_Overloadable" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Overloadable.html">Doctrine_Overloadable</a>                    </div>                </li>                            <li data-name="class:Doctrine_Pager" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Pager.html">Doctrine_Pager</a>                    </div>                </li>                            <li data-name="class:Doctrine_Pager_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Pager_Exception.html">Doctrine_Pager_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Pager_Layout" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Pager_Layout.html">Doctrine_Pager_Layout</a>                    </div>                </li>                            <li data-name="class:Doctrine_Pager_Range" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Pager_Range.html">Doctrine_Pager_Range</a>                    </div>                </li>                            <li data-name="class:Doctrine_Pager_Range_Jumping" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Pager_Range_Jumping.html">Doctrine_Pager_Range_Jumping</a>                    </div>                </li>                            <li data-name="class:Doctrine_Pager_Range_Sliding" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Pager_Range_Sliding.html">Doctrine_Pager_Range_Sliding</a>                    </div>                </li>                            <li data-name="class:Doctrine_Parser" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Parser.html">Doctrine_Parser</a>                    </div>                </li>                            <li data-name="class:Doctrine_Parser_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Parser_Exception.html">Doctrine_Parser_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Parser_Json" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Parser_Json.html">Doctrine_Parser_Json</a>                    </div>                </li>                            <li data-name="class:Doctrine_Parser_Serialize" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Parser_Serialize.html">Doctrine_Parser_Serialize</a>                    </div>                </li>                            <li data-name="class:Doctrine_Parser_Xml" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Parser_Xml.html">Doctrine_Parser_Xml</a>                    </div>                </li>                            <li data-name="class:Doctrine_Parser_Yml" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Parser_Yml.html">Doctrine_Parser_Yml</a>                    </div>                </li>                            <li data-name="class:Doctrine_Query" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Query.html">Doctrine_Query</a>                    </div>                </li>                            <li data-name="class:Doctrine_Query_Abstract" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Query_Abstract.html">Doctrine_Query_Abstract</a>                    </div>                </li>                            <li data-name="class:Doctrine_Query_Check" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Query_Check.html">Doctrine_Query_Check</a>                    </div>                </li>                            <li data-name="class:Doctrine_Query_Condition" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Query_Condition.html">Doctrine_Query_Condition</a>                    </div>                </li>                            <li data-name="class:Doctrine_Query_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Query_Exception.html">Doctrine_Query_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Query_Filter" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Query_Filter.html">Doctrine_Query_Filter</a>                    </div>                </li>                            <li data-name="class:Doctrine_Query_Filter_Chain" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Query_Filter_Chain.html">Doctrine_Query_Filter_Chain</a>                    </div>                </li>                            <li data-name="class:Doctrine_Query_Filter_Interface" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Query_Filter_Interface.html">Doctrine_Query_Filter_Interface</a>                    </div>                </li>                            <li data-name="class:Doctrine_Query_Forupdate" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Query_Forupdate.html">Doctrine_Query_Forupdate</a>                    </div>                </li>                            <li data-name="class:Doctrine_Query_From" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Query_From.html">Doctrine_Query_From</a>                    </div>                </li>                            <li data-name="class:Doctrine_Query_Groupby" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Query_Groupby.html">Doctrine_Query_Groupby</a>                    </div>                </li>                            <li data-name="class:Doctrine_Query_Having" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Query_Having.html">Doctrine_Query_Having</a>                    </div>                </li>                            <li data-name="class:Doctrine_Query_JoinCondition" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Query_JoinCondition.html">Doctrine_Query_JoinCondition</a>                    </div>                </li>                            <li data-name="class:Doctrine_Query_Limit" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Query_Limit.html">Doctrine_Query_Limit</a>                    </div>                </li>                            <li data-name="class:Doctrine_Query_Offset" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Query_Offset.html">Doctrine_Query_Offset</a>                    </div>                </li>                            <li data-name="class:Doctrine_Query_Orderby" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Query_Orderby.html">Doctrine_Query_Orderby</a>                    </div>                </li>                            <li data-name="class:Doctrine_Query_Parser" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Query_Parser.html">Doctrine_Query_Parser</a>                    </div>                </li>                            <li data-name="class:Doctrine_Query_Part" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Query_Part.html">Doctrine_Query_Part</a>                    </div>                </li>                            <li data-name="class:Doctrine_Query_Registry" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Query_Registry.html">Doctrine_Query_Registry</a>                    </div>                </li>                            <li data-name="class:Doctrine_Query_Registry_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Query_Registry_Exception.html">Doctrine_Query_Registry_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Query_Select" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Query_Select.html">Doctrine_Query_Select</a>                    </div>                </li>                            <li data-name="class:Doctrine_Query_Set" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Query_Set.html">Doctrine_Query_Set</a>                    </div>                </li>                            <li data-name="class:Doctrine_Query_Tokenizer" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Query_Tokenizer.html">Doctrine_Query_Tokenizer</a>                    </div>                </li>                            <li data-name="class:Doctrine_Query_Tokenizer_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Query_Tokenizer_Exception.html">Doctrine_Query_Tokenizer_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Query_Where" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Query_Where.html">Doctrine_Query_Where</a>                    </div>                </li>                            <li data-name="class:Doctrine_RawSql" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_RawSql.html">Doctrine_RawSql</a>                    </div>                </li>                            <li data-name="class:Doctrine_RawSql_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_RawSql_Exception.html">Doctrine_RawSql_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Record" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Record.html">Doctrine_Record</a>                    </div>                </li>                            <li data-name="class:Doctrine_Record_Abstract" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Record_Abstract.html">Doctrine_Record_Abstract</a>                    </div>                </li>                            <li data-name="class:Doctrine_Record_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Record_Exception.html">Doctrine_Record_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Record_Filter" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Record_Filter.html">Doctrine_Record_Filter</a>                    </div>                </li>                            <li data-name="class:Doctrine_Record_Filter_Compound" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Record_Filter_Compound.html">Doctrine_Record_Filter_Compound</a>                    </div>                </li>                            <li data-name="class:Doctrine_Record_Filter_Standard" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Record_Filter_Standard.html">Doctrine_Record_Filter_Standard</a>                    </div>                </li>                            <li data-name="class:Doctrine_Record_Generator" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Record_Generator.html">Doctrine_Record_Generator</a>                    </div>                </li>                            <li data-name="class:Doctrine_Record_Iterator" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Record_Iterator.html">Doctrine_Record_Iterator</a>                    </div>                </li>                            <li data-name="class:Doctrine_Record_Listener" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Record_Listener.html">Doctrine_Record_Listener</a>                    </div>                </li>                            <li data-name="class:Doctrine_Record_Listener_Chain" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Record_Listener_Chain.html">Doctrine_Record_Listener_Chain</a>                    </div>                </li>                            <li data-name="class:Doctrine_Record_Listener_Interface" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Record_Listener_Interface.html">Doctrine_Record_Listener_Interface</a>                    </div>                </li>                            <li data-name="class:Doctrine_Record_State_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Record_State_Exception.html">Doctrine_Record_State_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Record_UnknownPropertyException" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Record_UnknownPropertyException.html">Doctrine_Record_UnknownPropertyException</a>                    </div>                </li>                            <li data-name="class:Doctrine_Relation" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Relation.html">Doctrine_Relation</a>                    </div>                </li>                            <li data-name="class:Doctrine_Relation_Association" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Relation_Association.html">Doctrine_Relation_Association</a>                    </div>                </li>                            <li data-name="class:Doctrine_Relation_Association_Self" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Relation_Association_Self.html">Doctrine_Relation_Association_Self</a>                    </div>                </li>                            <li data-name="class:Doctrine_Relation_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Relation_Exception.html">Doctrine_Relation_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Relation_ForeignKey" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Relation_ForeignKey.html">Doctrine_Relation_ForeignKey</a>                    </div>                </li>                            <li data-name="class:Doctrine_Relation_LocalKey" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Relation_LocalKey.html">Doctrine_Relation_LocalKey</a>                    </div>                </li>                            <li data-name="class:Doctrine_Relation_Nest" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Relation_Nest.html">Doctrine_Relation_Nest</a>                    </div>                </li>                            <li data-name="class:Doctrine_Relation_Parser" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Relation_Parser.html">Doctrine_Relation_Parser</a>                    </div>                </li>                            <li data-name="class:Doctrine_Relation_Parser_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Relation_Parser_Exception.html">Doctrine_Relation_Parser_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Search" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Search.html">Doctrine_Search</a>                    </div>                </li>                            <li data-name="class:Doctrine_Search_Analyzer" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Search_Analyzer.html">Doctrine_Search_Analyzer</a>                    </div>                </li>                            <li data-name="class:Doctrine_Search_Analyzer_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Search_Analyzer_Exception.html">Doctrine_Search_Analyzer_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Search_Analyzer_Interface" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Search_Analyzer_Interface.html">Doctrine_Search_Analyzer_Interface</a>                    </div>                </li>                            <li data-name="class:Doctrine_Search_Analyzer_Standard" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Search_Analyzer_Standard.html">Doctrine_Search_Analyzer_Standard</a>                    </div>                </li>                            <li data-name="class:Doctrine_Search_Analyzer_Utf8" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Search_Analyzer_Utf8.html">Doctrine_Search_Analyzer_Utf8</a>                    </div>                </li>                            <li data-name="class:Doctrine_Search_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Search_Exception.html">Doctrine_Search_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Search_File" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Search_File.html">Doctrine_Search_File</a>                    </div>                </li>                            <li data-name="class:Doctrine_Search_Indexer" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Search_Indexer.html">Doctrine_Search_Indexer</a>                    </div>                </li>                            <li data-name="class:Doctrine_Search_Indexer_Dir" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Search_Indexer_Dir.html">Doctrine_Search_Indexer_Dir</a>                    </div>                </li>                            <li data-name="class:Doctrine_Search_Indexer_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Search_Indexer_Exception.html">Doctrine_Search_Indexer_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Search_Listener" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Search_Listener.html">Doctrine_Search_Listener</a>                    </div>                </li>                            <li data-name="class:Doctrine_Search_Parser" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Search_Parser.html">Doctrine_Search_Parser</a>                    </div>                </li>                            <li data-name="class:Doctrine_Search_Query" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Search_Query.html">Doctrine_Search_Query</a>                    </div>                </li>                            <li data-name="class:Doctrine_Search_Record" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Search_Record.html">Doctrine_Search_Record</a>                    </div>                </li>                            <li data-name="class:Doctrine_Sequence" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Sequence.html">Doctrine_Sequence</a>                    </div>                </li>                            <li data-name="class:Doctrine_Sequence_Db2" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Sequence_Db2.html">Doctrine_Sequence_Db2</a>                    </div>                </li>                            <li data-name="class:Doctrine_Sequence_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Sequence_Exception.html">Doctrine_Sequence_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Sequence_Mssql" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Sequence_Mssql.html">Doctrine_Sequence_Mssql</a>                    </div>                </li>                            <li data-name="class:Doctrine_Sequence_Mysql" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Sequence_Mysql.html">Doctrine_Sequence_Mysql</a>                    </div>                </li>                            <li data-name="class:Doctrine_Sequence_Oracle" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Sequence_Oracle.html">Doctrine_Sequence_Oracle</a>                    </div>                </li>                            <li data-name="class:Doctrine_Sequence_Pgsql" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Sequence_Pgsql.html">Doctrine_Sequence_Pgsql</a>                    </div>                </li>                            <li data-name="class:Doctrine_Sequence_Sqlite" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Sequence_Sqlite.html">Doctrine_Sequence_Sqlite</a>                    </div>                </li>                            <li data-name="class:Doctrine_Table" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Table.html">Doctrine_Table</a>                    </div>                </li>                            <li data-name="class:Doctrine_Table_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Table_Exception.html">Doctrine_Table_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Table_Repository" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Table_Repository.html">Doctrine_Table_Repository</a>                    </div>                </li>                            <li data-name="class:Doctrine_Table_Repository_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Table_Repository_Exception.html">Doctrine_Table_Repository_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Task" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Task.html">Doctrine_Task</a>                    </div>                </li>                            <li data-name="class:Doctrine_Task_BuildAll" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Task_BuildAll.html">Doctrine_Task_BuildAll</a>                    </div>                </li>                            <li data-name="class:Doctrine_Task_BuildAllLoad" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Task_BuildAllLoad.html">Doctrine_Task_BuildAllLoad</a>                    </div>                </li>                            <li data-name="class:Doctrine_Task_BuildAllReload" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Task_BuildAllReload.html">Doctrine_Task_BuildAllReload</a>                    </div>                </li>                            <li data-name="class:Doctrine_Task_Compile" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Task_Compile.html">Doctrine_Task_Compile</a>                    </div>                </li>                            <li data-name="class:Doctrine_Task_CreateDb" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Task_CreateDb.html">Doctrine_Task_CreateDb</a>                    </div>                </li>                            <li data-name="class:Doctrine_Task_CreateTables" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Task_CreateTables.html">Doctrine_Task_CreateTables</a>                    </div>                </li>                            <li data-name="class:Doctrine_Task_Dql" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Task_Dql.html">Doctrine_Task_Dql</a>                    </div>                </li>                            <li data-name="class:Doctrine_Task_DropDb" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Task_DropDb.html">Doctrine_Task_DropDb</a>                    </div>                </li>                            <li data-name="class:Doctrine_Task_DumpData" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Task_DumpData.html">Doctrine_Task_DumpData</a>                    </div>                </li>                            <li data-name="class:Doctrine_Task_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Task_Exception.html">Doctrine_Task_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Task_GenerateMigration" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Task_GenerateMigration.html">Doctrine_Task_GenerateMigration</a>                    </div>                </li>                            <li data-name="class:Doctrine_Task_GenerateMigrationsDb" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Task_GenerateMigrationsDb.html">Doctrine_Task_GenerateMigrationsDb</a>                    </div>                </li>                            <li data-name="class:Doctrine_Task_GenerateMigrationsDiff" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Task_GenerateMigrationsDiff.html">Doctrine_Task_GenerateMigrationsDiff</a>                    </div>                </li>                            <li data-name="class:Doctrine_Task_GenerateMigrationsModels" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Task_GenerateMigrationsModels.html">Doctrine_Task_GenerateMigrationsModels</a>                    </div>                </li>                            <li data-name="class:Doctrine_Task_GenerateModelsDb" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Task_GenerateModelsDb.html">Doctrine_Task_GenerateModelsDb</a>                    </div>                </li>                            <li data-name="class:Doctrine_Task_GenerateModelsYaml" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Task_GenerateModelsYaml.html">Doctrine_Task_GenerateModelsYaml</a>                    </div>                </li>                            <li data-name="class:Doctrine_Task_GenerateSql" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Task_GenerateSql.html">Doctrine_Task_GenerateSql</a>                    </div>                </li>                            <li data-name="class:Doctrine_Task_GenerateYamlDb" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Task_GenerateYamlDb.html">Doctrine_Task_GenerateYamlDb</a>                    </div>                </li>                            <li data-name="class:Doctrine_Task_GenerateYamlModels" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Task_GenerateYamlModels.html">Doctrine_Task_GenerateYamlModels</a>                    </div>                </li>                            <li data-name="class:Doctrine_Task_LoadData" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Task_LoadData.html">Doctrine_Task_LoadData</a>                    </div>                </li>                            <li data-name="class:Doctrine_Task_Migrate" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Task_Migrate.html">Doctrine_Task_Migrate</a>                    </div>                </li>                            <li data-name="class:Doctrine_Task_RebuildDb" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Task_RebuildDb.html">Doctrine_Task_RebuildDb</a>                    </div>                </li>                            <li data-name="class:Doctrine_Template" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Template.html">Doctrine_Template</a>                    </div>                </li>                            <li data-name="class:Doctrine_Template_Geographical" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Template_Geographical.html">Doctrine_Template_Geographical</a>                    </div>                </li>                            <li data-name="class:Doctrine_Template_I18n" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Template_I18n.html">Doctrine_Template_I18n</a>                    </div>                </li>                            <li data-name="class:Doctrine_Template_Listener_Sluggable" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Template_Listener_Sluggable.html">Doctrine_Template_Listener_Sluggable</a>                    </div>                </li>                            <li data-name="class:Doctrine_Template_Listener_SoftDelete" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Template_Listener_SoftDelete.html">Doctrine_Template_Listener_SoftDelete</a>                    </div>                </li>                            <li data-name="class:Doctrine_Template_Listener_Timestampable" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Template_Listener_Timestampable.html">Doctrine_Template_Listener_Timestampable</a>                    </div>                </li>                            <li data-name="class:Doctrine_Template_NestedSet" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Template_NestedSet.html">Doctrine_Template_NestedSet</a>                    </div>                </li>                            <li data-name="class:Doctrine_Template_Searchable" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Template_Searchable.html">Doctrine_Template_Searchable</a>                    </div>                </li>                            <li data-name="class:Doctrine_Template_Sluggable" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Template_Sluggable.html">Doctrine_Template_Sluggable</a>                    </div>                </li>                            <li data-name="class:Doctrine_Template_SoftDelete" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Template_SoftDelete.html">Doctrine_Template_SoftDelete</a>                    </div>                </li>                            <li data-name="class:Doctrine_Template_Timestampable" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Template_Timestampable.html">Doctrine_Template_Timestampable</a>                    </div>                </li>                            <li data-name="class:Doctrine_Template_Versionable" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Template_Versionable.html">Doctrine_Template_Versionable</a>                    </div>                </li>                            <li data-name="class:Doctrine_Transaction" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Transaction.html">Doctrine_Transaction</a>                    </div>                </li>                            <li data-name="class:Doctrine_Transaction_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Transaction_Exception.html">Doctrine_Transaction_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Transaction_Mock" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Transaction_Mock.html">Doctrine_Transaction_Mock</a>                    </div>                </li>                            <li data-name="class:Doctrine_Transaction_Mssql" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Transaction_Mssql.html">Doctrine_Transaction_Mssql</a>                    </div>                </li>                            <li data-name="class:Doctrine_Transaction_Mysql" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Transaction_Mysql.html">Doctrine_Transaction_Mysql</a>                    </div>                </li>                            <li data-name="class:Doctrine_Transaction_Oracle" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Transaction_Oracle.html">Doctrine_Transaction_Oracle</a>                    </div>                </li>                            <li data-name="class:Doctrine_Transaction_Pgsql" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Transaction_Pgsql.html">Doctrine_Transaction_Pgsql</a>                    </div>                </li>                            <li data-name="class:Doctrine_Transaction_Sqlite" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Transaction_Sqlite.html">Doctrine_Transaction_Sqlite</a>                    </div>                </li>                            <li data-name="class:Doctrine_Tree" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Tree.html">Doctrine_Tree</a>                    </div>                </li>                            <li data-name="class:Doctrine_Tree_AdjacencyList" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Tree_AdjacencyList.html">Doctrine_Tree_AdjacencyList</a>                    </div>                </li>                            <li data-name="class:Doctrine_Tree_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Tree_Exception.html">Doctrine_Tree_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Tree_Interface" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Tree_Interface.html">Doctrine_Tree_Interface</a>                    </div>                </li>                            <li data-name="class:Doctrine_Tree_MaterializedPath" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Tree_MaterializedPath.html">Doctrine_Tree_MaterializedPath</a>                    </div>                </li>                            <li data-name="class:Doctrine_Tree_NestedSet" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Tree_NestedSet.html">Doctrine_Tree_NestedSet</a>                    </div>                </li>                            <li data-name="class:Doctrine_Util" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Util.html">Doctrine_Util</a>                    </div>                </li>                            <li data-name="class:Doctrine_Validator" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Validator.html">Doctrine_Validator</a>                    </div>                </li>                            <li data-name="class:Doctrine_Validator_Country" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Validator_Country.html">Doctrine_Validator_Country</a>                    </div>                </li>                            <li data-name="class:Doctrine_Validator_Creditcard" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Validator_Creditcard.html">Doctrine_Validator_Creditcard</a>                    </div>                </li>                            <li data-name="class:Doctrine_Validator_Date" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Validator_Date.html">Doctrine_Validator_Date</a>                    </div>                </li>                            <li data-name="class:Doctrine_Validator_Driver" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Validator_Driver.html">Doctrine_Validator_Driver</a>                    </div>                </li>                            <li data-name="class:Doctrine_Validator_Email" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Validator_Email.html">Doctrine_Validator_Email</a>                    </div>                </li>                            <li data-name="class:Doctrine_Validator_ErrorStack" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Validator_ErrorStack.html">Doctrine_Validator_ErrorStack</a>                    </div>                </li>                            <li data-name="class:Doctrine_Validator_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Validator_Exception.html">Doctrine_Validator_Exception</a>                    </div>                </li>                            <li data-name="class:Doctrine_Validator_Future" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Validator_Future.html">Doctrine_Validator_Future</a>                    </div>                </li>                            <li data-name="class:Doctrine_Validator_HtmlColor" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Validator_HtmlColor.html">Doctrine_Validator_HtmlColor</a>                    </div>                </li>                            <li data-name="class:Doctrine_Validator_Ip" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Validator_Ip.html">Doctrine_Validator_Ip</a>                    </div>                </li>                            <li data-name="class:Doctrine_Validator_Minlength" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Validator_Minlength.html">Doctrine_Validator_Minlength</a>                    </div>                </li>                            <li data-name="class:Doctrine_Validator_Nospace" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Validator_Nospace.html">Doctrine_Validator_Nospace</a>                    </div>                </li>                            <li data-name="class:Doctrine_Validator_Notblank" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Validator_Notblank.html">Doctrine_Validator_Notblank</a>                    </div>                </li>                            <li data-name="class:Doctrine_Validator_Notnull" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Validator_Notnull.html">Doctrine_Validator_Notnull</a>                    </div>                </li>                            <li data-name="class:Doctrine_Validator_Past" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Validator_Past.html">Doctrine_Validator_Past</a>                    </div>                </li>                            <li data-name="class:Doctrine_Validator_Range" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Validator_Range.html">Doctrine_Validator_Range</a>                    </div>                </li>                            <li data-name="class:Doctrine_Validator_Readonly" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Validator_Readonly.html">Doctrine_Validator_Readonly</a>                    </div>                </li>                            <li data-name="class:Doctrine_Validator_Regexp" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Validator_Regexp.html">Doctrine_Validator_Regexp</a>                    </div>                </li>                            <li data-name="class:Doctrine_Validator_Time" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Validator_Time.html">Doctrine_Validator_Time</a>                    </div>                </li>                            <li data-name="class:Doctrine_Validator_Timestamp" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Validator_Timestamp.html">Doctrine_Validator_Timestamp</a>                    </div>                </li>                            <li data-name="class:Doctrine_Validator_Unique" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Validator_Unique.html">Doctrine_Validator_Unique</a>                    </div>                </li>                            <li data-name="class:Doctrine_Validator_Unsigned" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Validator_Unsigned.html">Doctrine_Validator_Unsigned</a>                    </div>                </li>                            <li data-name="class:Doctrine_Validator_Usstate" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_Validator_Usstate.html">Doctrine_Validator_Usstate</a>                    </div>                </li>                            <li data-name="class:Doctrine_View" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_View.html">Doctrine_View</a>                    </div>                </li>                            <li data-name="class:Doctrine_View_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="Doctrine_View_Exception.html">Doctrine_View_Exception</a>                    </div>                </li>                            <li data-name="class:sfYaml" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="sfYaml.html">sfYaml</a>                    </div>                </li>                            <li data-name="class:sfYamlDumper" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="sfYamlDumper.html">sfYamlDumper</a>                    </div>                </li>                            <li data-name="class:sfYamlInline" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="sfYamlInline.html">sfYamlInline</a>                    </div>                </li>                            <li data-name="class:sfYamlParser" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="sfYamlParser.html">sfYamlParser</a>                    </div>                </li>                </ul></div>                </li>                </ul>';

    var searchTypeClasses = {
        'Namespace': 'label-default',
        'Class': 'label-info',
        'Interface': 'label-primary',
        'Trait': 'label-success',
        'Method': 'label-danger',
        '_': 'label-warning'
    };

    var searchIndex = [
                    
            {"type": "Namespace", "link": ".html", "name": "", "doc": "Namespace "},
            {"type": "Interface",  "link": "Doctrine_Adapter_Interface.html", "name": "Doctrine_Adapter_Interface", "doc": "&quot;This adapter interface should be implemented by all custom adapters&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Adapter_Interface", "fromLink": "Doctrine_Adapter_Interface.html", "link": "Doctrine_Adapter_Interface.html#method_prepare", "name": "Doctrine_Adapter_Interface::prepare", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Interface", "fromLink": "Doctrine_Adapter_Interface.html", "link": "Doctrine_Adapter_Interface.html#method_query", "name": "Doctrine_Adapter_Interface::query", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Interface", "fromLink": "Doctrine_Adapter_Interface.html", "link": "Doctrine_Adapter_Interface.html#method_quote", "name": "Doctrine_Adapter_Interface::quote", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Interface", "fromLink": "Doctrine_Adapter_Interface.html", "link": "Doctrine_Adapter_Interface.html#method_exec", "name": "Doctrine_Adapter_Interface::exec", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Interface", "fromLink": "Doctrine_Adapter_Interface.html", "link": "Doctrine_Adapter_Interface.html#method_lastInsertId", "name": "Doctrine_Adapter_Interface::lastInsertId", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Interface", "fromLink": "Doctrine_Adapter_Interface.html", "link": "Doctrine_Adapter_Interface.html#method_beginTransaction", "name": "Doctrine_Adapter_Interface::beginTransaction", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Interface", "fromLink": "Doctrine_Adapter_Interface.html", "link": "Doctrine_Adapter_Interface.html#method_commit", "name": "Doctrine_Adapter_Interface::commit", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Interface", "fromLink": "Doctrine_Adapter_Interface.html", "link": "Doctrine_Adapter_Interface.html#method_rollBack", "name": "Doctrine_Adapter_Interface::rollBack", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Interface", "fromLink": "Doctrine_Adapter_Interface.html", "link": "Doctrine_Adapter_Interface.html#method_errorCode", "name": "Doctrine_Adapter_Interface::errorCode", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Interface", "fromLink": "Doctrine_Adapter_Interface.html", "link": "Doctrine_Adapter_Interface.html#method_errorInfo", "name": "Doctrine_Adapter_Interface::errorInfo", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Interface", "fromLink": "Doctrine_Adapter_Interface.html", "link": "Doctrine_Adapter_Interface.html#method_setAttribute", "name": "Doctrine_Adapter_Interface::setAttribute", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Interface", "fromLink": "Doctrine_Adapter_Interface.html", "link": "Doctrine_Adapter_Interface.html#method_getAttribute", "name": "Doctrine_Adapter_Interface::getAttribute", "doc": "&quot;&quot;"},
            
            {"type": "Interface",  "link": "Doctrine_Adapter_Statement_Interface.html", "name": "Doctrine_Adapter_Statement_Interface", "doc": "&quot;Interface for Doctrine adapter statements&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_bindColumn", "name": "Doctrine_Adapter_Statement_Interface::bindColumn", "doc": "&quot;Bind a column to a PHP variable&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_bindValue", "name": "Doctrine_Adapter_Statement_Interface::bindValue", "doc": "&quot;Binds a value to a corresponding named or question mark\nplaceholder in the SQL statement that was use to prepare the statement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_bindParam", "name": "Doctrine_Adapter_Statement_Interface::bindParam", "doc": "&quot;Binds a PHP variable to a corresponding named or question mark placeholder in the\nSQL statement that was use to prepare the statement. Unlike Doctrine_Adapter_Statement_Interface-&gt;bindValue(),\nthe variable is bound as a reference and will only be evaluated at the time\nthat Doctrine_Adapter_Statement_Interface-&gt;execute() is called.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_closeCursor", "name": "Doctrine_Adapter_Statement_Interface::closeCursor", "doc": "&quot;Closes the cursor, enabling the statement to be executed again.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_columnCount", "name": "Doctrine_Adapter_Statement_Interface::columnCount", "doc": "&quot;Returns the number of columns in the result set&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_errorCode", "name": "Doctrine_Adapter_Statement_Interface::errorCode", "doc": "&quot;Fetch the SQLSTATE associated with the last operation on the statement handle&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_errorInfo", "name": "Doctrine_Adapter_Statement_Interface::errorInfo", "doc": "&quot;Fetch extended error information associated with the last operation on the statement handle&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_execute", "name": "Doctrine_Adapter_Statement_Interface::execute", "doc": "&quot;Executes a prepared statement&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_fetch", "name": "Doctrine_Adapter_Statement_Interface::fetch", "doc": "&quot;fetch&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_fetchAll", "name": "Doctrine_Adapter_Statement_Interface::fetchAll", "doc": "&quot;Returns an array containing all of the result set rows&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_fetchColumn", "name": "Doctrine_Adapter_Statement_Interface::fetchColumn", "doc": "&quot;Returns a single column from the next row of a\nresult set or FALSE if there are no more rows.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_fetchObject", "name": "Doctrine_Adapter_Statement_Interface::fetchObject", "doc": "&quot;Fetches the next row and returns it as an object.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_getAttribute", "name": "Doctrine_Adapter_Statement_Interface::getAttribute", "doc": "&quot;Retrieve a statement attribute&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_getColumnMeta", "name": "Doctrine_Adapter_Statement_Interface::getColumnMeta", "doc": "&quot;Returns metadata for a column in a result set&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_nextRowset", "name": "Doctrine_Adapter_Statement_Interface::nextRowset", "doc": "&quot;Advances to the next rowset in a multi-rowset statement handle&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_rowCount", "name": "Doctrine_Adapter_Statement_Interface::rowCount", "doc": "&quot;rowCount() returns the number of rows affected by the last DELETE, INSERT, or UPDATE statement\nexecuted by the corresponding object.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_setAttribute", "name": "Doctrine_Adapter_Statement_Interface::setAttribute", "doc": "&quot;Set a statement attribute&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_setFetchMode", "name": "Doctrine_Adapter_Statement_Interface::setFetchMode", "doc": "&quot;Set the default fetch mode for this statement&quot;"},
            
            {"type": "Interface",  "link": "Doctrine_Cache_Interface.html", "name": "Doctrine_Cache_Interface", "doc": "&quot;Doctrine cache driver interface&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Cache_Interface", "fromLink": "Doctrine_Cache_Interface.html", "link": "Doctrine_Cache_Interface.html#method_fetch", "name": "Doctrine_Cache_Interface::fetch", "doc": "&quot;Fetch a cache record from this cache driver instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Interface", "fromLink": "Doctrine_Cache_Interface.html", "link": "Doctrine_Cache_Interface.html#method_contains", "name": "Doctrine_Cache_Interface::contains", "doc": "&quot;Test if a cache record exists for the passed id&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Interface", "fromLink": "Doctrine_Cache_Interface.html", "link": "Doctrine_Cache_Interface.html#method_save", "name": "Doctrine_Cache_Interface::save", "doc": "&quot;Save a cache record and add the key to the index of cached keys&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Interface", "fromLink": "Doctrine_Cache_Interface.html", "link": "Doctrine_Cache_Interface.html#method_delete", "name": "Doctrine_Cache_Interface::delete", "doc": "&quot;Remove a cache record&quot;"},
            
            {"type": "Interface",  "link": "Doctrine_EventListener_Interface.html", "name": "Doctrine_EventListener_Interface", "doc": "&quot;Doctrine_EventListener     all event listeners extend this base class\n                           the empty methods allow child classes to only implement the methods they need to implement&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_preTransactionCommit", "name": "Doctrine_EventListener_Interface::preTransactionCommit", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_postTransactionCommit", "name": "Doctrine_EventListener_Interface::postTransactionCommit", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_preTransactionRollback", "name": "Doctrine_EventListener_Interface::preTransactionRollback", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_postTransactionRollback", "name": "Doctrine_EventListener_Interface::postTransactionRollback", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_preTransactionBegin", "name": "Doctrine_EventListener_Interface::preTransactionBegin", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_postTransactionBegin", "name": "Doctrine_EventListener_Interface::postTransactionBegin", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_postConnect", "name": "Doctrine_EventListener_Interface::postConnect", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_preConnect", "name": "Doctrine_EventListener_Interface::preConnect", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_preQuery", "name": "Doctrine_EventListener_Interface::preQuery", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_postQuery", "name": "Doctrine_EventListener_Interface::postQuery", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_prePrepare", "name": "Doctrine_EventListener_Interface::prePrepare", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_postPrepare", "name": "Doctrine_EventListener_Interface::postPrepare", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_preExec", "name": "Doctrine_EventListener_Interface::preExec", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_postExec", "name": "Doctrine_EventListener_Interface::postExec", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_preError", "name": "Doctrine_EventListener_Interface::preError", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_postError", "name": "Doctrine_EventListener_Interface::postError", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_preFetch", "name": "Doctrine_EventListener_Interface::preFetch", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_postFetch", "name": "Doctrine_EventListener_Interface::postFetch", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_preFetchAll", "name": "Doctrine_EventListener_Interface::preFetchAll", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_postFetchAll", "name": "Doctrine_EventListener_Interface::postFetchAll", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_preStmtExecute", "name": "Doctrine_EventListener_Interface::preStmtExecute", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_postStmtExecute", "name": "Doctrine_EventListener_Interface::postStmtExecute", "doc": "&quot;&quot;"},
            
            {"type": "Interface",  "link": "Doctrine_Node_Interface.html", "name": "Doctrine_Node_Interface", "doc": "&quot;Doctrine_Node_Interface&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_hasPrevSibling", "name": "Doctrine_Node_Interface::hasPrevSibling", "doc": "&quot;test if node has previous sibling&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_hasNextSibling", "name": "Doctrine_Node_Interface::hasNextSibling", "doc": "&quot;test if node has next sibling&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_hasChildren", "name": "Doctrine_Node_Interface::hasChildren", "doc": "&quot;test if node has children&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_hasParent", "name": "Doctrine_Node_Interface::hasParent", "doc": "&quot;test if node has parent&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_getPrevSibling", "name": "Doctrine_Node_Interface::getPrevSibling", "doc": "&quot;gets record of prev sibling or empty record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_getNextSibling", "name": "Doctrine_Node_Interface::getNextSibling", "doc": "&quot;gets record of next sibling or empty record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_getSiblings", "name": "Doctrine_Node_Interface::getSiblings", "doc": "&quot;gets siblings for node&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_getFirstChild", "name": "Doctrine_Node_Interface::getFirstChild", "doc": "&quot;gets record of first child or empty record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_getLastChild", "name": "Doctrine_Node_Interface::getLastChild", "doc": "&quot;gets record of last child or empty record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_getChildren", "name": "Doctrine_Node_Interface::getChildren", "doc": "&quot;gets children for node (direct descendants only)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_getDescendants", "name": "Doctrine_Node_Interface::getDescendants", "doc": "&quot;gets descendants for node (direct descendants only)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_getParent", "name": "Doctrine_Node_Interface::getParent", "doc": "&quot;gets record of parent or empty record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_getAncestors", "name": "Doctrine_Node_Interface::getAncestors", "doc": "&quot;gets ancestors for node&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_getPath", "name": "Doctrine_Node_Interface::getPath", "doc": "&quot;gets path to node from root, uses record::toString() method to get node names&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_getLevel", "name": "Doctrine_Node_Interface::getLevel", "doc": "&quot;gets level (depth) of node in the tree&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_getNumberChildren", "name": "Doctrine_Node_Interface::getNumberChildren", "doc": "&quot;gets number of children (direct descendants)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_getNumberDescendants", "name": "Doctrine_Node_Interface::getNumberDescendants", "doc": "&quot;gets number of descendants (children and their children)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_insertAsParentOf", "name": "Doctrine_Node_Interface::insertAsParentOf", "doc": "&quot;inserts node as parent of dest record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_insertAsPrevSiblingOf", "name": "Doctrine_Node_Interface::insertAsPrevSiblingOf", "doc": "&quot;inserts node as previous sibling of dest record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_insertAsNextSiblingOf", "name": "Doctrine_Node_Interface::insertAsNextSiblingOf", "doc": "&quot;inserts node as next sibling of dest record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_insertAsFirstChildOf", "name": "Doctrine_Node_Interface::insertAsFirstChildOf", "doc": "&quot;inserts node as first child of dest record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_insertAsLastChildOf", "name": "Doctrine_Node_Interface::insertAsLastChildOf", "doc": "&quot;inserts node as first child of dest record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_moveAsPrevSiblingOf", "name": "Doctrine_Node_Interface::moveAsPrevSiblingOf", "doc": "&quot;moves node as prev sibling of dest record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_moveAsNextSiblingOf", "name": "Doctrine_Node_Interface::moveAsNextSiblingOf", "doc": "&quot;moves node as next sibling of dest record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_moveAsFirstChildOf", "name": "Doctrine_Node_Interface::moveAsFirstChildOf", "doc": "&quot;moves node as first child of dest record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_moveAsLastChildOf", "name": "Doctrine_Node_Interface::moveAsLastChildOf", "doc": "&quot;moves node as last child of dest record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_addChild", "name": "Doctrine_Node_Interface::addChild", "doc": "&quot;adds node as last child of record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_isLeaf", "name": "Doctrine_Node_Interface::isLeaf", "doc": "&quot;determines if node is leaf&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_isRoot", "name": "Doctrine_Node_Interface::isRoot", "doc": "&quot;determines if node is root&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_isEqualTo", "name": "Doctrine_Node_Interface::isEqualTo", "doc": "&quot;determines if node is equal to subject node&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_isDescendantOf", "name": "Doctrine_Node_Interface::isDescendantOf", "doc": "&quot;determines if node is child of subject node&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_isDescendantOfOrEqualTo", "name": "Doctrine_Node_Interface::isDescendantOfOrEqualTo", "doc": "&quot;determines if node is child of or sibling to subject node&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_isValidNode", "name": "Doctrine_Node_Interface::isValidNode", "doc": "&quot;determines if node is valid&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_delete", "name": "Doctrine_Node_Interface::delete", "doc": "&quot;deletes node and it&#039;s descendants&quot;"},
            
            {"type": "Interface",  "link": "Doctrine_Overloadable.html", "name": "Doctrine_Overloadable", "doc": "&quot;Doctrine_Overloadable\na very generic overloading interface&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Overloadable", "fromLink": "Doctrine_Overloadable.html", "link": "Doctrine_Overloadable.html#method___call", "name": "Doctrine_Overloadable::__call", "doc": "&quot;__call\nmethod overloader&quot;"},
            
            {"type": "Interface",  "link": "Doctrine_Query_Filter_Interface.html", "name": "Doctrine_Query_Filter_Interface", "doc": "&quot;Doctrine_Query_Filter_Interface&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Query_Filter_Interface", "fromLink": "Doctrine_Query_Filter_Interface.html", "link": "Doctrine_Query_Filter_Interface.html#method_preQuery", "name": "Doctrine_Query_Filter_Interface::preQuery", "doc": "&quot;preQuery&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Filter_Interface", "fromLink": "Doctrine_Query_Filter_Interface.html", "link": "Doctrine_Query_Filter_Interface.html#method_postQuery", "name": "Doctrine_Query_Filter_Interface::postQuery", "doc": "&quot;postQuery&quot;"},
            
            {"type": "Interface",  "link": "Doctrine_Record_Listener_Interface.html", "name": "Doctrine_Record_Listener_Interface", "doc": "&quot;Doctrine_Record_Listener&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_setOption", "name": "Doctrine_Record_Listener_Interface::setOption", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_getOptions", "name": "Doctrine_Record_Listener_Interface::getOptions", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_getOption", "name": "Doctrine_Record_Listener_Interface::getOption", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_preSerialize", "name": "Doctrine_Record_Listener_Interface::preSerialize", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_postSerialize", "name": "Doctrine_Record_Listener_Interface::postSerialize", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_preUnserialize", "name": "Doctrine_Record_Listener_Interface::preUnserialize", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_postUnserialize", "name": "Doctrine_Record_Listener_Interface::postUnserialize", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_preSave", "name": "Doctrine_Record_Listener_Interface::preSave", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_postSave", "name": "Doctrine_Record_Listener_Interface::postSave", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_preDelete", "name": "Doctrine_Record_Listener_Interface::preDelete", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_postDelete", "name": "Doctrine_Record_Listener_Interface::postDelete", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_preUpdate", "name": "Doctrine_Record_Listener_Interface::preUpdate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_postUpdate", "name": "Doctrine_Record_Listener_Interface::postUpdate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_preInsert", "name": "Doctrine_Record_Listener_Interface::preInsert", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_postInsert", "name": "Doctrine_Record_Listener_Interface::postInsert", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_preHydrate", "name": "Doctrine_Record_Listener_Interface::preHydrate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_postHydrate", "name": "Doctrine_Record_Listener_Interface::postHydrate", "doc": "&quot;&quot;"},
            
            {"type": "Interface",  "link": "Doctrine_Search_Analyzer_Interface.html", "name": "Doctrine_Search_Analyzer_Interface", "doc": "&quot;Doctrine_Search_Analyzer_Interface&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Search_Analyzer_Interface", "fromLink": "Doctrine_Search_Analyzer_Interface.html", "link": "Doctrine_Search_Analyzer_Interface.html#method_analyze", "name": "Doctrine_Search_Analyzer_Interface::analyze", "doc": "&quot;&quot;"},
            
            {"type": "Interface",  "link": "Doctrine_Tree_Interface.html", "name": "Doctrine_Tree_Interface", "doc": "&quot;Doctrine_Tree_Interface&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Tree_Interface", "fromLink": "Doctrine_Tree_Interface.html", "link": "Doctrine_Tree_Interface.html#method_createRoot", "name": "Doctrine_Tree_Interface::createRoot", "doc": "&quot;creates root node from given record or from a new record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Tree_Interface", "fromLink": "Doctrine_Tree_Interface.html", "link": "Doctrine_Tree_Interface.html#method_fetchRoot", "name": "Doctrine_Tree_Interface::fetchRoot", "doc": "&quot;returns root node&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Tree_Interface", "fromLink": "Doctrine_Tree_Interface.html", "link": "Doctrine_Tree_Interface.html#method_fetchTree", "name": "Doctrine_Tree_Interface::fetchTree", "doc": "&quot;optimised method to returns iterator for traversal of the entire tree from root&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Tree_Interface", "fromLink": "Doctrine_Tree_Interface.html", "link": "Doctrine_Tree_Interface.html#method_fetchBranch", "name": "Doctrine_Tree_Interface::fetchBranch", "doc": "&quot;optimised method that returns iterator for traversal of the tree from the given record primary key&quot;"},
            
            
            {"type": "Class",  "link": "Doctrine.html", "name": "Doctrine", "doc": "&quot;This class only exists for backwards compatability. All code was moved to\nDoctrine_Core and this class extends Doctrine_Core&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Access.html", "name": "Doctrine_Access", "doc": "&quot;Provides array access and property overload interface for Doctrine subclasses&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Access", "fromLink": "Doctrine_Access.html", "link": "Doctrine_Access.html#method_setArray", "name": "Doctrine_Access::setArray", "doc": "&quot;Set an entire aray to the data&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Access", "fromLink": "Doctrine_Access.html", "link": "Doctrine_Access.html#method___set", "name": "Doctrine_Access::__set", "doc": "&quot;Set key and value to data&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Access", "fromLink": "Doctrine_Access.html", "link": "Doctrine_Access.html#method___get", "name": "Doctrine_Access::__get", "doc": "&quot;Get key from data&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Access", "fromLink": "Doctrine_Access.html", "link": "Doctrine_Access.html#method___isset", "name": "Doctrine_Access::__isset", "doc": "&quot;Check if key exists in data&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Access", "fromLink": "Doctrine_Access.html", "link": "Doctrine_Access.html#method___unset", "name": "Doctrine_Access::__unset", "doc": "&quot;Remove key from data&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Access", "fromLink": "Doctrine_Access.html", "link": "Doctrine_Access.html#method_offsetExists", "name": "Doctrine_Access::offsetExists", "doc": "&quot;Check if an offset axists&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Access", "fromLink": "Doctrine_Access.html", "link": "Doctrine_Access.html#method_offsetGet", "name": "Doctrine_Access::offsetGet", "doc": "&quot;An alias of get()&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Access", "fromLink": "Doctrine_Access.html", "link": "Doctrine_Access.html#method_offsetSet", "name": "Doctrine_Access::offsetSet", "doc": "&quot;Sets $offset to $value&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Access", "fromLink": "Doctrine_Access.html", "link": "Doctrine_Access.html#method_offsetUnset", "name": "Doctrine_Access::offsetUnset", "doc": "&quot;Unset a given offset&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Access", "fromLink": "Doctrine_Access.html", "link": "Doctrine_Access.html#method_remove", "name": "Doctrine_Access::remove", "doc": "&quot;Remove the element with the specified offset&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Access", "fromLink": "Doctrine_Access.html", "link": "Doctrine_Access.html#method_get", "name": "Doctrine_Access::get", "doc": "&quot;Return the element with the specified offset&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Access", "fromLink": "Doctrine_Access.html", "link": "Doctrine_Access.html#method_set", "name": "Doctrine_Access::set", "doc": "&quot;Set the offset to the value&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Access", "fromLink": "Doctrine_Access.html", "link": "Doctrine_Access.html#method_contains", "name": "Doctrine_Access::contains", "doc": "&quot;Check if the specified offset exists&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Access", "fromLink": "Doctrine_Access.html", "link": "Doctrine_Access.html#method_add", "name": "Doctrine_Access::add", "doc": "&quot;Add the value&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Adapter_Exception.html", "name": "Doctrine_Adapter_Exception", "doc": "&quot;Doctrine_Adapter exception class&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Adapter_Interface.html", "name": "Doctrine_Adapter_Interface", "doc": "&quot;This adapter interface should be implemented by all custom adapters&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Adapter_Interface", "fromLink": "Doctrine_Adapter_Interface.html", "link": "Doctrine_Adapter_Interface.html#method_prepare", "name": "Doctrine_Adapter_Interface::prepare", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Interface", "fromLink": "Doctrine_Adapter_Interface.html", "link": "Doctrine_Adapter_Interface.html#method_query", "name": "Doctrine_Adapter_Interface::query", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Interface", "fromLink": "Doctrine_Adapter_Interface.html", "link": "Doctrine_Adapter_Interface.html#method_quote", "name": "Doctrine_Adapter_Interface::quote", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Interface", "fromLink": "Doctrine_Adapter_Interface.html", "link": "Doctrine_Adapter_Interface.html#method_exec", "name": "Doctrine_Adapter_Interface::exec", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Interface", "fromLink": "Doctrine_Adapter_Interface.html", "link": "Doctrine_Adapter_Interface.html#method_lastInsertId", "name": "Doctrine_Adapter_Interface::lastInsertId", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Interface", "fromLink": "Doctrine_Adapter_Interface.html", "link": "Doctrine_Adapter_Interface.html#method_beginTransaction", "name": "Doctrine_Adapter_Interface::beginTransaction", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Interface", "fromLink": "Doctrine_Adapter_Interface.html", "link": "Doctrine_Adapter_Interface.html#method_commit", "name": "Doctrine_Adapter_Interface::commit", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Interface", "fromLink": "Doctrine_Adapter_Interface.html", "link": "Doctrine_Adapter_Interface.html#method_rollBack", "name": "Doctrine_Adapter_Interface::rollBack", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Interface", "fromLink": "Doctrine_Adapter_Interface.html", "link": "Doctrine_Adapter_Interface.html#method_errorCode", "name": "Doctrine_Adapter_Interface::errorCode", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Interface", "fromLink": "Doctrine_Adapter_Interface.html", "link": "Doctrine_Adapter_Interface.html#method_errorInfo", "name": "Doctrine_Adapter_Interface::errorInfo", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Interface", "fromLink": "Doctrine_Adapter_Interface.html", "link": "Doctrine_Adapter_Interface.html#method_setAttribute", "name": "Doctrine_Adapter_Interface::setAttribute", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Interface", "fromLink": "Doctrine_Adapter_Interface.html", "link": "Doctrine_Adapter_Interface.html#method_getAttribute", "name": "Doctrine_Adapter_Interface::getAttribute", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Adapter_Mock.html", "name": "Doctrine_Adapter_Mock", "doc": "&quot;Doctrine mock connection adapter. This class is used for special testing purposes.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Adapter_Mock", "fromLink": "Doctrine_Adapter_Mock.html", "link": "Doctrine_Adapter_Mock.html#method___construct", "name": "Doctrine_Adapter_Mock::__construct", "doc": "&quot;Doctrine mock adapter constructor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Mock", "fromLink": "Doctrine_Adapter_Mock.html", "link": "Doctrine_Adapter_Mock.html#method_getName", "name": "Doctrine_Adapter_Mock::getName", "doc": "&quot;Get the name of the dbms used in this instance of the mock adapter&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Mock", "fromLink": "Doctrine_Adapter_Mock.html", "link": "Doctrine_Adapter_Mock.html#method_pop", "name": "Doctrine_Adapter_Mock::pop", "doc": "&quot;Pop the last executed query from the array of executed queries and return it&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Mock", "fromLink": "Doctrine_Adapter_Mock.html", "link": "Doctrine_Adapter_Mock.html#method_forceException", "name": "Doctrine_Adapter_Mock::forceException", "doc": "&quot;Force an exception in to the array of exceptions&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Mock", "fromLink": "Doctrine_Adapter_Mock.html", "link": "Doctrine_Adapter_Mock.html#method_prepare", "name": "Doctrine_Adapter_Mock::prepare", "doc": "&quot;Prepare a query statement&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Mock", "fromLink": "Doctrine_Adapter_Mock.html", "link": "Doctrine_Adapter_Mock.html#method_addQuery", "name": "Doctrine_Adapter_Mock::addQuery", "doc": "&quot;Add query to the stack of executed queries&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Mock", "fromLink": "Doctrine_Adapter_Mock.html", "link": "Doctrine_Adapter_Mock.html#method_query", "name": "Doctrine_Adapter_Mock::query", "doc": "&quot;Fake the execution of query and add it to the stack of executed queries&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Mock", "fromLink": "Doctrine_Adapter_Mock.html", "link": "Doctrine_Adapter_Mock.html#method_getAll", "name": "Doctrine_Adapter_Mock::getAll", "doc": "&quot;Get all the executed queries&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Mock", "fromLink": "Doctrine_Adapter_Mock.html", "link": "Doctrine_Adapter_Mock.html#method_quote", "name": "Doctrine_Adapter_Mock::quote", "doc": "&quot;Quote a value for the dbms&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Mock", "fromLink": "Doctrine_Adapter_Mock.html", "link": "Doctrine_Adapter_Mock.html#method_exec", "name": "Doctrine_Adapter_Mock::exec", "doc": "&quot;Execute a raw sql statement&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Mock", "fromLink": "Doctrine_Adapter_Mock.html", "link": "Doctrine_Adapter_Mock.html#method_forceLastInsertIdFail", "name": "Doctrine_Adapter_Mock::forceLastInsertIdFail", "doc": "&quot;Force last insert to be failed&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Mock", "fromLink": "Doctrine_Adapter_Mock.html", "link": "Doctrine_Adapter_Mock.html#method_lastInsertId", "name": "Doctrine_Adapter_Mock::lastInsertId", "doc": "&quot;Get the id of the last inserted record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Mock", "fromLink": "Doctrine_Adapter_Mock.html", "link": "Doctrine_Adapter_Mock.html#method_count", "name": "Doctrine_Adapter_Mock::count", "doc": "&quot;Get the number of queries executed&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Mock", "fromLink": "Doctrine_Adapter_Mock.html", "link": "Doctrine_Adapter_Mock.html#method_beginTransaction", "name": "Doctrine_Adapter_Mock::beginTransaction", "doc": "&quot;Begin a transaction&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Mock", "fromLink": "Doctrine_Adapter_Mock.html", "link": "Doctrine_Adapter_Mock.html#method_commit", "name": "Doctrine_Adapter_Mock::commit", "doc": "&quot;Commit a transaction&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Mock", "fromLink": "Doctrine_Adapter_Mock.html", "link": "Doctrine_Adapter_Mock.html#method_rollBack", "name": "Doctrine_Adapter_Mock::rollBack", "doc": "&quot;Rollback a transaction&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Mock", "fromLink": "Doctrine_Adapter_Mock.html", "link": "Doctrine_Adapter_Mock.html#method_getAttribute", "name": "Doctrine_Adapter_Mock::getAttribute", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Mock", "fromLink": "Doctrine_Adapter_Mock.html", "link": "Doctrine_Adapter_Mock.html#method_errorCode", "name": "Doctrine_Adapter_Mock::errorCode", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Mock", "fromLink": "Doctrine_Adapter_Mock.html", "link": "Doctrine_Adapter_Mock.html#method_errorInfo", "name": "Doctrine_Adapter_Mock::errorInfo", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Mock", "fromLink": "Doctrine_Adapter_Mock.html", "link": "Doctrine_Adapter_Mock.html#method_setAttribute", "name": "Doctrine_Adapter_Mock::setAttribute", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Mock", "fromLink": "Doctrine_Adapter_Mock.html", "link": "Doctrine_Adapter_Mock.html#method_sqliteCreateFunction", "name": "Doctrine_Adapter_Mock::sqliteCreateFunction", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Adapter_Oracle.html", "name": "Doctrine_Adapter_Oracle", "doc": "&quot;Custom Doctrine connection adapter for oracle&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Adapter_Oracle", "fromLink": "Doctrine_Adapter_Oracle.html", "link": "Doctrine_Adapter_Oracle.html#method___construct", "name": "Doctrine_Adapter_Oracle::__construct", "doc": "&quot;Doctrine Oracle adapter constructor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Oracle", "fromLink": "Doctrine_Adapter_Oracle.html", "link": "Doctrine_Adapter_Oracle.html#method_prepare", "name": "Doctrine_Adapter_Oracle::prepare", "doc": "&quot;Prepare a query statement&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Oracle", "fromLink": "Doctrine_Adapter_Oracle.html", "link": "Doctrine_Adapter_Oracle.html#method_query", "name": "Doctrine_Adapter_Oracle::query", "doc": "&quot;Execute query and return results as statement object&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Oracle", "fromLink": "Doctrine_Adapter_Oracle.html", "link": "Doctrine_Adapter_Oracle.html#method_quote", "name": "Doctrine_Adapter_Oracle::quote", "doc": "&quot;Quote a value for the dbms&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Oracle", "fromLink": "Doctrine_Adapter_Oracle.html", "link": "Doctrine_Adapter_Oracle.html#method_exec", "name": "Doctrine_Adapter_Oracle::exec", "doc": "&quot;Execute a raw sql statement&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Oracle", "fromLink": "Doctrine_Adapter_Oracle.html", "link": "Doctrine_Adapter_Oracle.html#method_lastInsertId", "name": "Doctrine_Adapter_Oracle::lastInsertId", "doc": "&quot;Get the id of the last inserted record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Oracle", "fromLink": "Doctrine_Adapter_Oracle.html", "link": "Doctrine_Adapter_Oracle.html#method_beginTransaction", "name": "Doctrine_Adapter_Oracle::beginTransaction", "doc": "&quot;Begin a transaction&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Oracle", "fromLink": "Doctrine_Adapter_Oracle.html", "link": "Doctrine_Adapter_Oracle.html#method_commit", "name": "Doctrine_Adapter_Oracle::commit", "doc": "&quot;Commit a transaction&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Oracle", "fromLink": "Doctrine_Adapter_Oracle.html", "link": "Doctrine_Adapter_Oracle.html#method_rollBack", "name": "Doctrine_Adapter_Oracle::rollBack", "doc": "&quot;Rollback a transaction&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Oracle", "fromLink": "Doctrine_Adapter_Oracle.html", "link": "Doctrine_Adapter_Oracle.html#method_setAttribute", "name": "Doctrine_Adapter_Oracle::setAttribute", "doc": "&quot;Set connection attribute&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Oracle", "fromLink": "Doctrine_Adapter_Oracle.html", "link": "Doctrine_Adapter_Oracle.html#method_getAttribute", "name": "Doctrine_Adapter_Oracle::getAttribute", "doc": "&quot;Retrieve a statement attribute&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Oracle", "fromLink": "Doctrine_Adapter_Oracle.html", "link": "Doctrine_Adapter_Oracle.html#method_getConnection", "name": "Doctrine_Adapter_Oracle::getConnection", "doc": "&quot;Returns established OCI connection handler&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Oracle", "fromLink": "Doctrine_Adapter_Oracle.html", "link": "Doctrine_Adapter_Oracle.html#method_getUserName", "name": "Doctrine_Adapter_Oracle::getUserName", "doc": "&quot;Returns current user name&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Oracle", "fromLink": "Doctrine_Adapter_Oracle.html", "link": "Doctrine_Adapter_Oracle.html#method_errorCode", "name": "Doctrine_Adapter_Oracle::errorCode", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Oracle", "fromLink": "Doctrine_Adapter_Oracle.html", "link": "Doctrine_Adapter_Oracle.html#method_errorInfo", "name": "Doctrine_Adapter_Oracle::errorInfo", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Oracle", "fromLink": "Doctrine_Adapter_Oracle.html", "link": "Doctrine_Adapter_Oracle.html#method___destruct", "name": "Doctrine_Adapter_Oracle::__destruct", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Adapter_Statement.html", "name": "Doctrine_Adapter_Statement", "doc": "&quot;Doctrine_Adapter_Statement&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Adapter_Statement", "fromLink": "Doctrine_Adapter_Statement.html", "link": "Doctrine_Adapter_Statement.html#method_bindValue", "name": "Doctrine_Adapter_Statement::bindValue", "doc": "&quot;bindValue&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement", "fromLink": "Doctrine_Adapter_Statement.html", "link": "Doctrine_Adapter_Statement.html#method_fetch", "name": "Doctrine_Adapter_Statement::fetch", "doc": "&quot;fetch&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement", "fromLink": "Doctrine_Adapter_Statement.html", "link": "Doctrine_Adapter_Statement.html#method_nextRowset", "name": "Doctrine_Adapter_Statement::nextRowset", "doc": "&quot;nextRowSet&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement", "fromLink": "Doctrine_Adapter_Statement.html", "link": "Doctrine_Adapter_Statement.html#method_execute", "name": "Doctrine_Adapter_Statement::execute", "doc": "&quot;execute()&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement", "fromLink": "Doctrine_Adapter_Statement.html", "link": "Doctrine_Adapter_Statement.html#method_errorCode", "name": "Doctrine_Adapter_Statement::errorCode", "doc": "&quot;errorCode&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement", "fromLink": "Doctrine_Adapter_Statement.html", "link": "Doctrine_Adapter_Statement.html#method_errorInfo", "name": "Doctrine_Adapter_Statement::errorInfo", "doc": "&quot;errorInfo&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement", "fromLink": "Doctrine_Adapter_Statement.html", "link": "Doctrine_Adapter_Statement.html#method_rowCount", "name": "Doctrine_Adapter_Statement::rowCount", "doc": "&quot;rowCount&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement", "fromLink": "Doctrine_Adapter_Statement.html", "link": "Doctrine_Adapter_Statement.html#method_setFetchMode", "name": "Doctrine_Adapter_Statement::setFetchMode", "doc": "&quot;setFetchMode&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement", "fromLink": "Doctrine_Adapter_Statement.html", "link": "Doctrine_Adapter_Statement.html#method_columnCount", "name": "Doctrine_Adapter_Statement::columnCount", "doc": "&quot;columnCount&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Adapter_Statement_Interface.html", "name": "Doctrine_Adapter_Statement_Interface", "doc": "&quot;Interface for Doctrine adapter statements&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_bindColumn", "name": "Doctrine_Adapter_Statement_Interface::bindColumn", "doc": "&quot;Bind a column to a PHP variable&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_bindValue", "name": "Doctrine_Adapter_Statement_Interface::bindValue", "doc": "&quot;Binds a value to a corresponding named or question mark\nplaceholder in the SQL statement that was use to prepare the statement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_bindParam", "name": "Doctrine_Adapter_Statement_Interface::bindParam", "doc": "&quot;Binds a PHP variable to a corresponding named or question mark placeholder in the\nSQL statement that was use to prepare the statement. Unlike Doctrine_Adapter_Statement_Interface-&gt;bindValue(),\nthe variable is bound as a reference and will only be evaluated at the time\nthat Doctrine_Adapter_Statement_Interface-&gt;execute() is called.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_closeCursor", "name": "Doctrine_Adapter_Statement_Interface::closeCursor", "doc": "&quot;Closes the cursor, enabling the statement to be executed again.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_columnCount", "name": "Doctrine_Adapter_Statement_Interface::columnCount", "doc": "&quot;Returns the number of columns in the result set&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_errorCode", "name": "Doctrine_Adapter_Statement_Interface::errorCode", "doc": "&quot;Fetch the SQLSTATE associated with the last operation on the statement handle&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_errorInfo", "name": "Doctrine_Adapter_Statement_Interface::errorInfo", "doc": "&quot;Fetch extended error information associated with the last operation on the statement handle&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_execute", "name": "Doctrine_Adapter_Statement_Interface::execute", "doc": "&quot;Executes a prepared statement&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_fetch", "name": "Doctrine_Adapter_Statement_Interface::fetch", "doc": "&quot;fetch&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_fetchAll", "name": "Doctrine_Adapter_Statement_Interface::fetchAll", "doc": "&quot;Returns an array containing all of the result set rows&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_fetchColumn", "name": "Doctrine_Adapter_Statement_Interface::fetchColumn", "doc": "&quot;Returns a single column from the next row of a\nresult set or FALSE if there are no more rows.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_fetchObject", "name": "Doctrine_Adapter_Statement_Interface::fetchObject", "doc": "&quot;Fetches the next row and returns it as an object.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_getAttribute", "name": "Doctrine_Adapter_Statement_Interface::getAttribute", "doc": "&quot;Retrieve a statement attribute&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_getColumnMeta", "name": "Doctrine_Adapter_Statement_Interface::getColumnMeta", "doc": "&quot;Returns metadata for a column in a result set&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_nextRowset", "name": "Doctrine_Adapter_Statement_Interface::nextRowset", "doc": "&quot;Advances to the next rowset in a multi-rowset statement handle&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_rowCount", "name": "Doctrine_Adapter_Statement_Interface::rowCount", "doc": "&quot;rowCount() returns the number of rows affected by the last DELETE, INSERT, or UPDATE statement\nexecuted by the corresponding object.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_setAttribute", "name": "Doctrine_Adapter_Statement_Interface::setAttribute", "doc": "&quot;Set a statement attribute&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Interface", "fromLink": "Doctrine_Adapter_Statement_Interface.html", "link": "Doctrine_Adapter_Statement_Interface.html#method_setFetchMode", "name": "Doctrine_Adapter_Statement_Interface::setFetchMode", "doc": "&quot;Set the default fetch mode for this statement&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Adapter_Statement_Mock.html", "name": "Doctrine_Adapter_Statement_Mock", "doc": "&quot;Mock connection adapter statement class. Used for special testing purposes&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Mock", "fromLink": "Doctrine_Adapter_Statement_Mock.html", "link": "Doctrine_Adapter_Statement_Mock.html#method___construct", "name": "Doctrine_Adapter_Statement_Mock::__construct", "doc": "&quot;Constructor for mock adapter statements. Accepts instance of Doctrine_Adapter_Mock&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Mock", "fromLink": "Doctrine_Adapter_Statement_Mock.html", "link": "Doctrine_Adapter_Statement_Mock.html#method_bindColumn", "name": "Doctrine_Adapter_Statement_Mock::bindColumn", "doc": "&quot;bindColumn&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Mock", "fromLink": "Doctrine_Adapter_Statement_Mock.html", "link": "Doctrine_Adapter_Statement_Mock.html#method_bindValue", "name": "Doctrine_Adapter_Statement_Mock::bindValue", "doc": "&quot;bindValue&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Mock", "fromLink": "Doctrine_Adapter_Statement_Mock.html", "link": "Doctrine_Adapter_Statement_Mock.html#method_bindParam", "name": "Doctrine_Adapter_Statement_Mock::bindParam", "doc": "&quot;bindParam&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Mock", "fromLink": "Doctrine_Adapter_Statement_Mock.html", "link": "Doctrine_Adapter_Statement_Mock.html#method_closeCursor", "name": "Doctrine_Adapter_Statement_Mock::closeCursor", "doc": "&quot;closeCursor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Mock", "fromLink": "Doctrine_Adapter_Statement_Mock.html", "link": "Doctrine_Adapter_Statement_Mock.html#method_columnCount", "name": "Doctrine_Adapter_Statement_Mock::columnCount", "doc": "&quot;columnCount&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Mock", "fromLink": "Doctrine_Adapter_Statement_Mock.html", "link": "Doctrine_Adapter_Statement_Mock.html#method_errorCode", "name": "Doctrine_Adapter_Statement_Mock::errorCode", "doc": "&quot;errorCode&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Mock", "fromLink": "Doctrine_Adapter_Statement_Mock.html", "link": "Doctrine_Adapter_Statement_Mock.html#method_errorInfo", "name": "Doctrine_Adapter_Statement_Mock::errorInfo", "doc": "&quot;errorInfo&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Mock", "fromLink": "Doctrine_Adapter_Statement_Mock.html", "link": "Doctrine_Adapter_Statement_Mock.html#method_fetch", "name": "Doctrine_Adapter_Statement_Mock::fetch", "doc": "&quot;fetch&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Mock", "fromLink": "Doctrine_Adapter_Statement_Mock.html", "link": "Doctrine_Adapter_Statement_Mock.html#method_fetchAll", "name": "Doctrine_Adapter_Statement_Mock::fetchAll", "doc": "&quot;fetchAll&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Mock", "fromLink": "Doctrine_Adapter_Statement_Mock.html", "link": "Doctrine_Adapter_Statement_Mock.html#method_execute", "name": "Doctrine_Adapter_Statement_Mock::execute", "doc": "&quot;execute&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Mock", "fromLink": "Doctrine_Adapter_Statement_Mock.html", "link": "Doctrine_Adapter_Statement_Mock.html#method_fetchColumn", "name": "Doctrine_Adapter_Statement_Mock::fetchColumn", "doc": "&quot;fetchColumn&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Mock", "fromLink": "Doctrine_Adapter_Statement_Mock.html", "link": "Doctrine_Adapter_Statement_Mock.html#method_fetchObject", "name": "Doctrine_Adapter_Statement_Mock::fetchObject", "doc": "&quot;fetchObject&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Mock", "fromLink": "Doctrine_Adapter_Statement_Mock.html", "link": "Doctrine_Adapter_Statement_Mock.html#method_nextRowset", "name": "Doctrine_Adapter_Statement_Mock::nextRowset", "doc": "&quot;nextRowset&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Mock", "fromLink": "Doctrine_Adapter_Statement_Mock.html", "link": "Doctrine_Adapter_Statement_Mock.html#method_rowCount", "name": "Doctrine_Adapter_Statement_Mock::rowCount", "doc": "&quot;rowCount&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Mock", "fromLink": "Doctrine_Adapter_Statement_Mock.html", "link": "Doctrine_Adapter_Statement_Mock.html#method_getColumnMeta", "name": "Doctrine_Adapter_Statement_Mock::getColumnMeta", "doc": "&quot;getColumnMeta&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Mock", "fromLink": "Doctrine_Adapter_Statement_Mock.html", "link": "Doctrine_Adapter_Statement_Mock.html#method_getAttribute", "name": "Doctrine_Adapter_Statement_Mock::getAttribute", "doc": "&quot;getAttribute&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Mock", "fromLink": "Doctrine_Adapter_Statement_Mock.html", "link": "Doctrine_Adapter_Statement_Mock.html#method_setAttribute", "name": "Doctrine_Adapter_Statement_Mock::setAttribute", "doc": "&quot;setAttribute&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Mock", "fromLink": "Doctrine_Adapter_Statement_Mock.html", "link": "Doctrine_Adapter_Statement_Mock.html#method_setFetchMode", "name": "Doctrine_Adapter_Statement_Mock::setFetchMode", "doc": "&quot;setFetchMode&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Adapter_Statement_Oracle.html", "name": "Doctrine_Adapter_Statement_Oracle", "doc": "&quot;Oracle connection adapter statement class.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Oracle", "fromLink": "Doctrine_Adapter_Statement_Oracle.html", "link": "Doctrine_Adapter_Statement_Oracle.html#method___construct", "name": "Doctrine_Adapter_Statement_Oracle::__construct", "doc": "&quot;the constructor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Oracle", "fromLink": "Doctrine_Adapter_Statement_Oracle.html", "link": "Doctrine_Adapter_Statement_Oracle.html#method_bindColumn", "name": "Doctrine_Adapter_Statement_Oracle::bindColumn", "doc": "&quot;Bind a column to a PHP variable&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Oracle", "fromLink": "Doctrine_Adapter_Statement_Oracle.html", "link": "Doctrine_Adapter_Statement_Oracle.html#method_bindValue", "name": "Doctrine_Adapter_Statement_Oracle::bindValue", "doc": "&quot;Binds a value to a corresponding named or question mark\nplaceholder in the SQL statement that was use to prepare the statement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Oracle", "fromLink": "Doctrine_Adapter_Statement_Oracle.html", "link": "Doctrine_Adapter_Statement_Oracle.html#method_bindParam", "name": "Doctrine_Adapter_Statement_Oracle::bindParam", "doc": "&quot;Binds a PHP variable to a corresponding named or question mark placeholder in the\nSQL statement that was use to prepare the statement. Unlike Doctrine_Adapter_Statement_Interface-&gt;bindValue(),\nthe variable is bound as a reference and will only be evaluated at the time\nthat Doctrine_Adapter_Statement_Interface-&gt;execute() is called.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Oracle", "fromLink": "Doctrine_Adapter_Statement_Oracle.html", "link": "Doctrine_Adapter_Statement_Oracle.html#method_closeCursor", "name": "Doctrine_Adapter_Statement_Oracle::closeCursor", "doc": "&quot;Closes the cursor, enabling the statement to be executed again.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Oracle", "fromLink": "Doctrine_Adapter_Statement_Oracle.html", "link": "Doctrine_Adapter_Statement_Oracle.html#method_columnCount", "name": "Doctrine_Adapter_Statement_Oracle::columnCount", "doc": "&quot;Returns the number of columns in the result set&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Oracle", "fromLink": "Doctrine_Adapter_Statement_Oracle.html", "link": "Doctrine_Adapter_Statement_Oracle.html#method_errorCode", "name": "Doctrine_Adapter_Statement_Oracle::errorCode", "doc": "&quot;Fetch the SQLSTATE associated with the last operation on the statement handle&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Oracle", "fromLink": "Doctrine_Adapter_Statement_Oracle.html", "link": "Doctrine_Adapter_Statement_Oracle.html#method_errorInfo", "name": "Doctrine_Adapter_Statement_Oracle::errorInfo", "doc": "&quot;Fetch extended error information associated with the last operation on the statement handle&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Oracle", "fromLink": "Doctrine_Adapter_Statement_Oracle.html", "link": "Doctrine_Adapter_Statement_Oracle.html#method_execute", "name": "Doctrine_Adapter_Statement_Oracle::execute", "doc": "&quot;Executes a prepared statement&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Oracle", "fromLink": "Doctrine_Adapter_Statement_Oracle.html", "link": "Doctrine_Adapter_Statement_Oracle.html#method_fetch", "name": "Doctrine_Adapter_Statement_Oracle::fetch", "doc": "&quot;fetch&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Oracle", "fromLink": "Doctrine_Adapter_Statement_Oracle.html", "link": "Doctrine_Adapter_Statement_Oracle.html#method_fetchAll", "name": "Doctrine_Adapter_Statement_Oracle::fetchAll", "doc": "&quot;Returns an array containing all of the result set rows&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Oracle", "fromLink": "Doctrine_Adapter_Statement_Oracle.html", "link": "Doctrine_Adapter_Statement_Oracle.html#method_fetchColumn", "name": "Doctrine_Adapter_Statement_Oracle::fetchColumn", "doc": "&quot;Returns a single column from the next row of a\nresult set or FALSE if there are no more rows.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Oracle", "fromLink": "Doctrine_Adapter_Statement_Oracle.html", "link": "Doctrine_Adapter_Statement_Oracle.html#method_fetchObject", "name": "Doctrine_Adapter_Statement_Oracle::fetchObject", "doc": "&quot;Fetches the next row and returns it as an object.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Oracle", "fromLink": "Doctrine_Adapter_Statement_Oracle.html", "link": "Doctrine_Adapter_Statement_Oracle.html#method_getColumnMeta", "name": "Doctrine_Adapter_Statement_Oracle::getColumnMeta", "doc": "&quot;Returns metadata for a column in a result set&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Oracle", "fromLink": "Doctrine_Adapter_Statement_Oracle.html", "link": "Doctrine_Adapter_Statement_Oracle.html#method_nextRowset", "name": "Doctrine_Adapter_Statement_Oracle::nextRowset", "doc": "&quot;Advances to the next rowset in a multi-rowset statement handle&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Oracle", "fromLink": "Doctrine_Adapter_Statement_Oracle.html", "link": "Doctrine_Adapter_Statement_Oracle.html#method_rowCount", "name": "Doctrine_Adapter_Statement_Oracle::rowCount", "doc": "&quot;rowCount() returns the number of rows affected by the last DELETE, INSERT, or UPDATE statement\nexecuted by the corresponding object.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Oracle", "fromLink": "Doctrine_Adapter_Statement_Oracle.html", "link": "Doctrine_Adapter_Statement_Oracle.html#method_setAttribute", "name": "Doctrine_Adapter_Statement_Oracle::setAttribute", "doc": "&quot;Set a statement attribute&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Oracle", "fromLink": "Doctrine_Adapter_Statement_Oracle.html", "link": "Doctrine_Adapter_Statement_Oracle.html#method_getAttribute", "name": "Doctrine_Adapter_Statement_Oracle::getAttribute", "doc": "&quot;Retrieve a statement attribute&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Adapter_Statement_Oracle", "fromLink": "Doctrine_Adapter_Statement_Oracle.html", "link": "Doctrine_Adapter_Statement_Oracle.html#method_setFetchMode", "name": "Doctrine_Adapter_Statement_Oracle::setFetchMode", "doc": "&quot;Set the default fetch mode for this statement&quot;"},
            
            {"type": "Class",  "link": "Doctrine_AuditLog.html", "name": "Doctrine_AuditLog", "doc": "&quot;Doctrine_AuditLog&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_AuditLog", "fromLink": "Doctrine_AuditLog.html", "link": "Doctrine_AuditLog.html#method___construct", "name": "Doctrine_AuditLog::__construct", "doc": "&quot;Accepts array of options to configure the AuditLog&quot;"},
                    {"type": "Method", "fromName": "Doctrine_AuditLog", "fromLink": "Doctrine_AuditLog.html", "link": "Doctrine_AuditLog.html#method_buildRelation", "name": "Doctrine_AuditLog::buildRelation", "doc": "&quot;This method can be used for generating the relation from the plugin\ntable to the owner table. By default buildForeignRelation() and buildLocalRelation() are called\nThose methods can be overridden or this entire method can be overridden&quot;"},
                    {"type": "Method", "fromName": "Doctrine_AuditLog", "fromLink": "Doctrine_AuditLog.html", "link": "Doctrine_AuditLog.html#method_setTableDefinition", "name": "Doctrine_AuditLog::setTableDefinition", "doc": "&quot;Set the table definition for the audit log table&quot;"},
                    {"type": "Method", "fromName": "Doctrine_AuditLog", "fromLink": "Doctrine_AuditLog.html", "link": "Doctrine_AuditLog.html#method_getVersion", "name": "Doctrine_AuditLog::getVersion", "doc": "&quot;Get array of information for the passed record and the specified version&quot;"},
                    {"type": "Method", "fromName": "Doctrine_AuditLog", "fromLink": "Doctrine_AuditLog.html", "link": "Doctrine_AuditLog.html#method_getMaxVersion", "name": "Doctrine_AuditLog::getMaxVersion", "doc": "&quot;Get the max version number for a given Doctrine_Record&quot;"},
            
            {"type": "Class",  "link": "Doctrine_AuditLog_Listener.html", "name": "Doctrine_AuditLog_Listener", "doc": "&quot;Doctrine_AuditLog_Listener&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_AuditLog_Listener", "fromLink": "Doctrine_AuditLog_Listener.html", "link": "Doctrine_AuditLog_Listener.html#method___construct", "name": "Doctrine_AuditLog_Listener::__construct", "doc": "&quot;Instantiate AuditLog listener and set the Doctrine_AuditLog instance to the class&quot;"},
                    {"type": "Method", "fromName": "Doctrine_AuditLog_Listener", "fromLink": "Doctrine_AuditLog_Listener.html", "link": "Doctrine_AuditLog_Listener.html#method_preInsert", "name": "Doctrine_AuditLog_Listener::preInsert", "doc": "&quot;Pre insert event hook for incrementing version number&quot;"},
                    {"type": "Method", "fromName": "Doctrine_AuditLog_Listener", "fromLink": "Doctrine_AuditLog_Listener.html", "link": "Doctrine_AuditLog_Listener.html#method_postInsert", "name": "Doctrine_AuditLog_Listener::postInsert", "doc": "&quot;Post insert event hook which creates the new version record\nThis will only insert a version record if the auditLog is enabled&quot;"},
                    {"type": "Method", "fromName": "Doctrine_AuditLog_Listener", "fromLink": "Doctrine_AuditLog_Listener.html", "link": "Doctrine_AuditLog_Listener.html#method_preDelete", "name": "Doctrine_AuditLog_Listener::preDelete", "doc": "&quot;Pre delete event hook deletes all related versions\nThis will only delete version records if the auditLog is enabled&quot;"},
                    {"type": "Method", "fromName": "Doctrine_AuditLog_Listener", "fromLink": "Doctrine_AuditLog_Listener.html", "link": "Doctrine_AuditLog_Listener.html#method_preUpdate", "name": "Doctrine_AuditLog_Listener::preUpdate", "doc": "&quot;Pre update event hook for inserting new version record\nThis will only insert a version record if the auditLog is enabled&quot;"},
                    {"type": "Method", "fromName": "Doctrine_AuditLog_Listener", "fromLink": "Doctrine_AuditLog_Listener.html", "link": "Doctrine_AuditLog_Listener.html#method__getInitialVersion", "name": "Doctrine_AuditLog_Listener::_getInitialVersion", "doc": "&quot;Get the initial version number for the audit log&quot;"},
                    {"type": "Method", "fromName": "Doctrine_AuditLog_Listener", "fromLink": "Doctrine_AuditLog_Listener.html", "link": "Doctrine_AuditLog_Listener.html#method__getNextVersion", "name": "Doctrine_AuditLog_Listener::_getNextVersion", "doc": "&quot;Get the next version number for the audit log&quot;"},
            
            {"type": "Class",  "link": "Doctrine_AuditLog_Listener_Microtime.html", "name": "Doctrine_AuditLog_Listener_Microtime", "doc": "&quot;Doctrine_AuditLog_Listener&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_AuditLog_Listener_Microtime", "fromLink": "Doctrine_AuditLog_Listener_Microtime.html", "link": "Doctrine_AuditLog_Listener_Microtime.html#method___construct", "name": "Doctrine_AuditLog_Listener_Microtime::__construct", "doc": "&quot;Instantiate AuditLog listener and set the Doctrine_AuditLog instance to the class&quot;"},
                    {"type": "Method", "fromName": "Doctrine_AuditLog_Listener_Microtime", "fromLink": "Doctrine_AuditLog_Listener_Microtime.html", "link": "Doctrine_AuditLog_Listener_Microtime.html#method__getInitialVersion", "name": "Doctrine_AuditLog_Listener_Microtime::_getInitialVersion", "doc": "&quot;Get the initial version number for the audit log&quot;"},
                    {"type": "Method", "fromName": "Doctrine_AuditLog_Listener_Microtime", "fromLink": "Doctrine_AuditLog_Listener_Microtime.html", "link": "Doctrine_AuditLog_Listener_Microtime.html#method__getNextVersion", "name": "Doctrine_AuditLog_Listener_Microtime::_getNextVersion", "doc": "&quot;Get the next version number for the audit log&quot;"},
                    {"type": "Method", "fromName": "Doctrine_AuditLog_Listener_Microtime", "fromLink": "Doctrine_AuditLog_Listener_Microtime.html", "link": "Doctrine_AuditLog_Listener_Microtime.html#method__microtime", "name": "Doctrine_AuditLog_Listener_Microtime::_microtime", "doc": "&quot;Compute a version out of microtime(true)&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Builder.html", "name": "Doctrine_Builder", "doc": "&quot;Base class for any code builders\/generators for Doctrine&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Builder", "fromLink": "Doctrine_Builder.html", "link": "Doctrine_Builder.html#method_varExport", "name": "Doctrine_Builder::varExport", "doc": "&quot;Special function for var_export()\nThe normal code which is returned is malformed and does not follow Doctrine standards\nSo we do some string replacing to clean it up&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Cache_Apc.html", "name": "Doctrine_Cache_Apc", "doc": "&quot;APC Cache Driver&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Cache_Apc", "fromLink": "Doctrine_Cache_Apc.html", "link": "Doctrine_Cache_Apc.html#method___construct", "name": "Doctrine_Cache_Apc::__construct", "doc": "&quot;constructor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Apc", "fromLink": "Doctrine_Cache_Apc.html", "link": "Doctrine_Cache_Apc.html#method__doFetch", "name": "Doctrine_Cache_Apc::_doFetch", "doc": "&quot;Fetch a cache record from this cache driver instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Apc", "fromLink": "Doctrine_Cache_Apc.html", "link": "Doctrine_Cache_Apc.html#method__doContains", "name": "Doctrine_Cache_Apc::_doContains", "doc": "&quot;Test if a cache record exists for the passed id&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Apc", "fromLink": "Doctrine_Cache_Apc.html", "link": "Doctrine_Cache_Apc.html#method__doSave", "name": "Doctrine_Cache_Apc::_doSave", "doc": "&quot;Save a cache record directly. This method is implemented by the cache\ndrivers and used in Doctrine_Cache_Driver::save()&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Apc", "fromLink": "Doctrine_Cache_Apc.html", "link": "Doctrine_Cache_Apc.html#method__doDelete", "name": "Doctrine_Cache_Apc::_doDelete", "doc": "&quot;Remove a cache record directly. This method is implemented by the cache\ndrivers and used in Doctrine_Cache_Driver::delete()&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Apc", "fromLink": "Doctrine_Cache_Apc.html", "link": "Doctrine_Cache_Apc.html#method__getCacheKeys", "name": "Doctrine_Cache_Apc::_getCacheKeys", "doc": "&quot;Fetch an array of all keys stored in cache&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Cache_Array.html", "name": "Doctrine_Cache_Array", "doc": "&quot;Array cache driver&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Cache_Array", "fromLink": "Doctrine_Cache_Array.html", "link": "Doctrine_Cache_Array.html#method__doFetch", "name": "Doctrine_Cache_Array::_doFetch", "doc": "&quot;Fetch a cache record from this cache driver instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Array", "fromLink": "Doctrine_Cache_Array.html", "link": "Doctrine_Cache_Array.html#method__doContains", "name": "Doctrine_Cache_Array::_doContains", "doc": "&quot;Test if a cache record exists for the passed id&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Array", "fromLink": "Doctrine_Cache_Array.html", "link": "Doctrine_Cache_Array.html#method__doSave", "name": "Doctrine_Cache_Array::_doSave", "doc": "&quot;Save a cache record directly. This method is implemented by the cache\ndrivers and used in Doctrine_Cache_Driver::save()&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Array", "fromLink": "Doctrine_Cache_Array.html", "link": "Doctrine_Cache_Array.html#method__doDelete", "name": "Doctrine_Cache_Array::_doDelete", "doc": "&quot;Remove a cache record directly. This method is implemented by the cache\ndrivers and used in Doctrine_Cache_Driver::delete()&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Array", "fromLink": "Doctrine_Cache_Array.html", "link": "Doctrine_Cache_Array.html#method__getCacheKeys", "name": "Doctrine_Cache_Array::_getCacheKeys", "doc": "&quot;Fetch an array of all keys stored in cache&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Cache_Db.html", "name": "Doctrine_Cache_Db", "doc": "&quot;Database cache driver&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Cache_Db", "fromLink": "Doctrine_Cache_Db.html", "link": "Doctrine_Cache_Db.html#method___construct", "name": "Doctrine_Cache_Db::__construct", "doc": "&quot;Configure Database cache driver. Specify instance of Doctrine_Connection\nand tableName to store cache in&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Db", "fromLink": "Doctrine_Cache_Db.html", "link": "Doctrine_Cache_Db.html#method_getConnection", "name": "Doctrine_Cache_Db::getConnection", "doc": "&quot;Get the connection object associated with this cache driver&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Db", "fromLink": "Doctrine_Cache_Db.html", "link": "Doctrine_Cache_Db.html#method__doFetch", "name": "Doctrine_Cache_Db::_doFetch", "doc": "&quot;Fetch a cache record from this cache driver instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Db", "fromLink": "Doctrine_Cache_Db.html", "link": "Doctrine_Cache_Db.html#method__doContains", "name": "Doctrine_Cache_Db::_doContains", "doc": "&quot;Test if a cache record exists for the passed id&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Db", "fromLink": "Doctrine_Cache_Db.html", "link": "Doctrine_Cache_Db.html#method__doSave", "name": "Doctrine_Cache_Db::_doSave", "doc": "&quot;Save a cache record directly. This method is implemented by the cache\ndrivers and used in Doctrine_Cache_Driver::save()&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Db", "fromLink": "Doctrine_Cache_Db.html", "link": "Doctrine_Cache_Db.html#method__doDelete", "name": "Doctrine_Cache_Db::_doDelete", "doc": "&quot;Remove a cache record directly. This method is implemented by the cache\ndrivers and used in Doctrine_Cache_Driver::delete()&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Db", "fromLink": "Doctrine_Cache_Db.html", "link": "Doctrine_Cache_Db.html#method_createTable", "name": "Doctrine_Cache_Db::createTable", "doc": "&quot;Create the cache table&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Db", "fromLink": "Doctrine_Cache_Db.html", "link": "Doctrine_Cache_Db.html#method__hex2bin", "name": "Doctrine_Cache_Db::_hex2bin", "doc": "&quot;Convert hex data to binary data. If passed data is not hex then\nit is returned as is.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Db", "fromLink": "Doctrine_Cache_Db.html", "link": "Doctrine_Cache_Db.html#method__getCacheKeys", "name": "Doctrine_Cache_Db::_getCacheKeys", "doc": "&quot;Fetch an array of all keys stored in cache&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Cache_Driver.html", "name": "Doctrine_Cache_Driver", "doc": "&quot;Abstract cache driver class&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Cache_Driver", "fromLink": "Doctrine_Cache_Driver.html", "link": "Doctrine_Cache_Driver.html#method___construct", "name": "Doctrine_Cache_Driver::__construct", "doc": "&quot;Configure cache driver with an array of options&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Driver", "fromLink": "Doctrine_Cache_Driver.html", "link": "Doctrine_Cache_Driver.html#method_setOption", "name": "Doctrine_Cache_Driver::setOption", "doc": "&quot;Set option name and value&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Driver", "fromLink": "Doctrine_Cache_Driver.html", "link": "Doctrine_Cache_Driver.html#method_getOption", "name": "Doctrine_Cache_Driver::getOption", "doc": "&quot;Get value of option&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Driver", "fromLink": "Doctrine_Cache_Driver.html", "link": "Doctrine_Cache_Driver.html#method_fetch", "name": "Doctrine_Cache_Driver::fetch", "doc": "&quot;Fetch a cache record from this cache driver instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Driver", "fromLink": "Doctrine_Cache_Driver.html", "link": "Doctrine_Cache_Driver.html#method_contains", "name": "Doctrine_Cache_Driver::contains", "doc": "&quot;Test if a cache record exists for the passed id&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Driver", "fromLink": "Doctrine_Cache_Driver.html", "link": "Doctrine_Cache_Driver.html#method_save", "name": "Doctrine_Cache_Driver::save", "doc": "&quot;Save some string datas into a cache record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Driver", "fromLink": "Doctrine_Cache_Driver.html", "link": "Doctrine_Cache_Driver.html#method_delete", "name": "Doctrine_Cache_Driver::delete", "doc": "&quot;Remove a cache record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Driver", "fromLink": "Doctrine_Cache_Driver.html", "link": "Doctrine_Cache_Driver.html#method_deleteByRegex", "name": "Doctrine_Cache_Driver::deleteByRegex", "doc": "&quot;Delete cache entries where the key matches a PHP regular expressions&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Driver", "fromLink": "Doctrine_Cache_Driver.html", "link": "Doctrine_Cache_Driver.html#method_deleteByPrefix", "name": "Doctrine_Cache_Driver::deleteByPrefix", "doc": "&quot;Delete cache entries where the key has the passed prefix&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Driver", "fromLink": "Doctrine_Cache_Driver.html", "link": "Doctrine_Cache_Driver.html#method_deleteBySuffix", "name": "Doctrine_Cache_Driver::deleteBySuffix", "doc": "&quot;Delete cache entries where the key has the passed suffix&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Driver", "fromLink": "Doctrine_Cache_Driver.html", "link": "Doctrine_Cache_Driver.html#method_deleteAll", "name": "Doctrine_Cache_Driver::deleteAll", "doc": "&quot;Delete all cache entries from the cache driver&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Driver", "fromLink": "Doctrine_Cache_Driver.html", "link": "Doctrine_Cache_Driver.html#method__getKey", "name": "Doctrine_Cache_Driver::_getKey", "doc": "&quot;Get the hash key passing its suffix&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Driver", "fromLink": "Doctrine_Cache_Driver.html", "link": "Doctrine_Cache_Driver.html#method__getCacheKeys", "name": "Doctrine_Cache_Driver::_getCacheKeys", "doc": "&quot;Fetch an array of all keys stored in cache&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Driver", "fromLink": "Doctrine_Cache_Driver.html", "link": "Doctrine_Cache_Driver.html#method__doFetch", "name": "Doctrine_Cache_Driver::_doFetch", "doc": "&quot;Fetch a cache record from this cache driver instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Driver", "fromLink": "Doctrine_Cache_Driver.html", "link": "Doctrine_Cache_Driver.html#method__doContains", "name": "Doctrine_Cache_Driver::_doContains", "doc": "&quot;Test if a cache record exists for the passed id&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Driver", "fromLink": "Doctrine_Cache_Driver.html", "link": "Doctrine_Cache_Driver.html#method__doSave", "name": "Doctrine_Cache_Driver::_doSave", "doc": "&quot;Save a cache record directly. This method is implemented by the cache\ndrivers and used in Doctrine_Cache_Driver::save()&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Driver", "fromLink": "Doctrine_Cache_Driver.html", "link": "Doctrine_Cache_Driver.html#method__doDelete", "name": "Doctrine_Cache_Driver::_doDelete", "doc": "&quot;Remove a cache record directly. This method is implemented by the cache\ndrivers and used in Doctrine_Cache_Driver::delete()&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Cache_Exception.html", "name": "Doctrine_Cache_Exception", "doc": "&quot;Doctrine cache exception class&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Cache_Interface.html", "name": "Doctrine_Cache_Interface", "doc": "&quot;Doctrine cache driver interface&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Cache_Interface", "fromLink": "Doctrine_Cache_Interface.html", "link": "Doctrine_Cache_Interface.html#method_fetch", "name": "Doctrine_Cache_Interface::fetch", "doc": "&quot;Fetch a cache record from this cache driver instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Interface", "fromLink": "Doctrine_Cache_Interface.html", "link": "Doctrine_Cache_Interface.html#method_contains", "name": "Doctrine_Cache_Interface::contains", "doc": "&quot;Test if a cache record exists for the passed id&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Interface", "fromLink": "Doctrine_Cache_Interface.html", "link": "Doctrine_Cache_Interface.html#method_save", "name": "Doctrine_Cache_Interface::save", "doc": "&quot;Save a cache record and add the key to the index of cached keys&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Interface", "fromLink": "Doctrine_Cache_Interface.html", "link": "Doctrine_Cache_Interface.html#method_delete", "name": "Doctrine_Cache_Interface::delete", "doc": "&quot;Remove a cache record&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Cache_Memcache.html", "name": "Doctrine_Cache_Memcache", "doc": "&quot;Memcache cache driver&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Cache_Memcache", "fromLink": "Doctrine_Cache_Memcache.html", "link": "Doctrine_Cache_Memcache.html#method___construct", "name": "Doctrine_Cache_Memcache::__construct", "doc": "&quot;constructor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Memcache", "fromLink": "Doctrine_Cache_Memcache.html", "link": "Doctrine_Cache_Memcache.html#method__doFetch", "name": "Doctrine_Cache_Memcache::_doFetch", "doc": "&quot;Test if a cache record exists for the passed id&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Memcache", "fromLink": "Doctrine_Cache_Memcache.html", "link": "Doctrine_Cache_Memcache.html#method__doContains", "name": "Doctrine_Cache_Memcache::_doContains", "doc": "&quot;Test if a cache is available or not (for the given id)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Memcache", "fromLink": "Doctrine_Cache_Memcache.html", "link": "Doctrine_Cache_Memcache.html#method__doSave", "name": "Doctrine_Cache_Memcache::_doSave", "doc": "&quot;Save a cache record directly. This method is implemented by the cache\ndrivers and used in Doctrine_Cache_Driver::save()&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Memcache", "fromLink": "Doctrine_Cache_Memcache.html", "link": "Doctrine_Cache_Memcache.html#method__doDelete", "name": "Doctrine_Cache_Memcache::_doDelete", "doc": "&quot;Remove a cache record directly. This method is implemented by the cache\ndrivers and used in Doctrine_Cache_Driver::delete()&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Memcache", "fromLink": "Doctrine_Cache_Memcache.html", "link": "Doctrine_Cache_Memcache.html#method__getCacheKeys", "name": "Doctrine_Cache_Memcache::_getCacheKeys", "doc": "&quot;Fetch an array of all keys stored in cache&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Cache_Xcache.html", "name": "Doctrine_Cache_Xcache", "doc": "&quot;Xcache cache driver&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Cache_Xcache", "fromLink": "Doctrine_Cache_Xcache.html", "link": "Doctrine_Cache_Xcache.html#method___construct", "name": "Doctrine_Cache_Xcache::__construct", "doc": "&quot;constructor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Xcache", "fromLink": "Doctrine_Cache_Xcache.html", "link": "Doctrine_Cache_Xcache.html#method__doFetch", "name": "Doctrine_Cache_Xcache::_doFetch", "doc": "&quot;Test if a cache record exists for the passed id&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Xcache", "fromLink": "Doctrine_Cache_Xcache.html", "link": "Doctrine_Cache_Xcache.html#method__doContains", "name": "Doctrine_Cache_Xcache::_doContains", "doc": "&quot;Test if a cache is available or not (for the given id)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Xcache", "fromLink": "Doctrine_Cache_Xcache.html", "link": "Doctrine_Cache_Xcache.html#method__doSave", "name": "Doctrine_Cache_Xcache::_doSave", "doc": "&quot;Save a cache record directly. This method is implemented by the cache\ndrivers and used in Doctrine_Cache_Driver::save()&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Xcache", "fromLink": "Doctrine_Cache_Xcache.html", "link": "Doctrine_Cache_Xcache.html#method__doDelete", "name": "Doctrine_Cache_Xcache::_doDelete", "doc": "&quot;Remove a cache record directly. This method is implemented by the cache\ndrivers and used in Doctrine_Cache_Driver::delete()&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Xcache", "fromLink": "Doctrine_Cache_Xcache.html", "link": "Doctrine_Cache_Xcache.html#method__getCacheKeys", "name": "Doctrine_Cache_Xcache::_getCacheKeys", "doc": "&quot;Fetch an array of all keys stored in cache&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cache_Xcache", "fromLink": "Doctrine_Cache_Xcache.html", "link": "Doctrine_Cache_Xcache.html#method_checkAuth", "name": "Doctrine_Cache_Xcache::checkAuth", "doc": "&quot;Checks that xcache.admin.enable_auth is Off&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Cli.html", "name": "Doctrine_Cli", "doc": "&quot;Command line interface class&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method___construct", "name": "Doctrine_Cli::__construct", "doc": "&quot;__construct&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method_setConfig", "name": "Doctrine_Cli::setConfig", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method_getConfig", "name": "Doctrine_Cli::getConfig", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method_setFormatter", "name": "Doctrine_Cli::setFormatter", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method_getFormatter", "name": "Doctrine_Cli::getFormatter", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method_getConfigValue", "name": "Doctrine_Cli::getConfigValue", "doc": "&quot;Returns the specified value from the config, or the default value, if specified&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method_hasConfigValue", "name": "Doctrine_Cli::hasConfigValue", "doc": "&quot;Returns TRUE if the element in the config has the specified value, or FALSE otherwise&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method_setRegisteredTasks", "name": "Doctrine_Cli::setRegisteredTasks", "doc": "&quot;Sets the array of registered tasks&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method_getRegisteredTasks", "name": "Doctrine_Cli::getRegisteredTasks", "doc": "&quot;Returns an array containing the registered tasks&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method_taskClassIsRegistered", "name": "Doctrine_Cli::taskClassIsRegistered", "doc": "&quot;Returns TRUE if the specified Task-class is registered, or FALSE otherwise&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method_taskNameIsRegistered", "name": "Doctrine_Cli::taskNameIsRegistered", "doc": "&quot;Returns TRUE if a task with the specified name is registered, or FALSE otherwise&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method_setTaskInstance", "name": "Doctrine_Cli::setTaskInstance", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method_getTaskInstance", "name": "Doctrine_Cli::getTaskInstance", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method_includeAndRegisterTaskClasses", "name": "Doctrine_Cli::includeAndRegisterTaskClasses", "doc": "&quot;Called by the constructor, this method includes and registers Doctrine core Tasks and then registers all other\nloaded Task classes&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method_includeAndRegisterDoctrineTaskClasses", "name": "Doctrine_Cli::includeAndRegisterDoctrineTaskClasses", "doc": "&quot;Includes and registers Doctrine-style tasks from the specified directory \/ directories&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method_includeDoctrineTaskClasses", "name": "Doctrine_Cli::includeDoctrineTaskClasses", "doc": "&quot;Attempts to include Doctrine-style Task-classes from the specified directory - and nothing more besides&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method_registerTaskClass", "name": "Doctrine_Cli::registerTaskClass", "doc": "&quot;Registers the specified &lt;em&gt;included&lt;\/em&gt; task-class&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method_classIsTask", "name": "Doctrine_Cli::classIsTask", "doc": "&quot;Returns TRUE if the specified class is a Task, or FALSE otherwise&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method_createTaskInstance", "name": "Doctrine_Cli::createTaskInstance", "doc": "&quot;Creates, and returns, a new instance of the specified Task class&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method_registerIncludedTaskClasses", "name": "Doctrine_Cli::registerIncludedTaskClasses", "doc": "&quot;Registers all loaded classes - by default - or the specified loaded Task classes&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method_notify", "name": "Doctrine_Cli::notify", "doc": "&quot;Notify the formatter of a message&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method_formatExceptionMessage", "name": "Doctrine_Cli::formatExceptionMessage", "doc": "&quot;Formats, and then returns, the message in the specified exception&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method_notifyException", "name": "Doctrine_Cli::notifyException", "doc": "&quot;Notify the formatter of an exception&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method_run", "name": "Doctrine_Cli::run", "doc": "&quot;Public function to run the loaded task with the passed arguments&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method__run", "name": "Doctrine_Cli::_run", "doc": "&quot;Run the actual task execution with the passed arguments&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method_executeTask", "name": "Doctrine_Cli::executeTask", "doc": "&quot;Executes the task with the specified &lt;em&gt;prepared&lt;\/em&gt; arguments&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method_prepareArgs", "name": "Doctrine_Cli::prepareArgs", "doc": "&quot;Prepare the raw arguments for execution. Combines with the required and optional argument\nlist in order to determine a complete array of arguments for the task&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method_printTasks", "name": "Doctrine_Cli::printTasks", "doc": "&quot;Prints an index of all the available tasks in the CLI instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method_assembleArgumentList", "name": "Doctrine_Cli::assembleArgumentList", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method_loadTasks", "name": "Doctrine_Cli::loadTasks", "doc": "&quot;Old method retained for backwards compatibility&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method__getTaskClassFromArgs", "name": "Doctrine_Cli::_getTaskClassFromArgs", "doc": "&quot;Old method retained for backwards compatibility&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli", "fromLink": "Doctrine_Cli.html", "link": "Doctrine_Cli.html#method_getLoadedTasks", "name": "Doctrine_Cli::getLoadedTasks", "doc": "&quot;Old method retained for backwards compatibility&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Cli_AnsiColorFormatter.html", "name": "Doctrine_Cli_AnsiColorFormatter", "doc": "&quot;Doctrine_AnsiColorFormatter provides methods to colorize text to be displayed on a console.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Cli_AnsiColorFormatter", "fromLink": "Doctrine_Cli_AnsiColorFormatter.html", "link": "Doctrine_Cli_AnsiColorFormatter.html#method_setStyle", "name": "Doctrine_Cli_AnsiColorFormatter::setStyle", "doc": "&quot;Sets a new style.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli_AnsiColorFormatter", "fromLink": "Doctrine_Cli_AnsiColorFormatter.html", "link": "Doctrine_Cli_AnsiColorFormatter.html#method_format", "name": "Doctrine_Cli_AnsiColorFormatter::format", "doc": "&quot;Formats a text according to the given style or parameters.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli_AnsiColorFormatter", "fromLink": "Doctrine_Cli_AnsiColorFormatter.html", "link": "Doctrine_Cli_AnsiColorFormatter.html#method_formatSection", "name": "Doctrine_Cli_AnsiColorFormatter::formatSection", "doc": "&quot;Formats a message within a section.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli_AnsiColorFormatter", "fromLink": "Doctrine_Cli_AnsiColorFormatter.html", "link": "Doctrine_Cli_AnsiColorFormatter.html#method_excerpt", "name": "Doctrine_Cli_AnsiColorFormatter::excerpt", "doc": "&quot;Truncates a line.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli_AnsiColorFormatter", "fromLink": "Doctrine_Cli_AnsiColorFormatter.html", "link": "Doctrine_Cli_AnsiColorFormatter.html#method_supportsColors", "name": "Doctrine_Cli_AnsiColorFormatter::supportsColors", "doc": "&quot;Returns true if the stream supports colorization.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Cli_Exception.html", "name": "Doctrine_Cli_Exception", "doc": "&quot;Cli exception class&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Cli_Formatter.html", "name": "Doctrine_Cli_Formatter", "doc": "&quot;Doctrine_Cli_Formatter provides methods to format text to be displayed on a console.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Cli_Formatter", "fromLink": "Doctrine_Cli_Formatter.html", "link": "Doctrine_Cli_Formatter.html#method___construct", "name": "Doctrine_Cli_Formatter::__construct", "doc": "&quot;__construct&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli_Formatter", "fromLink": "Doctrine_Cli_Formatter.html", "link": "Doctrine_Cli_Formatter.html#method_format", "name": "Doctrine_Cli_Formatter::format", "doc": "&quot;Formats a text according to the given parameters.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli_Formatter", "fromLink": "Doctrine_Cli_Formatter.html", "link": "Doctrine_Cli_Formatter.html#method_formatSection", "name": "Doctrine_Cli_Formatter::formatSection", "doc": "&quot;Formats a message within a section.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli_Formatter", "fromLink": "Doctrine_Cli_Formatter.html", "link": "Doctrine_Cli_Formatter.html#method_excerpt", "name": "Doctrine_Cli_Formatter::excerpt", "doc": "&quot;Truncates a line.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Cli_Formatter", "fromLink": "Doctrine_Cli_Formatter.html", "link": "Doctrine_Cli_Formatter.html#method_setMaxLineSize", "name": "Doctrine_Cli_Formatter::setMaxLineSize", "doc": "&quot;Sets the maximum line size.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Collection.html", "name": "Doctrine_Collection", "doc": "&quot;Doctrine_Collection\nCollection of Doctrine_Record objects.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method___construct", "name": "Doctrine_Collection::__construct", "doc": "&quot;constructor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_initNullObject", "name": "Doctrine_Collection::initNullObject", "doc": "&quot;Initializes the null object for this collection&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_create", "name": "Doctrine_Collection::create", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_getTable", "name": "Doctrine_Collection::getTable", "doc": "&quot;Get the table this collection belongs to&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_setData", "name": "Doctrine_Collection::setData", "doc": "&quot;Set the data for the Doctrin_Collection instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_serialize", "name": "Doctrine_Collection::serialize", "doc": "&quot;This method is automatically called when this Doctrine_Collection is serialized&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_unserialize", "name": "Doctrine_Collection::unserialize", "doc": "&quot;This method is automatically called everytime a Doctrine_Collection object is unserialized&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_setKeyColumn", "name": "Doctrine_Collection::setKeyColumn", "doc": "&quot;Sets the key column for this collection&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_getKeyColumn", "name": "Doctrine_Collection::getKeyColumn", "doc": "&quot;Get the name of the key column&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_getData", "name": "Doctrine_Collection::getData", "doc": "&quot;Get all the records as an array&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_getFirst", "name": "Doctrine_Collection::getFirst", "doc": "&quot;Get the first record in the collection&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_getLast", "name": "Doctrine_Collection::getLast", "doc": "&quot;Get the last record in the collection&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_end", "name": "Doctrine_Collection::end", "doc": "&quot;Get the last record in the collection&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_key", "name": "Doctrine_Collection::key", "doc": "&quot;Get the current key&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_setReference", "name": "Doctrine_Collection::setReference", "doc": "&quot;Sets a reference pointer&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_getReference", "name": "Doctrine_Collection::getReference", "doc": "&quot;Get reference to Doctrine_Record instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_remove", "name": "Doctrine_Collection::remove", "doc": "&quot;Removes a specified collection element&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_contains", "name": "Doctrine_Collection::contains", "doc": "&quot;Whether or not this collection contains a specified element&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_search", "name": "Doctrine_Collection::search", "doc": "&quot;Search a Doctrine_Record instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_get", "name": "Doctrine_Collection::get", "doc": "&quot;Gets a record for given key&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_getPrimaryKeys", "name": "Doctrine_Collection::getPrimaryKeys", "doc": "&quot;Get array of primary keys for all the records in the collection&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_getKeys", "name": "Doctrine_Collection::getKeys", "doc": "&quot;Get all keys of the data in the collection&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_count", "name": "Doctrine_Collection::count", "doc": "&quot;Gets the number of records in this collection\nThis class implements interface countable&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_set", "name": "Doctrine_Collection::set", "doc": "&quot;Set a Doctrine_Record instance to the collection&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_add", "name": "Doctrine_Collection::add", "doc": "&quot;Adds a record to collection&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_merge", "name": "Doctrine_Collection::merge", "doc": "&quot;Merges collection into $this and returns merged collection&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_loadRelated", "name": "Doctrine_Collection::loadRelated", "doc": "&quot;Load all relationships or the named relationship passed&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_populateRelated", "name": "Doctrine_Collection::populateRelated", "doc": "&quot;Populate the relationship $name for all records in the passed collection&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_getNormalIterator", "name": "Doctrine_Collection::getNormalIterator", "doc": "&quot;Get normal iterator - an iterator that will not expand this collection&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_takeSnapshot", "name": "Doctrine_Collection::takeSnapshot", "doc": "&quot;Takes a snapshot from this collection&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_getSnapshot", "name": "Doctrine_Collection::getSnapshot", "doc": "&quot;Gets the data of the last snapshot&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_processDiff", "name": "Doctrine_Collection::processDiff", "doc": "&quot;Processes the difference of the last snapshot and the current data&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_toArray", "name": "Doctrine_Collection::toArray", "doc": "&quot;Mimics the result of a $query-&gt;execute(array(), Doctrine_Core::HYDRATE_ARRAY);&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_toKeyValueArray", "name": "Doctrine_Collection::toKeyValueArray", "doc": "&quot;Build an array made up of the values from the 2 specified columns&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_toHierarchy", "name": "Doctrine_Collection::toHierarchy", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_fromArray", "name": "Doctrine_Collection::fromArray", "doc": "&quot;Populate a Doctrine_Collection from an array of data&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_synchronizeWithArray", "name": "Doctrine_Collection::synchronizeWithArray", "doc": "&quot;synchronizes a Doctrine_Collection with data from an array&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_synchronizeFromArray", "name": "Doctrine_Collection::synchronizeFromArray", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_exportTo", "name": "Doctrine_Collection::exportTo", "doc": "&quot;Export a Doctrine_Collection to one of the supported Doctrine_Parser formats&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_importFrom", "name": "Doctrine_Collection::importFrom", "doc": "&quot;Import data to a Doctrine_Collection from one of the supported Doctrine_Parser formats&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_getDeleteDiff", "name": "Doctrine_Collection::getDeleteDiff", "doc": "&quot;Perform a delete diff between the last snapshot and the current data&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_getInsertDiff", "name": "Doctrine_Collection::getInsertDiff", "doc": "&quot;Perform a insert diff between the last snapshot and the current data&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_compareRecords", "name": "Doctrine_Collection::compareRecords", "doc": "&quot;Compares two records. To be used on _snapshot diffs using array_udiff&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_save", "name": "Doctrine_Collection::save", "doc": "&quot;Saves all records of this collection and processes the\ndifference of the last snapshot and the current data&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_replace", "name": "Doctrine_Collection::replace", "doc": "&quot;Replaces all records of this collection and processes the\ndifference of the last snapshot and the current data&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_delete", "name": "Doctrine_Collection::delete", "doc": "&quot;Deletes all records from this collection&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_clear", "name": "Doctrine_Collection::clear", "doc": "&quot;Clears the collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_free", "name": "Doctrine_Collection::free", "doc": "&quot;Frees the resources used by the collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_getIterator", "name": "Doctrine_Collection::getIterator", "doc": "&quot;Get collection data iterator&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method___toString", "name": "Doctrine_Collection::__toString", "doc": "&quot;Returns a string representation of this object&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_getRelation", "name": "Doctrine_Collection::getRelation", "doc": "&quot;Returns the relation object&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection", "fromLink": "Doctrine_Collection.html", "link": "Doctrine_Collection.html#method_isModified", "name": "Doctrine_Collection::isModified", "doc": "&quot;checks if one of the containing records is modified\nreturns true if modified, false otherwise&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Collection_Exception.html", "name": "Doctrine_Collection_Exception", "doc": "&quot;Collection exception class&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Collection_Iterator.html", "name": "Doctrine_Collection_Iterator", "doc": "&quot;Doctrine_Collection_Iterator\niterates through Doctrine_Collection&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Collection_Iterator", "fromLink": "Doctrine_Collection_Iterator.html", "link": "Doctrine_Collection_Iterator.html#method___construct", "name": "Doctrine_Collection_Iterator::__construct", "doc": "&quot;constructor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection_Iterator", "fromLink": "Doctrine_Collection_Iterator.html", "link": "Doctrine_Collection_Iterator.html#method_rewind", "name": "Doctrine_Collection_Iterator::rewind", "doc": "&quot;rewinds the iterator&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection_Iterator", "fromLink": "Doctrine_Collection_Iterator.html", "link": "Doctrine_Collection_Iterator.html#method_key", "name": "Doctrine_Collection_Iterator::key", "doc": "&quot;returns the current key&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection_Iterator", "fromLink": "Doctrine_Collection_Iterator.html", "link": "Doctrine_Collection_Iterator.html#method_current", "name": "Doctrine_Collection_Iterator::current", "doc": "&quot;returns the current record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection_Iterator", "fromLink": "Doctrine_Collection_Iterator.html", "link": "Doctrine_Collection_Iterator.html#method_next", "name": "Doctrine_Collection_Iterator::next", "doc": "&quot;advances the internal pointer&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Collection_Iterator_Expandable.html", "name": "Doctrine_Collection_Iterator_Expandable", "doc": "&quot;Expandable collection iterator class&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Collection_Iterator_Expandable", "fromLink": "Doctrine_Collection_Iterator_Expandable.html", "link": "Doctrine_Collection_Iterator_Expandable.html#method_valid", "name": "Doctrine_Collection_Iterator_Expandable::valid", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Collection_Iterator_Normal.html", "name": "Doctrine_Collection_Iterator_Normal", "doc": "&quot;Doctrine_Collection_Iterator_Normal&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Collection_Iterator_Normal", "fromLink": "Doctrine_Collection_Iterator_Normal.html", "link": "Doctrine_Collection_Iterator_Normal.html#method_valid", "name": "Doctrine_Collection_Iterator_Normal::valid", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Collection_Iterator_Offset.html", "name": "Doctrine_Collection_Iterator_Offset", "doc": "&quot;Doctrine_Collection_Iterator_Normal&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Collection_Iterator_Offset", "fromLink": "Doctrine_Collection_Iterator_Offset.html", "link": "Doctrine_Collection_Iterator_Offset.html#method_valid", "name": "Doctrine_Collection_Iterator_Offset::valid", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Collection_Offset.html", "name": "Doctrine_Collection_Offset", "doc": "&quot;Doctrine_Collection_Offset\nCollection of Doctrine_Record objects.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Collection_Offset", "fromLink": "Doctrine_Collection_Offset.html", "link": "Doctrine_Collection_Offset.html#method___construct", "name": "Doctrine_Collection_Offset::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection_Offset", "fromLink": "Doctrine_Collection_Offset.html", "link": "Doctrine_Collection_Offset.html#method_getLimit", "name": "Doctrine_Collection_Offset::getLimit", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection_Offset", "fromLink": "Doctrine_Collection_Offset.html", "link": "Doctrine_Collection_Offset.html#method_getIterator", "name": "Doctrine_Collection_Offset::getIterator", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Collection_OnDemand.html", "name": "Doctrine_Collection_OnDemand", "doc": "&quot;Doctrine_Collection_OnDemand\niterates through Doctrine_Records hydrating one at a time&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Collection_OnDemand", "fromLink": "Doctrine_Collection_OnDemand.html", "link": "Doctrine_Collection_OnDemand.html#method___construct", "name": "Doctrine_Collection_OnDemand::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection_OnDemand", "fromLink": "Doctrine_Collection_OnDemand.html", "link": "Doctrine_Collection_OnDemand.html#method_rewind", "name": "Doctrine_Collection_OnDemand::rewind", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection_OnDemand", "fromLink": "Doctrine_Collection_OnDemand.html", "link": "Doctrine_Collection_OnDemand.html#method_key", "name": "Doctrine_Collection_OnDemand::key", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection_OnDemand", "fromLink": "Doctrine_Collection_OnDemand.html", "link": "Doctrine_Collection_OnDemand.html#method_current", "name": "Doctrine_Collection_OnDemand::current", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection_OnDemand", "fromLink": "Doctrine_Collection_OnDemand.html", "link": "Doctrine_Collection_OnDemand.html#method_next", "name": "Doctrine_Collection_OnDemand::next", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Collection_OnDemand", "fromLink": "Doctrine_Collection_OnDemand.html", "link": "Doctrine_Collection_OnDemand.html#method_valid", "name": "Doctrine_Collection_OnDemand::valid", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Column.html", "name": "Doctrine_Column", "doc": "&quot;Doctrine_Column\nThis class represents a database column&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Column", "fromLink": "Doctrine_Column.html", "link": "Doctrine_Column.html#method___construct", "name": "Doctrine_Column::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Column", "fromLink": "Doctrine_Column.html", "link": "Doctrine_Column.html#method_getDefinition", "name": "Doctrine_Column::getDefinition", "doc": "&quot;Returns the definition of the column.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Column", "fromLink": "Doctrine_Column.html", "link": "Doctrine_Column.html#method_contains", "name": "Doctrine_Column::contains", "doc": "&quot;contains&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Column", "fromLink": "Doctrine_Column.html", "link": "Doctrine_Column.html#method_get", "name": "Doctrine_Column::get", "doc": "&quot;get&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Column", "fromLink": "Doctrine_Column.html", "link": "Doctrine_Column.html#method_set", "name": "Doctrine_Column::set", "doc": "&quot;set&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Column", "fromLink": "Doctrine_Column.html", "link": "Doctrine_Column.html#method_getEnumValues", "name": "Doctrine_Column::getEnumValues", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Column", "fromLink": "Doctrine_Column.html", "link": "Doctrine_Column.html#method_enumValue", "name": "Doctrine_Column::enumValue", "doc": "&quot;Retrieves an enum value.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Column", "fromLink": "Doctrine_Column.html", "link": "Doctrine_Column.html#method_enumIndex", "name": "Doctrine_Column::enumIndex", "doc": "&quot;enumIndex&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Column", "fromLink": "Doctrine_Column.html", "link": "Doctrine_Column.html#method_count", "name": "Doctrine_Column::count", "doc": "&quot;count&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Column", "fromLink": "Doctrine_Column.html", "link": "Doctrine_Column.html#method_getIterator", "name": "Doctrine_Column::getIterator", "doc": "&quot;getIterator&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Compiler.html", "name": "Doctrine_Compiler", "doc": "&quot;Doctrine_Compiler\nThis class can be used for compiling the entire Doctrine framework into a single file&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Compiler", "fromLink": "Doctrine_Compiler.html", "link": "Doctrine_Compiler.html#method_compile", "name": "Doctrine_Compiler::compile", "doc": "&quot;method for making a single file of most used doctrine runtime components\nincluding the compiled file instead of multiple files (in worst\ncases dozens of files) can improve performance by an order of magnitude&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Compiler_Exception.html", "name": "Doctrine_Compiler_Exception", "doc": "&quot;Doctrine_Compiler_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Configurable.html", "name": "Doctrine_Configurable", "doc": "&quot;Doctrine_Configurable\nthe base for Doctrine_Table, Doctrine_Manager and Doctrine_Connection&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Configurable", "fromLink": "Doctrine_Configurable.html", "link": "Doctrine_Configurable.html#method_setAttribute", "name": "Doctrine_Configurable::setAttribute", "doc": "&quot;setAttribute\nsets a given attribute&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Configurable", "fromLink": "Doctrine_Configurable.html", "link": "Doctrine_Configurable.html#method_getParams", "name": "Doctrine_Configurable::getParams", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Configurable", "fromLink": "Doctrine_Configurable.html", "link": "Doctrine_Configurable.html#method_getParamNamespaces", "name": "Doctrine_Configurable::getParamNamespaces", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Configurable", "fromLink": "Doctrine_Configurable.html", "link": "Doctrine_Configurable.html#method_setParam", "name": "Doctrine_Configurable::setParam", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Configurable", "fromLink": "Doctrine_Configurable.html", "link": "Doctrine_Configurable.html#method_getParam", "name": "Doctrine_Configurable::getParam", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Configurable", "fromLink": "Doctrine_Configurable.html", "link": "Doctrine_Configurable.html#method_setImpl", "name": "Doctrine_Configurable::setImpl", "doc": "&quot;setImpl\nbinds given class to given template name&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Configurable", "fromLink": "Doctrine_Configurable.html", "link": "Doctrine_Configurable.html#method_getImpl", "name": "Doctrine_Configurable::getImpl", "doc": "&quot;getImpl\nreturns the implementation for given class&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Configurable", "fromLink": "Doctrine_Configurable.html", "link": "Doctrine_Configurable.html#method_hasImpl", "name": "Doctrine_Configurable::hasImpl", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Configurable", "fromLink": "Doctrine_Configurable.html", "link": "Doctrine_Configurable.html#method_setEventListener", "name": "Doctrine_Configurable::setEventListener", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Configurable", "fromLink": "Doctrine_Configurable.html", "link": "Doctrine_Configurable.html#method_addRecordListener", "name": "Doctrine_Configurable::addRecordListener", "doc": "&quot;addRecordListener&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Configurable", "fromLink": "Doctrine_Configurable.html", "link": "Doctrine_Configurable.html#method_getRecordListener", "name": "Doctrine_Configurable::getRecordListener", "doc": "&quot;getListener&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Configurable", "fromLink": "Doctrine_Configurable.html", "link": "Doctrine_Configurable.html#method_setRecordListener", "name": "Doctrine_Configurable::setRecordListener", "doc": "&quot;setListener&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Configurable", "fromLink": "Doctrine_Configurable.html", "link": "Doctrine_Configurable.html#method_addListener", "name": "Doctrine_Configurable::addListener", "doc": "&quot;addListener&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Configurable", "fromLink": "Doctrine_Configurable.html", "link": "Doctrine_Configurable.html#method_getListener", "name": "Doctrine_Configurable::getListener", "doc": "&quot;getListener&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Configurable", "fromLink": "Doctrine_Configurable.html", "link": "Doctrine_Configurable.html#method_setListener", "name": "Doctrine_Configurable::setListener", "doc": "&quot;setListener&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Configurable", "fromLink": "Doctrine_Configurable.html", "link": "Doctrine_Configurable.html#method_getAttribute", "name": "Doctrine_Configurable::getAttribute", "doc": "&quot;returns the value of an attribute&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Configurable", "fromLink": "Doctrine_Configurable.html", "link": "Doctrine_Configurable.html#method_unsetAttribute", "name": "Doctrine_Configurable::unsetAttribute", "doc": "&quot;Unset an attribute from this levels attributes&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Configurable", "fromLink": "Doctrine_Configurable.html", "link": "Doctrine_Configurable.html#method_getAttributes", "name": "Doctrine_Configurable::getAttributes", "doc": "&quot;getAttributes\nreturns all attributes as an array&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Configurable", "fromLink": "Doctrine_Configurable.html", "link": "Doctrine_Configurable.html#method_setCharset", "name": "Doctrine_Configurable::setCharset", "doc": "&quot;Set the charset&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Configurable", "fromLink": "Doctrine_Configurable.html", "link": "Doctrine_Configurable.html#method_getCharset", "name": "Doctrine_Configurable::getCharset", "doc": "&quot;Get the charset&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Configurable", "fromLink": "Doctrine_Configurable.html", "link": "Doctrine_Configurable.html#method_setCollate", "name": "Doctrine_Configurable::setCollate", "doc": "&quot;Set the collate&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Configurable", "fromLink": "Doctrine_Configurable.html", "link": "Doctrine_Configurable.html#method_getCollate", "name": "Doctrine_Configurable::getCollate", "doc": "&quot;Get the collate&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Configurable", "fromLink": "Doctrine_Configurable.html", "link": "Doctrine_Configurable.html#method_setParent", "name": "Doctrine_Configurable::setParent", "doc": "&quot;sets a parent for this configurable component\nthe parent must be configurable component itself&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Configurable", "fromLink": "Doctrine_Configurable.html", "link": "Doctrine_Configurable.html#method_getParent", "name": "Doctrine_Configurable::getParent", "doc": "&quot;getParent\nreturns the parent of this component&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Connection.html", "name": "Doctrine_Connection", "doc": "&quot;Doctrine_Connection&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method___construct", "name": "Doctrine_Connection::__construct", "doc": "&quot;the constructor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_isConnected", "name": "Doctrine_Connection::isConnected", "doc": "&quot;Check wherther the connection to the database has been made yet&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_getOptions", "name": "Doctrine_Connection::getOptions", "doc": "&quot;getOptions&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_getOption", "name": "Doctrine_Connection::getOption", "doc": "&quot;getOption&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_setOption", "name": "Doctrine_Connection::setOption", "doc": "&quot;setOption&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_getAttribute", "name": "Doctrine_Connection::getAttribute", "doc": "&quot;getAttribute\nretrieves a database connection attribute&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_getAvailableDrivers", "name": "Doctrine_Connection::getAvailableDrivers", "doc": "&quot;returns an array of available PDO drivers&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_getSupportedDrivers", "name": "Doctrine_Connection::getSupportedDrivers", "doc": "&quot;Returns an array of supported drivers by Doctrine&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_setAttribute", "name": "Doctrine_Connection::setAttribute", "doc": "&quot;setAttribute\nsets an attribute&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_getName", "name": "Doctrine_Connection::getName", "doc": "&quot;getName\nreturns the name of this driver&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_setName", "name": "Doctrine_Connection::setName", "doc": "&quot;setName&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_getDriverName", "name": "Doctrine_Connection::getDriverName", "doc": "&quot;getDriverName&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method___get", "name": "Doctrine_Connection::__get", "doc": "&quot;__get\nlazy loads given module and returns it&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_getManager", "name": "Doctrine_Connection::getManager", "doc": "&quot;returns the manager that created this connection&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_getDbh", "name": "Doctrine_Connection::getDbh", "doc": "&quot;returns the database handler of which this connection uses&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_connect", "name": "Doctrine_Connection::connect", "doc": "&quot;connect\nconnects into database&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_incrementQueryCount", "name": "Doctrine_Connection::incrementQueryCount", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_driverName", "name": "Doctrine_Connection::driverName", "doc": "&quot;converts given driver name&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_supports", "name": "Doctrine_Connection::supports", "doc": "&quot;supports&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_replace", "name": "Doctrine_Connection::replace", "doc": "null"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_delete", "name": "Doctrine_Connection::delete", "doc": "&quot;deletes table row(s) matching the specified identifier&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_update", "name": "Doctrine_Connection::update", "doc": "&quot;Updates table row(s) with specified data.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_insert", "name": "Doctrine_Connection::insert", "doc": "&quot;Inserts a table row with specified data.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_quoteIdentifier", "name": "Doctrine_Connection::quoteIdentifier", "doc": "&quot;Quote a string so it can be safely used as a table or column name&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_quoteMultipleIdentifier", "name": "Doctrine_Connection::quoteMultipleIdentifier", "doc": "&quot;quoteMultipleIdentifier\nQuotes multiple identifier strings&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_convertBooleans", "name": "Doctrine_Connection::convertBooleans", "doc": "&quot;convertBooleans\nsome drivers need the boolean values to be converted into integers\nwhen using DQL API&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_quote", "name": "Doctrine_Connection::quote", "doc": "&quot;quote\nquotes given input parameter&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_setDateFormat", "name": "Doctrine_Connection::setDateFormat", "doc": "&quot;Set the date\/time format for the current connection&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_fetchAll", "name": "Doctrine_Connection::fetchAll", "doc": "&quot;fetchAll&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_fetchOne", "name": "Doctrine_Connection::fetchOne", "doc": "&quot;fetchOne&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_fetchRow", "name": "Doctrine_Connection::fetchRow", "doc": "&quot;fetchRow&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_fetchArray", "name": "Doctrine_Connection::fetchArray", "doc": "&quot;fetchArray&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_fetchColumn", "name": "Doctrine_Connection::fetchColumn", "doc": "&quot;fetchColumn&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_fetchAssoc", "name": "Doctrine_Connection::fetchAssoc", "doc": "&quot;fetchAssoc&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_fetchBoth", "name": "Doctrine_Connection::fetchBoth", "doc": "&quot;fetchBoth&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_query", "name": "Doctrine_Connection::query", "doc": "&quot;query\nqueries the database using Doctrine Query Language\nreturns a collection of Doctrine_Record objects&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_prepare", "name": "Doctrine_Connection::prepare", "doc": "&quot;prepare&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_queryOne", "name": "Doctrine_Connection::queryOne", "doc": "&quot;query\nqueries the database using Doctrine Query Language and returns\nthe first record found&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_select", "name": "Doctrine_Connection::select", "doc": "&quot;queries the database with limit and offset\nadded to the query and returns a Doctrine_Connection_Statement object&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_standaloneQuery", "name": "Doctrine_Connection::standaloneQuery", "doc": "&quot;standaloneQuery&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_execute", "name": "Doctrine_Connection::execute", "doc": "&quot;execute&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_exec", "name": "Doctrine_Connection::exec", "doc": "&quot;exec&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_rethrowException", "name": "Doctrine_Connection::rethrowException", "doc": "&quot;rethrowException&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_hasTable", "name": "Doctrine_Connection::hasTable", "doc": "&quot;hasTable\nwhether or not this connection has table $name initialized&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_getTable", "name": "Doctrine_Connection::getTable", "doc": "&quot;returns a table object for given component name&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_getTables", "name": "Doctrine_Connection::getTables", "doc": "&quot;returns an array of all initialized tables&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_getIterator", "name": "Doctrine_Connection::getIterator", "doc": "&quot;returns an iterator that iterators through all\ninitialized table objects&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_count", "name": "Doctrine_Connection::count", "doc": "&quot;returns the count of initialized table objects&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_addTable", "name": "Doctrine_Connection::addTable", "doc": "&quot;addTable\nadds a Doctrine_Table object into connection registry&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_create", "name": "Doctrine_Connection::create", "doc": "&quot;create\ncreates a record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_createQuery", "name": "Doctrine_Connection::createQuery", "doc": "&quot;Creates a new Doctrine_Query object that operates on this connection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_flush", "name": "Doctrine_Connection::flush", "doc": "&quot;flush\nsaves all the records from all tables\nthis operation is isolated using a transaction&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_clear", "name": "Doctrine_Connection::clear", "doc": "&quot;clear\nclears all repositories&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_evictTables", "name": "Doctrine_Connection::evictTables", "doc": "&quot;evictTables\nevicts all tables&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_close", "name": "Doctrine_Connection::close", "doc": "&quot;close\ncloses the connection&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_getTransactionLevel", "name": "Doctrine_Connection::getTransactionLevel", "doc": "&quot;get the current transaction nesting level&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_errorCode", "name": "Doctrine_Connection::errorCode", "doc": "&quot;errorCode\nFetch the SQLSTATE associated with the last operation on the database handle&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_errorInfo", "name": "Doctrine_Connection::errorInfo", "doc": "&quot;errorInfo\nFetch extended error information associated with the last operation on the database handle&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_getResultCacheDriver", "name": "Doctrine_Connection::getResultCacheDriver", "doc": "&quot;getResultCacheDriver&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_getQueryCacheDriver", "name": "Doctrine_Connection::getQueryCacheDriver", "doc": "&quot;getQueryCacheDriver&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_lastInsertId", "name": "Doctrine_Connection::lastInsertId", "doc": "&quot;lastInsertId&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_beginTransaction", "name": "Doctrine_Connection::beginTransaction", "doc": "&quot;beginTransaction\nStart a transaction or set a savepoint.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_beginInternalTransaction", "name": "Doctrine_Connection::beginInternalTransaction", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_commit", "name": "Doctrine_Connection::commit", "doc": "&quot;commit\nCommit the database changes done during a transaction that is in\nprogress or release a savepoint. This function may only be called when\nauto-committing is disabled, otherwise it will fail.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_rollback", "name": "Doctrine_Connection::rollback", "doc": "&quot;rollback\nCancel any database changes done during a transaction or since a specific\nsavepoint that is in progress. This function may only be called when\nauto-committing is disabled, otherwise it will fail. Therefore, a new\ntransaction is implicitly started after canceling the pending changes.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_createDatabase", "name": "Doctrine_Connection::createDatabase", "doc": "&quot;createDatabase&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_dropDatabase", "name": "Doctrine_Connection::dropDatabase", "doc": "&quot;dropDatabase&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_getTmpConnection", "name": "Doctrine_Connection::getTmpConnection", "doc": "&quot;getTmpConnection&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_modifyLimitQuery", "name": "Doctrine_Connection::modifyLimitQuery", "doc": "&quot;modifyLimitQuery&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_modifyLimitSubquery", "name": "Doctrine_Connection::modifyLimitSubquery", "doc": "&quot;Creates dbms specific LIMIT\/OFFSET SQL for the subqueries that are used in the\ncontext of the limit-subquery algorithm.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method___toString", "name": "Doctrine_Connection::__toString", "doc": "&quot;returns a string representation of this object&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_serialize", "name": "Doctrine_Connection::serialize", "doc": "&quot;Serialize. Remove database connection(pdo) since it cannot be serialized&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_unserialize", "name": "Doctrine_Connection::unserialize", "doc": "&quot;Unserialize. Recreate connection from serialized content&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_generateUniqueRelationForeignKeyName", "name": "Doctrine_Connection::generateUniqueRelationForeignKeyName", "doc": "&quot;Get\/generate a unique foreign key name for a relationship&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method_generateUniqueIndexName", "name": "Doctrine_Connection::generateUniqueIndexName", "doc": "&quot;Get\/generate unique index name for a table name and set of fields&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection", "fromLink": "Doctrine_Connection.html", "link": "Doctrine_Connection.html#method__generateUniqueName", "name": "Doctrine_Connection::_generateUniqueName", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Connection_Common.html", "name": "Doctrine_Connection_Common", "doc": "&quot;standard connection, the parent of pgsql, mysql and sqlite&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Connection_Common", "fromLink": "Doctrine_Connection_Common.html", "link": "Doctrine_Connection_Common.html#method_modifyLimitQuery", "name": "Doctrine_Connection_Common::modifyLimitQuery", "doc": "&quot;Adds an driver-specific LIMIT clause to the query&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Connection_Db2.html", "name": "Doctrine_Connection_Db2", "doc": "&quot;Doctrine_Connection_Db2&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Connection_Db2", "fromLink": "Doctrine_Connection_Db2.html", "link": "Doctrine_Connection_Db2.html#method_modifyLimitQuery", "name": "Doctrine_Connection_Db2::modifyLimitQuery", "doc": "&quot;Adds an driver-specific LIMIT clause to the query&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Connection_Exception.html", "name": "Doctrine_Connection_Exception", "doc": "&quot;Doctrine_Exception&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Connection_Exception", "fromLink": "Doctrine_Connection_Exception.html", "link": "Doctrine_Connection_Exception.html#method_getPortableCode", "name": "Doctrine_Connection_Exception::getPortableCode", "doc": "&quot;getPortableCode\nreturns portable error code&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Exception", "fromLink": "Doctrine_Connection_Exception.html", "link": "Doctrine_Connection_Exception.html#method_getPortableMessage", "name": "Doctrine_Connection_Exception::getPortableMessage", "doc": "&quot;getPortableMessage\nreturns portable error message&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Exception", "fromLink": "Doctrine_Connection_Exception.html", "link": "Doctrine_Connection_Exception.html#method_errorMessage", "name": "Doctrine_Connection_Exception::errorMessage", "doc": "&quot;Return a textual error message for a Doctrine error code&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Exception", "fromLink": "Doctrine_Connection_Exception.html", "link": "Doctrine_Connection_Exception.html#method_processErrorInfo", "name": "Doctrine_Connection_Exception::processErrorInfo", "doc": "&quot;This method checks if native error code\/message can be\nconverted into a portable code and then adds this\nportable error code to $portableCode field&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Connection_Mock.html", "name": "Doctrine_Connection_Mock", "doc": "&quot;Doctrine_Connection_Mysql&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Connection_Mock", "fromLink": "Doctrine_Connection_Mock.html", "link": "Doctrine_Connection_Mock.html#method___construct", "name": "Doctrine_Connection_Mock::__construct", "doc": "&quot;the constructor&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Connection_Module.html", "name": "Doctrine_Connection_Module", "doc": "&quot;Doctrine_Connection_Module&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Connection_Module", "fromLink": "Doctrine_Connection_Module.html", "link": "Doctrine_Connection_Module.html#method___construct", "name": "Doctrine_Connection_Module::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Module", "fromLink": "Doctrine_Connection_Module.html", "link": "Doctrine_Connection_Module.html#method_getConnection", "name": "Doctrine_Connection_Module::getConnection", "doc": "&quot;getConnection\nreturns the connection object this module uses&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Module", "fromLink": "Doctrine_Connection_Module.html", "link": "Doctrine_Connection_Module.html#method_getModuleName", "name": "Doctrine_Connection_Module::getModuleName", "doc": "&quot;getModuleName\nreturns the name of this module&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Connection_Mssql.html", "name": "Doctrine_Connection_Mssql", "doc": "&quot;Doctrine_Connection_Mssql&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Connection_Mssql", "fromLink": "Doctrine_Connection_Mssql.html", "link": "Doctrine_Connection_Mssql.html#method___construct", "name": "Doctrine_Connection_Mssql::__construct", "doc": "&quot;the constructor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Mssql", "fromLink": "Doctrine_Connection_Mssql.html", "link": "Doctrine_Connection_Mssql.html#method_quoteIdentifier", "name": "Doctrine_Connection_Mssql::quoteIdentifier", "doc": "&quot;quoteIdentifier\nQuote a string so it can be safely used as a table \/ column name&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Mssql", "fromLink": "Doctrine_Connection_Mssql.html", "link": "Doctrine_Connection_Mssql.html#method_modifyLimitQuery", "name": "Doctrine_Connection_Mssql::modifyLimitQuery", "doc": "&quot;Adds an adapter-specific LIMIT clause to the SELECT statement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Mssql", "fromLink": "Doctrine_Connection_Mssql.html", "link": "Doctrine_Connection_Mssql.html#method_modifyOrderByColumn", "name": "Doctrine_Connection_Mssql::modifyOrderByColumn", "doc": "&quot;Order and Group By are not possible on columns from type text.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Mssql", "fromLink": "Doctrine_Connection_Mssql.html", "link": "Doctrine_Connection_Mssql.html#method_modifyLimitSubquery", "name": "Doctrine_Connection_Mssql::modifyLimitSubquery", "doc": "&quot;Creates dbms specific LIMIT\/OFFSET SQL for the subqueries that are used in the\ncontext of the limit-subquery algorithm.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Mssql", "fromLink": "Doctrine_Connection_Mssql.html", "link": "Doctrine_Connection_Mssql.html#method_getServerVersion", "name": "Doctrine_Connection_Mssql::getServerVersion", "doc": "&quot;return version information about the server&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Mssql", "fromLink": "Doctrine_Connection_Mssql.html", "link": "Doctrine_Connection_Mssql.html#method_checkSequence", "name": "Doctrine_Connection_Mssql::checkSequence", "doc": "&quot;Checks if there&#039;s a sequence that exists.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Mssql", "fromLink": "Doctrine_Connection_Mssql.html", "link": "Doctrine_Connection_Mssql.html#method_execute", "name": "Doctrine_Connection_Mssql::execute", "doc": "&quot;execute&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Mssql", "fromLink": "Doctrine_Connection_Mssql.html", "link": "Doctrine_Connection_Mssql.html#method_exec", "name": "Doctrine_Connection_Mssql::exec", "doc": "&quot;execute&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Mssql", "fromLink": "Doctrine_Connection_Mssql.html", "link": "Doctrine_Connection_Mssql.html#method_replaceBoundParamsWithInlineValuesInQuery", "name": "Doctrine_Connection_Mssql::replaceBoundParamsWithInlineValuesInQuery", "doc": "&quot;Replaces bound parameters and their placeholders with explicit values.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Mssql", "fromLink": "Doctrine_Connection_Mssql.html", "link": "Doctrine_Connection_Mssql.html#method_insert", "name": "Doctrine_Connection_Mssql::insert", "doc": "&quot;Inserts a table row with specified data.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Connection_Mssql_Exception.html", "name": "Doctrine_Connection_Mssql_Exception", "doc": "&quot;Doctrine_Connection_Mssql_Exception&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Connection_Mssql_Exception", "fromLink": "Doctrine_Connection_Mssql_Exception.html", "link": "Doctrine_Connection_Mssql_Exception.html#method_processErrorInfo", "name": "Doctrine_Connection_Mssql_Exception::processErrorInfo", "doc": "&quot;This method checks if native error code\/message can be\nconverted into a portable code and then adds this\nportable error code to $portableCode field&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Connection_Mysql.html", "name": "Doctrine_Connection_Mysql", "doc": "&quot;Doctrine_Connection_Mysql&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Connection_Mysql", "fromLink": "Doctrine_Connection_Mysql.html", "link": "Doctrine_Connection_Mysql.html#method___construct", "name": "Doctrine_Connection_Mysql::__construct", "doc": "&quot;the constructor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Mysql", "fromLink": "Doctrine_Connection_Mysql.html", "link": "Doctrine_Connection_Mysql.html#method_connect", "name": "Doctrine_Connection_Mysql::connect", "doc": "&quot;Overrides connect Method, to add specific attributes\nPDO emulate prepares is required to avoid bugs on mysql &amp;lt; 5.1\nwhen trying to prepare DROP DATABASE or CREATE DATABASE statements&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Mysql", "fromLink": "Doctrine_Connection_Mysql.html", "link": "Doctrine_Connection_Mysql.html#method_getDatabaseName", "name": "Doctrine_Connection_Mysql::getDatabaseName", "doc": "&quot;returns the name of the connected database&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Mysql", "fromLink": "Doctrine_Connection_Mysql.html", "link": "Doctrine_Connection_Mysql.html#method_setCharset", "name": "Doctrine_Connection_Mysql::setCharset", "doc": "&quot;Set the charset on the current connection&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Mysql", "fromLink": "Doctrine_Connection_Mysql.html", "link": "Doctrine_Connection_Mysql.html#method_replace", "name": "Doctrine_Connection_Mysql::replace", "doc": "&quot;Execute a SQL REPLACE query. A REPLACE query is identical to a INSERT\nquery, except that if there is already a row in the table with the same\nkey field values, the REPLACE query just updates its values instead of\ninserting a new row.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Connection_Mysql_Exception.html", "name": "Doctrine_Connection_Mysql_Exception", "doc": "&quot;Doctrine_Connection_Mysql_Exception&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Connection_Mysql_Exception", "fromLink": "Doctrine_Connection_Mysql_Exception.html", "link": "Doctrine_Connection_Mysql_Exception.html#method_processErrorInfo", "name": "Doctrine_Connection_Mysql_Exception::processErrorInfo", "doc": "&quot;This method checks if native error code\/message can be\nconverted into a portable code and then adds this\nportable error code to $portableCode field&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Connection_Oracle.html", "name": "Doctrine_Connection_Oracle", "doc": "&quot;Doctrine_Connection_Oracle&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Connection_Oracle", "fromLink": "Doctrine_Connection_Oracle.html", "link": "Doctrine_Connection_Oracle.html#method___construct", "name": "Doctrine_Connection_Oracle::__construct", "doc": "&quot;the constructor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Oracle", "fromLink": "Doctrine_Connection_Oracle.html", "link": "Doctrine_Connection_Oracle.html#method_setDateFormat", "name": "Doctrine_Connection_Oracle::setDateFormat", "doc": "&quot;Sets up the date\/time format&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Oracle", "fromLink": "Doctrine_Connection_Oracle.html", "link": "Doctrine_Connection_Oracle.html#method_modifyLimitQuery", "name": "Doctrine_Connection_Oracle::modifyLimitQuery", "doc": "&quot;Adds an driver-specific LIMIT clause to the query&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Oracle", "fromLink": "Doctrine_Connection_Oracle.html", "link": "Doctrine_Connection_Oracle.html#method_modifyLimitSubquery", "name": "Doctrine_Connection_Oracle::modifyLimitSubquery", "doc": "&quot;Creates the SQL for Oracle that can be used in the subquery for the limit-subquery\nalgorithm.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Oracle", "fromLink": "Doctrine_Connection_Oracle.html", "link": "Doctrine_Connection_Oracle.html#method_getTmpConnection", "name": "Doctrine_Connection_Oracle::getTmpConnection", "doc": "&quot;getTmpConnection&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Oracle", "fromLink": "Doctrine_Connection_Oracle.html", "link": "Doctrine_Connection_Oracle.html#method_quote", "name": "Doctrine_Connection_Oracle::quote", "doc": "&quot;Override quote behaviour for boolean to fix issues with quoting of\nboolean values.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Connection_Oracle_Exception.html", "name": "Doctrine_Connection_Oracle_Exception", "doc": "&quot;Doctrine_Connection_Oracle_Exception&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Connection_Oracle_Exception", "fromLink": "Doctrine_Connection_Oracle_Exception.html", "link": "Doctrine_Connection_Oracle_Exception.html#method_processErrorInfo", "name": "Doctrine_Connection_Oracle_Exception::processErrorInfo", "doc": "&quot;This method checks if native error code\/message can be\nconverted into a portable code and then adds this\nportable error code to $portableCode field&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Connection_Pgsql.html", "name": "Doctrine_Connection_Pgsql", "doc": "&quot;Doctrine_Connection_Pgsql&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Connection_Pgsql", "fromLink": "Doctrine_Connection_Pgsql.html", "link": "Doctrine_Connection_Pgsql.html#method___construct", "name": "Doctrine_Connection_Pgsql::__construct", "doc": "&quot;the constructor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Pgsql", "fromLink": "Doctrine_Connection_Pgsql.html", "link": "Doctrine_Connection_Pgsql.html#method_setCharset", "name": "Doctrine_Connection_Pgsql::setCharset", "doc": "&quot;Set the charset on the current connection&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Pgsql", "fromLink": "Doctrine_Connection_Pgsql.html", "link": "Doctrine_Connection_Pgsql.html#method_convertBooleans", "name": "Doctrine_Connection_Pgsql::convertBooleans", "doc": "&quot;convertBoolean\nsome drivers need the boolean values to be converted into integers\nwhen using DQL API&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Pgsql", "fromLink": "Doctrine_Connection_Pgsql.html", "link": "Doctrine_Connection_Pgsql.html#method_modifyLimitQuery", "name": "Doctrine_Connection_Pgsql::modifyLimitQuery", "doc": "&quot;Changes a query string for various DBMS specific reasons&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Pgsql", "fromLink": "Doctrine_Connection_Pgsql.html", "link": "Doctrine_Connection_Pgsql.html#method_getServerVersion", "name": "Doctrine_Connection_Pgsql::getServerVersion", "doc": "&quot;return version information about the server&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Pgsql", "fromLink": "Doctrine_Connection_Pgsql.html", "link": "Doctrine_Connection_Pgsql.html#method_insert", "name": "Doctrine_Connection_Pgsql::insert", "doc": "&quot;Inserts a table row with specified data.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Connection_Pgsql_Exception.html", "name": "Doctrine_Connection_Pgsql_Exception", "doc": "&quot;Doctrine_Connection_Pgsql_Exception&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Connection_Pgsql_Exception", "fromLink": "Doctrine_Connection_Pgsql_Exception.html", "link": "Doctrine_Connection_Pgsql_Exception.html#method_processErrorInfo", "name": "Doctrine_Connection_Pgsql_Exception::processErrorInfo", "doc": "&quot;This method checks if native error code\/message can be\nconverted into a portable code and then adds this\nportable error code to $portableCode field&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Connection_Profiler.html", "name": "Doctrine_Connection_Profiler", "doc": "&quot;Doctrine_Connection_Profiler&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Connection_Profiler", "fromLink": "Doctrine_Connection_Profiler.html", "link": "Doctrine_Connection_Profiler.html#method___construct", "name": "Doctrine_Connection_Profiler::__construct", "doc": "&quot;constructor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Profiler", "fromLink": "Doctrine_Connection_Profiler.html", "link": "Doctrine_Connection_Profiler.html#method_setFilterQueryType", "name": "Doctrine_Connection_Profiler::setFilterQueryType", "doc": "&quot;setFilterQueryType&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Profiler", "fromLink": "Doctrine_Connection_Profiler.html", "link": "Doctrine_Connection_Profiler.html#method___call", "name": "Doctrine_Connection_Profiler::__call", "doc": "&quot;method overloader\nthis method is used for invoking different listeners, for the full\nlist of availible listeners, see Doctrine_EventListener&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Profiler", "fromLink": "Doctrine_Connection_Profiler.html", "link": "Doctrine_Connection_Profiler.html#method_get", "name": "Doctrine_Connection_Profiler::get", "doc": "&quot;get&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Profiler", "fromLink": "Doctrine_Connection_Profiler.html", "link": "Doctrine_Connection_Profiler.html#method_getAll", "name": "Doctrine_Connection_Profiler::getAll", "doc": "&quot;getAll\nreturns all profiled events as an array&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Profiler", "fromLink": "Doctrine_Connection_Profiler.html", "link": "Doctrine_Connection_Profiler.html#method_getIterator", "name": "Doctrine_Connection_Profiler::getIterator", "doc": "&quot;getIterator\nreturns an iterator that iterates through the logged events&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Profiler", "fromLink": "Doctrine_Connection_Profiler.html", "link": "Doctrine_Connection_Profiler.html#method_count", "name": "Doctrine_Connection_Profiler::count", "doc": "&quot;count&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Profiler", "fromLink": "Doctrine_Connection_Profiler.html", "link": "Doctrine_Connection_Profiler.html#method_pop", "name": "Doctrine_Connection_Profiler::pop", "doc": "&quot;pop the last event from the event stack&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Profiler", "fromLink": "Doctrine_Connection_Profiler.html", "link": "Doctrine_Connection_Profiler.html#method_lastEvent", "name": "Doctrine_Connection_Profiler::lastEvent", "doc": "&quot;Get the Doctrine_Event object for the last query that was run, regardless if it has\nended or not. If the event has not ended, it&#039;s end time will be Null.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Connection_Profiler_Exception.html", "name": "Doctrine_Connection_Profiler_Exception", "doc": "&quot;Doctrine_Connection_Profiler_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Connection_Sqlite.html", "name": "Doctrine_Connection_Sqlite", "doc": "&quot;Doctrine_Connection_Sqlite&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Connection_Sqlite", "fromLink": "Doctrine_Connection_Sqlite.html", "link": "Doctrine_Connection_Sqlite.html#method___construct", "name": "Doctrine_Connection_Sqlite::__construct", "doc": "&quot;the constructor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Sqlite", "fromLink": "Doctrine_Connection_Sqlite.html", "link": "Doctrine_Connection_Sqlite.html#method_connect", "name": "Doctrine_Connection_Sqlite::connect", "doc": "&quot;initializes database functions missing in sqlite&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Sqlite", "fromLink": "Doctrine_Connection_Sqlite.html", "link": "Doctrine_Connection_Sqlite.html#method_createDatabase", "name": "Doctrine_Connection_Sqlite::createDatabase", "doc": "&quot;createDatabase&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Sqlite", "fromLink": "Doctrine_Connection_Sqlite.html", "link": "Doctrine_Connection_Sqlite.html#method_dropDatabase", "name": "Doctrine_Connection_Sqlite::dropDatabase", "doc": "&quot;dropDatabase&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Connection_Sqlite_Exception.html", "name": "Doctrine_Connection_Sqlite_Exception", "doc": "&quot;Doctrine_Connection_Sqlite_Exception&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Connection_Sqlite_Exception", "fromLink": "Doctrine_Connection_Sqlite_Exception.html", "link": "Doctrine_Connection_Sqlite_Exception.html#method_processErrorInfo", "name": "Doctrine_Connection_Sqlite_Exception::processErrorInfo", "doc": "&quot;This method checks if native error code\/message can be\nconverted into a portable code and then adds this\nportable error code to $portableCode field&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Connection_Statement.html", "name": "Doctrine_Connection_Statement", "doc": "&quot;Doctrine_Connection_Statement&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Connection_Statement", "fromLink": "Doctrine_Connection_Statement.html", "link": "Doctrine_Connection_Statement.html#method___construct", "name": "Doctrine_Connection_Statement::__construct", "doc": "&quot;constructor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Statement", "fromLink": "Doctrine_Connection_Statement.html", "link": "Doctrine_Connection_Statement.html#method_getConnection", "name": "Doctrine_Connection_Statement::getConnection", "doc": "&quot;getConnection\nreturns the connection object this statement uses&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Statement", "fromLink": "Doctrine_Connection_Statement.html", "link": "Doctrine_Connection_Statement.html#method_getStatement", "name": "Doctrine_Connection_Statement::getStatement", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Statement", "fromLink": "Doctrine_Connection_Statement.html", "link": "Doctrine_Connection_Statement.html#method_getQuery", "name": "Doctrine_Connection_Statement::getQuery", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Statement", "fromLink": "Doctrine_Connection_Statement.html", "link": "Doctrine_Connection_Statement.html#method_bindColumn", "name": "Doctrine_Connection_Statement::bindColumn", "doc": "&quot;bindColumn\nBind a column to a PHP variable&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Statement", "fromLink": "Doctrine_Connection_Statement.html", "link": "Doctrine_Connection_Statement.html#method_bindValue", "name": "Doctrine_Connection_Statement::bindValue", "doc": "&quot;bindValue\nBinds a value to a corresponding named or question mark\nplaceholder in the SQL statement that was use to prepare the statement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Statement", "fromLink": "Doctrine_Connection_Statement.html", "link": "Doctrine_Connection_Statement.html#method_bindParam", "name": "Doctrine_Connection_Statement::bindParam", "doc": "&quot;bindParam\nBinds a PHP variable to a corresponding named or question mark placeholder in the\nSQL statement that was use to prepare the statement. Unlike Doctrine_Adapter_Statement_Interface-&gt;bindValue(),\nthe variable is bound as a reference and will only be evaluated at the time\nthat Doctrine_Adapter_Statement_Interface-&gt;execute() is called.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Statement", "fromLink": "Doctrine_Connection_Statement.html", "link": "Doctrine_Connection_Statement.html#method_closeCursor", "name": "Doctrine_Connection_Statement::closeCursor", "doc": "&quot;closeCursor\nCloses the cursor, enabling the statement to be executed again.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Statement", "fromLink": "Doctrine_Connection_Statement.html", "link": "Doctrine_Connection_Statement.html#method_columnCount", "name": "Doctrine_Connection_Statement::columnCount", "doc": "&quot;columnCount\nReturns the number of columns in the result set&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Statement", "fromLink": "Doctrine_Connection_Statement.html", "link": "Doctrine_Connection_Statement.html#method_errorCode", "name": "Doctrine_Connection_Statement::errorCode", "doc": "&quot;errorCode\nFetch the SQLSTATE associated with the last operation on the statement handle&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Statement", "fromLink": "Doctrine_Connection_Statement.html", "link": "Doctrine_Connection_Statement.html#method_errorInfo", "name": "Doctrine_Connection_Statement::errorInfo", "doc": "&quot;errorInfo\nFetch extended error information associated with the last operation on the statement handle&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Statement", "fromLink": "Doctrine_Connection_Statement.html", "link": "Doctrine_Connection_Statement.html#method_execute", "name": "Doctrine_Connection_Statement::execute", "doc": "&quot;execute\nExecutes a prepared statement&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Statement", "fromLink": "Doctrine_Connection_Statement.html", "link": "Doctrine_Connection_Statement.html#method_fetch", "name": "Doctrine_Connection_Statement::fetch", "doc": "&quot;fetch&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Statement", "fromLink": "Doctrine_Connection_Statement.html", "link": "Doctrine_Connection_Statement.html#method_fetchAll", "name": "Doctrine_Connection_Statement::fetchAll", "doc": "&quot;fetchAll\nReturns an array containing all of the result set rows&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Statement", "fromLink": "Doctrine_Connection_Statement.html", "link": "Doctrine_Connection_Statement.html#method_fetchColumn", "name": "Doctrine_Connection_Statement::fetchColumn", "doc": "&quot;fetchColumn\nReturns a single column from the next row of a\nresult set or FALSE if there are no more rows.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Statement", "fromLink": "Doctrine_Connection_Statement.html", "link": "Doctrine_Connection_Statement.html#method_fetchObject", "name": "Doctrine_Connection_Statement::fetchObject", "doc": "&quot;fetchObject\nFetches the next row and returns it as an object.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Statement", "fromLink": "Doctrine_Connection_Statement.html", "link": "Doctrine_Connection_Statement.html#method_getAttribute", "name": "Doctrine_Connection_Statement::getAttribute", "doc": "&quot;getAttribute\nRetrieve a statement attribute&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Statement", "fromLink": "Doctrine_Connection_Statement.html", "link": "Doctrine_Connection_Statement.html#method_getColumnMeta", "name": "Doctrine_Connection_Statement::getColumnMeta", "doc": "&quot;getColumnMeta\nReturns metadata for a column in a result set&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Statement", "fromLink": "Doctrine_Connection_Statement.html", "link": "Doctrine_Connection_Statement.html#method_nextRowset", "name": "Doctrine_Connection_Statement::nextRowset", "doc": "&quot;nextRowset\nAdvances to the next rowset in a multi-rowset statement handle&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Statement", "fromLink": "Doctrine_Connection_Statement.html", "link": "Doctrine_Connection_Statement.html#method_rowCount", "name": "Doctrine_Connection_Statement::rowCount", "doc": "&quot;rowCount\nrowCount() returns the number of rows affected by the last DELETE, INSERT, or UPDATE statement\nexecuted by the corresponding object.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Statement", "fromLink": "Doctrine_Connection_Statement.html", "link": "Doctrine_Connection_Statement.html#method_setAttribute", "name": "Doctrine_Connection_Statement::setAttribute", "doc": "&quot;setAttribute\nSet a statement attribute&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_Statement", "fromLink": "Doctrine_Connection_Statement.html", "link": "Doctrine_Connection_Statement.html#method_setFetchMode", "name": "Doctrine_Connection_Statement::setFetchMode", "doc": "&quot;setFetchMode\nSet the default fetch mode for this statement&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Connection_UnitOfWork.html", "name": "Doctrine_Connection_UnitOfWork", "doc": "&quot;Doctrine_Connection_UnitOfWork&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Connection_UnitOfWork", "fromLink": "Doctrine_Connection_UnitOfWork.html", "link": "Doctrine_Connection_UnitOfWork.html#method_saveGraph", "name": "Doctrine_Connection_UnitOfWork::saveGraph", "doc": "&quot;Saves the given record and all associated records.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_UnitOfWork", "fromLink": "Doctrine_Connection_UnitOfWork.html", "link": "Doctrine_Connection_UnitOfWork.html#method_delete", "name": "Doctrine_Connection_UnitOfWork::delete", "doc": "&quot;Deletes the given record and all the related records that participate\nin an application-level delete cascade.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_UnitOfWork", "fromLink": "Doctrine_Connection_UnitOfWork.html", "link": "Doctrine_Connection_UnitOfWork.html#method__cascadeDelete", "name": "Doctrine_Connection_UnitOfWork::_cascadeDelete", "doc": "&quot;Cascades an ongoing delete operation to related objects. Applies only on relations\nthat have &#039;delete&#039; in their cascade options.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_UnitOfWork", "fromLink": "Doctrine_Connection_UnitOfWork.html", "link": "Doctrine_Connection_UnitOfWork.html#method_saveRelatedForeignKeys", "name": "Doctrine_Connection_UnitOfWork::saveRelatedForeignKeys", "doc": "&quot;saveRelatedForeignKeys\nsaves all related (through ForeignKey) records to $record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_UnitOfWork", "fromLink": "Doctrine_Connection_UnitOfWork.html", "link": "Doctrine_Connection_UnitOfWork.html#method_saveRelatedLocalKeys", "name": "Doctrine_Connection_UnitOfWork::saveRelatedLocalKeys", "doc": "&quot;saveRelatedLocalKeys\nsaves all related (through LocalKey) records to $record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_UnitOfWork", "fromLink": "Doctrine_Connection_UnitOfWork.html", "link": "Doctrine_Connection_UnitOfWork.html#method_saveAssociations", "name": "Doctrine_Connection_UnitOfWork::saveAssociations", "doc": "&quot;saveAssociations&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_UnitOfWork", "fromLink": "Doctrine_Connection_UnitOfWork.html", "link": "Doctrine_Connection_UnitOfWork.html#method_saveAll", "name": "Doctrine_Connection_UnitOfWork::saveAll", "doc": "&quot;saveAll\npersists all the pending records from all tables&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_UnitOfWork", "fromLink": "Doctrine_Connection_UnitOfWork.html", "link": "Doctrine_Connection_UnitOfWork.html#method_update", "name": "Doctrine_Connection_UnitOfWork::update", "doc": "&quot;updates given record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_UnitOfWork", "fromLink": "Doctrine_Connection_UnitOfWork.html", "link": "Doctrine_Connection_UnitOfWork.html#method_insert", "name": "Doctrine_Connection_UnitOfWork::insert", "doc": "&quot;Inserts a record into database.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_UnitOfWork", "fromLink": "Doctrine_Connection_UnitOfWork.html", "link": "Doctrine_Connection_UnitOfWork.html#method_replace", "name": "Doctrine_Connection_UnitOfWork::replace", "doc": "&quot;Replaces a record into database.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_UnitOfWork", "fromLink": "Doctrine_Connection_UnitOfWork.html", "link": "Doctrine_Connection_UnitOfWork.html#method_processSingleInsert", "name": "Doctrine_Connection_UnitOfWork::processSingleInsert", "doc": "&quot;Inserts a transient record in its table.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_UnitOfWork", "fromLink": "Doctrine_Connection_UnitOfWork.html", "link": "Doctrine_Connection_UnitOfWork.html#method_buildFlushTree", "name": "Doctrine_Connection_UnitOfWork::buildFlushTree", "doc": "&quot;buildFlushTree\nbuilds a flush tree that is used in transactions&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_UnitOfWork", "fromLink": "Doctrine_Connection_UnitOfWork.html", "link": "Doctrine_Connection_UnitOfWork.html#method__assignSequence", "name": "Doctrine_Connection_UnitOfWork::_assignSequence", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Connection_UnitOfWork", "fromLink": "Doctrine_Connection_UnitOfWork.html", "link": "Doctrine_Connection_UnitOfWork.html#method__assignIdentifier", "name": "Doctrine_Connection_UnitOfWork::_assignIdentifier", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Core.html", "name": "Doctrine_Core", "doc": "&quot;The base core class of Doctrine&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method___construct", "name": "Doctrine_Core::__construct", "doc": "&quot;__construct&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_getLoadedModelFiles", "name": "Doctrine_Core::getLoadedModelFiles", "doc": "&quot;Returns an array of all the loaded models and the path where each of them exists&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_debug", "name": "Doctrine_Core::debug", "doc": "&quot;Turn on\/off the debugging setting&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_setPath", "name": "Doctrine_Core::setPath", "doc": "&quot;Set the path to your core Doctrine libraries&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_getPath", "name": "Doctrine_Core::getPath", "doc": "&quot;Get the root path to Doctrine&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_setExtensionsPath", "name": "Doctrine_Core::setExtensionsPath", "doc": "&quot;Set the path to autoload extension classes from&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_getExtensionsPath", "name": "Doctrine_Core::getExtensionsPath", "doc": "&quot;Get the path to load extension classes from&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_loadModel", "name": "Doctrine_Core::loadModel", "doc": "&quot;Load an individual model name and path in to the model loading registry&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_setModelsDirectory", "name": "Doctrine_Core::setModelsDirectory", "doc": "&quot;Set the directory where your models are located for PEAR style\nnaming convention autoloading.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_getModelsDirectory", "name": "Doctrine_Core::getModelsDirectory", "doc": "&quot;Get the directory where your models are located for PEAR style naming\nconvention autoloading&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_loadModels", "name": "Doctrine_Core::loadModels", "doc": "&quot;Recursively load all models from a directory or array of directories&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_getLoadedModels", "name": "Doctrine_Core::getLoadedModels", "doc": "&quot;Get all the loaded models, you can provide an array of classes or it will use get_declared_classes()&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_initializeModels", "name": "Doctrine_Core::initializeModels", "doc": "&quot;Initialize all models so everything is present and loaded in to memory\nThis will also inheritently initialize any model behaviors and add\nthe models generated by Doctrine generators and add them to the $models\narray&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_filterInvalidModels", "name": "Doctrine_Core::filterInvalidModels", "doc": "&quot;Filter through an array of classes and return all the classes that are valid models.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_isValidModelClass", "name": "Doctrine_Core::isValidModelClass", "doc": "&quot;Checks if what is passed is a valid Doctrine_Record\nWill load class in to memory in order to inflect it and find out information about the class&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_getConnectionByTableName", "name": "Doctrine_Core::getConnectionByTableName", "doc": "&quot;Get the connection object for a table by the actual table name\nFIXME: I think this method is flawed because a individual connections could have the same table name&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_generateModelsFromDb", "name": "Doctrine_Core::generateModelsFromDb", "doc": "&quot;Method for importing existing schema to Doctrine_Record classes&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_generateYamlFromDb", "name": "Doctrine_Core::generateYamlFromDb", "doc": "&quot;Generates models from database to temporary location then uses those models to generate a yaml schema file.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_generateModelsFromYaml", "name": "Doctrine_Core::generateModelsFromYaml", "doc": "&quot;Generate a yaml schema file from an existing directory of models&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_createTablesFromModels", "name": "Doctrine_Core::createTablesFromModels", "doc": "&quot;Creates database tables for the models in the specified directory&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_createTablesFromArray", "name": "Doctrine_Core::createTablesFromArray", "doc": "&quot;Creates database tables for the models in the supplied array&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_generateSqlFromArray", "name": "Doctrine_Core::generateSqlFromArray", "doc": "&quot;Generate a array of sql for the passed array of models&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_generateSqlFromModels", "name": "Doctrine_Core::generateSqlFromModels", "doc": "&quot;Generate a sql string to create the tables from all loaded models\nor the models found in the passed directory.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_generateYamlFromModels", "name": "Doctrine_Core::generateYamlFromModels", "doc": "&quot;Generate yaml schema file for the models in the specified directory&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_createDatabases", "name": "Doctrine_Core::createDatabases", "doc": "&quot;Creates databases for connections&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_dropDatabases", "name": "Doctrine_Core::dropDatabases", "doc": "&quot;Drops databases for connections&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_dumpData", "name": "Doctrine_Core::dumpData", "doc": "&quot;Dump data to a yaml fixtures file&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_loadData", "name": "Doctrine_Core::loadData", "doc": "&quot;Load data from a yaml fixtures file.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_migrate", "name": "Doctrine_Core::migrate", "doc": "&quot;Migrate database to specified $to version. Migrates from current to latest if you do not specify.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_generateMigrationClass", "name": "Doctrine_Core::generateMigrationClass", "doc": "&quot;Generate new migration class skeleton&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_generateMigrationsFromDb", "name": "Doctrine_Core::generateMigrationsFromDb", "doc": "&quot;Generate a set of migration classes from an existing database&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_generateMigrationsFromModels", "name": "Doctrine_Core::generateMigrationsFromModels", "doc": "&quot;Generate a set of migration classes from an existing set of models&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_generateMigrationsFromDiff", "name": "Doctrine_Core::generateMigrationsFromDiff", "doc": "&quot;Generate a set of migration classes by generating differences between two sets\nof schema information&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_getTable", "name": "Doctrine_Core::getTable", "doc": "&quot;Get the Doctrine_Table object for the passed model&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_compile", "name": "Doctrine_Core::compile", "doc": "&quot;Method for making a single file of most used doctrine runtime components\nincluding the compiled file instead of multiple files (in worst\ncases dozens of files) can improve performance by an order of magnitude&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_autoload", "name": "Doctrine_Core::autoload", "doc": "&quot;simple autoload function\nreturns true if the class was loaded, otherwise false&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_modelsAutoload", "name": "Doctrine_Core::modelsAutoload", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_extensionsAutoload", "name": "Doctrine_Core::extensionsAutoload", "doc": "&quot;Load classes from the Doctrine extensions directory\/path&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Core", "fromLink": "Doctrine_Core.html", "link": "Doctrine_Core.html#method_dump", "name": "Doctrine_Core::dump", "doc": "&quot;dumps a given variable&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Data.html", "name": "Doctrine_Data", "doc": "&quot;Doctrine_Data&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Data", "fromLink": "Doctrine_Data.html", "link": "Doctrine_Data.html#method_setFormat", "name": "Doctrine_Data::setFormat", "doc": "&quot;setFormat&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Data", "fromLink": "Doctrine_Data.html", "link": "Doctrine_Data.html#method_getFormat", "name": "Doctrine_Data::getFormat", "doc": "&quot;getFormat&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Data", "fromLink": "Doctrine_Data.html", "link": "Doctrine_Data.html#method_getFormats", "name": "Doctrine_Data::getFormats", "doc": "&quot;getFormats&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Data", "fromLink": "Doctrine_Data.html", "link": "Doctrine_Data.html#method_setDirectory", "name": "Doctrine_Data::setDirectory", "doc": "&quot;setDirectory&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Data", "fromLink": "Doctrine_Data.html", "link": "Doctrine_Data.html#method_getDirectory", "name": "Doctrine_Data::getDirectory", "doc": "&quot;getDirectory&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Data", "fromLink": "Doctrine_Data.html", "link": "Doctrine_Data.html#method_setModels", "name": "Doctrine_Data::setModels", "doc": "&quot;setModels&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Data", "fromLink": "Doctrine_Data.html", "link": "Doctrine_Data.html#method_getModels", "name": "Doctrine_Data::getModels", "doc": "&quot;getModels&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Data", "fromLink": "Doctrine_Data.html", "link": "Doctrine_Data.html#method_exportIndividualFiles", "name": "Doctrine_Data::exportIndividualFiles", "doc": "&quot;_exportIndividualFiles&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Data", "fromLink": "Doctrine_Data.html", "link": "Doctrine_Data.html#method_exportData", "name": "Doctrine_Data::exportData", "doc": "&quot;exportData&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Data", "fromLink": "Doctrine_Data.html", "link": "Doctrine_Data.html#method_importData", "name": "Doctrine_Data::importData", "doc": "&quot;importData&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Data", "fromLink": "Doctrine_Data.html", "link": "Doctrine_Data.html#method_isRelation", "name": "Doctrine_Data::isRelation", "doc": "&quot;isRelation&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Data", "fromLink": "Doctrine_Data.html", "link": "Doctrine_Data.html#method_purge", "name": "Doctrine_Data::purge", "doc": "&quot;purge&quot;"},
            
            {"type": "Class",  "link": "Doctrine_DataDict.html", "name": "Doctrine_DataDict", "doc": "&quot;Doctrine_DataDict&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_DataDict", "fromLink": "Doctrine_DataDict.html", "link": "Doctrine_DataDict.html#method_parseBoolean", "name": "Doctrine_DataDict::parseBoolean", "doc": "&quot;parseBoolean\nparses a literal boolean value and returns\nproper sql equivalent&quot;"},
            
            {"type": "Class",  "link": "Doctrine_DataDict_Exception.html", "name": "Doctrine_DataDict_Exception", "doc": "&quot;Doctrine_DataDict_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_DataDict_Mssql.html", "name": "Doctrine_DataDict_Mssql", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_DataDict_Mssql", "fromLink": "Doctrine_DataDict_Mssql.html", "link": "Doctrine_DataDict_Mssql.html#method_getNativeDeclaration", "name": "Doctrine_DataDict_Mssql::getNativeDeclaration", "doc": "&quot;Obtain DBMS specific SQL code portion needed to declare an text type\nfield to be used in statements like CREATE TABLE.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_DataDict_Mssql", "fromLink": "Doctrine_DataDict_Mssql.html", "link": "Doctrine_DataDict_Mssql.html#method_getPortableDeclaration", "name": "Doctrine_DataDict_Mssql::getPortableDeclaration", "doc": "&quot;Maps a native array description of a field to a MDB2 datatype and length&quot;"},
                    {"type": "Method", "fromName": "Doctrine_DataDict_Mssql", "fromLink": "Doctrine_DataDict_Mssql.html", "link": "Doctrine_DataDict_Mssql.html#method_getIntegerDeclaration", "name": "Doctrine_DataDict_Mssql::getIntegerDeclaration", "doc": "&quot;Obtain DBMS specific SQL code portion needed to declare an integer type\nfield to be used in statements like CREATE TABLE.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_DataDict_Mysql.html", "name": "Doctrine_DataDict_Mysql", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_DataDict_Mysql", "fromLink": "Doctrine_DataDict_Mysql.html", "link": "Doctrine_DataDict_Mysql.html#method_getNativeDeclaration", "name": "Doctrine_DataDict_Mysql::getNativeDeclaration", "doc": "&quot;Obtain DBMS specific SQL code portion needed to declare an text type\nfield to be used in statements like CREATE TABLE.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_DataDict_Mysql", "fromLink": "Doctrine_DataDict_Mysql.html", "link": "Doctrine_DataDict_Mysql.html#method_getPortableDeclaration", "name": "Doctrine_DataDict_Mysql::getPortableDeclaration", "doc": "&quot;Maps a native array description of a field to a MDB2 datatype and length&quot;"},
                    {"type": "Method", "fromName": "Doctrine_DataDict_Mysql", "fromLink": "Doctrine_DataDict_Mysql.html", "link": "Doctrine_DataDict_Mysql.html#method_getCharsetFieldDeclaration", "name": "Doctrine_DataDict_Mysql::getCharsetFieldDeclaration", "doc": "&quot;Obtain DBMS specific SQL code portion needed to set the CHARACTER SET\nof a field declaration to be used in statements like CREATE TABLE.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_DataDict_Mysql", "fromLink": "Doctrine_DataDict_Mysql.html", "link": "Doctrine_DataDict_Mysql.html#method_getCollationFieldDeclaration", "name": "Doctrine_DataDict_Mysql::getCollationFieldDeclaration", "doc": "&quot;Obtain DBMS specific SQL code portion needed to set the COLLATION\nof a field declaration to be used in statements like CREATE TABLE.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_DataDict_Mysql", "fromLink": "Doctrine_DataDict_Mysql.html", "link": "Doctrine_DataDict_Mysql.html#method_getIntegerDeclaration", "name": "Doctrine_DataDict_Mysql::getIntegerDeclaration", "doc": "&quot;Obtain DBMS specific SQL code portion needed to declare an integer type\nfield to be used in statements like CREATE TABLE.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_DataDict_Oracle.html", "name": "Doctrine_DataDict_Oracle", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_DataDict_Oracle", "fromLink": "Doctrine_DataDict_Oracle.html", "link": "Doctrine_DataDict_Oracle.html#method_getNativeDeclaration", "name": "Doctrine_DataDict_Oracle::getNativeDeclaration", "doc": "&quot;Obtain DBMS specific SQL code portion needed to declare an text type\nfield to be used in statements like CREATE TABLE.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_DataDict_Oracle", "fromLink": "Doctrine_DataDict_Oracle.html", "link": "Doctrine_DataDict_Oracle.html#method_getPortableDeclaration", "name": "Doctrine_DataDict_Oracle::getPortableDeclaration", "doc": "&quot;Maps a native array description of a field to a doctrine datatype and length&quot;"},
            
            {"type": "Class",  "link": "Doctrine_DataDict_Pgsql.html", "name": "Doctrine_DataDict_Pgsql", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_DataDict_Pgsql", "fromLink": "Doctrine_DataDict_Pgsql.html", "link": "Doctrine_DataDict_Pgsql.html#method_getNativeDeclaration", "name": "Doctrine_DataDict_Pgsql::getNativeDeclaration", "doc": "&quot;Obtain DBMS specific SQL code portion needed to declare an text type\nfield to be used in statements like CREATE TABLE.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_DataDict_Pgsql", "fromLink": "Doctrine_DataDict_Pgsql.html", "link": "Doctrine_DataDict_Pgsql.html#method_getPortableDeclaration", "name": "Doctrine_DataDict_Pgsql::getPortableDeclaration", "doc": "&quot;Maps a native array description of a field to a portable Doctrine datatype and length&quot;"},
                    {"type": "Method", "fromName": "Doctrine_DataDict_Pgsql", "fromLink": "Doctrine_DataDict_Pgsql.html", "link": "Doctrine_DataDict_Pgsql.html#method_getIntegerDeclaration", "name": "Doctrine_DataDict_Pgsql::getIntegerDeclaration", "doc": "&quot;Obtain DBMS specific SQL code portion needed to declare an integer type\nfield to be used in statements like CREATE TABLE.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_DataDict_Pgsql", "fromLink": "Doctrine_DataDict_Pgsql.html", "link": "Doctrine_DataDict_Pgsql.html#method_parseBoolean", "name": "Doctrine_DataDict_Pgsql::parseBoolean", "doc": "&quot;parseBoolean\nparses a literal boolean value and returns\nproper sql equivalent&quot;"},
            
            {"type": "Class",  "link": "Doctrine_DataDict_Sqlite.html", "name": "Doctrine_DataDict_Sqlite", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_DataDict_Sqlite", "fromLink": "Doctrine_DataDict_Sqlite.html", "link": "Doctrine_DataDict_Sqlite.html#method_getNativeDeclaration", "name": "Doctrine_DataDict_Sqlite::getNativeDeclaration", "doc": "&quot;Obtain DBMS specific SQL code portion needed to declare an text type\nfield to be used in statements like CREATE TABLE.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_DataDict_Sqlite", "fromLink": "Doctrine_DataDict_Sqlite.html", "link": "Doctrine_DataDict_Sqlite.html#method_getPortableDeclaration", "name": "Doctrine_DataDict_Sqlite::getPortableDeclaration", "doc": "&quot;Maps a native array description of a field to Doctrine datatype and length&quot;"},
                    {"type": "Method", "fromName": "Doctrine_DataDict_Sqlite", "fromLink": "Doctrine_DataDict_Sqlite.html", "link": "Doctrine_DataDict_Sqlite.html#method_getIntegerDeclaration", "name": "Doctrine_DataDict_Sqlite::getIntegerDeclaration", "doc": "&quot;Obtain DBMS specific SQL code portion needed to declare an integer type\nfield to be used in statements like CREATE TABLE.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Data_Exception.html", "name": "Doctrine_Data_Exception", "doc": "&quot;Doctrine_Data_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Data_Export.html", "name": "Doctrine_Data_Export", "doc": "&quot;Doctrine_Data_Export&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Data_Export", "fromLink": "Doctrine_Data_Export.html", "link": "Doctrine_Data_Export.html#method___construct", "name": "Doctrine_Data_Export::__construct", "doc": "&quot;constructor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Data_Export", "fromLink": "Doctrine_Data_Export.html", "link": "Doctrine_Data_Export.html#method_doExport", "name": "Doctrine_Data_Export::doExport", "doc": "&quot;doExport&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Data_Export", "fromLink": "Doctrine_Data_Export.html", "link": "Doctrine_Data_Export.html#method_dumpData", "name": "Doctrine_Data_Export::dumpData", "doc": "&quot;dumpData&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Data_Export", "fromLink": "Doctrine_Data_Export.html", "link": "Doctrine_Data_Export.html#method_prepareData", "name": "Doctrine_Data_Export::prepareData", "doc": "&quot;prepareData&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Data_Import.html", "name": "Doctrine_Data_Import", "doc": "&quot;Doctrine_Data_Import&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Data_Import", "fromLink": "Doctrine_Data_Import.html", "link": "Doctrine_Data_Import.html#method___construct", "name": "Doctrine_Data_Import::__construct", "doc": "&quot;Optionally pass the directory\/path to the yaml for importing&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Data_Import", "fromLink": "Doctrine_Data_Import.html", "link": "Doctrine_Data_Import.html#method_doParsing", "name": "Doctrine_Data_Import::doParsing", "doc": "&quot;Do the parsing of the yaml files and return the final parsed array&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Data_Import", "fromLink": "Doctrine_Data_Import.html", "link": "Doctrine_Data_Import.html#method_doImport", "name": "Doctrine_Data_Import::doImport", "doc": "&quot;Do the importing of the data parsed from the fixtures&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Data_Import", "fromLink": "Doctrine_Data_Import.html", "link": "Doctrine_Data_Import.html#method__buildRows", "name": "Doctrine_Data_Import::_buildRows", "doc": "&quot;Recursively loop over all data fixtures and build the array of className rows&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Data_Import", "fromLink": "Doctrine_Data_Import.html", "link": "Doctrine_Data_Import.html#method__buildNestedSetRows", "name": "Doctrine_Data_Import::_buildNestedSetRows", "doc": "&quot;Build the rows for nested set models&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Data_Import", "fromLink": "Doctrine_Data_Import.html", "link": "Doctrine_Data_Import.html#method__getImportedObject", "name": "Doctrine_Data_Import::_getImportedObject", "doc": "&quot;Get the unsaved object for a specified row key and validate that it is the valid object class\nfor the passed record and relation name&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Data_Import", "fromLink": "Doctrine_Data_Import.html", "link": "Doctrine_Data_Import.html#method__processRow", "name": "Doctrine_Data_Import::_processRow", "doc": "&quot;Process a row and make all the appropriate relations between the imported data&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Data_Import", "fromLink": "Doctrine_Data_Import.html", "link": "Doctrine_Data_Import.html#method__hasNaturalNestedSetFormat", "name": "Doctrine_Data_Import::_hasNaturalNestedSetFormat", "doc": "&quot;NestedSet fixtures may come in a &#039;natural&#039; format with nested children listed under a &#039;children&#039;\nkey or in a raw, non-nested format with lft\/rgt values.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Data_Import", "fromLink": "Doctrine_Data_Import.html", "link": "Doctrine_Data_Import.html#method__loadData", "name": "Doctrine_Data_Import::_loadData", "doc": "&quot;Perform the loading of the data from the passed array&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Data_Import", "fromLink": "Doctrine_Data_Import.html", "link": "Doctrine_Data_Import.html#method__loadNestedSetData", "name": "Doctrine_Data_Import::_loadNestedSetData", "doc": "&quot;Load nested set data for models with nested set enabled&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Data_Import", "fromLink": "Doctrine_Data_Import.html", "link": "Doctrine_Data_Import.html#method__getRowKeyPrefix", "name": "Doctrine_Data_Import::_getRowKeyPrefix", "doc": "&quot;Returns the prefix to use when indexing an object from the supplied table.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Event.html", "name": "Doctrine_Event", "doc": "&quot;Doctrine_Event&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Event", "fromLink": "Doctrine_Event.html", "link": "Doctrine_Event.html#method___construct", "name": "Doctrine_Event::__construct", "doc": "&quot;constructor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Event", "fromLink": "Doctrine_Event.html", "link": "Doctrine_Event.html#method_getQuery", "name": "Doctrine_Event::getQuery", "doc": "&quot;getQuery&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Event", "fromLink": "Doctrine_Event.html", "link": "Doctrine_Event.html#method_getName", "name": "Doctrine_Event::getName", "doc": "&quot;getName\nreturns the name of this event&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Event", "fromLink": "Doctrine_Event.html", "link": "Doctrine_Event.html#method_getCode", "name": "Doctrine_Event::getCode", "doc": "&quot;getCode&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Event", "fromLink": "Doctrine_Event.html", "link": "Doctrine_Event.html#method___get", "name": "Doctrine_Event::__get", "doc": "&quot;getOption\nreturns the value of an option&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Event", "fromLink": "Doctrine_Event.html", "link": "Doctrine_Event.html#method_skipOperation", "name": "Doctrine_Event::skipOperation", "doc": "&quot;skipOperation\nskips the next operation\nan alias for __set(&#039;skipOperation&#039;, true)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Event", "fromLink": "Doctrine_Event.html", "link": "Doctrine_Event.html#method___set", "name": "Doctrine_Event::__set", "doc": "&quot;setOption\nsets the value of an option&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Event", "fromLink": "Doctrine_Event.html", "link": "Doctrine_Event.html#method_set", "name": "Doctrine_Event::set", "doc": "&quot;setOption\nsets the value of an option by reference&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Event", "fromLink": "Doctrine_Event.html", "link": "Doctrine_Event.html#method_start", "name": "Doctrine_Event::start", "doc": "&quot;start\nstarts the internal timer of this event&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Event", "fromLink": "Doctrine_Event.html", "link": "Doctrine_Event.html#method_hasEnded", "name": "Doctrine_Event::hasEnded", "doc": "&quot;hasEnded\nwhether or not this event has ended&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Event", "fromLink": "Doctrine_Event.html", "link": "Doctrine_Event.html#method_end", "name": "Doctrine_Event::end", "doc": "&quot;end\nends the internal timer of this event&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Event", "fromLink": "Doctrine_Event.html", "link": "Doctrine_Event.html#method_getSequence", "name": "Doctrine_Event::getSequence", "doc": "&quot;getSequence\nreturns the sequence of this event&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Event", "fromLink": "Doctrine_Event.html", "link": "Doctrine_Event.html#method_getInvoker", "name": "Doctrine_Event::getInvoker", "doc": "&quot;getInvoker\nreturns the handler that invoked this event&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Event", "fromLink": "Doctrine_Event.html", "link": "Doctrine_Event.html#method_setInvoker", "name": "Doctrine_Event::setInvoker", "doc": "&quot;setInvoker\nDefines new invoker (used in Hydrator)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Event", "fromLink": "Doctrine_Event.html", "link": "Doctrine_Event.html#method_getParams", "name": "Doctrine_Event::getParams", "doc": "&quot;getParams\nreturns the parameters of the query&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Event", "fromLink": "Doctrine_Event.html", "link": "Doctrine_Event.html#method_getElapsedSecs", "name": "Doctrine_Event::getElapsedSecs", "doc": "&quot;Get the elapsed time (in microseconds) that the event ran.  If the event has\nnot yet ended, return false.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_EventListener.html", "name": "Doctrine_EventListener", "doc": "&quot;Doctrine_EventListener     all event listeners extend this base class\n                           the empty methods allow child classes to only implement the methods they need to implement&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_preClose", "name": "Doctrine_EventListener::preClose", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_postClose", "name": "Doctrine_EventListener::postClose", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_onCollectionDelete", "name": "Doctrine_EventListener::onCollectionDelete", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_onPreCollectionDelete", "name": "Doctrine_EventListener::onPreCollectionDelete", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_onOpen", "name": "Doctrine_EventListener::onOpen", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_preTransactionCommit", "name": "Doctrine_EventListener::preTransactionCommit", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_postTransactionCommit", "name": "Doctrine_EventListener::postTransactionCommit", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_preTransactionRollback", "name": "Doctrine_EventListener::preTransactionRollback", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_postTransactionRollback", "name": "Doctrine_EventListener::postTransactionRollback", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_preTransactionBegin", "name": "Doctrine_EventListener::preTransactionBegin", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_postTransactionBegin", "name": "Doctrine_EventListener::postTransactionBegin", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_preSavepointCommit", "name": "Doctrine_EventListener::preSavepointCommit", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_postSavepointCommit", "name": "Doctrine_EventListener::postSavepointCommit", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_preSavepointRollback", "name": "Doctrine_EventListener::preSavepointRollback", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_postSavepointRollback", "name": "Doctrine_EventListener::postSavepointRollback", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_preSavepointCreate", "name": "Doctrine_EventListener::preSavepointCreate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_postSavepointCreate", "name": "Doctrine_EventListener::postSavepointCreate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_postConnect", "name": "Doctrine_EventListener::postConnect", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_preConnect", "name": "Doctrine_EventListener::preConnect", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_preQuery", "name": "Doctrine_EventListener::preQuery", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_postQuery", "name": "Doctrine_EventListener::postQuery", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_prePrepare", "name": "Doctrine_EventListener::prePrepare", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_postPrepare", "name": "Doctrine_EventListener::postPrepare", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_preExec", "name": "Doctrine_EventListener::preExec", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_postExec", "name": "Doctrine_EventListener::postExec", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_preError", "name": "Doctrine_EventListener::preError", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_postError", "name": "Doctrine_EventListener::postError", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_preFetch", "name": "Doctrine_EventListener::preFetch", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_postFetch", "name": "Doctrine_EventListener::postFetch", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_preFetchAll", "name": "Doctrine_EventListener::preFetchAll", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_postFetchAll", "name": "Doctrine_EventListener::postFetchAll", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_preStmtExecute", "name": "Doctrine_EventListener::preStmtExecute", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener", "fromLink": "Doctrine_EventListener.html", "link": "Doctrine_EventListener.html#method_postStmtExecute", "name": "Doctrine_EventListener::postStmtExecute", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_EventListener_Chain.html", "name": "Doctrine_EventListener_Chain", "doc": "&quot;Doctrine_EventListener_Chain\nthis class represents a chain of different listeners,\nuseful for having multiple listeners listening the events at the same time&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_add", "name": "Doctrine_EventListener_Chain::add", "doc": "&quot;add\nadds a listener to the chain of listeners&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_get", "name": "Doctrine_EventListener_Chain::get", "doc": "&quot;returns a Doctrine_EventListener on success\nand null on failure&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_set", "name": "Doctrine_EventListener_Chain::set", "doc": "&quot;set&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_onLoad", "name": "Doctrine_EventListener_Chain::onLoad", "doc": "&quot;onLoad\nan event invoked when Doctrine_Record is being loaded from database&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_onPreLoad", "name": "Doctrine_EventListener_Chain::onPreLoad", "doc": "&quot;onPreLoad\nan event invoked when Doctrine_Record is being loaded\nfrom database but not yet initialized&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_onSleep", "name": "Doctrine_EventListener_Chain::onSleep", "doc": "&quot;onSleep\nan event invoked when Doctrine_Record is serialized&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_onWakeUp", "name": "Doctrine_EventListener_Chain::onWakeUp", "doc": "&quot;onWakeUp\nan event invoked when Doctrine_Record is unserialized&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_postClose", "name": "Doctrine_EventListener_Chain::postClose", "doc": "&quot;postClose\nan event invoked after Doctrine_Connection is closed&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_preClose", "name": "Doctrine_EventListener_Chain::preClose", "doc": "&quot;preClose\nan event invoked before Doctrine_Connection is closed&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_onOpen", "name": "Doctrine_EventListener_Chain::onOpen", "doc": "&quot;onOpen\nan event invoked after Doctrine_Connection is opened&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_postTransactionCommit", "name": "Doctrine_EventListener_Chain::postTransactionCommit", "doc": "&quot;onTransactionCommit\nan event invoked after a Doctrine_Connection transaction is committed&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_preTransactionCommit", "name": "Doctrine_EventListener_Chain::preTransactionCommit", "doc": "&quot;onPreTransactionCommit\nan event invoked before a Doctrine_Connection transaction is committed&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_postTransactionRollback", "name": "Doctrine_EventListener_Chain::postTransactionRollback", "doc": "&quot;onTransactionRollback\nan event invoked after a Doctrine_Connection transaction is being rolled back&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_preTransactionRollback", "name": "Doctrine_EventListener_Chain::preTransactionRollback", "doc": "&quot;onPreTransactionRollback\nan event invoked before a Doctrine_Connection transaction is being rolled back&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_postTransactionBegin", "name": "Doctrine_EventListener_Chain::postTransactionBegin", "doc": "&quot;onTransactionBegin\nan event invoked after a Doctrine_Connection transaction has been started&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_preTransactionBegin", "name": "Doctrine_EventListener_Chain::preTransactionBegin", "doc": "&quot;onTransactionBegin\nan event invoked before a Doctrine_Connection transaction is being started&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_postSavepointCommit", "name": "Doctrine_EventListener_Chain::postSavepointCommit", "doc": "&quot;postSavepointCommit\nan event invoked after a Doctrine_Connection transaction with savepoint\nis committed&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_preSavepointCommit", "name": "Doctrine_EventListener_Chain::preSavepointCommit", "doc": "&quot;preSavepointCommit\nan event invoked before a Doctrine_Connection transaction with savepoint\nis committed&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_postSavepointRollback", "name": "Doctrine_EventListener_Chain::postSavepointRollback", "doc": "&quot;postSavepointRollback\nan event invoked after a Doctrine_Connection transaction with savepoint\nis being rolled back&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_preSavepointRollback", "name": "Doctrine_EventListener_Chain::preSavepointRollback", "doc": "&quot;preSavepointRollback\nan event invoked before a Doctrine_Connection transaction with savepoint\nis being rolled back&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_postSavepointCreate", "name": "Doctrine_EventListener_Chain::postSavepointCreate", "doc": "&quot;postSavepointCreate\nan event invoked after a Doctrine_Connection transaction with savepoint\nhas been started&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_preSavepointCreate", "name": "Doctrine_EventListener_Chain::preSavepointCreate", "doc": "&quot;preSavepointCreate\nan event invoked before a Doctrine_Connection transaction with savepoint\nis being started&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_onCollectionDelete", "name": "Doctrine_EventListener_Chain::onCollectionDelete", "doc": "&quot;onCollectionDelete\nan event invoked after a Doctrine_Collection is being deleted&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_onPreCollectionDelete", "name": "Doctrine_EventListener_Chain::onPreCollectionDelete", "doc": "&quot;onCollectionDelete\nan event invoked after a Doctrine_Collection is being deleted&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_postConnect", "name": "Doctrine_EventListener_Chain::postConnect", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_preConnect", "name": "Doctrine_EventListener_Chain::preConnect", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_preQuery", "name": "Doctrine_EventListener_Chain::preQuery", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_postQuery", "name": "Doctrine_EventListener_Chain::postQuery", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_prePrepare", "name": "Doctrine_EventListener_Chain::prePrepare", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_postPrepare", "name": "Doctrine_EventListener_Chain::postPrepare", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_preExec", "name": "Doctrine_EventListener_Chain::preExec", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_postExec", "name": "Doctrine_EventListener_Chain::postExec", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_preError", "name": "Doctrine_EventListener_Chain::preError", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_postError", "name": "Doctrine_EventListener_Chain::postError", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_preFetch", "name": "Doctrine_EventListener_Chain::preFetch", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_postFetch", "name": "Doctrine_EventListener_Chain::postFetch", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_preFetchAll", "name": "Doctrine_EventListener_Chain::preFetchAll", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_postFetchAll", "name": "Doctrine_EventListener_Chain::postFetchAll", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_preStmtExecute", "name": "Doctrine_EventListener_Chain::preStmtExecute", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Chain", "fromLink": "Doctrine_EventListener_Chain.html", "link": "Doctrine_EventListener_Chain.html#method_postStmtExecute", "name": "Doctrine_EventListener_Chain::postStmtExecute", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_EventListener_Exception.html", "name": "Doctrine_EventListener_Exception", "doc": "&quot;Doctrine_EventListener_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_EventListener_Interface.html", "name": "Doctrine_EventListener_Interface", "doc": "&quot;Doctrine_EventListener     all event listeners extend this base class\n                           the empty methods allow child classes to only implement the methods they need to implement&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_preTransactionCommit", "name": "Doctrine_EventListener_Interface::preTransactionCommit", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_postTransactionCommit", "name": "Doctrine_EventListener_Interface::postTransactionCommit", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_preTransactionRollback", "name": "Doctrine_EventListener_Interface::preTransactionRollback", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_postTransactionRollback", "name": "Doctrine_EventListener_Interface::postTransactionRollback", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_preTransactionBegin", "name": "Doctrine_EventListener_Interface::preTransactionBegin", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_postTransactionBegin", "name": "Doctrine_EventListener_Interface::postTransactionBegin", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_postConnect", "name": "Doctrine_EventListener_Interface::postConnect", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_preConnect", "name": "Doctrine_EventListener_Interface::preConnect", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_preQuery", "name": "Doctrine_EventListener_Interface::preQuery", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_postQuery", "name": "Doctrine_EventListener_Interface::postQuery", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_prePrepare", "name": "Doctrine_EventListener_Interface::prePrepare", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_postPrepare", "name": "Doctrine_EventListener_Interface::postPrepare", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_preExec", "name": "Doctrine_EventListener_Interface::preExec", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_postExec", "name": "Doctrine_EventListener_Interface::postExec", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_preError", "name": "Doctrine_EventListener_Interface::preError", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_postError", "name": "Doctrine_EventListener_Interface::postError", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_preFetch", "name": "Doctrine_EventListener_Interface::preFetch", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_postFetch", "name": "Doctrine_EventListener_Interface::postFetch", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_preFetchAll", "name": "Doctrine_EventListener_Interface::preFetchAll", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_postFetchAll", "name": "Doctrine_EventListener_Interface::postFetchAll", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_preStmtExecute", "name": "Doctrine_EventListener_Interface::preStmtExecute", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_EventListener_Interface", "fromLink": "Doctrine_EventListener_Interface.html", "link": "Doctrine_EventListener_Interface.html#method_postStmtExecute", "name": "Doctrine_EventListener_Interface::postStmtExecute", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Exception.html", "name": "Doctrine_Exception", "doc": "&quot;Doctrine_Exception&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Exception", "fromLink": "Doctrine_Exception.html", "link": "Doctrine_Exception.html#method_errorMessage", "name": "Doctrine_Exception::errorMessage", "doc": "&quot;Return a textual error message for a Doctrine error code&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Export.html", "name": "Doctrine_Export", "doc": "&quot;Doctrine_Export&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_dropDatabase", "name": "Doctrine_Export::dropDatabase", "doc": "&quot;drop an existing database\n(this method is implemented by the drivers)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_dropDatabaseSql", "name": "Doctrine_Export::dropDatabaseSql", "doc": "&quot;drop an existing database\n(this method is implemented by the drivers)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_dropTableSql", "name": "Doctrine_Export::dropTableSql", "doc": "&quot;dropTableSql\ndrop an existing table&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_dropTable", "name": "Doctrine_Export::dropTable", "doc": "&quot;dropTable\ndrop an existing table&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_dropIndex", "name": "Doctrine_Export::dropIndex", "doc": "&quot;drop existing index&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_dropIndexSql", "name": "Doctrine_Export::dropIndexSql", "doc": "&quot;dropIndexSql&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_dropConstraint", "name": "Doctrine_Export::dropConstraint", "doc": "&quot;drop existing constraint&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_dropForeignKey", "name": "Doctrine_Export::dropForeignKey", "doc": "&quot;drop existing foreign key&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_dropSequence", "name": "Doctrine_Export::dropSequence", "doc": "&quot;dropSequenceSql\ndrop existing sequence\n(this method is implemented by the drivers)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_dropSequenceSql", "name": "Doctrine_Export::dropSequenceSql", "doc": "&quot;dropSequenceSql\ndrop existing sequence&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_createDatabase", "name": "Doctrine_Export::createDatabase", "doc": "&quot;create a new database\n(this method is implemented by the drivers)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_createDatabaseSql", "name": "Doctrine_Export::createDatabaseSql", "doc": "&quot;create a new database\n(this method is implemented by the drivers)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_createTableSql", "name": "Doctrine_Export::createTableSql", "doc": "&quot;create a new table&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_createTable", "name": "Doctrine_Export::createTable", "doc": "&quot;create a new table&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_createSequence", "name": "Doctrine_Export::createSequence", "doc": "&quot;create sequence&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_createSequenceSql", "name": "Doctrine_Export::createSequenceSql", "doc": "&quot;return RDBMS specific create sequence statement\n(this method is implemented by the drivers)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_createConstraint", "name": "Doctrine_Export::createConstraint", "doc": "&quot;create a constraint on a table&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_createConstraintSql", "name": "Doctrine_Export::createConstraintSql", "doc": "&quot;create a constraint on a table&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_createIndex", "name": "Doctrine_Export::createIndex", "doc": "&quot;Get the stucture of a field into an array&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_createIndexSql", "name": "Doctrine_Export::createIndexSql", "doc": "&quot;Get the stucture of a field into an array&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_createForeignKeySql", "name": "Doctrine_Export::createForeignKeySql", "doc": "&quot;createForeignKeySql&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_createForeignKey", "name": "Doctrine_Export::createForeignKey", "doc": "&quot;createForeignKey&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_alterTable", "name": "Doctrine_Export::alterTable", "doc": "&quot;alter an existing table\n(this method is implemented by the drivers)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_alterTableSql", "name": "Doctrine_Export::alterTableSql", "doc": "&quot;generates the sql for altering an existing table\n(this method is implemented by the drivers)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_getFieldDeclarationList", "name": "Doctrine_Export::getFieldDeclarationList", "doc": "&quot;Get declaration of a number of field in bulk&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_getDeclaration", "name": "Doctrine_Export::getDeclaration", "doc": "&quot;Obtain DBMS specific SQL code portion needed to declare a generic type\nfield to be used in statements like CREATE TABLE.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_getDefaultFieldDeclaration", "name": "Doctrine_Export::getDefaultFieldDeclaration", "doc": "&quot;getDefaultDeclaration\nObtain DBMS specific SQL code portion needed to set a default value\ndeclaration to be used in statements like CREATE TABLE.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_getNotNullFieldDeclaration", "name": "Doctrine_Export::getNotNullFieldDeclaration", "doc": "&quot;getNotNullFieldDeclaration\nObtain DBMS specific SQL code portion needed to set a NOT NULL\ndeclaration to be used in statements like CREATE TABLE.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_getCheckDeclaration", "name": "Doctrine_Export::getCheckDeclaration", "doc": "&quot;Obtain DBMS specific SQL code portion needed to set a CHECK constraint\ndeclaration to be used in statements like CREATE TABLE.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_getIndexDeclaration", "name": "Doctrine_Export::getIndexDeclaration", "doc": "&quot;Obtain DBMS specific SQL code portion needed to set an index\ndeclaration to be used in statements like CREATE TABLE.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_getIndexFieldDeclarationList", "name": "Doctrine_Export::getIndexFieldDeclarationList", "doc": "&quot;getIndexFieldDeclarationList\nObtain DBMS specific SQL code portion needed to set an index\ndeclaration to be used in statements like CREATE TABLE.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_getTemporaryTableQuery", "name": "Doctrine_Export::getTemporaryTableQuery", "doc": "&quot;A method to return the required SQL string that fits between CREATE .&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_getForeignKeyDeclaration", "name": "Doctrine_Export::getForeignKeyDeclaration", "doc": "&quot;getForeignKeyDeclaration\nObtain DBMS specific SQL code portion needed to set the FOREIGN KEY constraint\nof a field declaration to be used in statements like CREATE TABLE.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_getAdvancedForeignKeyOptions", "name": "Doctrine_Export::getAdvancedForeignKeyOptions", "doc": "&quot;getAdvancedForeignKeyOptions\nReturn the FOREIGN KEY query section dealing with non-standard options\nas MATCH, INITIALLY DEFERRED, ON UPDATE, .&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_getForeignKeyReferentialAction", "name": "Doctrine_Export::getForeignKeyReferentialAction", "doc": "&quot;getForeignKeyReferentialAction&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_getForeignKeyBaseDeclaration", "name": "Doctrine_Export::getForeignKeyBaseDeclaration", "doc": "&quot;getForeignKeyBaseDeclaration\nObtain DBMS specific SQL code portion needed to set the FOREIGN KEY constraint\nof a field declaration to be used in statements like CREATE TABLE.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_getUniqueFieldDeclaration", "name": "Doctrine_Export::getUniqueFieldDeclaration", "doc": "&quot;Obtain DBMS specific SQL code portion needed to set the UNIQUE constraint\nof a field declaration to be used in statements like CREATE TABLE.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_getCharsetFieldDeclaration", "name": "Doctrine_Export::getCharsetFieldDeclaration", "doc": "&quot;Obtain DBMS specific SQL code portion needed to set the CHARACTER SET\nof a field declaration to be used in statements like CREATE TABLE.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_getCollationFieldDeclaration", "name": "Doctrine_Export::getCollationFieldDeclaration", "doc": "&quot;Obtain DBMS specific SQL code portion needed to set the COLLATION\nof a field declaration to be used in statements like CREATE TABLE.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_exportSchema", "name": "Doctrine_Export::exportSchema", "doc": "&quot;exportSchema\nmethod for exporting Doctrine_Record classes to a schema&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_exportSortedClassesSql", "name": "Doctrine_Export::exportSortedClassesSql", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_exportClasses", "name": "Doctrine_Export::exportClasses", "doc": "&quot;exportClasses\nmethod for exporting Doctrine_Record classes to a schema&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_exportClassesSql", "name": "Doctrine_Export::exportClassesSql", "doc": "&quot;exportClassesSql\nmethod for exporting Doctrine_Record classes to a schema&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_getAllGenerators", "name": "Doctrine_Export::getAllGenerators", "doc": "&quot;fetches all generators recursively for given table&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_exportGeneratorsSql", "name": "Doctrine_Export::exportGeneratorsSql", "doc": "&quot;exportGeneratorsSql\nexports plugin tables for given table&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_exportSql", "name": "Doctrine_Export::exportSql", "doc": "&quot;exportSql\nreturns the sql for exporting Doctrine_Record classes to a schema&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export", "fromLink": "Doctrine_Export.html", "link": "Doctrine_Export.html#method_exportTable", "name": "Doctrine_Export::exportTable", "doc": "&quot;exportTable\nexports given table into database based on column and option definitions&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Export_Exception.html", "name": "Doctrine_Export_Exception", "doc": "&quot;Doctrine_Export_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Export_Mssql.html", "name": "Doctrine_Export_Mssql", "doc": "&quot;Doctrine_Export_Mssql&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Export_Mssql", "fromLink": "Doctrine_Export_Mssql.html", "link": "Doctrine_Export_Mssql.html#method_createDatabase", "name": "Doctrine_Export_Mssql::createDatabase", "doc": "&quot;create a new database&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Mssql", "fromLink": "Doctrine_Export_Mssql.html", "link": "Doctrine_Export_Mssql.html#method_dropDatabase", "name": "Doctrine_Export_Mssql::dropDatabase", "doc": "&quot;drop an existing database&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Mssql", "fromLink": "Doctrine_Export_Mssql.html", "link": "Doctrine_Export_Mssql.html#method_getTemporaryTableQuery", "name": "Doctrine_Export_Mssql::getTemporaryTableQuery", "doc": "&quot;Override the parent method.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Mssql", "fromLink": "Doctrine_Export_Mssql.html", "link": "Doctrine_Export_Mssql.html#method_dropIndexSql", "name": "Doctrine_Export_Mssql::dropIndexSql", "doc": "&quot;dropIndexSql&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Mssql", "fromLink": "Doctrine_Export_Mssql.html", "link": "Doctrine_Export_Mssql.html#method_alterTable", "name": "Doctrine_Export_Mssql::alterTable", "doc": "&quot;alter an existing table&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Mssql", "fromLink": "Doctrine_Export_Mssql.html", "link": "Doctrine_Export_Mssql.html#method_createSequence", "name": "Doctrine_Export_Mssql::createSequence", "doc": "&quot;create sequence&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Mssql", "fromLink": "Doctrine_Export_Mssql.html", "link": "Doctrine_Export_Mssql.html#method_dropSequenceSql", "name": "Doctrine_Export_Mssql::dropSequenceSql", "doc": "&quot;This function drops an existing sequence&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Mssql", "fromLink": "Doctrine_Export_Mssql.html", "link": "Doctrine_Export_Mssql.html#method_createTableSql", "name": "Doctrine_Export_Mssql::createTableSql", "doc": "&quot;create a new table&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Mssql", "fromLink": "Doctrine_Export_Mssql.html", "link": "Doctrine_Export_Mssql.html#method_getNotNullFieldDeclaration", "name": "Doctrine_Export_Mssql::getNotNullFieldDeclaration", "doc": "&quot;getNotNullFieldDeclaration\nObtain DBMS specific SQL code portion needed to set a NOT NULL\ndeclaration to be used in statements like CREATE TABLE.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Mssql", "fromLink": "Doctrine_Export_Mssql.html", "link": "Doctrine_Export_Mssql.html#method_getDefaultFieldDeclaration", "name": "Doctrine_Export_Mssql::getDefaultFieldDeclaration", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Export_Mysql.html", "name": "Doctrine_Export_Mysql", "doc": "&quot;Doctrine_Export_Mysql&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Export_Mysql", "fromLink": "Doctrine_Export_Mysql.html", "link": "Doctrine_Export_Mysql.html#method_dropConstraint", "name": "Doctrine_Export_Mysql::dropConstraint", "doc": "&quot;drop existing constraint&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Mysql", "fromLink": "Doctrine_Export_Mysql.html", "link": "Doctrine_Export_Mysql.html#method_createDatabaseSql", "name": "Doctrine_Export_Mysql::createDatabaseSql", "doc": "&quot;createDatabaseSql&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Mysql", "fromLink": "Doctrine_Export_Mysql.html", "link": "Doctrine_Export_Mysql.html#method_dropDatabaseSql", "name": "Doctrine_Export_Mysql::dropDatabaseSql", "doc": "&quot;drop an existing database&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Mysql", "fromLink": "Doctrine_Export_Mysql.html", "link": "Doctrine_Export_Mysql.html#method_createTableSql", "name": "Doctrine_Export_Mysql::createTableSql", "doc": "&quot;create a new table&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Mysql", "fromLink": "Doctrine_Export_Mysql.html", "link": "Doctrine_Export_Mysql.html#method_getDeclaration", "name": "Doctrine_Export_Mysql::getDeclaration", "doc": "&quot;Obtain DBMS specific SQL code portion needed to declare a generic type\nfield to be used in statements like CREATE TABLE.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Mysql", "fromLink": "Doctrine_Export_Mysql.html", "link": "Doctrine_Export_Mysql.html#method_alterTableSql", "name": "Doctrine_Export_Mysql::alterTableSql", "doc": "&quot;alter an existing table&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Mysql", "fromLink": "Doctrine_Export_Mysql.html", "link": "Doctrine_Export_Mysql.html#method_createSequence", "name": "Doctrine_Export_Mysql::createSequence", "doc": "&quot;create sequence&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Mysql", "fromLink": "Doctrine_Export_Mysql.html", "link": "Doctrine_Export_Mysql.html#method_createIndexSql", "name": "Doctrine_Export_Mysql::createIndexSql", "doc": "&quot;Get the stucture of a field into an array&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Mysql", "fromLink": "Doctrine_Export_Mysql.html", "link": "Doctrine_Export_Mysql.html#method_getDefaultFieldDeclaration", "name": "Doctrine_Export_Mysql::getDefaultFieldDeclaration", "doc": "&quot;getDefaultDeclaration\nObtain DBMS specific SQL code portion needed to set a default value\ndeclaration to be used in statements like CREATE TABLE.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Mysql", "fromLink": "Doctrine_Export_Mysql.html", "link": "Doctrine_Export_Mysql.html#method_getIndexDeclaration", "name": "Doctrine_Export_Mysql::getIndexDeclaration", "doc": "&quot;Obtain DBMS specific SQL code portion needed to set an index\ndeclaration to be used in statements like CREATE TABLE.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Mysql", "fromLink": "Doctrine_Export_Mysql.html", "link": "Doctrine_Export_Mysql.html#method_getIndexFieldDeclarationList", "name": "Doctrine_Export_Mysql::getIndexFieldDeclarationList", "doc": "&quot;getIndexFieldDeclarationList\nObtain DBMS specific SQL code portion needed to set an index\ndeclaration to be used in statements like CREATE TABLE.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Mysql", "fromLink": "Doctrine_Export_Mysql.html", "link": "Doctrine_Export_Mysql.html#method_getCharsetFieldDeclaration", "name": "Doctrine_Export_Mysql::getCharsetFieldDeclaration", "doc": "&quot;Returns a character set declaration.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Mysql", "fromLink": "Doctrine_Export_Mysql.html", "link": "Doctrine_Export_Mysql.html#method_getCollationFieldDeclaration", "name": "Doctrine_Export_Mysql::getCollationFieldDeclaration", "doc": "&quot;Returns a collation declaration.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Mysql", "fromLink": "Doctrine_Export_Mysql.html", "link": "Doctrine_Export_Mysql.html#method_getAdvancedForeignKeyOptions", "name": "Doctrine_Export_Mysql::getAdvancedForeignKeyOptions", "doc": "&quot;getAdvancedForeignKeyOptions\nReturn the FOREIGN KEY query section dealing with non-standard options\nas MATCH, INITIALLY DEFERRED, ON UPDATE, .&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Mysql", "fromLink": "Doctrine_Export_Mysql.html", "link": "Doctrine_Export_Mysql.html#method_dropIndexSql", "name": "Doctrine_Export_Mysql::dropIndexSql", "doc": "&quot;drop existing index&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Mysql", "fromLink": "Doctrine_Export_Mysql.html", "link": "Doctrine_Export_Mysql.html#method_dropTableSql", "name": "Doctrine_Export_Mysql::dropTableSql", "doc": "&quot;dropTable&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Mysql", "fromLink": "Doctrine_Export_Mysql.html", "link": "Doctrine_Export_Mysql.html#method_dropForeignKey", "name": "Doctrine_Export_Mysql::dropForeignKey", "doc": "&quot;drop existing foreign key&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Export_Oracle.html", "name": "Doctrine_Export_Oracle", "doc": "&quot;Doctrine_Export_Oracle&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Export_Oracle", "fromLink": "Doctrine_Export_Oracle.html", "link": "Doctrine_Export_Oracle.html#method_createDatabase", "name": "Doctrine_Export_Oracle::createDatabase", "doc": "&quot;create a new database&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Oracle", "fromLink": "Doctrine_Export_Oracle.html", "link": "Doctrine_Export_Oracle.html#method_dropDatabase", "name": "Doctrine_Export_Oracle::dropDatabase", "doc": "&quot;drop an existing database&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Oracle", "fromLink": "Doctrine_Export_Oracle.html", "link": "Doctrine_Export_Oracle.html#method__makeAutoincrement", "name": "Doctrine_Export_Oracle::_makeAutoincrement", "doc": "&quot;add an autoincrement sequence + trigger&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Oracle", "fromLink": "Doctrine_Export_Oracle.html", "link": "Doctrine_Export_Oracle.html#method_dropAutoincrement", "name": "Doctrine_Export_Oracle::dropAutoincrement", "doc": "&quot;drop an existing autoincrement sequence + trigger&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Oracle", "fromLink": "Doctrine_Export_Oracle.html", "link": "Doctrine_Export_Oracle.html#method_getTemporaryTableQuery", "name": "Doctrine_Export_Oracle::getTemporaryTableQuery", "doc": "&quot;A method to return the required SQL string that fits between CREATE .&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Oracle", "fromLink": "Doctrine_Export_Oracle.html", "link": "Doctrine_Export_Oracle.html#method_getAdvancedForeignKeyOptions", "name": "Doctrine_Export_Oracle::getAdvancedForeignKeyOptions", "doc": "&quot;getAdvancedForeignKeyOptions\nReturn the FOREIGN KEY query section dealing with non-standard options\nas MATCH, INITIALLY DEFERRED, ON UPDATE, .&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Oracle", "fromLink": "Doctrine_Export_Oracle.html", "link": "Doctrine_Export_Oracle.html#method_createTable", "name": "Doctrine_Export_Oracle::createTable", "doc": "&quot;create a new table&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Oracle", "fromLink": "Doctrine_Export_Oracle.html", "link": "Doctrine_Export_Oracle.html#method_createTableSql", "name": "Doctrine_Export_Oracle::createTableSql", "doc": "&quot;create a new table&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Oracle", "fromLink": "Doctrine_Export_Oracle.html", "link": "Doctrine_Export_Oracle.html#method__createTableCommentSql", "name": "Doctrine_Export_Oracle::_createTableCommentSql", "doc": "&quot;create a comment on a table&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Oracle", "fromLink": "Doctrine_Export_Oracle.html", "link": "Doctrine_Export_Oracle.html#method__createColumnCommentSql", "name": "Doctrine_Export_Oracle::_createColumnCommentSql", "doc": "&quot;create a comment on a column&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Oracle", "fromLink": "Doctrine_Export_Oracle.html", "link": "Doctrine_Export_Oracle.html#method_dropTable", "name": "Doctrine_Export_Oracle::dropTable", "doc": "&quot;drop an existing table&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Oracle", "fromLink": "Doctrine_Export_Oracle.html", "link": "Doctrine_Export_Oracle.html#method_alterTable", "name": "Doctrine_Export_Oracle::alterTable", "doc": "&quot;alter an existing table&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Oracle", "fromLink": "Doctrine_Export_Oracle.html", "link": "Doctrine_Export_Oracle.html#method_createSequenceSql", "name": "Doctrine_Export_Oracle::createSequenceSql", "doc": "&quot;create sequence&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Oracle", "fromLink": "Doctrine_Export_Oracle.html", "link": "Doctrine_Export_Oracle.html#method_dropSequenceSql", "name": "Doctrine_Export_Oracle::dropSequenceSql", "doc": "&quot;drop existing sequence&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Oracle", "fromLink": "Doctrine_Export_Oracle.html", "link": "Doctrine_Export_Oracle.html#method_getIndexDeclaration", "name": "Doctrine_Export_Oracle::getIndexDeclaration", "doc": "&quot;return Oracle&#039;s SQL code portion needed to set an index\ndeclaration to be unsed in statements like CREATE TABLE.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Export_Pgsql.html", "name": "Doctrine_Export_Pgsql", "doc": "&quot;Doctrine_Export_Pgsql&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Export_Pgsql", "fromLink": "Doctrine_Export_Pgsql.html", "link": "Doctrine_Export_Pgsql.html#method_createDatabaseSql", "name": "Doctrine_Export_Pgsql::createDatabaseSql", "doc": "&quot;createDatabaseSql&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Pgsql", "fromLink": "Doctrine_Export_Pgsql.html", "link": "Doctrine_Export_Pgsql.html#method_dropDatabaseSql", "name": "Doctrine_Export_Pgsql::dropDatabaseSql", "doc": "&quot;drop an existing database&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Pgsql", "fromLink": "Doctrine_Export_Pgsql.html", "link": "Doctrine_Export_Pgsql.html#method_getAdvancedForeignKeyOptions", "name": "Doctrine_Export_Pgsql::getAdvancedForeignKeyOptions", "doc": "&quot;getAdvancedForeignKeyOptions\nReturn the FOREIGN KEY query section dealing with non-standard options\nas MATCH, INITIALLY DEFERRED, ON UPDATE, .&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Pgsql", "fromLink": "Doctrine_Export_Pgsql.html", "link": "Doctrine_Export_Pgsql.html#method_alterTableSql", "name": "Doctrine_Export_Pgsql::alterTableSql", "doc": "&quot;generates the sql for altering an existing table on postgresql&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Pgsql", "fromLink": "Doctrine_Export_Pgsql.html", "link": "Doctrine_Export_Pgsql.html#method_alterTable", "name": "Doctrine_Export_Pgsql::alterTable", "doc": "&quot;alter an existing table&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Pgsql", "fromLink": "Doctrine_Export_Pgsql.html", "link": "Doctrine_Export_Pgsql.html#method_createSequenceSql", "name": "Doctrine_Export_Pgsql::createSequenceSql", "doc": "&quot;return RDBMS specific create sequence statement&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Pgsql", "fromLink": "Doctrine_Export_Pgsql.html", "link": "Doctrine_Export_Pgsql.html#method_dropSequenceSql", "name": "Doctrine_Export_Pgsql::dropSequenceSql", "doc": "&quot;drop existing sequence&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Pgsql", "fromLink": "Doctrine_Export_Pgsql.html", "link": "Doctrine_Export_Pgsql.html#method_createTableSql", "name": "Doctrine_Export_Pgsql::createTableSql", "doc": "&quot;Creates a table.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Pgsql", "fromLink": "Doctrine_Export_Pgsql.html", "link": "Doctrine_Export_Pgsql.html#method_createIndexSql", "name": "Doctrine_Export_Pgsql::createIndexSql", "doc": "&quot;Get the stucture of a field into an array.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Export_Reporter.html", "name": "Doctrine_Export_Reporter", "doc": "&quot;Doctrine_Export_Reporter&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Export_Reporter", "fromLink": "Doctrine_Export_Reporter.html", "link": "Doctrine_Export_Reporter.html#method_add", "name": "Doctrine_Export_Reporter::add", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Reporter", "fromLink": "Doctrine_Export_Reporter.html", "link": "Doctrine_Export_Reporter.html#method_pop", "name": "Doctrine_Export_Reporter::pop", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Reporter", "fromLink": "Doctrine_Export_Reporter.html", "link": "Doctrine_Export_Reporter.html#method_getIterator", "name": "Doctrine_Export_Reporter::getIterator", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Export_Schema.html", "name": "Doctrine_Export_Schema", "doc": "&quot;Doctrine_Export_Schema&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Export_Schema", "fromLink": "Doctrine_Export_Schema.html", "link": "Doctrine_Export_Schema.html#method_buildSchema", "name": "Doctrine_Export_Schema::buildSchema", "doc": "&quot;buildSchema&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Schema", "fromLink": "Doctrine_Export_Schema.html", "link": "Doctrine_Export_Schema.html#method_exportSchema", "name": "Doctrine_Export_Schema::exportSchema", "doc": "&quot;exportSchema&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Export_Sqlite.html", "name": "Doctrine_Export_Sqlite", "doc": "&quot;Doctrine_Export_Sqlite&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Export_Sqlite", "fromLink": "Doctrine_Export_Sqlite.html", "link": "Doctrine_Export_Sqlite.html#method_dropDatabase", "name": "Doctrine_Export_Sqlite::dropDatabase", "doc": "&quot;dropDatabase&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Sqlite", "fromLink": "Doctrine_Export_Sqlite.html", "link": "Doctrine_Export_Sqlite.html#method_createDatabase", "name": "Doctrine_Export_Sqlite::createDatabase", "doc": "&quot;createDatabase&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Sqlite", "fromLink": "Doctrine_Export_Sqlite.html", "link": "Doctrine_Export_Sqlite.html#method_createIndexSql", "name": "Doctrine_Export_Sqlite::createIndexSql", "doc": "&quot;Get the stucture of a field into an array&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Sqlite", "fromLink": "Doctrine_Export_Sqlite.html", "link": "Doctrine_Export_Sqlite.html#method_getIndexFieldDeclarationList", "name": "Doctrine_Export_Sqlite::getIndexFieldDeclarationList", "doc": "&quot;getIndexFieldDeclarationList\nObtain DBMS specific SQL code portion needed to set an index\ndeclaration to be used in statements like CREATE TABLE.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Sqlite", "fromLink": "Doctrine_Export_Sqlite.html", "link": "Doctrine_Export_Sqlite.html#method_createTableSql", "name": "Doctrine_Export_Sqlite::createTableSql", "doc": "&quot;create a new table&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Sqlite", "fromLink": "Doctrine_Export_Sqlite.html", "link": "Doctrine_Export_Sqlite.html#method_getAdvancedForeignKeyOptions", "name": "Doctrine_Export_Sqlite::getAdvancedForeignKeyOptions", "doc": "&quot;getAdvancedForeignKeyOptions\nReturn the FOREIGN KEY query section dealing with non-standard options\nas MATCH, INITIALLY DEFERRED, ON UPDATE, .&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Sqlite", "fromLink": "Doctrine_Export_Sqlite.html", "link": "Doctrine_Export_Sqlite.html#method_createSequence", "name": "Doctrine_Export_Sqlite::createSequence", "doc": "&quot;create sequence&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Sqlite", "fromLink": "Doctrine_Export_Sqlite.html", "link": "Doctrine_Export_Sqlite.html#method_dropSequenceSql", "name": "Doctrine_Export_Sqlite::dropSequenceSql", "doc": "&quot;drop existing sequence&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Sqlite", "fromLink": "Doctrine_Export_Sqlite.html", "link": "Doctrine_Export_Sqlite.html#method_alterTableSql", "name": "Doctrine_Export_Sqlite::alterTableSql", "doc": "&quot;generates the sql for altering an existing table\n(this method is implemented by the drivers)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Export_Sqlite", "fromLink": "Doctrine_Export_Sqlite.html", "link": "Doctrine_Export_Sqlite.html#method_createForeignKey", "name": "Doctrine_Export_Sqlite::createForeignKey", "doc": "&quot;createForeignKey&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Expression.html", "name": "Doctrine_Expression", "doc": "&quot;Doctrine_Expression memorizes a dql expression that use a db function.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Expression", "fromLink": "Doctrine_Expression.html", "link": "Doctrine_Expression.html#method___construct", "name": "Doctrine_Expression::__construct", "doc": "&quot;Creates an expression.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression", "fromLink": "Doctrine_Expression.html", "link": "Doctrine_Expression.html#method_getConnection", "name": "Doctrine_Expression::getConnection", "doc": "&quot;Retrieves the connection associated to this expression at creation,\nor the current connection used if it was not specified.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression", "fromLink": "Doctrine_Expression.html", "link": "Doctrine_Expression.html#method_setExpression", "name": "Doctrine_Expression::setExpression", "doc": "&quot;Sets the contained expression assuring that it is parsed.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression", "fromLink": "Doctrine_Expression.html", "link": "Doctrine_Expression.html#method_parseExpression", "name": "Doctrine_Expression::parseExpression", "doc": "&quot;Parses a single expressions and substitutes dql abstract functions\nwith their concrete sql counterparts for the given connection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression", "fromLink": "Doctrine_Expression.html", "link": "Doctrine_Expression.html#method_parseClause", "name": "Doctrine_Expression::parseClause", "doc": "&quot;Parses a set of expressions at once.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression", "fromLink": "Doctrine_Expression.html", "link": "Doctrine_Expression.html#method_getSql", "name": "Doctrine_Expression::getSql", "doc": "&quot;Gets the sql fragment represented.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression", "fromLink": "Doctrine_Expression.html", "link": "Doctrine_Expression.html#method___toString", "name": "Doctrine_Expression::__toString", "doc": "&quot;Magic method.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Expression_Driver.html", "name": "Doctrine_Expression_Driver", "doc": "&quot;Doctrine_Expression_Driver&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_getIdentifier", "name": "Doctrine_Expression_Driver::getIdentifier", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_getIdentifiers", "name": "Doctrine_Expression_Driver::getIdentifiers", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_regexp", "name": "Doctrine_Expression_Driver::regexp", "doc": "&quot;regexp\nreturns the regular expression operator&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_avg", "name": "Doctrine_Expression_Driver::avg", "doc": "&quot;Returns the average value of a column&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_count", "name": "Doctrine_Expression_Driver::count", "doc": "&quot;Returns the number of rows (without a NULL value) of a column&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_max", "name": "Doctrine_Expression_Driver::max", "doc": "&quot;Returns the highest value of a column&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_min", "name": "Doctrine_Expression_Driver::min", "doc": "&quot;Returns the lowest value of a column&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_sum", "name": "Doctrine_Expression_Driver::sum", "doc": "&quot;Returns the total sum of a column&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_md5", "name": "Doctrine_Expression_Driver::md5", "doc": "&quot;Returns the md5 sum of a field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_length", "name": "Doctrine_Expression_Driver::length", "doc": "&quot;Returns the length of a text field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_round", "name": "Doctrine_Expression_Driver::round", "doc": "&quot;Rounds a numeric field to the number of decimals specified.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_mod", "name": "Doctrine_Expression_Driver::mod", "doc": "&quot;Returns the remainder of the division operation\n$expression1 \/ $expression2.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_trim", "name": "Doctrine_Expression_Driver::trim", "doc": "&quot;trim\nreturns the string $str with leading and proceeding space characters removed&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_rtrim", "name": "Doctrine_Expression_Driver::rtrim", "doc": "&quot;rtrim\nreturns the string $str with proceeding space characters removed&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_ltrim", "name": "Doctrine_Expression_Driver::ltrim", "doc": "&quot;ltrim\nreturns the string $str with leading space characters removed&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_upper", "name": "Doctrine_Expression_Driver::upper", "doc": "&quot;upper\nReturns the string $str with all characters changed to\nuppercase according to the current character set mapping.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_lower", "name": "Doctrine_Expression_Driver::lower", "doc": "&quot;lower\nReturns the string $str with all characters changed to\nlowercase according to the current character set mapping.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_locate", "name": "Doctrine_Expression_Driver::locate", "doc": "&quot;locate\nreturns the position of the first occurrence of substring $substr in string $str&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_now", "name": "Doctrine_Expression_Driver::now", "doc": "&quot;Returns the current system date.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_soundex", "name": "Doctrine_Expression_Driver::soundex", "doc": "&quot;soundex\nReturns a string to call a function to compute the\nsoundex encoding of a string&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_substring", "name": "Doctrine_Expression_Driver::substring", "doc": "&quot;return string to call a function to get a substring inside an SQL statement&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_concat", "name": "Doctrine_Expression_Driver::concat", "doc": "&quot;Returns a series of strings concatinated&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_not", "name": "Doctrine_Expression_Driver::not", "doc": "&quot;Returns the SQL for a logical not.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_add", "name": "Doctrine_Expression_Driver::add", "doc": "&quot;Returns the SQL to add values or expressions together.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_sub", "name": "Doctrine_Expression_Driver::sub", "doc": "&quot;Returns the SQL to subtract values or expressions from eachother.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_mul", "name": "Doctrine_Expression_Driver::mul", "doc": "&quot;Returns the SQL to multiply values or expressions by eachother.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_div", "name": "Doctrine_Expression_Driver::div", "doc": "&quot;Returns the SQL to divide values or expressions by eachother.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_eq", "name": "Doctrine_Expression_Driver::eq", "doc": "&quot;Returns the SQL to check if two values are equal.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_neq", "name": "Doctrine_Expression_Driver::neq", "doc": "&quot;Returns the SQL to check if two values are unequal.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_gt", "name": "Doctrine_Expression_Driver::gt", "doc": "&quot;Returns the SQL to check if one value is greater than another value.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_gte", "name": "Doctrine_Expression_Driver::gte", "doc": "&quot;Returns the SQL to check if one value is greater than or equal to\nanother value.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_lt", "name": "Doctrine_Expression_Driver::lt", "doc": "&quot;Returns the SQL to check if one value is less than another value.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_lte", "name": "Doctrine_Expression_Driver::lte", "doc": "&quot;Returns the SQL to check if one value is less than or equal to\nanother value.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_in", "name": "Doctrine_Expression_Driver::in", "doc": "&quot;Returns the SQL to check if a value is one in a set of\ngiven values.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_isNull", "name": "Doctrine_Expression_Driver::isNull", "doc": "&quot;Returns SQL that checks if a expression is null.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_isNotNull", "name": "Doctrine_Expression_Driver::isNotNull", "doc": "&quot;Returns SQL that checks if a expression is not null.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_between", "name": "Doctrine_Expression_Driver::between", "doc": "&quot;Returns SQL that checks if an expression evaluates to a value between\ntwo values.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_guid", "name": "Doctrine_Expression_Driver::guid", "doc": "&quot;Returns global unique identifier&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_acos", "name": "Doctrine_Expression_Driver::acos", "doc": "&quot;returns arcus cosine SQL string&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_sin", "name": "Doctrine_Expression_Driver::sin", "doc": "&quot;sin&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_pi", "name": "Doctrine_Expression_Driver::pi", "doc": "&quot;pi&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_cos", "name": "Doctrine_Expression_Driver::cos", "doc": "&quot;cos&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method_coalesce", "name": "Doctrine_Expression_Driver::coalesce", "doc": "&quot;coalesce&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Driver", "fromLink": "Doctrine_Expression_Driver.html", "link": "Doctrine_Expression_Driver.html#method___call", "name": "Doctrine_Expression_Driver::__call", "doc": "&quot;__call&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Expression_Exception.html", "name": "Doctrine_Expression_Exception", "doc": "&quot;Doctrine_Expression_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Expression_Mock.html", "name": "Doctrine_Expression_Mock", "doc": "&quot;Doctrine_Expression_Mock\nMock driver that is used for testing purposes&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Expression_Mssql.html", "name": "Doctrine_Expression_Mssql", "doc": "&quot;Doctrine_Expression_Mssql&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Expression_Mssql", "fromLink": "Doctrine_Expression_Mssql.html", "link": "Doctrine_Expression_Mssql.html#method_now", "name": "Doctrine_Expression_Mssql::now", "doc": "&quot;Return string to call a variable with the current timestamp inside an SQL statement\nThere are three special variables for current date and time:\n- CURRENT_TIMESTAMP (date and time, TIMESTAMP type)\n- CURRENT_DATE (date, DATE type)\n- CURRENT_TIME (time, TIME type)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Mssql", "fromLink": "Doctrine_Expression_Mssql.html", "link": "Doctrine_Expression_Mssql.html#method_substring", "name": "Doctrine_Expression_Mssql::substring", "doc": "&quot;return string to call a function to get a substring inside an SQL statement&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Mssql", "fromLink": "Doctrine_Expression_Mssql.html", "link": "Doctrine_Expression_Mssql.html#method_concat", "name": "Doctrine_Expression_Mssql::concat", "doc": "&quot;Returns string to concatenate two or more string parameters&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Mssql", "fromLink": "Doctrine_Expression_Mssql.html", "link": "Doctrine_Expression_Mssql.html#method_guid", "name": "Doctrine_Expression_Mssql::guid", "doc": "&quot;Returns global unique identifier&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Mssql", "fromLink": "Doctrine_Expression_Mssql.html", "link": "Doctrine_Expression_Mssql.html#method_length", "name": "Doctrine_Expression_Mssql::length", "doc": "&quot;Returns the length of a text field&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Expression_Mysql.html", "name": "Doctrine_Expression_Mysql", "doc": "&quot;Doctrine_Expression_Mysql&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Expression_Mysql", "fromLink": "Doctrine_Expression_Mysql.html", "link": "Doctrine_Expression_Mysql.html#method_regexp", "name": "Doctrine_Expression_Mysql::regexp", "doc": "&quot;returns the regular expression operator&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Mysql", "fromLink": "Doctrine_Expression_Mysql.html", "link": "Doctrine_Expression_Mysql.html#method_random", "name": "Doctrine_Expression_Mysql::random", "doc": "&quot;return string to call a function to get random value inside an SQL statement&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Mysql", "fromLink": "Doctrine_Expression_Mysql.html", "link": "Doctrine_Expression_Mysql.html#method_matchPattern", "name": "Doctrine_Expression_Mysql::matchPattern", "doc": "&quot;build a pattern matching string&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Mysql", "fromLink": "Doctrine_Expression_Mysql.html", "link": "Doctrine_Expression_Mysql.html#method_guid", "name": "Doctrine_Expression_Mysql::guid", "doc": "&quot;Returns global unique identifier&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Mysql", "fromLink": "Doctrine_Expression_Mysql.html", "link": "Doctrine_Expression_Mysql.html#method_year", "name": "Doctrine_Expression_Mysql::year", "doc": "&quot;Returns the year from dbms&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Mysql", "fromLink": "Doctrine_Expression_Mysql.html", "link": "Doctrine_Expression_Mysql.html#method_month", "name": "Doctrine_Expression_Mysql::month", "doc": "&quot;Returns the month from dbms&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Mysql", "fromLink": "Doctrine_Expression_Mysql.html", "link": "Doctrine_Expression_Mysql.html#method_day", "name": "Doctrine_Expression_Mysql::day", "doc": "&quot;Returns day from dbms&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Mysql", "fromLink": "Doctrine_Expression_Mysql.html", "link": "Doctrine_Expression_Mysql.html#method_soundex", "name": "Doctrine_Expression_Mysql::soundex", "doc": "&quot;Returns soundex from dbms&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Expression_Oracle.html", "name": "Doctrine_Expression_Oracle", "doc": "&quot;Doctrine_Expression_Sqlite&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Expression_Oracle", "fromLink": "Doctrine_Expression_Oracle.html", "link": "Doctrine_Expression_Oracle.html#method_concat", "name": "Doctrine_Expression_Oracle::concat", "doc": "&quot;Returns a series of strings concatinated&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Oracle", "fromLink": "Doctrine_Expression_Oracle.html", "link": "Doctrine_Expression_Oracle.html#method_substring", "name": "Doctrine_Expression_Oracle::substring", "doc": "&quot;return string to call a function to get a substring inside an SQL statement&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Oracle", "fromLink": "Doctrine_Expression_Oracle.html", "link": "Doctrine_Expression_Oracle.html#method_now", "name": "Doctrine_Expression_Oracle::now", "doc": "&quot;Return string to call a variable with the current timestamp inside an SQL statement\nThere are three special variables for current date and time:\n- CURRENT_TIMESTAMP (date and time, TIMESTAMP type)\n- CURRENT_DATE (date, DATE type)\n- CURRENT_TIME (time, TIME type)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Oracle", "fromLink": "Doctrine_Expression_Oracle.html", "link": "Doctrine_Expression_Oracle.html#method_random", "name": "Doctrine_Expression_Oracle::random", "doc": "&quot;random&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Oracle", "fromLink": "Doctrine_Expression_Oracle.html", "link": "Doctrine_Expression_Oracle.html#method_guid", "name": "Doctrine_Expression_Oracle::guid", "doc": "&quot;Returns global unique identifier&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Expression_Pgsql.html", "name": "Doctrine_Expression_Pgsql", "doc": "&quot;Doctrine_Expression_Pgsql&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Expression_Pgsql", "fromLink": "Doctrine_Expression_Pgsql.html", "link": "Doctrine_Expression_Pgsql.html#method_md5", "name": "Doctrine_Expression_Pgsql::md5", "doc": "&quot;Returns the md5 sum of a field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Pgsql", "fromLink": "Doctrine_Expression_Pgsql.html", "link": "Doctrine_Expression_Pgsql.html#method_substring", "name": "Doctrine_Expression_Pgsql::substring", "doc": "&quot;Returns part of a string.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Pgsql", "fromLink": "Doctrine_Expression_Pgsql.html", "link": "Doctrine_Expression_Pgsql.html#method_age", "name": "Doctrine_Expression_Pgsql::age", "doc": "&quot;PostgreSQLs AGE(&lt;timestamp1&gt; [, &lt;timestamp2&gt;]) function.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Pgsql", "fromLink": "Doctrine_Expression_Pgsql.html", "link": "Doctrine_Expression_Pgsql.html#method_date_part", "name": "Doctrine_Expression_Pgsql::date_part", "doc": "&quot;PostgreSQLs DATE_PART( &lt;text&gt;, &lt;time&gt; ) function.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Pgsql", "fromLink": "Doctrine_Expression_Pgsql.html", "link": "Doctrine_Expression_Pgsql.html#method_to_char", "name": "Doctrine_Expression_Pgsql::to_char", "doc": "&quot;PostgreSQLs TO_CHAR( &lt;time&gt;, &lt;text&gt; ) function.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Pgsql", "fromLink": "Doctrine_Expression_Pgsql.html", "link": "Doctrine_Expression_Pgsql.html#method_concat", "name": "Doctrine_Expression_Pgsql::concat", "doc": "&quot;PostgreSQLs CONCAT() function&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Pgsql", "fromLink": "Doctrine_Expression_Pgsql.html", "link": "Doctrine_Expression_Pgsql.html#method_now", "name": "Doctrine_Expression_Pgsql::now", "doc": "&quot;Returns the SQL string to return the current system date and time.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Pgsql", "fromLink": "Doctrine_Expression_Pgsql.html", "link": "Doctrine_Expression_Pgsql.html#method_regexp", "name": "Doctrine_Expression_Pgsql::regexp", "doc": "&quot;regexp&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Pgsql", "fromLink": "Doctrine_Expression_Pgsql.html", "link": "Doctrine_Expression_Pgsql.html#method_random", "name": "Doctrine_Expression_Pgsql::random", "doc": "&quot;return string to call a function to get random value inside an SQL statement&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Pgsql", "fromLink": "Doctrine_Expression_Pgsql.html", "link": "Doctrine_Expression_Pgsql.html#method_matchPattern", "name": "Doctrine_Expression_Pgsql::matchPattern", "doc": "&quot;build a pattern matching string&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Pgsql", "fromLink": "Doctrine_Expression_Pgsql.html", "link": "Doctrine_Expression_Pgsql.html#method_translate", "name": "Doctrine_Expression_Pgsql::translate", "doc": "&quot;return syntax for pgsql TRANSLATE() dbms function&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Pgsql", "fromLink": "Doctrine_Expression_Pgsql.html", "link": "Doctrine_Expression_Pgsql.html#method_locate", "name": "Doctrine_Expression_Pgsql::locate", "doc": "&quot;transform locate to position&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Pgsql", "fromLink": "Doctrine_Expression_Pgsql.html", "link": "Doctrine_Expression_Pgsql.html#method_position", "name": "Doctrine_Expression_Pgsql::position", "doc": "&quot;position&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Expression_Sqlite.html", "name": "Doctrine_Expression_Sqlite", "doc": "&quot;Doctrine_Expression_Sqlite&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Expression_Sqlite", "fromLink": "Doctrine_Expression_Sqlite.html", "link": "Doctrine_Expression_Sqlite.html#method_md5Impl", "name": "Doctrine_Expression_Sqlite::md5Impl", "doc": "&quot;Returns the md5 sum of the data that SQLite&#039;s md5() function receives.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Sqlite", "fromLink": "Doctrine_Expression_Sqlite.html", "link": "Doctrine_Expression_Sqlite.html#method_modImpl", "name": "Doctrine_Expression_Sqlite::modImpl", "doc": "&quot;Returns the modules of the data that SQLite&#039;s mod() function receives.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Sqlite", "fromLink": "Doctrine_Expression_Sqlite.html", "link": "Doctrine_Expression_Sqlite.html#method_concatImpl", "name": "Doctrine_Expression_Sqlite::concatImpl", "doc": "&quot;Returns a concatenation of the data that SQLite&#039;s concat() function receives.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Sqlite", "fromLink": "Doctrine_Expression_Sqlite.html", "link": "Doctrine_Expression_Sqlite.html#method_locateImpl", "name": "Doctrine_Expression_Sqlite::locateImpl", "doc": "&quot;locate\nreturns the position of the first occurrence of substring $substr in string $str that\nSQLite&#039;s locate() function receives&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Sqlite", "fromLink": "Doctrine_Expression_Sqlite.html", "link": "Doctrine_Expression_Sqlite.html#method_sha1Impl", "name": "Doctrine_Expression_Sqlite::sha1Impl", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Sqlite", "fromLink": "Doctrine_Expression_Sqlite.html", "link": "Doctrine_Expression_Sqlite.html#method_ltrimImpl", "name": "Doctrine_Expression_Sqlite::ltrimImpl", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Sqlite", "fromLink": "Doctrine_Expression_Sqlite.html", "link": "Doctrine_Expression_Sqlite.html#method_rtrimImpl", "name": "Doctrine_Expression_Sqlite::rtrimImpl", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Sqlite", "fromLink": "Doctrine_Expression_Sqlite.html", "link": "Doctrine_Expression_Sqlite.html#method_trimImpl", "name": "Doctrine_Expression_Sqlite::trimImpl", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Sqlite", "fromLink": "Doctrine_Expression_Sqlite.html", "link": "Doctrine_Expression_Sqlite.html#method_nowImpl", "name": "Doctrine_Expression_Sqlite::nowImpl", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Sqlite", "fromLink": "Doctrine_Expression_Sqlite.html", "link": "Doctrine_Expression_Sqlite.html#method_regexp", "name": "Doctrine_Expression_Sqlite::regexp", "doc": "&quot;returns the regular expression operator&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Sqlite", "fromLink": "Doctrine_Expression_Sqlite.html", "link": "Doctrine_Expression_Sqlite.html#method_soundex", "name": "Doctrine_Expression_Sqlite::soundex", "doc": "&quot;soundex\nReturns a string to call a function to compute the\nsoundex encoding of a string&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Sqlite", "fromLink": "Doctrine_Expression_Sqlite.html", "link": "Doctrine_Expression_Sqlite.html#method_now", "name": "Doctrine_Expression_Sqlite::now", "doc": "&quot;Return string to call a variable with the current timestamp inside an SQL statement\nThere are three special variables for current date and time.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Sqlite", "fromLink": "Doctrine_Expression_Sqlite.html", "link": "Doctrine_Expression_Sqlite.html#method_random", "name": "Doctrine_Expression_Sqlite::random", "doc": "&quot;return string to call a function to get random value inside an SQL statement&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Expression_Sqlite", "fromLink": "Doctrine_Expression_Sqlite.html", "link": "Doctrine_Expression_Sqlite.html#method_substring", "name": "Doctrine_Expression_Sqlite::substring", "doc": "&quot;return string to call a function to get a substring inside an SQL statement&quot;"},
            
            {"type": "Class",  "link": "Doctrine_File.html", "name": "Doctrine_File", "doc": "&quot;Doctrine_File&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_File", "fromLink": "Doctrine_File.html", "link": "Doctrine_File.html#method_setTableDefinition", "name": "Doctrine_File::setTableDefinition", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_File", "fromLink": "Doctrine_File.html", "link": "Doctrine_File.html#method_setUp", "name": "Doctrine_File::setUp", "doc": "&quot;setUp\nthis method is used for setting up relations and attributes\nit should be implemented by child classes&quot;"},
                    {"type": "Method", "fromName": "Doctrine_File", "fromLink": "Doctrine_File.html", "link": "Doctrine_File.html#method_get", "name": "Doctrine_File::get", "doc": "&quot;returns a value of a property or a related component&quot;"},
            
            {"type": "Class",  "link": "Doctrine_File_Index.html", "name": "Doctrine_File_Index", "doc": "&quot;Doctrine_File_Index&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_File_Index", "fromLink": "Doctrine_File_Index.html", "link": "Doctrine_File_Index.html#method_setTableDefinition", "name": "Doctrine_File_Index::setTableDefinition", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_File_Index", "fromLink": "Doctrine_File_Index.html", "link": "Doctrine_File_Index.html#method_setUp", "name": "Doctrine_File_Index::setUp", "doc": "&quot;setUp\nthis method is used for setting up relations and attributes\nit should be implemented by child classes&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Formatter.html", "name": "Doctrine_Formatter", "doc": "&quot;Doctrine_Formatter&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Formatter", "fromLink": "Doctrine_Formatter.html", "link": "Doctrine_Formatter.html#method_escapePattern", "name": "Doctrine_Formatter::escapePattern", "doc": "&quot;Quotes pattern (% and _) characters in a string)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Formatter", "fromLink": "Doctrine_Formatter.html", "link": "Doctrine_Formatter.html#method_convertBooleans", "name": "Doctrine_Formatter::convertBooleans", "doc": "&quot;convertBooleans\nsome drivers need the boolean values to be converted into integers\nwhen using DQL API&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Formatter", "fromLink": "Doctrine_Formatter.html", "link": "Doctrine_Formatter.html#method_quoteIdentifier", "name": "Doctrine_Formatter::quoteIdentifier", "doc": "&quot;Quote a string so it can be safely used as a table or column name&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Formatter", "fromLink": "Doctrine_Formatter.html", "link": "Doctrine_Formatter.html#method_quoteMultipleIdentifier", "name": "Doctrine_Formatter::quoteMultipleIdentifier", "doc": "&quot;quoteMultipleIdentifier\nQuotes multiple identifier strings&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Formatter", "fromLink": "Doctrine_Formatter.html", "link": "Doctrine_Formatter.html#method_quote", "name": "Doctrine_Formatter::quote", "doc": "&quot;quote\nquotes given input parameter&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Formatter", "fromLink": "Doctrine_Formatter.html", "link": "Doctrine_Formatter.html#method_fixSequenceName", "name": "Doctrine_Formatter::fixSequenceName", "doc": "&quot;Removes any formatting in an sequence name using the &#039;seqname_format&#039; option&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Formatter", "fromLink": "Doctrine_Formatter.html", "link": "Doctrine_Formatter.html#method_fixIndexName", "name": "Doctrine_Formatter::fixIndexName", "doc": "&quot;Removes any formatting in an index name using the &#039;idxname_format&#039; option&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Formatter", "fromLink": "Doctrine_Formatter.html", "link": "Doctrine_Formatter.html#method_getSequenceName", "name": "Doctrine_Formatter::getSequenceName", "doc": "&quot;adds sequence name formatting to a sequence name&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Formatter", "fromLink": "Doctrine_Formatter.html", "link": "Doctrine_Formatter.html#method_getIndexName", "name": "Doctrine_Formatter::getIndexName", "doc": "&quot;adds index name formatting to a index name&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Formatter", "fromLink": "Doctrine_Formatter.html", "link": "Doctrine_Formatter.html#method_getForeignKeyName", "name": "Doctrine_Formatter::getForeignKeyName", "doc": "&quot;Formatting a foreign Key name&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Formatter", "fromLink": "Doctrine_Formatter.html", "link": "Doctrine_Formatter.html#method_getTableName", "name": "Doctrine_Formatter::getTableName", "doc": "&quot;adds table name formatting to a table name&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Hook.html", "name": "Doctrine_Hook", "doc": "&quot;Doctrine_Hook&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Hook", "fromLink": "Doctrine_Hook.html", "link": "Doctrine_Hook.html#method___construct", "name": "Doctrine_Hook::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hook", "fromLink": "Doctrine_Hook.html", "link": "Doctrine_Hook.html#method_getQuery", "name": "Doctrine_Hook::getQuery", "doc": "&quot;getQuery&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hook", "fromLink": "Doctrine_Hook.html", "link": "Doctrine_Hook.html#method_setTypeParser", "name": "Doctrine_Hook::setTypeParser", "doc": "&quot;setTypeParser&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hook", "fromLink": "Doctrine_Hook.html", "link": "Doctrine_Hook.html#method_setFieldParser", "name": "Doctrine_Hook::setFieldParser", "doc": "&quot;setFieldParser&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hook", "fromLink": "Doctrine_Hook.html", "link": "Doctrine_Hook.html#method_hookWhere", "name": "Doctrine_Hook::hookWhere", "doc": "&quot;hookWhere\nbuilds DQL query where part from given parameter array&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hook", "fromLink": "Doctrine_Hook.html", "link": "Doctrine_Hook.html#method_hookOrderby", "name": "Doctrine_Hook::hookOrderby", "doc": "&quot;hookOrderBy\nbuilds DQL query orderby part from given parameter array&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hook", "fromLink": "Doctrine_Hook.html", "link": "Doctrine_Hook.html#method_hookLimit", "name": "Doctrine_Hook::hookLimit", "doc": "&quot;set the hook limit&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hook", "fromLink": "Doctrine_Hook.html", "link": "Doctrine_Hook.html#method_hookOffset", "name": "Doctrine_Hook::hookOffset", "doc": "&quot;set the hook offset&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Hook_Equal.html", "name": "Doctrine_Hook_Equal", "doc": "&quot;Doctrine_Hook_Equal&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Hook_Equal", "fromLink": "Doctrine_Hook_Equal.html", "link": "Doctrine_Hook_Equal.html#method_parse", "name": "Doctrine_Hook_Equal::parse", "doc": "&quot;parse\nParses given field and field value to DQL condition\nand parameters. This method should always return\nprepared statement conditions (conditions that use\nplaceholders instead of literal values).&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Hook_Integer.html", "name": "Doctrine_Hook_Integer", "doc": "&quot;Doctrine_Hook_Integer&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Hook_Integer", "fromLink": "Doctrine_Hook_Integer.html", "link": "Doctrine_Hook_Integer.html#method_parseSingle", "name": "Doctrine_Hook_Integer::parseSingle", "doc": "&quot;parse\nParses given field and field value to DQL condition\nand parameters. This method should always return\nprepared statement conditions (conditions that use\nplaceholders instead of literal values).&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Hook_Parser.html", "name": "Doctrine_Hook_Parser", "doc": "&quot;Doctrine_Hook_Parser&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Hook_Parser", "fromLink": "Doctrine_Hook_Parser.html", "link": "Doctrine_Hook_Parser.html#method_getCondition", "name": "Doctrine_Hook_Parser::getCondition", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hook_Parser", "fromLink": "Doctrine_Hook_Parser.html", "link": "Doctrine_Hook_Parser.html#method_getParams", "name": "Doctrine_Hook_Parser::getParams", "doc": "&quot;getParams\nreturns the parameters associated with this parser&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hook_Parser", "fromLink": "Doctrine_Hook_Parser.html", "link": "Doctrine_Hook_Parser.html#method_parse", "name": "Doctrine_Hook_Parser::parse", "doc": "&quot;parse\nParses given field and field value to DQL condition\nand parameters. This method should always return\nprepared statement conditions (conditions that use\nplaceholders instead of literal values).&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Hook_Parser_Complex.html", "name": "Doctrine_Hook_Parser_Complex", "doc": "&quot;Doctrine_Hook_Parser_Complex&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Hook_Parser_Complex", "fromLink": "Doctrine_Hook_Parser_Complex.html", "link": "Doctrine_Hook_Parser_Complex.html#method___construct", "name": "Doctrine_Hook_Parser_Complex::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hook_Parser_Complex", "fromLink": "Doctrine_Hook_Parser_Complex.html", "link": "Doctrine_Hook_Parser_Complex.html#method_parse", "name": "Doctrine_Hook_Parser_Complex::parse", "doc": "&quot;parse\nParses given field and field value to DQL condition\nand parameters. This method should always return\nprepared statement conditions (conditions that use\nplaceholders instead of literal values).&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hook_Parser_Complex", "fromLink": "Doctrine_Hook_Parser_Complex.html", "link": "Doctrine_Hook_Parser_Complex.html#method_parseClause", "name": "Doctrine_Hook_Parser_Complex::parseClause", "doc": "&quot;parseClause&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hook_Parser_Complex", "fromLink": "Doctrine_Hook_Parser_Complex.html", "link": "Doctrine_Hook_Parser_Complex.html#method_parseSingle", "name": "Doctrine_Hook_Parser_Complex::parseSingle", "doc": "&quot;parseSingle&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Hook_WordLike.html", "name": "Doctrine_Hook_WordLike", "doc": "&quot;Doctrine_Hook_WordLike&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Hook_WordLike", "fromLink": "Doctrine_Hook_WordLike.html", "link": "Doctrine_Hook_WordLike.html#method_parseSingle", "name": "Doctrine_Hook_WordLike::parseSingle", "doc": "&quot;parse\nParses given field and field value to DQL condition\nand parameters. This method should always return\nprepared statement conditions (conditions that use\nplaceholders instead of literal values).&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Hydrator.html", "name": "Doctrine_Hydrator", "doc": "&quot;Its purpose is to populate object graphs.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Hydrator", "fromLink": "Doctrine_Hydrator.html", "link": "Doctrine_Hydrator.html#method___construct", "name": "Doctrine_Hydrator::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator", "fromLink": "Doctrine_Hydrator.html", "link": "Doctrine_Hydrator.html#method_setHydrationMode", "name": "Doctrine_Hydrator::setHydrationMode", "doc": "&quot;Set the hydration mode&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator", "fromLink": "Doctrine_Hydrator.html", "link": "Doctrine_Hydrator.html#method_getHydrationMode", "name": "Doctrine_Hydrator::getHydrationMode", "doc": "&quot;Get the hydration mode&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator", "fromLink": "Doctrine_Hydrator.html", "link": "Doctrine_Hydrator.html#method_setQueryComponents", "name": "Doctrine_Hydrator::setQueryComponents", "doc": "&quot;Set the array of query components&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator", "fromLink": "Doctrine_Hydrator.html", "link": "Doctrine_Hydrator.html#method_getQueryComponents", "name": "Doctrine_Hydrator::getQueryComponents", "doc": "&quot;Get the array of query components&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator", "fromLink": "Doctrine_Hydrator.html", "link": "Doctrine_Hydrator.html#method_getHydratorDriverClassName", "name": "Doctrine_Hydrator::getHydratorDriverClassName", "doc": "&quot;Get the name of the driver class for the passed hydration mode&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator", "fromLink": "Doctrine_Hydrator.html", "link": "Doctrine_Hydrator.html#method_getHydratorDriver", "name": "Doctrine_Hydrator::getHydratorDriver", "doc": "&quot;Get an instance of the hydration driver for the passed hydration mode&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator", "fromLink": "Doctrine_Hydrator.html", "link": "Doctrine_Hydrator.html#method_hydrateResultSet", "name": "Doctrine_Hydrator::hydrateResultSet", "doc": "&quot;Hydrate the query statement in to its final data structure by one of the\nhydration drivers.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Hydrator_Abstract.html", "name": "Doctrine_Hydrator_Abstract", "doc": "&quot;Doctrine_Hydrator_Abstract&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Hydrator_Abstract", "fromLink": "Doctrine_Hydrator_Abstract.html", "link": "Doctrine_Hydrator_Abstract.html#method___construct", "name": "Doctrine_Hydrator_Abstract::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_Abstract", "fromLink": "Doctrine_Hydrator_Abstract.html", "link": "Doctrine_Hydrator_Abstract.html#method_setQueryComponents", "name": "Doctrine_Hydrator_Abstract::setQueryComponents", "doc": "&quot;Set the query components (structure and query instructions)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_Abstract", "fromLink": "Doctrine_Hydrator_Abstract.html", "link": "Doctrine_Hydrator_Abstract.html#method_setTableAliases", "name": "Doctrine_Hydrator_Abstract::setTableAliases", "doc": "&quot;Set the table aliases for this query&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_Abstract", "fromLink": "Doctrine_Hydrator_Abstract.html", "link": "Doctrine_Hydrator_Abstract.html#method_setHydrationMode", "name": "Doctrine_Hydrator_Abstract::setHydrationMode", "doc": "&quot;Set the hydration mode&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_Abstract", "fromLink": "Doctrine_Hydrator_Abstract.html", "link": "Doctrine_Hydrator_Abstract.html#method_getRootComponent", "name": "Doctrine_Hydrator_Abstract::getRootComponent", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_Abstract", "fromLink": "Doctrine_Hydrator_Abstract.html", "link": "Doctrine_Hydrator_Abstract.html#method_onDemandReset", "name": "Doctrine_Hydrator_Abstract::onDemandReset", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_Abstract", "fromLink": "Doctrine_Hydrator_Abstract.html", "link": "Doctrine_Hydrator_Abstract.html#method__isIgnoredName", "name": "Doctrine_Hydrator_Abstract::_isIgnoredName", "doc": "&quot;Checks whether a name is ignored. Used during result set parsing to skip\ncertain elements in the result set that do not have any meaning for the result.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_Abstract", "fromLink": "Doctrine_Hydrator_Abstract.html", "link": "Doctrine_Hydrator_Abstract.html#method_hydrateResultSet", "name": "Doctrine_Hydrator_Abstract::hydrateResultSet", "doc": "&quot;hydrateResultSet\nparses the data returned by statement object&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Hydrator_ArrayDriver.html", "name": "Doctrine_Hydrator_ArrayDriver", "doc": "&quot;Builds result sets in to the object graph using php arrays&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Hydrator_ArrayDriver", "fromLink": "Doctrine_Hydrator_ArrayDriver.html", "link": "Doctrine_Hydrator_ArrayDriver.html#method_getElementCollection", "name": "Doctrine_Hydrator_ArrayDriver::getElementCollection", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_ArrayDriver", "fromLink": "Doctrine_Hydrator_ArrayDriver.html", "link": "Doctrine_Hydrator_ArrayDriver.html#method_getElement", "name": "Doctrine_Hydrator_ArrayDriver::getElement", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_ArrayDriver", "fromLink": "Doctrine_Hydrator_ArrayDriver.html", "link": "Doctrine_Hydrator_ArrayDriver.html#method_registerCollection", "name": "Doctrine_Hydrator_ArrayDriver::registerCollection", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_ArrayDriver", "fromLink": "Doctrine_Hydrator_ArrayDriver.html", "link": "Doctrine_Hydrator_ArrayDriver.html#method_initRelated", "name": "Doctrine_Hydrator_ArrayDriver::initRelated", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_ArrayDriver", "fromLink": "Doctrine_Hydrator_ArrayDriver.html", "link": "Doctrine_Hydrator_ArrayDriver.html#method_getNullPointer", "name": "Doctrine_Hydrator_ArrayDriver::getNullPointer", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_ArrayDriver", "fromLink": "Doctrine_Hydrator_ArrayDriver.html", "link": "Doctrine_Hydrator_ArrayDriver.html#method_getLastKey", "name": "Doctrine_Hydrator_ArrayDriver::getLastKey", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_ArrayDriver", "fromLink": "Doctrine_Hydrator_ArrayDriver.html", "link": "Doctrine_Hydrator_ArrayDriver.html#method_setLastElement", "name": "Doctrine_Hydrator_ArrayDriver::setLastElement", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Hydrator_ArrayHierarchyDriver.html", "name": "Doctrine_Hydrator_ArrayHierarchyDriver", "doc": "&quot;Builds result sets in to the hierarchy graph using php arrays&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Hydrator_ArrayHierarchyDriver", "fromLink": "Doctrine_Hydrator_ArrayHierarchyDriver.html", "link": "Doctrine_Hydrator_ArrayHierarchyDriver.html#method_hydrateResultSet", "name": "Doctrine_Hydrator_ArrayHierarchyDriver::hydrateResultSet", "doc": "&quot;hydrateResultSet\nparses the data returned by statement object&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Hydrator_ArrayShallowDriver.html", "name": "Doctrine_Hydrator_ArrayShallowDriver", "doc": "&quot;Extended version of Doctrine_Hydrator_ScalarDriver, passes its _gatherRowData function a value of false for $aliasPrefix in order to cause it to generate the sorts of array keys one would see in a HYDRATE_ARRAY type return.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Hydrator_ArrayShallowDriver", "fromLink": "Doctrine_Hydrator_ArrayShallowDriver.html", "link": "Doctrine_Hydrator_ArrayShallowDriver.html#method_hydrateResultSet", "name": "Doctrine_Hydrator_ArrayShallowDriver::hydrateResultSet", "doc": "&quot;hydrateResultSet\nparses the data returned by statement object&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Hydrator_Exception.html", "name": "Doctrine_Hydrator_Exception", "doc": "&quot;Doctrine_Hydrator_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Hydrator_Graph.html", "name": "Doctrine_Hydrator_Graph", "doc": "&quot;Abstract base class for child drivers to hydrate the object graph in to\nvarious data types. For example Doctrine_Record instances or PHP arrays&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Hydrator_Graph", "fromLink": "Doctrine_Hydrator_Graph.html", "link": "Doctrine_Hydrator_Graph.html#method__getCustomIndexField", "name": "Doctrine_Hydrator_Graph::_getCustomIndexField", "doc": "&quot;Gets the custom field used for indexing for the specified component alias.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_Graph", "fromLink": "Doctrine_Hydrator_Graph.html", "link": "Doctrine_Hydrator_Graph.html#method_hydrateResultSet", "name": "Doctrine_Hydrator_Graph::hydrateResultSet", "doc": "&quot;hydrateResultSet\nparses the data returned by statement object&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_Graph", "fromLink": "Doctrine_Hydrator_Graph.html", "link": "Doctrine_Hydrator_Graph.html#method__gatherRowData", "name": "Doctrine_Hydrator_Graph::_gatherRowData", "doc": "&quot;Puts the fields of a data row into a new array, grouped by the component\nthey belong to. The column names in the result set are mapped to their\nfield names during this procedure.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_Graph", "fromLink": "Doctrine_Hydrator_Graph.html", "link": "Doctrine_Hydrator_Graph.html#method_getElementCollection", "name": "Doctrine_Hydrator_Graph::getElementCollection", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_Graph", "fromLink": "Doctrine_Hydrator_Graph.html", "link": "Doctrine_Hydrator_Graph.html#method_registerCollection", "name": "Doctrine_Hydrator_Graph::registerCollection", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_Graph", "fromLink": "Doctrine_Hydrator_Graph.html", "link": "Doctrine_Hydrator_Graph.html#method_initRelated", "name": "Doctrine_Hydrator_Graph::initRelated", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_Graph", "fromLink": "Doctrine_Hydrator_Graph.html", "link": "Doctrine_Hydrator_Graph.html#method_getNullPointer", "name": "Doctrine_Hydrator_Graph::getNullPointer", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_Graph", "fromLink": "Doctrine_Hydrator_Graph.html", "link": "Doctrine_Hydrator_Graph.html#method_getElement", "name": "Doctrine_Hydrator_Graph::getElement", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_Graph", "fromLink": "Doctrine_Hydrator_Graph.html", "link": "Doctrine_Hydrator_Graph.html#method_getLastKey", "name": "Doctrine_Hydrator_Graph::getLastKey", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_Graph", "fromLink": "Doctrine_Hydrator_Graph.html", "link": "Doctrine_Hydrator_Graph.html#method_setLastElement", "name": "Doctrine_Hydrator_Graph::setLastElement", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_Graph", "fromLink": "Doctrine_Hydrator_Graph.html", "link": "Doctrine_Hydrator_Graph.html#method_flush", "name": "Doctrine_Hydrator_Graph::flush", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_Graph", "fromLink": "Doctrine_Hydrator_Graph.html", "link": "Doctrine_Hydrator_Graph.html#method__getClassnameToReturn", "name": "Doctrine_Hydrator_Graph::_getClassnameToReturn", "doc": "&quot;Get the classname to return. Most often this is just the options[&#039;name&#039;]&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Hydrator_NoneDriver.html", "name": "Doctrine_Hydrator_NoneDriver", "doc": "&quot;Get results directly and skip hydration. Uses PDO::FETCH_NUM&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Hydrator_NoneDriver", "fromLink": "Doctrine_Hydrator_NoneDriver.html", "link": "Doctrine_Hydrator_NoneDriver.html#method_hydrateResultSet", "name": "Doctrine_Hydrator_NoneDriver::hydrateResultSet", "doc": "&quot;hydrateResultSet\nparses the data returned by statement object&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Hydrator_RecordDriver.html", "name": "Doctrine_Hydrator_RecordDriver", "doc": "&quot;Builds result sets in to the object graph using Doctrine_Record instances&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Hydrator_RecordDriver", "fromLink": "Doctrine_Hydrator_RecordDriver.html", "link": "Doctrine_Hydrator_RecordDriver.html#method_getElementCollection", "name": "Doctrine_Hydrator_RecordDriver::getElementCollection", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_RecordDriver", "fromLink": "Doctrine_Hydrator_RecordDriver.html", "link": "Doctrine_Hydrator_RecordDriver.html#method_initRelated", "name": "Doctrine_Hydrator_RecordDriver::initRelated", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_RecordDriver", "fromLink": "Doctrine_Hydrator_RecordDriver.html", "link": "Doctrine_Hydrator_RecordDriver.html#method_registerCollection", "name": "Doctrine_Hydrator_RecordDriver::registerCollection", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_RecordDriver", "fromLink": "Doctrine_Hydrator_RecordDriver.html", "link": "Doctrine_Hydrator_RecordDriver.html#method_getNullPointer", "name": "Doctrine_Hydrator_RecordDriver::getNullPointer", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_RecordDriver", "fromLink": "Doctrine_Hydrator_RecordDriver.html", "link": "Doctrine_Hydrator_RecordDriver.html#method_getElement", "name": "Doctrine_Hydrator_RecordDriver::getElement", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_RecordDriver", "fromLink": "Doctrine_Hydrator_RecordDriver.html", "link": "Doctrine_Hydrator_RecordDriver.html#method_getLastKey", "name": "Doctrine_Hydrator_RecordDriver::getLastKey", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_RecordDriver", "fromLink": "Doctrine_Hydrator_RecordDriver.html", "link": "Doctrine_Hydrator_RecordDriver.html#method_setLastElement", "name": "Doctrine_Hydrator_RecordDriver::setLastElement", "doc": "&quot;sets the last element of given data array \/ collection\nas previous element&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_RecordDriver", "fromLink": "Doctrine_Hydrator_RecordDriver.html", "link": "Doctrine_Hydrator_RecordDriver.html#method_flush", "name": "Doctrine_Hydrator_RecordDriver::flush", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Hydrator_RecordHierarchyDriver.html", "name": "Doctrine_Hydrator_RecordHierarchyDriver", "doc": "&quot;Builds result sets in to the hierarchy graph using php arrays&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Hydrator_RecordHierarchyDriver", "fromLink": "Doctrine_Hydrator_RecordHierarchyDriver.html", "link": "Doctrine_Hydrator_RecordHierarchyDriver.html#method_hydrateResultSet", "name": "Doctrine_Hydrator_RecordHierarchyDriver::hydrateResultSet", "doc": "&quot;hydrateResultSet\nparses the data returned by statement object&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Hydrator_ScalarDriver.html", "name": "Doctrine_Hydrator_ScalarDriver", "doc": "&quot;Builds result sets in to a scalar php array&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Hydrator_ScalarDriver", "fromLink": "Doctrine_Hydrator_ScalarDriver.html", "link": "Doctrine_Hydrator_ScalarDriver.html#method_hydrateResultSet", "name": "Doctrine_Hydrator_ScalarDriver::hydrateResultSet", "doc": "&quot;hydrateResultSet\nparses the data returned by statement object&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Hydrator_ScalarDriver", "fromLink": "Doctrine_Hydrator_ScalarDriver.html", "link": "Doctrine_Hydrator_ScalarDriver.html#method__gatherRowData", "name": "Doctrine_Hydrator_ScalarDriver::_gatherRowData", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Hydrator_SingleScalarDriver.html", "name": "Doctrine_Hydrator_SingleScalarDriver", "doc": "&quot;Returns the first row and first column single scalar value&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Hydrator_SingleScalarDriver", "fromLink": "Doctrine_Hydrator_SingleScalarDriver.html", "link": "Doctrine_Hydrator_SingleScalarDriver.html#method_hydrateResultSet", "name": "Doctrine_Hydrator_SingleScalarDriver::hydrateResultSet", "doc": "&quot;hydrateResultSet\nparses the data returned by statement object&quot;"},
            
            {"type": "Class",  "link": "Doctrine_I18n.html", "name": "Doctrine_I18n", "doc": "&quot;Doctrine_I18n&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_I18n", "fromLink": "Doctrine_I18n.html", "link": "Doctrine_I18n.html#method___construct", "name": "Doctrine_I18n::__construct", "doc": "&quot;__construct&quot;"},
                    {"type": "Method", "fromName": "Doctrine_I18n", "fromLink": "Doctrine_I18n.html", "link": "Doctrine_I18n.html#method_buildRelation", "name": "Doctrine_I18n::buildRelation", "doc": "&quot;This method can be used for generating the relation from the plugin\ntable to the owner table. By default buildForeignRelation() and buildLocalRelation() are called\nThose methods can be overridden or this entire method can be overridden&quot;"},
                    {"type": "Method", "fromName": "Doctrine_I18n", "fromLink": "Doctrine_I18n.html", "link": "Doctrine_I18n.html#method_setTableDefinition", "name": "Doctrine_I18n::setTableDefinition", "doc": "&quot;buildDefinition&quot;"},
            
            {"type": "Class",  "link": "Doctrine_I18n_Exception.html", "name": "Doctrine_I18n_Exception", "doc": "&quot;Doctrine_I18n_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Import.html", "name": "Doctrine_Import", "doc": "&quot;class Doctrine_Import\nMain responsible of performing import operation. Delegates database schema\nreading to a reader object and passes the result to a builder object which\nbuilds a Doctrine data model.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Import", "fromLink": "Doctrine_Import.html", "link": "Doctrine_Import.html#method_listDatabases", "name": "Doctrine_Import::listDatabases", "doc": "&quot;lists all databases&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import", "fromLink": "Doctrine_Import.html", "link": "Doctrine_Import.html#method_listFunctions", "name": "Doctrine_Import::listFunctions", "doc": "&quot;lists all availible database functions&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import", "fromLink": "Doctrine_Import.html", "link": "Doctrine_Import.html#method_listTriggers", "name": "Doctrine_Import::listTriggers", "doc": "&quot;lists all database triggers&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import", "fromLink": "Doctrine_Import.html", "link": "Doctrine_Import.html#method_listSequences", "name": "Doctrine_Import::listSequences", "doc": "&quot;lists all database sequences&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import", "fromLink": "Doctrine_Import.html", "link": "Doctrine_Import.html#method_listTableConstraints", "name": "Doctrine_Import::listTableConstraints", "doc": "&quot;lists table constraints&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import", "fromLink": "Doctrine_Import.html", "link": "Doctrine_Import.html#method_listTableRelations", "name": "Doctrine_Import::listTableRelations", "doc": "&quot;lists table relations&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import", "fromLink": "Doctrine_Import.html", "link": "Doctrine_Import.html#method_listTableColumns", "name": "Doctrine_Import::listTableColumns", "doc": "&quot;lists table constraints&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import", "fromLink": "Doctrine_Import.html", "link": "Doctrine_Import.html#method_listTableIndexes", "name": "Doctrine_Import::listTableIndexes", "doc": "&quot;lists table constraints&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import", "fromLink": "Doctrine_Import.html", "link": "Doctrine_Import.html#method_listTables", "name": "Doctrine_Import::listTables", "doc": "&quot;lists tables&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import", "fromLink": "Doctrine_Import.html", "link": "Doctrine_Import.html#method_listTableTriggers", "name": "Doctrine_Import::listTableTriggers", "doc": "&quot;lists table triggers&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import", "fromLink": "Doctrine_Import.html", "link": "Doctrine_Import.html#method_listTableViews", "name": "Doctrine_Import::listTableViews", "doc": "&quot;lists table views&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import", "fromLink": "Doctrine_Import.html", "link": "Doctrine_Import.html#method_listUsers", "name": "Doctrine_Import::listUsers", "doc": "&quot;lists database users&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import", "fromLink": "Doctrine_Import.html", "link": "Doctrine_Import.html#method_listViews", "name": "Doctrine_Import::listViews", "doc": "&quot;lists database views&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import", "fromLink": "Doctrine_Import.html", "link": "Doctrine_Import.html#method_databaseExists", "name": "Doctrine_Import::databaseExists", "doc": "&quot;checks if a database exists&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import", "fromLink": "Doctrine_Import.html", "link": "Doctrine_Import.html#method_functionExists", "name": "Doctrine_Import::functionExists", "doc": "&quot;checks if a function exists&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import", "fromLink": "Doctrine_Import.html", "link": "Doctrine_Import.html#method_triggerExists", "name": "Doctrine_Import::triggerExists", "doc": "&quot;checks if a trigger exists&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import", "fromLink": "Doctrine_Import.html", "link": "Doctrine_Import.html#method_sequenceExists", "name": "Doctrine_Import::sequenceExists", "doc": "&quot;checks if a sequence exists&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import", "fromLink": "Doctrine_Import.html", "link": "Doctrine_Import.html#method_tableConstraintExists", "name": "Doctrine_Import::tableConstraintExists", "doc": "&quot;checks if a table constraint exists&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import", "fromLink": "Doctrine_Import.html", "link": "Doctrine_Import.html#method_tableColumnExists", "name": "Doctrine_Import::tableColumnExists", "doc": "&quot;checks if a table column exists&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import", "fromLink": "Doctrine_Import.html", "link": "Doctrine_Import.html#method_tableIndexExists", "name": "Doctrine_Import::tableIndexExists", "doc": "&quot;checks if a table index exists&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import", "fromLink": "Doctrine_Import.html", "link": "Doctrine_Import.html#method_tableExists", "name": "Doctrine_Import::tableExists", "doc": "&quot;checks if a table exists&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import", "fromLink": "Doctrine_Import.html", "link": "Doctrine_Import.html#method_tableTriggerExists", "name": "Doctrine_Import::tableTriggerExists", "doc": "&quot;checks if a table trigger exists&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import", "fromLink": "Doctrine_Import.html", "link": "Doctrine_Import.html#method_tableViewExists", "name": "Doctrine_Import::tableViewExists", "doc": "&quot;checks if a table view exists&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import", "fromLink": "Doctrine_Import.html", "link": "Doctrine_Import.html#method_userExists", "name": "Doctrine_Import::userExists", "doc": "&quot;checks if a user exists&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import", "fromLink": "Doctrine_Import.html", "link": "Doctrine_Import.html#method_viewExists", "name": "Doctrine_Import::viewExists", "doc": "&quot;checks if a view exists&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import", "fromLink": "Doctrine_Import.html", "link": "Doctrine_Import.html#method_importSchema", "name": "Doctrine_Import::importSchema", "doc": "&quot;importSchema&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Import_Builder.html", "name": "Doctrine_Import_Builder", "doc": "&quot;Doctrine_Import_Builder&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Import_Builder", "fromLink": "Doctrine_Import_Builder.html", "link": "Doctrine_Import_Builder.html#method___construct", "name": "Doctrine_Import_Builder::__construct", "doc": "&quot;__construct&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Builder", "fromLink": "Doctrine_Import_Builder.html", "link": "Doctrine_Import_Builder.html#method_setTargetPath", "name": "Doctrine_Import_Builder::setTargetPath", "doc": "&quot;setTargetPath&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Builder", "fromLink": "Doctrine_Import_Builder.html", "link": "Doctrine_Import_Builder.html#method_generateBaseClasses", "name": "Doctrine_Import_Builder::generateBaseClasses", "doc": "&quot;generateBaseClasses&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Builder", "fromLink": "Doctrine_Import_Builder.html", "link": "Doctrine_Import_Builder.html#method_generateTableClasses", "name": "Doctrine_Import_Builder::generateTableClasses", "doc": "&quot;generateTableClasses&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Builder", "fromLink": "Doctrine_Import_Builder.html", "link": "Doctrine_Import_Builder.html#method_getTargetPath", "name": "Doctrine_Import_Builder::getTargetPath", "doc": "&quot;getTargetPath&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Builder", "fromLink": "Doctrine_Import_Builder.html", "link": "Doctrine_Import_Builder.html#method_setOptions", "name": "Doctrine_Import_Builder::setOptions", "doc": "&quot;setOptions&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Builder", "fromLink": "Doctrine_Import_Builder.html", "link": "Doctrine_Import_Builder.html#method_setOption", "name": "Doctrine_Import_Builder::setOption", "doc": "&quot;setOption&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Builder", "fromLink": "Doctrine_Import_Builder.html", "link": "Doctrine_Import_Builder.html#method_loadTemplate", "name": "Doctrine_Import_Builder::loadTemplate", "doc": "&quot;loadTemplate&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Builder", "fromLink": "Doctrine_Import_Builder.html", "link": "Doctrine_Import_Builder.html#method_buildTableDefinition", "name": "Doctrine_Import_Builder::buildTableDefinition", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Builder", "fromLink": "Doctrine_Import_Builder.html", "link": "Doctrine_Import_Builder.html#method_buildSetUp", "name": "Doctrine_Import_Builder::buildSetUp", "doc": "&quot;buildSetUp&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Builder", "fromLink": "Doctrine_Import_Builder.html", "link": "Doctrine_Import_Builder.html#method_buildChecks", "name": "Doctrine_Import_Builder::buildChecks", "doc": "&quot;Build php code for record checks&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Builder", "fromLink": "Doctrine_Import_Builder.html", "link": "Doctrine_Import_Builder.html#method_buildColumns", "name": "Doctrine_Import_Builder::buildColumns", "doc": "&quot;buildColumns&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Builder", "fromLink": "Doctrine_Import_Builder.html", "link": "Doctrine_Import_Builder.html#method_buildAccessors", "name": "Doctrine_Import_Builder::buildAccessors", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Builder", "fromLink": "Doctrine_Import_Builder.html", "link": "Doctrine_Import_Builder.html#method_buildPhpDocs", "name": "Doctrine_Import_Builder::buildPhpDocs", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Builder", "fromLink": "Doctrine_Import_Builder.html", "link": "Doctrine_Import_Builder.html#method_buildActAs", "name": "Doctrine_Import_Builder::buildActAs", "doc": "&quot;buildActAs: builds a complete actAs code. It supports hierarchy of plugins&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Builder", "fromLink": "Doctrine_Import_Builder.html", "link": "Doctrine_Import_Builder.html#method_buildListeners", "name": "Doctrine_Import_Builder::buildListeners", "doc": "&quot;Build php code for adding record listeners&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Builder", "fromLink": "Doctrine_Import_Builder.html", "link": "Doctrine_Import_Builder.html#method_buildAttributes", "name": "Doctrine_Import_Builder::buildAttributes", "doc": "&quot;buildAttributes&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Builder", "fromLink": "Doctrine_Import_Builder.html", "link": "Doctrine_Import_Builder.html#method_buildOptions", "name": "Doctrine_Import_Builder::buildOptions", "doc": "&quot;buildTableOptions&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Builder", "fromLink": "Doctrine_Import_Builder.html", "link": "Doctrine_Import_Builder.html#method_buildIndexes", "name": "Doctrine_Import_Builder::buildIndexes", "doc": "&quot;buildIndexes&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Builder", "fromLink": "Doctrine_Import_Builder.html", "link": "Doctrine_Import_Builder.html#method_buildToString", "name": "Doctrine_Import_Builder::buildToString", "doc": "&quot;buildToString&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Builder", "fromLink": "Doctrine_Import_Builder.html", "link": "Doctrine_Import_Builder.html#method_buildDefinition", "name": "Doctrine_Import_Builder::buildDefinition", "doc": "&quot;buildDefinition&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Builder", "fromLink": "Doctrine_Import_Builder.html", "link": "Doctrine_Import_Builder.html#method_buildRecord", "name": "Doctrine_Import_Builder::buildRecord", "doc": "&quot;buildRecord&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Builder", "fromLink": "Doctrine_Import_Builder.html", "link": "Doctrine_Import_Builder.html#method__getBaseClassName", "name": "Doctrine_Import_Builder::_getBaseClassName", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Builder", "fromLink": "Doctrine_Import_Builder.html", "link": "Doctrine_Import_Builder.html#method_buildTableClassDefinition", "name": "Doctrine_Import_Builder::buildTableClassDefinition", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Builder", "fromLink": "Doctrine_Import_Builder.html", "link": "Doctrine_Import_Builder.html#method_writeTableClassDefinition", "name": "Doctrine_Import_Builder::writeTableClassDefinition", "doc": "&quot;writeTableClassDefinition&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Builder", "fromLink": "Doctrine_Import_Builder.html", "link": "Doctrine_Import_Builder.html#method__getFileName", "name": "Doctrine_Import_Builder::_getFileName", "doc": "&quot;Return the file name of the class to be generated.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Builder", "fromLink": "Doctrine_Import_Builder.html", "link": "Doctrine_Import_Builder.html#method_writeDefinition", "name": "Doctrine_Import_Builder::writeDefinition", "doc": "&quot;writeDefinition&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Import_Builder_Exception.html", "name": "Doctrine_Import_Builder_Exception", "doc": "&quot;Doctrine_Import_Builder_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Import_Exception.html", "name": "Doctrine_Import_Exception", "doc": "&quot;class Doctrine_Import_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Import_Mssql.html", "name": "Doctrine_Import_Mssql", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Import_Mssql", "fromLink": "Doctrine_Import_Mssql.html", "link": "Doctrine_Import_Mssql.html#method_listSequences", "name": "Doctrine_Import_Mssql::listSequences", "doc": "&quot;lists all database sequences&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Mssql", "fromLink": "Doctrine_Import_Mssql.html", "link": "Doctrine_Import_Mssql.html#method_listTableRelations", "name": "Doctrine_Import_Mssql::listTableRelations", "doc": "&quot;lists table relations&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Mssql", "fromLink": "Doctrine_Import_Mssql.html", "link": "Doctrine_Import_Mssql.html#method_listTableColumns", "name": "Doctrine_Import_Mssql::listTableColumns", "doc": "&quot;lists table constraints&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Mssql", "fromLink": "Doctrine_Import_Mssql.html", "link": "Doctrine_Import_Mssql.html#method_listTableIndexes", "name": "Doctrine_Import_Mssql::listTableIndexes", "doc": "&quot;lists table constraints&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Mssql", "fromLink": "Doctrine_Import_Mssql.html", "link": "Doctrine_Import_Mssql.html#method_listTables", "name": "Doctrine_Import_Mssql::listTables", "doc": "&quot;lists tables&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Mssql", "fromLink": "Doctrine_Import_Mssql.html", "link": "Doctrine_Import_Mssql.html#method_listTriggers", "name": "Doctrine_Import_Mssql::listTriggers", "doc": "&quot;lists all triggers&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Mssql", "fromLink": "Doctrine_Import_Mssql.html", "link": "Doctrine_Import_Mssql.html#method_listTableTriggers", "name": "Doctrine_Import_Mssql::listTableTriggers", "doc": "&quot;lists table triggers&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Mssql", "fromLink": "Doctrine_Import_Mssql.html", "link": "Doctrine_Import_Mssql.html#method_listTableViews", "name": "Doctrine_Import_Mssql::listTableViews", "doc": "&quot;lists table views&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Mssql", "fromLink": "Doctrine_Import_Mssql.html", "link": "Doctrine_Import_Mssql.html#method_listViews", "name": "Doctrine_Import_Mssql::listViews", "doc": "&quot;lists database views&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Import_Mysql.html", "name": "Doctrine_Import_Mysql", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Import_Mysql", "fromLink": "Doctrine_Import_Mysql.html", "link": "Doctrine_Import_Mysql.html#method_listSequences", "name": "Doctrine_Import_Mysql::listSequences", "doc": "&quot;lists all database sequences&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Mysql", "fromLink": "Doctrine_Import_Mysql.html", "link": "Doctrine_Import_Mysql.html#method_listTableConstraints", "name": "Doctrine_Import_Mysql::listTableConstraints", "doc": "&quot;lists table constraints&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Mysql", "fromLink": "Doctrine_Import_Mysql.html", "link": "Doctrine_Import_Mysql.html#method_listTableRelations", "name": "Doctrine_Import_Mysql::listTableRelations", "doc": "&quot;lists table relations&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Mysql", "fromLink": "Doctrine_Import_Mysql.html", "link": "Doctrine_Import_Mysql.html#method_listTableColumns", "name": "Doctrine_Import_Mysql::listTableColumns", "doc": "&quot;lists table constraints&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Mysql", "fromLink": "Doctrine_Import_Mysql.html", "link": "Doctrine_Import_Mysql.html#method_listTableIndexes", "name": "Doctrine_Import_Mysql::listTableIndexes", "doc": "&quot;lists table constraints&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Mysql", "fromLink": "Doctrine_Import_Mysql.html", "link": "Doctrine_Import_Mysql.html#method_listTables", "name": "Doctrine_Import_Mysql::listTables", "doc": "&quot;lists tables&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Mysql", "fromLink": "Doctrine_Import_Mysql.html", "link": "Doctrine_Import_Mysql.html#method_listViews", "name": "Doctrine_Import_Mysql::listViews", "doc": "&quot;lists database views&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Import_Oracle.html", "name": "Doctrine_Import_Oracle", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Import_Oracle", "fromLink": "Doctrine_Import_Oracle.html", "link": "Doctrine_Import_Oracle.html#method_listDatabases", "name": "Doctrine_Import_Oracle::listDatabases", "doc": "&quot;lists all databases&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Oracle", "fromLink": "Doctrine_Import_Oracle.html", "link": "Doctrine_Import_Oracle.html#method_listFunctions", "name": "Doctrine_Import_Oracle::listFunctions", "doc": "&quot;lists all availible database functions&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Oracle", "fromLink": "Doctrine_Import_Oracle.html", "link": "Doctrine_Import_Oracle.html#method_listTriggers", "name": "Doctrine_Import_Oracle::listTriggers", "doc": "&quot;lists all database triggers&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Oracle", "fromLink": "Doctrine_Import_Oracle.html", "link": "Doctrine_Import_Oracle.html#method_listSequences", "name": "Doctrine_Import_Oracle::listSequences", "doc": "&quot;lists all database sequences&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Oracle", "fromLink": "Doctrine_Import_Oracle.html", "link": "Doctrine_Import_Oracle.html#method_listTableConstraints", "name": "Doctrine_Import_Oracle::listTableConstraints", "doc": "&quot;lists table constraints&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Oracle", "fromLink": "Doctrine_Import_Oracle.html", "link": "Doctrine_Import_Oracle.html#method_listTableColumns", "name": "Doctrine_Import_Oracle::listTableColumns", "doc": "&quot;lists table constraints&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Oracle", "fromLink": "Doctrine_Import_Oracle.html", "link": "Doctrine_Import_Oracle.html#method_listTableIndexes", "name": "Doctrine_Import_Oracle::listTableIndexes", "doc": "&quot;lists table constraints&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Oracle", "fromLink": "Doctrine_Import_Oracle.html", "link": "Doctrine_Import_Oracle.html#method_listTableRelations", "name": "Doctrine_Import_Oracle::listTableRelations", "doc": "&quot;list table relations&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Oracle", "fromLink": "Doctrine_Import_Oracle.html", "link": "Doctrine_Import_Oracle.html#method_listTables", "name": "Doctrine_Import_Oracle::listTables", "doc": "&quot;lists tables&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Oracle", "fromLink": "Doctrine_Import_Oracle.html", "link": "Doctrine_Import_Oracle.html#method_listTableTriggers", "name": "Doctrine_Import_Oracle::listTableTriggers", "doc": "&quot;lists table triggers&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Oracle", "fromLink": "Doctrine_Import_Oracle.html", "link": "Doctrine_Import_Oracle.html#method_listTableViews", "name": "Doctrine_Import_Oracle::listTableViews", "doc": "&quot;lists table views&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Oracle", "fromLink": "Doctrine_Import_Oracle.html", "link": "Doctrine_Import_Oracle.html#method_listUsers", "name": "Doctrine_Import_Oracle::listUsers", "doc": "&quot;lists database users&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Oracle", "fromLink": "Doctrine_Import_Oracle.html", "link": "Doctrine_Import_Oracle.html#method_listViews", "name": "Doctrine_Import_Oracle::listViews", "doc": "&quot;lists database views&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Import_Pgsql.html", "name": "Doctrine_Import_Pgsql", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Import_Pgsql", "fromLink": "Doctrine_Import_Pgsql.html", "link": "Doctrine_Import_Pgsql.html#method_listTriggers", "name": "Doctrine_Import_Pgsql::listTriggers", "doc": "&quot;lists all database triggers&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Pgsql", "fromLink": "Doctrine_Import_Pgsql.html", "link": "Doctrine_Import_Pgsql.html#method_listTableConstraints", "name": "Doctrine_Import_Pgsql::listTableConstraints", "doc": "&quot;lists table constraints&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Pgsql", "fromLink": "Doctrine_Import_Pgsql.html", "link": "Doctrine_Import_Pgsql.html#method_listTableColumns", "name": "Doctrine_Import_Pgsql::listTableColumns", "doc": "&quot;lists table constraints&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Pgsql", "fromLink": "Doctrine_Import_Pgsql.html", "link": "Doctrine_Import_Pgsql.html#method_listTableIndexes", "name": "Doctrine_Import_Pgsql::listTableIndexes", "doc": "&quot;list all indexes in a table&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Pgsql", "fromLink": "Doctrine_Import_Pgsql.html", "link": "Doctrine_Import_Pgsql.html#method_listTables", "name": "Doctrine_Import_Pgsql::listTables", "doc": "&quot;lists tables&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Pgsql", "fromLink": "Doctrine_Import_Pgsql.html", "link": "Doctrine_Import_Pgsql.html#method_listTableTriggers", "name": "Doctrine_Import_Pgsql::listTableTriggers", "doc": "&quot;lists table triggers&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Pgsql", "fromLink": "Doctrine_Import_Pgsql.html", "link": "Doctrine_Import_Pgsql.html#method_listTableViews", "name": "Doctrine_Import_Pgsql::listTableViews", "doc": "&quot;list the views in the database that reference a given table&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Pgsql", "fromLink": "Doctrine_Import_Pgsql.html", "link": "Doctrine_Import_Pgsql.html#method_listTableRelations", "name": "Doctrine_Import_Pgsql::listTableRelations", "doc": "&quot;lists table relations&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Import_Schema.html", "name": "Doctrine_Import_Schema", "doc": "&quot;Doctrine_Import_Schema&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Import_Schema", "fromLink": "Doctrine_Import_Schema.html", "link": "Doctrine_Import_Schema.html#method_getGlobalDefinitionKeys", "name": "Doctrine_Import_Schema::getGlobalDefinitionKeys", "doc": "&quot;Returns an array of definition keys that can be applied at the global level.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Schema", "fromLink": "Doctrine_Import_Schema.html", "link": "Doctrine_Import_Schema.html#method_getOption", "name": "Doctrine_Import_Schema::getOption", "doc": "&quot;getOption&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Schema", "fromLink": "Doctrine_Import_Schema.html", "link": "Doctrine_Import_Schema.html#method_getOptions", "name": "Doctrine_Import_Schema::getOptions", "doc": "&quot;getOptions&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Schema", "fromLink": "Doctrine_Import_Schema.html", "link": "Doctrine_Import_Schema.html#method_setOption", "name": "Doctrine_Import_Schema::setOption", "doc": "&quot;setOption&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Schema", "fromLink": "Doctrine_Import_Schema.html", "link": "Doctrine_Import_Schema.html#method_setOptions", "name": "Doctrine_Import_Schema::setOptions", "doc": "&quot;setOptions&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Schema", "fromLink": "Doctrine_Import_Schema.html", "link": "Doctrine_Import_Schema.html#method_buildSchema", "name": "Doctrine_Import_Schema::buildSchema", "doc": "&quot;buildSchema&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Schema", "fromLink": "Doctrine_Import_Schema.html", "link": "Doctrine_Import_Schema.html#method_importSchema", "name": "Doctrine_Import_Schema::importSchema", "doc": "&quot;importSchema&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Schema", "fromLink": "Doctrine_Import_Schema.html", "link": "Doctrine_Import_Schema.html#method_parseSchema", "name": "Doctrine_Import_Schema::parseSchema", "doc": "&quot;parseSchema&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Schema", "fromLink": "Doctrine_Import_Schema.html", "link": "Doctrine_Import_Schema.html#method__processInheritance", "name": "Doctrine_Import_Schema::_processInheritance", "doc": "&quot;_processInheritance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Schema", "fromLink": "Doctrine_Import_Schema.html", "link": "Doctrine_Import_Schema.html#method__findBaseSuperClass", "name": "Doctrine_Import_Schema::_findBaseSuperClass", "doc": "&quot;Find the base super class for this inheritance child. We need to move all levels of children to the\ntop most parent.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Schema", "fromLink": "Doctrine_Import_Schema.html", "link": "Doctrine_Import_Schema.html#method__buildRelationships", "name": "Doctrine_Import_Schema::_buildRelationships", "doc": "&quot;buildRelationships&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Schema", "fromLink": "Doctrine_Import_Schema.html", "link": "Doctrine_Import_Schema.html#method__autoCompleteOppositeRelations", "name": "Doctrine_Import_Schema::_autoCompleteOppositeRelations", "doc": "&quot;fixRelationships&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Schema", "fromLink": "Doctrine_Import_Schema.html", "link": "Doctrine_Import_Schema.html#method__fixDuplicateRelations", "name": "Doctrine_Import_Schema::_fixDuplicateRelations", "doc": "&quot;_fixDuplicateRelations&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Schema", "fromLink": "Doctrine_Import_Schema.html", "link": "Doctrine_Import_Schema.html#method__buildUniqueRelationKey", "name": "Doctrine_Import_Schema::_buildUniqueRelationKey", "doc": "&quot;_buildUniqueRelationKey&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Schema", "fromLink": "Doctrine_Import_Schema.html", "link": "Doctrine_Import_Schema.html#method__validateSchemaElement", "name": "Doctrine_Import_Schema::_validateSchemaElement", "doc": "&quot;_validateSchemaElement&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Import_Sqlite.html", "name": "Doctrine_Import_Sqlite", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Import_Sqlite", "fromLink": "Doctrine_Import_Sqlite.html", "link": "Doctrine_Import_Sqlite.html#method_listDatabases", "name": "Doctrine_Import_Sqlite::listDatabases", "doc": "&quot;lists all databases&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Sqlite", "fromLink": "Doctrine_Import_Sqlite.html", "link": "Doctrine_Import_Sqlite.html#method_listFunctions", "name": "Doctrine_Import_Sqlite::listFunctions", "doc": "&quot;lists all availible database functions&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Sqlite", "fromLink": "Doctrine_Import_Sqlite.html", "link": "Doctrine_Import_Sqlite.html#method_listTriggers", "name": "Doctrine_Import_Sqlite::listTriggers", "doc": "&quot;lists all database triggers&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Sqlite", "fromLink": "Doctrine_Import_Sqlite.html", "link": "Doctrine_Import_Sqlite.html#method_listSequences", "name": "Doctrine_Import_Sqlite::listSequences", "doc": "&quot;lists all database sequences&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Sqlite", "fromLink": "Doctrine_Import_Sqlite.html", "link": "Doctrine_Import_Sqlite.html#method_listTableConstraints", "name": "Doctrine_Import_Sqlite::listTableConstraints", "doc": "&quot;lists table constraints&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Sqlite", "fromLink": "Doctrine_Import_Sqlite.html", "link": "Doctrine_Import_Sqlite.html#method_listTableColumns", "name": "Doctrine_Import_Sqlite::listTableColumns", "doc": "&quot;lists table constraints&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Sqlite", "fromLink": "Doctrine_Import_Sqlite.html", "link": "Doctrine_Import_Sqlite.html#method_listTableIndexes", "name": "Doctrine_Import_Sqlite::listTableIndexes", "doc": "&quot;lists table constraints&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Sqlite", "fromLink": "Doctrine_Import_Sqlite.html", "link": "Doctrine_Import_Sqlite.html#method_listTables", "name": "Doctrine_Import_Sqlite::listTables", "doc": "&quot;lists tables&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Sqlite", "fromLink": "Doctrine_Import_Sqlite.html", "link": "Doctrine_Import_Sqlite.html#method_listTableTriggers", "name": "Doctrine_Import_Sqlite::listTableTriggers", "doc": "&quot;lists table triggers&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Sqlite", "fromLink": "Doctrine_Import_Sqlite.html", "link": "Doctrine_Import_Sqlite.html#method_listTableViews", "name": "Doctrine_Import_Sqlite::listTableViews", "doc": "&quot;lists table views&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Sqlite", "fromLink": "Doctrine_Import_Sqlite.html", "link": "Doctrine_Import_Sqlite.html#method_listUsers", "name": "Doctrine_Import_Sqlite::listUsers", "doc": "&quot;lists database users&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Import_Sqlite", "fromLink": "Doctrine_Import_Sqlite.html", "link": "Doctrine_Import_Sqlite.html#method_listViews", "name": "Doctrine_Import_Sqlite::listViews", "doc": "&quot;lists database views&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Inflector.html", "name": "Doctrine_Inflector", "doc": "&quot;Doctrine inflector has static methods for inflecting text&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Inflector", "fromLink": "Doctrine_Inflector.html", "link": "Doctrine_Inflector.html#method_tableize", "name": "Doctrine_Inflector::tableize", "doc": "&quot;Convert word in to the format for a Doctrine table name. Converts &#039;ModelName&#039; to &#039;model_name&#039;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Inflector", "fromLink": "Doctrine_Inflector.html", "link": "Doctrine_Inflector.html#method_classify", "name": "Doctrine_Inflector::classify", "doc": "&quot;Convert a word in to the format for a Doctrine class name. Converts &#039;table_name&#039; to &#039;TableName&#039;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Inflector", "fromLink": "Doctrine_Inflector.html", "link": "Doctrine_Inflector.html#method_classifyCallback", "name": "Doctrine_Inflector::classifyCallback", "doc": "&quot;Callback function to classify a classname properly.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Inflector", "fromLink": "Doctrine_Inflector.html", "link": "Doctrine_Inflector.html#method_seemsUtf8", "name": "Doctrine_Inflector::seemsUtf8", "doc": "&quot;Check if a string has utf7 characters in it&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Inflector", "fromLink": "Doctrine_Inflector.html", "link": "Doctrine_Inflector.html#method_unaccent", "name": "Doctrine_Inflector::unaccent", "doc": "&quot;Remove any illegal characters, accents, etc.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Inflector", "fromLink": "Doctrine_Inflector.html", "link": "Doctrine_Inflector.html#method_urlize", "name": "Doctrine_Inflector::urlize", "doc": "&quot;Convert any passed string to a url friendly string. Converts &#039;My first blog post&#039; to &#039;my-first-blog-post&#039;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_IntegrityMapper.html", "name": "Doctrine_IntegrityMapper", "doc": "&quot;Doctrine_IntegrityMapper&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_IntegrityMapper", "fromLink": "Doctrine_IntegrityMapper.html", "link": "Doctrine_IntegrityMapper.html#method_processDeleteIntegrity", "name": "Doctrine_IntegrityMapper::processDeleteIntegrity", "doc": "&quot;processDeleteIntegrity&quot;"},
                    {"type": "Method", "fromName": "Doctrine_IntegrityMapper", "fromLink": "Doctrine_IntegrityMapper.html", "link": "Doctrine_IntegrityMapper.html#method_invokeIntegrityActions", "name": "Doctrine_IntegrityMapper::invokeIntegrityActions", "doc": "&quot;invokeIntegrityActions&quot;"},
                    {"type": "Method", "fromName": "Doctrine_IntegrityMapper", "fromLink": "Doctrine_IntegrityMapper.html", "link": "Doctrine_IntegrityMapper.html#method_buildIntegrityRelationQuery", "name": "Doctrine_IntegrityMapper::buildIntegrityRelationQuery", "doc": "&quot;buildIntegrityRelationQuery&quot;"},
                    {"type": "Method", "fromName": "Doctrine_IntegrityMapper", "fromLink": "Doctrine_IntegrityMapper.html", "link": "Doctrine_IntegrityMapper.html#method_buildIntegrityRelations", "name": "Doctrine_IntegrityMapper::buildIntegrityRelations", "doc": "&quot;buildIntegrityRelations&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Lib.html", "name": "Doctrine_Lib", "doc": "&quot;Doctrine_Lib has not commonly used static functions, mostly for debugging purposes&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Lib", "fromLink": "Doctrine_Lib.html", "link": "Doctrine_Lib.html#method_getRecordStateAsString", "name": "Doctrine_Lib::getRecordStateAsString", "doc": "&quot;Generates a human readable representation of a record&#039;s state.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Lib", "fromLink": "Doctrine_Lib.html", "link": "Doctrine_Lib.html#method_getRecordAsString", "name": "Doctrine_Lib::getRecordAsString", "doc": "&quot;Dumps a record.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Lib", "fromLink": "Doctrine_Lib.html", "link": "Doctrine_Lib.html#method_getConnectionStateAsString", "name": "Doctrine_Lib::getConnectionStateAsString", "doc": "&quot;Generates a human readable representation of a connection&#039;s state.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Lib", "fromLink": "Doctrine_Lib.html", "link": "Doctrine_Lib.html#method_getConnectionAsString", "name": "Doctrine_Lib::getConnectionAsString", "doc": "&quot;Generates a string representation of a connection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Lib", "fromLink": "Doctrine_Lib.html", "link": "Doctrine_Lib.html#method_getTableAsString", "name": "Doctrine_Lib::getTableAsString", "doc": "&quot;Generates a string representation of a table.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Lib", "fromLink": "Doctrine_Lib.html", "link": "Doctrine_Lib.html#method_formatSql", "name": "Doctrine_Lib::formatSql", "doc": "&quot;Generates a colored sql query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Lib", "fromLink": "Doctrine_Lib.html", "link": "Doctrine_Lib.html#method_getCollectionAsString", "name": "Doctrine_Lib::getCollectionAsString", "doc": "&quot;Generates a string representation of a collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Lib", "fromLink": "Doctrine_Lib.html", "link": "Doctrine_Lib.html#method_arrayDeepMerge", "name": "Doctrine_Lib::arrayDeepMerge", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Lib", "fromLink": "Doctrine_Lib.html", "link": "Doctrine_Lib.html#method_makeDirectories", "name": "Doctrine_Lib::makeDirectories", "doc": "&quot;Makes the directories for a path recursively.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Lib", "fromLink": "Doctrine_Lib.html", "link": "Doctrine_Lib.html#method_removeDirectories", "name": "Doctrine_Lib::removeDirectories", "doc": "&quot;Removes a non empty directory.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Lib", "fromLink": "Doctrine_Lib.html", "link": "Doctrine_Lib.html#method_copyDirectory", "name": "Doctrine_Lib::copyDirectory", "doc": "&quot;Copy all directory content in another one.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Lib", "fromLink": "Doctrine_Lib.html", "link": "Doctrine_Lib.html#method_isValidClassName", "name": "Doctrine_Lib::isValidClassName", "doc": "&quot;Checks for a valid class name for Doctrine coding standards.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Locator.html", "name": "Doctrine_Locator", "doc": "&quot;Doctrine_Locator&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Locator", "fromLink": "Doctrine_Locator.html", "link": "Doctrine_Locator.html#method___construct", "name": "Doctrine_Locator::__construct", "doc": "&quot;Constructor. Provide an array of resources to set initial contents.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Locator", "fromLink": "Doctrine_Locator.html", "link": "Doctrine_Locator.html#method_instance", "name": "Doctrine_Locator::instance", "doc": "&quot;instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Locator", "fromLink": "Doctrine_Locator.html", "link": "Doctrine_Locator.html#method_setClassPrefix", "name": "Doctrine_Locator::setClassPrefix", "doc": "&quot;setClassPrefix&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Locator", "fromLink": "Doctrine_Locator.html", "link": "Doctrine_Locator.html#method_getClassPrefix", "name": "Doctrine_Locator::getClassPrefix", "doc": "&quot;getClassPrefix&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Locator", "fromLink": "Doctrine_Locator.html", "link": "Doctrine_Locator.html#method_contains", "name": "Doctrine_Locator::contains", "doc": "&quot;contains\nchecks if a resource exists under the given name&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Locator", "fromLink": "Doctrine_Locator.html", "link": "Doctrine_Locator.html#method_bind", "name": "Doctrine_Locator::bind", "doc": "&quot;bind\nbinds a resource to a name&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Locator", "fromLink": "Doctrine_Locator.html", "link": "Doctrine_Locator.html#method_locate", "name": "Doctrine_Locator::locate", "doc": "&quot;locate\nlocates a resource by given name and returns it&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Locator", "fromLink": "Doctrine_Locator.html", "link": "Doctrine_Locator.html#method_count", "name": "Doctrine_Locator::count", "doc": "&quot;count\nreturns the number of bound resources associated with\nthis object&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Locator", "fromLink": "Doctrine_Locator.html", "link": "Doctrine_Locator.html#method_getIterator", "name": "Doctrine_Locator::getIterator", "doc": "&quot;getIterator\nreturns an ArrayIterator that iterates through all\nbound resources&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Locator_Exception.html", "name": "Doctrine_Locator_Exception", "doc": "&quot;Doctrine_Locator_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Locator_Injectable.html", "name": "Doctrine_Locator_Injectable", "doc": "&quot;Doctrine_Locator_Injectable&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Locator_Injectable", "fromLink": "Doctrine_Locator_Injectable.html", "link": "Doctrine_Locator_Injectable.html#method_setLocator", "name": "Doctrine_Locator_Injectable::setLocator", "doc": "&quot;setLocator\nthis method can be used for setting the locator object locally&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Locator_Injectable", "fromLink": "Doctrine_Locator_Injectable.html", "link": "Doctrine_Locator_Injectable.html#method_getLocator", "name": "Doctrine_Locator_Injectable::getLocator", "doc": "&quot;getLocator\nreturns the locator associated with this object&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Locator_Injectable", "fromLink": "Doctrine_Locator_Injectable.html", "link": "Doctrine_Locator_Injectable.html#method_locate", "name": "Doctrine_Locator_Injectable::locate", "doc": "&quot;locate\nlocates a resource by given name and returns it&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Locator_Injectable", "fromLink": "Doctrine_Locator_Injectable.html", "link": "Doctrine_Locator_Injectable.html#method_bind", "name": "Doctrine_Locator_Injectable::bind", "doc": "&quot;bind\nbinds a resource to a name&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Locator_Injectable", "fromLink": "Doctrine_Locator_Injectable.html", "link": "Doctrine_Locator_Injectable.html#method_initNullObject", "name": "Doctrine_Locator_Injectable::initNullObject", "doc": "&quot;initNullObject\ninitializes the null object&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Locator_Injectable", "fromLink": "Doctrine_Locator_Injectable.html", "link": "Doctrine_Locator_Injectable.html#method_getNullObject", "name": "Doctrine_Locator_Injectable::getNullObject", "doc": "&quot;getNullObject\nreturns the null object associated with this object&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Locking_Exception.html", "name": "Doctrine_Locking_Exception", "doc": "&quot;Locking exception class&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Locking_Manager_Pessimistic.html", "name": "Doctrine_Locking_Manager_Pessimistic", "doc": "&quot;Offline locking of records comes in handy where you need to make sure that\na time-consuming task on a record or many records, which is spread over several\npage requests can&#039;t be interfered by other users.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Locking_Manager_Pessimistic", "fromLink": "Doctrine_Locking_Manager_Pessimistic.html", "link": "Doctrine_Locking_Manager_Pessimistic.html#method___construct", "name": "Doctrine_Locking_Manager_Pessimistic::__construct", "doc": "&quot;Constructs a new locking manager object&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Locking_Manager_Pessimistic", "fromLink": "Doctrine_Locking_Manager_Pessimistic.html", "link": "Doctrine_Locking_Manager_Pessimistic.html#method_getLock", "name": "Doctrine_Locking_Manager_Pessimistic::getLock", "doc": "&quot;Obtains a lock on a {@link Doctrine_Record}&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Locking_Manager_Pessimistic", "fromLink": "Doctrine_Locking_Manager_Pessimistic.html", "link": "Doctrine_Locking_Manager_Pessimistic.html#method_releaseLock", "name": "Doctrine_Locking_Manager_Pessimistic::releaseLock", "doc": "&quot;Releases a lock on a {@link Doctrine_Record}&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Locking_Manager_Pessimistic", "fromLink": "Doctrine_Locking_Manager_Pessimistic.html", "link": "Doctrine_Locking_Manager_Pessimistic.html#method_getLockOwner", "name": "Doctrine_Locking_Manager_Pessimistic::getLockOwner", "doc": "&quot;Gets the identifier that identifies the owner of the lock on the given\nrecord.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Locking_Manager_Pessimistic", "fromLink": "Doctrine_Locking_Manager_Pessimistic.html", "link": "Doctrine_Locking_Manager_Pessimistic.html#method_releaseAgedLocks", "name": "Doctrine_Locking_Manager_Pessimistic::releaseAgedLocks", "doc": "&quot;Releases locks older than a defined amount of seconds&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Manager.html", "name": "Doctrine_Manager", "doc": "&quot;Doctrine_Manager is the base component of all doctrine based projects.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_setDefaultAttributes", "name": "Doctrine_Manager::setDefaultAttributes", "doc": "&quot;Sets default attributes values.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_getInstance", "name": "Doctrine_Manager::getInstance", "doc": "&quot;Returns an instance of this class\n(this class uses the singleton pattern)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_resetInstance", "name": "Doctrine_Manager::resetInstance", "doc": "&quot;Reset the internal static instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_reset", "name": "Doctrine_Manager::reset", "doc": "&quot;Reset this instance of the manager&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_getQueryRegistry", "name": "Doctrine_Manager::getQueryRegistry", "doc": "&quot;Lazy-initializes the query registry object and returns it&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_setQueryRegistry", "name": "Doctrine_Manager::setQueryRegistry", "doc": "&quot;Sets the query registry&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_connection", "name": "Doctrine_Manager::connection", "doc": "&quot;Open a new connection. If the adapter parameter is set this method acts as\na short cut for Doctrine_Manager::getInstance()-&gt;openConnection($adapter, $name);&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_openConnection", "name": "Doctrine_Manager::openConnection", "doc": "&quot;Opens a new connection and saves it to Doctrine_Manager-&gt;connections&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_parsePdoDsn", "name": "Doctrine_Manager::parsePdoDsn", "doc": "&quot;Parse a pdo style dsn in to an array of parts&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method__buildDsnPartsArray", "name": "Doctrine_Manager::_buildDsnPartsArray", "doc": "&quot;Build the blank dsn parts array used with parseDsn()&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_parseDsn", "name": "Doctrine_Manager::parseDsn", "doc": "&quot;Parse a Doctrine style dsn string in to an array of parts&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_getConnection", "name": "Doctrine_Manager::getConnection", "doc": "&quot;Get the connection instance for the passed name&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_getConnectionName", "name": "Doctrine_Manager::getConnectionName", "doc": "&quot;Get the name of the passed connection instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_bindComponent", "name": "Doctrine_Manager::bindComponent", "doc": "&quot;Binds given component to given connection\nthis means that when ever the given component uses a connection\nit will be using the bound connection instead of the current connection&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_getConnectionForComponent", "name": "Doctrine_Manager::getConnectionForComponent", "doc": "&quot;Get the connection instance for the specified component&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_hasConnectionForComponent", "name": "Doctrine_Manager::hasConnectionForComponent", "doc": "&quot;Check if a component is bound to a connection&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_closeConnection", "name": "Doctrine_Manager::closeConnection", "doc": "&quot;Closes the specified connection&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_getConnections", "name": "Doctrine_Manager::getConnections", "doc": "&quot;Returns all opened connections&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_setCurrentConnection", "name": "Doctrine_Manager::setCurrentConnection", "doc": "&quot;Sets the current connection to $key&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_contains", "name": "Doctrine_Manager::contains", "doc": "&quot;Whether or not the manager contains specified connection&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_count", "name": "Doctrine_Manager::count", "doc": "&quot;Returns the number of opened connections&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_getIterator", "name": "Doctrine_Manager::getIterator", "doc": "&quot;Returns an ArrayIterator that iterates through all connections&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_getCurrentConnection", "name": "Doctrine_Manager::getCurrentConnection", "doc": "&quot;Get the current connection instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_createDatabases", "name": "Doctrine_Manager::createDatabases", "doc": "&quot;Creates databases for all existing connections&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_dropDatabases", "name": "Doctrine_Manager::dropDatabases", "doc": "&quot;Drops databases for all existing connections&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method___toString", "name": "Doctrine_Manager::__toString", "doc": "&quot;Returns a string representation of this object&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_getValidators", "name": "Doctrine_Manager::getValidators", "doc": "&quot;Get available doctrine validators&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_registerValidators", "name": "Doctrine_Manager::registerValidators", "doc": "&quot;Register validators so that Doctrine is aware of them&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_registerHydrator", "name": "Doctrine_Manager::registerHydrator", "doc": "&quot;Register a new driver for hydration&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_getHydrators", "name": "Doctrine_Manager::getHydrators", "doc": "&quot;Get all registered hydrators&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_registerConnectionDriver", "name": "Doctrine_Manager::registerConnectionDriver", "doc": "&quot;Register a custom connection driver&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_getConnectionDrivers", "name": "Doctrine_Manager::getConnectionDrivers", "doc": "&quot;Get all the available connection drivers&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_registerExtension", "name": "Doctrine_Manager::registerExtension", "doc": "&quot;Register a Doctrine extension for extensionsAutoload() method&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Manager", "fromLink": "Doctrine_Manager.html", "link": "Doctrine_Manager.html#method_getExtensions", "name": "Doctrine_Manager::getExtensions", "doc": "&quot;Get all registered Doctrine extensions&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Manager_Exception.html", "name": "Doctrine_Manager_Exception", "doc": "&quot;Doctrine_Manager_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Migration.html", "name": "Doctrine_Migration", "doc": "&quot;Doctrine_Migration&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Migration", "fromLink": "Doctrine_Migration.html", "link": "Doctrine_Migration.html#method___construct", "name": "Doctrine_Migration::__construct", "doc": "&quot;Specify the path to the directory with the migration classes.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration", "fromLink": "Doctrine_Migration.html", "link": "Doctrine_Migration.html#method_getConnection", "name": "Doctrine_Migration::getConnection", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration", "fromLink": "Doctrine_Migration.html", "link": "Doctrine_Migration.html#method_setConnection", "name": "Doctrine_Migration::setConnection", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration", "fromLink": "Doctrine_Migration.html", "link": "Doctrine_Migration.html#method_getMigrationClassesDirectory", "name": "Doctrine_Migration::getMigrationClassesDirectory", "doc": "&quot;Get the migration classes directory&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration", "fromLink": "Doctrine_Migration.html", "link": "Doctrine_Migration.html#method_getTableName", "name": "Doctrine_Migration::getTableName", "doc": "&quot;Get the table name for storing the version number for this migration instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration", "fromLink": "Doctrine_Migration.html", "link": "Doctrine_Migration.html#method_setTableName", "name": "Doctrine_Migration::setTableName", "doc": "&quot;Set the table name for storing the version number for this migration instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration", "fromLink": "Doctrine_Migration.html", "link": "Doctrine_Migration.html#method_loadMigrationClassesFromDirectory", "name": "Doctrine_Migration::loadMigrationClassesFromDirectory", "doc": "&quot;Load migration classes from the passed directory. Any file found with a .php\nextension will be passed to the loadMigrationClass()&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration", "fromLink": "Doctrine_Migration.html", "link": "Doctrine_Migration.html#method_loadMigrationClass", "name": "Doctrine_Migration::loadMigrationClass", "doc": "&quot;Load the specified migration class name in to this migration instances queue of\nmigration classes to execute. It must be a child of Doctrine_Migration in order\nto be loaded.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration", "fromLink": "Doctrine_Migration.html", "link": "Doctrine_Migration.html#method_getMigrationClasses", "name": "Doctrine_Migration::getMigrationClasses", "doc": "&quot;Get all the loaded migration classes. Array where key is the number\/version\nand the value is the class name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration", "fromLink": "Doctrine_Migration.html", "link": "Doctrine_Migration.html#method_setCurrentVersion", "name": "Doctrine_Migration::setCurrentVersion", "doc": "&quot;Set the current version of the database&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration", "fromLink": "Doctrine_Migration.html", "link": "Doctrine_Migration.html#method_getCurrentVersion", "name": "Doctrine_Migration::getCurrentVersion", "doc": "&quot;Get the current version of the database&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration", "fromLink": "Doctrine_Migration.html", "link": "Doctrine_Migration.html#method_hasMigrated", "name": "Doctrine_Migration::hasMigrated", "doc": "&quot;hReturns true\/false for whether or not this database has been migrated in the past&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration", "fromLink": "Doctrine_Migration.html", "link": "Doctrine_Migration.html#method_getLatestVersion", "name": "Doctrine_Migration::getLatestVersion", "doc": "&quot;Gets the latest possible version from the loaded migration classes&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration", "fromLink": "Doctrine_Migration.html", "link": "Doctrine_Migration.html#method_getNextVersion", "name": "Doctrine_Migration::getNextVersion", "doc": "&quot;Get the next incremented version number based on the latest version number\nusing getLatestVersion()&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration", "fromLink": "Doctrine_Migration.html", "link": "Doctrine_Migration.html#method_getNextMigrationClassVersion", "name": "Doctrine_Migration::getNextMigrationClassVersion", "doc": "&quot;Get the next incremented class version based on the loaded migration classes&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration", "fromLink": "Doctrine_Migration.html", "link": "Doctrine_Migration.html#method_migrate", "name": "Doctrine_Migration::migrate", "doc": "&quot;Perform a migration process by specifying the migration number\/version to\nmigrate to. It will automatically know whether you are migrating up or down\nbased on the current version of the database.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration", "fromLink": "Doctrine_Migration.html", "link": "Doctrine_Migration.html#method_migrateDryRun", "name": "Doctrine_Migration::migrateDryRun", "doc": "&quot;Run the migration process but rollback at the very end. Returns true or\nfalse for whether or not the migration can be ran&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration", "fromLink": "Doctrine_Migration.html", "link": "Doctrine_Migration.html#method_getNumErrors", "name": "Doctrine_Migration::getNumErrors", "doc": "&quot;Get the number of errors&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration", "fromLink": "Doctrine_Migration.html", "link": "Doctrine_Migration.html#method_getErrors", "name": "Doctrine_Migration::getErrors", "doc": "&quot;Get all the error exceptions&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration", "fromLink": "Doctrine_Migration.html", "link": "Doctrine_Migration.html#method_clearErrors", "name": "Doctrine_Migration::clearErrors", "doc": "&quot;Clears the error exceptions&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration", "fromLink": "Doctrine_Migration.html", "link": "Doctrine_Migration.html#method_addError", "name": "Doctrine_Migration::addError", "doc": "&quot;Add an error to the stack. Excepts some type of Exception&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration", "fromLink": "Doctrine_Migration.html", "link": "Doctrine_Migration.html#method_hasErrors", "name": "Doctrine_Migration::hasErrors", "doc": "&quot;Whether or not the migration instance has errors&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration", "fromLink": "Doctrine_Migration.html", "link": "Doctrine_Migration.html#method_getMigrationClass", "name": "Doctrine_Migration::getMigrationClass", "doc": "&quot;Get instance of migration class for number\/version specified&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration", "fromLink": "Doctrine_Migration.html", "link": "Doctrine_Migration.html#method__throwErrorsException", "name": "Doctrine_Migration::_throwErrorsException", "doc": "&quot;Throw an exception with all the errors trigged during the migration&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration", "fromLink": "Doctrine_Migration.html", "link": "Doctrine_Migration.html#method__doMigrate", "name": "Doctrine_Migration::_doMigrate", "doc": "&quot;Do the actual migration process&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration", "fromLink": "Doctrine_Migration.html", "link": "Doctrine_Migration.html#method__doMigrateStep", "name": "Doctrine_Migration::_doMigrateStep", "doc": "&quot;Perform a single migration step. Executes a single migration class and\nprocesses the changes&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration", "fromLink": "Doctrine_Migration.html", "link": "Doctrine_Migration.html#method__createMigrationTable", "name": "Doctrine_Migration::_createMigrationTable", "doc": "&quot;Create the migration table and return true. If it already exists it will\nsilence the exception and return false&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Migration_Base.html", "name": "Doctrine_Migration_Base", "doc": "&quot;Base migration class. All migration classes must extend from this base class&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method_getChanges", "name": "Doctrine_Migration_Base::getChanges", "doc": "&quot;Get the changes that have been added on this migration class instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method_getNumChanges", "name": "Doctrine_Migration_Base::getNumChanges", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method__addChange", "name": "Doctrine_Migration_Base::_addChange", "doc": "&quot;Add a change to the stack of changes to execute&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method_setDefaultTableOptions", "name": "Doctrine_Migration_Base::setDefaultTableOptions", "doc": "&quot;Sets the default options for tables created using Doctrine_Migration_Base::createTable()&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method_getDefaultTableOptions", "name": "Doctrine_Migration_Base::getDefaultTableOptions", "doc": "&quot;Returns the default options for tables created using Doctrine_Migration_Base::createTable()&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method_table", "name": "Doctrine_Migration_Base::table", "doc": "&quot;Add a create or drop table change.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method_createTable", "name": "Doctrine_Migration_Base::createTable", "doc": "&quot;Add a create table change.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method_dropTable", "name": "Doctrine_Migration_Base::dropTable", "doc": "&quot;Add a drop table change.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method_renameTable", "name": "Doctrine_Migration_Base::renameTable", "doc": "&quot;Add a rename table change&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method_constraint", "name": "Doctrine_Migration_Base::constraint", "doc": "&quot;Add a create or drop constraint change.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method_createConstraint", "name": "Doctrine_Migration_Base::createConstraint", "doc": "&quot;Add a create constraint change.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method_dropConstraint", "name": "Doctrine_Migration_Base::dropConstraint", "doc": "&quot;Add a drop constraint change.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method_primaryKey", "name": "Doctrine_Migration_Base::primaryKey", "doc": "&quot;Convenience method for creating or dropping primary keys.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method_createPrimaryKey", "name": "Doctrine_Migration_Base::createPrimaryKey", "doc": "&quot;Convenience method for creating primary keys&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method_dropPrimaryKey", "name": "Doctrine_Migration_Base::dropPrimaryKey", "doc": "&quot;Convenience method for dropping primary keys.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method_foreignKey", "name": "Doctrine_Migration_Base::foreignKey", "doc": "&quot;Add a create or drop foreign key change.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method_createForeignKey", "name": "Doctrine_Migration_Base::createForeignKey", "doc": "&quot;Add a create foreign key change.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method_dropForeignKey", "name": "Doctrine_Migration_Base::dropForeignKey", "doc": "&quot;Add a drop foreign key change.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method_column", "name": "Doctrine_Migration_Base::column", "doc": "&quot;Add a add or remove column change.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method_addColumn", "name": "Doctrine_Migration_Base::addColumn", "doc": "&quot;Add a add column change.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method_removeColumn", "name": "Doctrine_Migration_Base::removeColumn", "doc": "&quot;Add a remove column change.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method_renameColumn", "name": "Doctrine_Migration_Base::renameColumn", "doc": "&quot;Add a rename column change&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method_changeColumn", "name": "Doctrine_Migration_Base::changeColumn", "doc": "&quot;Add a change column change&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method_index", "name": "Doctrine_Migration_Base::index", "doc": "&quot;Add a add or remove index change.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method_addIndex", "name": "Doctrine_Migration_Base::addIndex", "doc": "&quot;Add a add index change.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method_removeIndex", "name": "Doctrine_Migration_Base::removeIndex", "doc": "&quot;Add a remove index change.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method_preUp", "name": "Doctrine_Migration_Base::preUp", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method_postUp", "name": "Doctrine_Migration_Base::postUp", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method_preDown", "name": "Doctrine_Migration_Base::preDown", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Base", "fromLink": "Doctrine_Migration_Base.html", "link": "Doctrine_Migration_Base.html#method_postDown", "name": "Doctrine_Migration_Base::postDown", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Migration_Builder.html", "name": "Doctrine_Migration_Builder", "doc": "&quot;Doctrine_Migration_Builder&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Migration_Builder", "fromLink": "Doctrine_Migration_Builder.html", "link": "Doctrine_Migration_Builder.html#method___construct", "name": "Doctrine_Migration_Builder::__construct", "doc": "&quot;Instantiate new instance of the Doctrine_Migration_Builder class&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Builder", "fromLink": "Doctrine_Migration_Builder.html", "link": "Doctrine_Migration_Builder.html#method_setMigrationsPath", "name": "Doctrine_Migration_Builder::setMigrationsPath", "doc": "&quot;Set the path to write the generated migration classes&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Builder", "fromLink": "Doctrine_Migration_Builder.html", "link": "Doctrine_Migration_Builder.html#method_getMigrationsPath", "name": "Doctrine_Migration_Builder::getMigrationsPath", "doc": "&quot;Get the path where generated migration classes are written to&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Builder", "fromLink": "Doctrine_Migration_Builder.html", "link": "Doctrine_Migration_Builder.html#method_loadTemplate", "name": "Doctrine_Migration_Builder::loadTemplate", "doc": "&quot;Loads the class template used for generating classes&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Builder", "fromLink": "Doctrine_Migration_Builder.html", "link": "Doctrine_Migration_Builder.html#method_generateMigrationsFromDiff", "name": "Doctrine_Migration_Builder::generateMigrationsFromDiff", "doc": "&quot;Generate migrations from a Doctrine_Migration_Diff instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Builder", "fromLink": "Doctrine_Migration_Builder.html", "link": "Doctrine_Migration_Builder.html#method_generateMigrationsFromDb", "name": "Doctrine_Migration_Builder::generateMigrationsFromDb", "doc": "&quot;Generate a set of migration classes from the existing databases&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Builder", "fromLink": "Doctrine_Migration_Builder.html", "link": "Doctrine_Migration_Builder.html#method_generateMigrationsFromModels", "name": "Doctrine_Migration_Builder::generateMigrationsFromModels", "doc": "&quot;Generate a set of migrations from a set of models&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Builder", "fromLink": "Doctrine_Migration_Builder.html", "link": "Doctrine_Migration_Builder.html#method_buildCreateForeignKey", "name": "Doctrine_Migration_Builder::buildCreateForeignKey", "doc": "&quot;Build the code for creating foreign keys&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Builder", "fromLink": "Doctrine_Migration_Builder.html", "link": "Doctrine_Migration_Builder.html#method_buildDropForeignKey", "name": "Doctrine_Migration_Builder::buildDropForeignKey", "doc": "&quot;Build the code for dropping foreign keys&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Builder", "fromLink": "Doctrine_Migration_Builder.html", "link": "Doctrine_Migration_Builder.html#method_buildCreateTable", "name": "Doctrine_Migration_Builder::buildCreateTable", "doc": "&quot;Build the code for creating tables&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Builder", "fromLink": "Doctrine_Migration_Builder.html", "link": "Doctrine_Migration_Builder.html#method_buildDropTable", "name": "Doctrine_Migration_Builder::buildDropTable", "doc": "&quot;Build the code for dropping tables&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Builder", "fromLink": "Doctrine_Migration_Builder.html", "link": "Doctrine_Migration_Builder.html#method_buildAddColumn", "name": "Doctrine_Migration_Builder::buildAddColumn", "doc": "&quot;Build the code for adding columns&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Builder", "fromLink": "Doctrine_Migration_Builder.html", "link": "Doctrine_Migration_Builder.html#method_buildRemoveColumn", "name": "Doctrine_Migration_Builder::buildRemoveColumn", "doc": "&quot;Build the code for removing columns&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Builder", "fromLink": "Doctrine_Migration_Builder.html", "link": "Doctrine_Migration_Builder.html#method_buildChangeColumn", "name": "Doctrine_Migration_Builder::buildChangeColumn", "doc": "&quot;Build the code for changing columns&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Builder", "fromLink": "Doctrine_Migration_Builder.html", "link": "Doctrine_Migration_Builder.html#method_buildAddIndex", "name": "Doctrine_Migration_Builder::buildAddIndex", "doc": "&quot;Build the code for adding indexes&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Builder", "fromLink": "Doctrine_Migration_Builder.html", "link": "Doctrine_Migration_Builder.html#method_buildRemoveIndex", "name": "Doctrine_Migration_Builder::buildRemoveIndex", "doc": "&quot;Build the code for removing indexes&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Builder", "fromLink": "Doctrine_Migration_Builder.html", "link": "Doctrine_Migration_Builder.html#method_generateMigrationClass", "name": "Doctrine_Migration_Builder::generateMigrationClass", "doc": "&quot;Generate a migration class&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Builder", "fromLink": "Doctrine_Migration_Builder.html", "link": "Doctrine_Migration_Builder.html#method_buildMigrationClass", "name": "Doctrine_Migration_Builder::buildMigrationClass", "doc": "&quot;Build the code for a migration class&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Migration_Diff.html", "name": "Doctrine_Migration_Diff", "doc": "&quot;Doctrine_Migration_Diff - class used for generating differences and migration\nclasses from &#039;from&#039; and &#039;to&#039; schema information.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Migration_Diff", "fromLink": "Doctrine_Migration_Diff.html", "link": "Doctrine_Migration_Diff.html#method___construct", "name": "Doctrine_Migration_Diff::__construct", "doc": "&quot;Instantiate new Doctrine_Migration_Diff instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Diff", "fromLink": "Doctrine_Migration_Diff.html", "link": "Doctrine_Migration_Diff.html#method_setTmpPath", "name": "Doctrine_Migration_Diff::setTmpPath", "doc": "&quot;Set the temporary path to store the generated models for generating diffs&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Diff", "fromLink": "Doctrine_Migration_Diff.html", "link": "Doctrine_Migration_Diff.html#method_getUniqueId", "name": "Doctrine_Migration_Diff::getUniqueId", "doc": "&quot;Get unique hash id for this migration instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Diff", "fromLink": "Doctrine_Migration_Diff.html", "link": "Doctrine_Migration_Diff.html#method_generateChanges", "name": "Doctrine_Migration_Diff::generateChanges", "doc": "&quot;Generate an array of changes found between the from and to schema information.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Diff", "fromLink": "Doctrine_Migration_Diff.html", "link": "Doctrine_Migration_Diff.html#method_generateMigrationClasses", "name": "Doctrine_Migration_Diff::generateMigrationClasses", "doc": "&quot;Generate a migration class for the changes in this diff instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Diff", "fromLink": "Doctrine_Migration_Diff.html", "link": "Doctrine_Migration_Diff.html#method__initializeModels", "name": "Doctrine_Migration_Diff::_initializeModels", "doc": "&quot;Initialize some Doctrine models at a given path.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Diff", "fromLink": "Doctrine_Migration_Diff.html", "link": "Doctrine_Migration_Diff.html#method__diff", "name": "Doctrine_Migration_Diff::_diff", "doc": "&quot;Generate a diff between the from and to schema information&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Diff", "fromLink": "Doctrine_Migration_Diff.html", "link": "Doctrine_Migration_Diff.html#method__buildChanges", "name": "Doctrine_Migration_Diff::_buildChanges", "doc": "&quot;Build array of changes between the from and to array of schema information&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Diff", "fromLink": "Doctrine_Migration_Diff.html", "link": "Doctrine_Migration_Diff.html#method__buildModelInformation", "name": "Doctrine_Migration_Diff::_buildModelInformation", "doc": "&quot;Build all the model schema information for the passed array of models&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Diff", "fromLink": "Doctrine_Migration_Diff.html", "link": "Doctrine_Migration_Diff.html#method__cleanModelInformation", "name": "Doctrine_Migration_Diff::_cleanModelInformation", "doc": "&quot;Clean the produced model information of any potential prefix text&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Diff", "fromLink": "Doctrine_Migration_Diff.html", "link": "Doctrine_Migration_Diff.html#method__getItemExtension", "name": "Doctrine_Migration_Diff::_getItemExtension", "doc": "&quot;Get the extension of the type of file contained in a directory.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Diff", "fromLink": "Doctrine_Migration_Diff.html", "link": "Doctrine_Migration_Diff.html#method__generateModels", "name": "Doctrine_Migration_Diff::_generateModels", "doc": "&quot;Generate a set of models for the schema information source&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Diff", "fromLink": "Doctrine_Migration_Diff.html", "link": "Doctrine_Migration_Diff.html#method__cleanup", "name": "Doctrine_Migration_Diff::_cleanup", "doc": "&quot;Cleanup temporary generated models after a diff is performed&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Migration_Exception.html", "name": "Doctrine_Migration_Exception", "doc": "&quot;Doctrine_Migration_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Migration_IrreversibleMigrationException.html", "name": "Doctrine_Migration_IrreversibleMigrationException", "doc": "&quot;Doctrine_Migration_IrreversibleMigration&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Migration_Process.html", "name": "Doctrine_Migration_Process", "doc": "&quot;Doctrine_Migration_Process&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Migration_Process", "fromLink": "Doctrine_Migration_Process.html", "link": "Doctrine_Migration_Process.html#method___construct", "name": "Doctrine_Migration_Process::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Process", "fromLink": "Doctrine_Migration_Process.html", "link": "Doctrine_Migration_Process.html#method_getConnection", "name": "Doctrine_Migration_Process::getConnection", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Process", "fromLink": "Doctrine_Migration_Process.html", "link": "Doctrine_Migration_Process.html#method_processCreatedTable", "name": "Doctrine_Migration_Process::processCreatedTable", "doc": "&quot;Process a created table change&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Process", "fromLink": "Doctrine_Migration_Process.html", "link": "Doctrine_Migration_Process.html#method_processDroppedTable", "name": "Doctrine_Migration_Process::processDroppedTable", "doc": "&quot;Process a dropped table change&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Process", "fromLink": "Doctrine_Migration_Process.html", "link": "Doctrine_Migration_Process.html#method_processRenamedTable", "name": "Doctrine_Migration_Process::processRenamedTable", "doc": "&quot;Process a renamed table change&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Process", "fromLink": "Doctrine_Migration_Process.html", "link": "Doctrine_Migration_Process.html#method_processCreatedColumn", "name": "Doctrine_Migration_Process::processCreatedColumn", "doc": "&quot;Process a created column change&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Process", "fromLink": "Doctrine_Migration_Process.html", "link": "Doctrine_Migration_Process.html#method_processDroppedColumn", "name": "Doctrine_Migration_Process::processDroppedColumn", "doc": "&quot;Process a dropped column change&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Process", "fromLink": "Doctrine_Migration_Process.html", "link": "Doctrine_Migration_Process.html#method_processRenamedColumn", "name": "Doctrine_Migration_Process::processRenamedColumn", "doc": "&quot;Process a renamed column change&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Process", "fromLink": "Doctrine_Migration_Process.html", "link": "Doctrine_Migration_Process.html#method_processChangedColumn", "name": "Doctrine_Migration_Process::processChangedColumn", "doc": "&quot;Process a changed column change&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Process", "fromLink": "Doctrine_Migration_Process.html", "link": "Doctrine_Migration_Process.html#method_processCreatedIndex", "name": "Doctrine_Migration_Process::processCreatedIndex", "doc": "&quot;Process a created index change&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Process", "fromLink": "Doctrine_Migration_Process.html", "link": "Doctrine_Migration_Process.html#method_processDroppedIndex", "name": "Doctrine_Migration_Process::processDroppedIndex", "doc": "&quot;Process a dropped index change&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Process", "fromLink": "Doctrine_Migration_Process.html", "link": "Doctrine_Migration_Process.html#method_processCreatedConstraint", "name": "Doctrine_Migration_Process::processCreatedConstraint", "doc": "&quot;Process a created constraint change&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Process", "fromLink": "Doctrine_Migration_Process.html", "link": "Doctrine_Migration_Process.html#method_processDroppedConstraint", "name": "Doctrine_Migration_Process::processDroppedConstraint", "doc": "&quot;Process a dropped constraint change&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Process", "fromLink": "Doctrine_Migration_Process.html", "link": "Doctrine_Migration_Process.html#method_processCreatedForeignKey", "name": "Doctrine_Migration_Process::processCreatedForeignKey", "doc": "&quot;Process a created foreign key change&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Migration_Process", "fromLink": "Doctrine_Migration_Process.html", "link": "Doctrine_Migration_Process.html#method_processDroppedForeignKey", "name": "Doctrine_Migration_Process::processDroppedForeignKey", "doc": "&quot;Process a dropped foreign key change&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Node.html", "name": "Doctrine_Node", "doc": "&quot;Doctrine_Node&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Node", "fromLink": "Doctrine_Node.html", "link": "Doctrine_Node.html#method___construct", "name": "Doctrine_Node::__construct", "doc": "&quot;contructor, creates node with reference to record and any options&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node", "fromLink": "Doctrine_Node.html", "link": "Doctrine_Node.html#method_factory", "name": "Doctrine_Node::factory", "doc": "&quot;Factory method for creating a Node.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node", "fromLink": "Doctrine_Node.html", "link": "Doctrine_Node.html#method_setRecord", "name": "Doctrine_Node::setRecord", "doc": "&quot;setter for record attribute&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node", "fromLink": "Doctrine_Node.html", "link": "Doctrine_Node.html#method_getRecord", "name": "Doctrine_Node::getRecord", "doc": "&quot;getter for record attribute&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node", "fromLink": "Doctrine_Node.html", "link": "Doctrine_Node.html#method_traverse", "name": "Doctrine_Node::traverse", "doc": "&quot;convenience function for getIterator&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node", "fromLink": "Doctrine_Node.html", "link": "Doctrine_Node.html#method_getIterator", "name": "Doctrine_Node::getIterator", "doc": "&quot;get iterator&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node", "fromLink": "Doctrine_Node.html", "link": "Doctrine_Node.html#method_setIteratorType", "name": "Doctrine_Node::setIteratorType", "doc": "&quot;sets node&#039;s iterator type&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node", "fromLink": "Doctrine_Node.html", "link": "Doctrine_Node.html#method_setIteratorOptions", "name": "Doctrine_Node::setIteratorOptions", "doc": "&quot;sets node&#039;s iterator options&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Node_AdjacencyList.html", "name": "Doctrine_Node_AdjacencyList", "doc": "&quot;Doctrine_Node_AdjacencyList&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Node_AdjacencyList_LevelOrderIterator.html", "name": "Doctrine_Node_AdjacencyList_LevelOrderIterator", "doc": "&quot;Doctrine_Node_AdjacencyList_LevelOrderIterator&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Node_AdjacencyList_PostOrderIterator.html", "name": "Doctrine_Node_AdjacencyList_PostOrderIterator", "doc": "&quot;Doctrine_Node_AdjacencyList_PostOrderIterator&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Node_AdjacencyList_PreOrderIterator.html", "name": "Doctrine_Node_AdjacencyList_PreOrderIterator", "doc": "&quot;Doctrine_Node_AdjacencyList_PreOrderIterator&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Node_Exception.html", "name": "Doctrine_Node_Exception", "doc": "&quot;Doctrine_Node_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Node_Interface.html", "name": "Doctrine_Node_Interface", "doc": "&quot;Doctrine_Node_Interface&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_hasPrevSibling", "name": "Doctrine_Node_Interface::hasPrevSibling", "doc": "&quot;test if node has previous sibling&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_hasNextSibling", "name": "Doctrine_Node_Interface::hasNextSibling", "doc": "&quot;test if node has next sibling&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_hasChildren", "name": "Doctrine_Node_Interface::hasChildren", "doc": "&quot;test if node has children&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_hasParent", "name": "Doctrine_Node_Interface::hasParent", "doc": "&quot;test if node has parent&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_getPrevSibling", "name": "Doctrine_Node_Interface::getPrevSibling", "doc": "&quot;gets record of prev sibling or empty record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_getNextSibling", "name": "Doctrine_Node_Interface::getNextSibling", "doc": "&quot;gets record of next sibling or empty record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_getSiblings", "name": "Doctrine_Node_Interface::getSiblings", "doc": "&quot;gets siblings for node&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_getFirstChild", "name": "Doctrine_Node_Interface::getFirstChild", "doc": "&quot;gets record of first child or empty record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_getLastChild", "name": "Doctrine_Node_Interface::getLastChild", "doc": "&quot;gets record of last child or empty record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_getChildren", "name": "Doctrine_Node_Interface::getChildren", "doc": "&quot;gets children for node (direct descendants only)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_getDescendants", "name": "Doctrine_Node_Interface::getDescendants", "doc": "&quot;gets descendants for node (direct descendants only)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_getParent", "name": "Doctrine_Node_Interface::getParent", "doc": "&quot;gets record of parent or empty record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_getAncestors", "name": "Doctrine_Node_Interface::getAncestors", "doc": "&quot;gets ancestors for node&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_getPath", "name": "Doctrine_Node_Interface::getPath", "doc": "&quot;gets path to node from root, uses record::toString() method to get node names&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_getLevel", "name": "Doctrine_Node_Interface::getLevel", "doc": "&quot;gets level (depth) of node in the tree&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_getNumberChildren", "name": "Doctrine_Node_Interface::getNumberChildren", "doc": "&quot;gets number of children (direct descendants)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_getNumberDescendants", "name": "Doctrine_Node_Interface::getNumberDescendants", "doc": "&quot;gets number of descendants (children and their children)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_insertAsParentOf", "name": "Doctrine_Node_Interface::insertAsParentOf", "doc": "&quot;inserts node as parent of dest record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_insertAsPrevSiblingOf", "name": "Doctrine_Node_Interface::insertAsPrevSiblingOf", "doc": "&quot;inserts node as previous sibling of dest record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_insertAsNextSiblingOf", "name": "Doctrine_Node_Interface::insertAsNextSiblingOf", "doc": "&quot;inserts node as next sibling of dest record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_insertAsFirstChildOf", "name": "Doctrine_Node_Interface::insertAsFirstChildOf", "doc": "&quot;inserts node as first child of dest record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_insertAsLastChildOf", "name": "Doctrine_Node_Interface::insertAsLastChildOf", "doc": "&quot;inserts node as first child of dest record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_moveAsPrevSiblingOf", "name": "Doctrine_Node_Interface::moveAsPrevSiblingOf", "doc": "&quot;moves node as prev sibling of dest record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_moveAsNextSiblingOf", "name": "Doctrine_Node_Interface::moveAsNextSiblingOf", "doc": "&quot;moves node as next sibling of dest record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_moveAsFirstChildOf", "name": "Doctrine_Node_Interface::moveAsFirstChildOf", "doc": "&quot;moves node as first child of dest record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_moveAsLastChildOf", "name": "Doctrine_Node_Interface::moveAsLastChildOf", "doc": "&quot;moves node as last child of dest record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_addChild", "name": "Doctrine_Node_Interface::addChild", "doc": "&quot;adds node as last child of record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_isLeaf", "name": "Doctrine_Node_Interface::isLeaf", "doc": "&quot;determines if node is leaf&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_isRoot", "name": "Doctrine_Node_Interface::isRoot", "doc": "&quot;determines if node is root&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_isEqualTo", "name": "Doctrine_Node_Interface::isEqualTo", "doc": "&quot;determines if node is equal to subject node&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_isDescendantOf", "name": "Doctrine_Node_Interface::isDescendantOf", "doc": "&quot;determines if node is child of subject node&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_isDescendantOfOrEqualTo", "name": "Doctrine_Node_Interface::isDescendantOfOrEqualTo", "doc": "&quot;determines if node is child of or sibling to subject node&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_isValidNode", "name": "Doctrine_Node_Interface::isValidNode", "doc": "&quot;determines if node is valid&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_Interface", "fromLink": "Doctrine_Node_Interface.html", "link": "Doctrine_Node_Interface.html#method_delete", "name": "Doctrine_Node_Interface::delete", "doc": "&quot;deletes node and it&#039;s descendants&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Node_MaterializedPath.html", "name": "Doctrine_Node_MaterializedPath", "doc": "&quot;Doctrine_Node_MaterializedPath&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Node_MaterializedPath_LevelOrderIterator.html", "name": "Doctrine_Node_MaterializedPath_LevelOrderIterator", "doc": "&quot;Doctrine_Node_MaterializedPath_LevelOrderIterator&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Node_MaterializedPath_LevelOrderIterator", "fromLink": "Doctrine_Node_MaterializedPath_LevelOrderIterator.html", "link": "Doctrine_Node_MaterializedPath_LevelOrderIterator.html#method___construct", "name": "Doctrine_Node_MaterializedPath_LevelOrderIterator::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_MaterializedPath_LevelOrderIterator", "fromLink": "Doctrine_Node_MaterializedPath_LevelOrderIterator.html", "link": "Doctrine_Node_MaterializedPath_LevelOrderIterator.html#method_rewind", "name": "Doctrine_Node_MaterializedPath_LevelOrderIterator::rewind", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_MaterializedPath_LevelOrderIterator", "fromLink": "Doctrine_Node_MaterializedPath_LevelOrderIterator.html", "link": "Doctrine_Node_MaterializedPath_LevelOrderIterator.html#method_valid", "name": "Doctrine_Node_MaterializedPath_LevelOrderIterator::valid", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_MaterializedPath_LevelOrderIterator", "fromLink": "Doctrine_Node_MaterializedPath_LevelOrderIterator.html", "link": "Doctrine_Node_MaterializedPath_LevelOrderIterator.html#method_current", "name": "Doctrine_Node_MaterializedPath_LevelOrderIterator::current", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_MaterializedPath_LevelOrderIterator", "fromLink": "Doctrine_Node_MaterializedPath_LevelOrderIterator.html", "link": "Doctrine_Node_MaterializedPath_LevelOrderIterator.html#method_key", "name": "Doctrine_Node_MaterializedPath_LevelOrderIterator::key", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_MaterializedPath_LevelOrderIterator", "fromLink": "Doctrine_Node_MaterializedPath_LevelOrderIterator.html", "link": "Doctrine_Node_MaterializedPath_LevelOrderIterator.html#method_next", "name": "Doctrine_Node_MaterializedPath_LevelOrderIterator::next", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Node_MaterializedPath_PostOrderIterator.html", "name": "Doctrine_Node_MaterializedPath_PostOrderIterator", "doc": "&quot;Doctrine_Node_MaterializedPath_PostOrderIterator&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Node_MaterializedPath_PostOrderIterator", "fromLink": "Doctrine_Node_MaterializedPath_PostOrderIterator.html", "link": "Doctrine_Node_MaterializedPath_PostOrderIterator.html#method___construct", "name": "Doctrine_Node_MaterializedPath_PostOrderIterator::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_MaterializedPath_PostOrderIterator", "fromLink": "Doctrine_Node_MaterializedPath_PostOrderIterator.html", "link": "Doctrine_Node_MaterializedPath_PostOrderIterator.html#method_rewind", "name": "Doctrine_Node_MaterializedPath_PostOrderIterator::rewind", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_MaterializedPath_PostOrderIterator", "fromLink": "Doctrine_Node_MaterializedPath_PostOrderIterator.html", "link": "Doctrine_Node_MaterializedPath_PostOrderIterator.html#method_valid", "name": "Doctrine_Node_MaterializedPath_PostOrderIterator::valid", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_MaterializedPath_PostOrderIterator", "fromLink": "Doctrine_Node_MaterializedPath_PostOrderIterator.html", "link": "Doctrine_Node_MaterializedPath_PostOrderIterator.html#method_current", "name": "Doctrine_Node_MaterializedPath_PostOrderIterator::current", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_MaterializedPath_PostOrderIterator", "fromLink": "Doctrine_Node_MaterializedPath_PostOrderIterator.html", "link": "Doctrine_Node_MaterializedPath_PostOrderIterator.html#method_key", "name": "Doctrine_Node_MaterializedPath_PostOrderIterator::key", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_MaterializedPath_PostOrderIterator", "fromLink": "Doctrine_Node_MaterializedPath_PostOrderIterator.html", "link": "Doctrine_Node_MaterializedPath_PostOrderIterator.html#method_next", "name": "Doctrine_Node_MaterializedPath_PostOrderIterator::next", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Node_MaterializedPath_PreOrderIterator.html", "name": "Doctrine_Node_MaterializedPath_PreOrderIterator", "doc": "&quot;Doctrine_Node_MaterializedPath_PreOrderIterator&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Node_MaterializedPath_PreOrderIterator", "fromLink": "Doctrine_Node_MaterializedPath_PreOrderIterator.html", "link": "Doctrine_Node_MaterializedPath_PreOrderIterator.html#method___construct", "name": "Doctrine_Node_MaterializedPath_PreOrderIterator::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_MaterializedPath_PreOrderIterator", "fromLink": "Doctrine_Node_MaterializedPath_PreOrderIterator.html", "link": "Doctrine_Node_MaterializedPath_PreOrderIterator.html#method_rewind", "name": "Doctrine_Node_MaterializedPath_PreOrderIterator::rewind", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_MaterializedPath_PreOrderIterator", "fromLink": "Doctrine_Node_MaterializedPath_PreOrderIterator.html", "link": "Doctrine_Node_MaterializedPath_PreOrderIterator.html#method_valid", "name": "Doctrine_Node_MaterializedPath_PreOrderIterator::valid", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_MaterializedPath_PreOrderIterator", "fromLink": "Doctrine_Node_MaterializedPath_PreOrderIterator.html", "link": "Doctrine_Node_MaterializedPath_PreOrderIterator.html#method_current", "name": "Doctrine_Node_MaterializedPath_PreOrderIterator::current", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_MaterializedPath_PreOrderIterator", "fromLink": "Doctrine_Node_MaterializedPath_PreOrderIterator.html", "link": "Doctrine_Node_MaterializedPath_PreOrderIterator.html#method_key", "name": "Doctrine_Node_MaterializedPath_PreOrderIterator::key", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_MaterializedPath_PreOrderIterator", "fromLink": "Doctrine_Node_MaterializedPath_PreOrderIterator.html", "link": "Doctrine_Node_MaterializedPath_PreOrderIterator.html#method_next", "name": "Doctrine_Node_MaterializedPath_PreOrderIterator::next", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Node_NestedSet.html", "name": "Doctrine_Node_NestedSet", "doc": "&quot;Doctrine_Node_NestedSet&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_hasPrevSibling", "name": "Doctrine_Node_NestedSet::hasPrevSibling", "doc": "&quot;test if node has previous sibling&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_hasNextSibling", "name": "Doctrine_Node_NestedSet::hasNextSibling", "doc": "&quot;test if node has next sibling&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_hasChildren", "name": "Doctrine_Node_NestedSet::hasChildren", "doc": "&quot;test if node has children&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_hasParent", "name": "Doctrine_Node_NestedSet::hasParent", "doc": "&quot;test if node has parent&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_getPrevSibling", "name": "Doctrine_Node_NestedSet::getPrevSibling", "doc": "&quot;gets record of prev sibling or empty record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_getNextSibling", "name": "Doctrine_Node_NestedSet::getNextSibling", "doc": "&quot;gets record of next sibling or empty record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_getSiblings", "name": "Doctrine_Node_NestedSet::getSiblings", "doc": "&quot;gets siblings for node&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_getFirstChild", "name": "Doctrine_Node_NestedSet::getFirstChild", "doc": "&quot;gets record of first child or empty record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_getLastChild", "name": "Doctrine_Node_NestedSet::getLastChild", "doc": "&quot;gets record of last child or empty record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_getChildren", "name": "Doctrine_Node_NestedSet::getChildren", "doc": "&quot;gets children for node (direct descendants only)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_getDescendants", "name": "Doctrine_Node_NestedSet::getDescendants", "doc": "&quot;gets descendants for node (direct descendants only)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_getParent", "name": "Doctrine_Node_NestedSet::getParent", "doc": "&quot;gets record of parent or empty record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_getAncestors", "name": "Doctrine_Node_NestedSet::getAncestors", "doc": "&quot;gets ancestors for node&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_getPath", "name": "Doctrine_Node_NestedSet::getPath", "doc": "&quot;gets path to node from root, uses record::toString() method to get node names&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_getNumberChildren", "name": "Doctrine_Node_NestedSet::getNumberChildren", "doc": "&quot;gets number of children (direct descendants)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_getNumberDescendants", "name": "Doctrine_Node_NestedSet::getNumberDescendants", "doc": "&quot;gets number of descendants (children and their children)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_insertAsParentOf", "name": "Doctrine_Node_NestedSet::insertAsParentOf", "doc": "&quot;inserts node as parent of dest record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_insertAsPrevSiblingOf", "name": "Doctrine_Node_NestedSet::insertAsPrevSiblingOf", "doc": "&quot;inserts node as previous sibling of dest record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_insertAsNextSiblingOf", "name": "Doctrine_Node_NestedSet::insertAsNextSiblingOf", "doc": "&quot;inserts node as next sibling of dest record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_insertAsFirstChildOf", "name": "Doctrine_Node_NestedSet::insertAsFirstChildOf", "doc": "&quot;inserts node as first child of dest record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_insertAsLastChildOf", "name": "Doctrine_Node_NestedSet::insertAsLastChildOf", "doc": "&quot;inserts node as last child of dest record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_moveAsPrevSiblingOf", "name": "Doctrine_Node_NestedSet::moveAsPrevSiblingOf", "doc": "&quot;moves node as prev sibling of dest record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_moveAsNextSiblingOf", "name": "Doctrine_Node_NestedSet::moveAsNextSiblingOf", "doc": "&quot;moves node as next sibling of dest record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_moveAsFirstChildOf", "name": "Doctrine_Node_NestedSet::moveAsFirstChildOf", "doc": "&quot;moves node as first child of dest record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_moveAsLastChildOf", "name": "Doctrine_Node_NestedSet::moveAsLastChildOf", "doc": "&quot;moves node as last child of dest record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_makeRoot", "name": "Doctrine_Node_NestedSet::makeRoot", "doc": "&quot;Makes this node a root node. Only used in multiple-root trees.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_addChild", "name": "Doctrine_Node_NestedSet::addChild", "doc": "&quot;adds node as last child of record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_isLeaf", "name": "Doctrine_Node_NestedSet::isLeaf", "doc": "&quot;determines if node is leaf&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_isRoot", "name": "Doctrine_Node_NestedSet::isRoot", "doc": "&quot;determines if node is root&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_isEqualTo", "name": "Doctrine_Node_NestedSet::isEqualTo", "doc": "&quot;determines if node is equal to subject node&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_isDescendantOf", "name": "Doctrine_Node_NestedSet::isDescendantOf", "doc": "&quot;determines if node is child of subject node&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_isDescendantOfOrEqualTo", "name": "Doctrine_Node_NestedSet::isDescendantOfOrEqualTo", "doc": "&quot;determines if node is child of or sibling to subject node&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_isAncestorOf", "name": "Doctrine_Node_NestedSet::isAncestorOf", "doc": "&quot;determines if node is ancestor of subject node&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_isValidNode", "name": "Doctrine_Node_NestedSet::isValidNode", "doc": "&quot;determines if node is valid&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_detach", "name": "Doctrine_Node_NestedSet::detach", "doc": "&quot;Detaches the node from the tree by invalidating it&#039;s lft &amp;amp; rgt values\n(they&#039;re set to 0).&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_delete", "name": "Doctrine_Node_NestedSet::delete", "doc": "&quot;deletes node and it&#039;s descendants&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_getLeftValue", "name": "Doctrine_Node_NestedSet::getLeftValue", "doc": "&quot;gets record&#039;s left value&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_setLeftValue", "name": "Doctrine_Node_NestedSet::setLeftValue", "doc": "&quot;sets record&#039;s left value&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_getRightValue", "name": "Doctrine_Node_NestedSet::getRightValue", "doc": "&quot;gets record&#039;s right value&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_setRightValue", "name": "Doctrine_Node_NestedSet::setRightValue", "doc": "&quot;sets record&#039;s right value&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_getLevel", "name": "Doctrine_Node_NestedSet::getLevel", "doc": "&quot;gets level (depth) of node in the tree&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_getRootValue", "name": "Doctrine_Node_NestedSet::getRootValue", "doc": "&quot;get records root id value&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet", "fromLink": "Doctrine_Node_NestedSet.html", "link": "Doctrine_Node_NestedSet.html#method_setRootValue", "name": "Doctrine_Node_NestedSet::setRootValue", "doc": "&quot;sets records root id value&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Node_NestedSet_LevelOrderIterator.html", "name": "Doctrine_Node_NestedSet_LevelOrderIterator", "doc": "&quot;Doctrine_Node_NestedSet_LevelOrderIterator&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Node_NestedSet_PostOrderIterator.html", "name": "Doctrine_Node_NestedSet_PostOrderIterator", "doc": "&quot;Doctrine_Node_NestedSet_PostOrderIterator&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Node_NestedSet_PreOrderIterator.html", "name": "Doctrine_Node_NestedSet_PreOrderIterator", "doc": "&quot;Doctrine_Node_NestedSet_PreOrderIterator&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Node_NestedSet_PreOrderIterator", "fromLink": "Doctrine_Node_NestedSet_PreOrderIterator.html", "link": "Doctrine_Node_NestedSet_PreOrderIterator.html#method___construct", "name": "Doctrine_Node_NestedSet_PreOrderIterator::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet_PreOrderIterator", "fromLink": "Doctrine_Node_NestedSet_PreOrderIterator.html", "link": "Doctrine_Node_NestedSet_PreOrderIterator.html#method_rewind", "name": "Doctrine_Node_NestedSet_PreOrderIterator::rewind", "doc": "&quot;rewinds the iterator&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet_PreOrderIterator", "fromLink": "Doctrine_Node_NestedSet_PreOrderIterator.html", "link": "Doctrine_Node_NestedSet_PreOrderIterator.html#method_key", "name": "Doctrine_Node_NestedSet_PreOrderIterator::key", "doc": "&quot;returns the current key&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet_PreOrderIterator", "fromLink": "Doctrine_Node_NestedSet_PreOrderIterator.html", "link": "Doctrine_Node_NestedSet_PreOrderIterator.html#method_current", "name": "Doctrine_Node_NestedSet_PreOrderIterator::current", "doc": "&quot;returns the current record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet_PreOrderIterator", "fromLink": "Doctrine_Node_NestedSet_PreOrderIterator.html", "link": "Doctrine_Node_NestedSet_PreOrderIterator.html#method_next", "name": "Doctrine_Node_NestedSet_PreOrderIterator::next", "doc": "&quot;advances the internal pointer&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet_PreOrderIterator", "fromLink": "Doctrine_Node_NestedSet_PreOrderIterator.html", "link": "Doctrine_Node_NestedSet_PreOrderIterator.html#method_valid", "name": "Doctrine_Node_NestedSet_PreOrderIterator::valid", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Node_NestedSet_PreOrderIterator", "fromLink": "Doctrine_Node_NestedSet_PreOrderIterator.html", "link": "Doctrine_Node_NestedSet_PreOrderIterator.html#method_count", "name": "Doctrine_Node_NestedSet_PreOrderIterator::count", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Null.html", "name": "Doctrine_Null", "doc": "&quot;Doctrine_Null&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Null", "fromLink": "Doctrine_Null.html", "link": "Doctrine_Null.html#method_exists", "name": "Doctrine_Null::exists", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Null", "fromLink": "Doctrine_Null.html", "link": "Doctrine_Null.html#method___toString", "name": "Doctrine_Null::__toString", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Overloadable.html", "name": "Doctrine_Overloadable", "doc": "&quot;Doctrine_Overloadable\na very generic overloading interface&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Overloadable", "fromLink": "Doctrine_Overloadable.html", "link": "Doctrine_Overloadable.html#method___call", "name": "Doctrine_Overloadable::__call", "doc": "&quot;__call\nmethod overloader&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Pager.html", "name": "Doctrine_Pager", "doc": "&quot;Doctrine_Pager&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Pager", "fromLink": "Doctrine_Pager.html", "link": "Doctrine_Pager.html#method___construct", "name": "Doctrine_Pager::__construct", "doc": "&quot;__construct&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager", "fromLink": "Doctrine_Pager.html", "link": "Doctrine_Pager.html#method__initialize", "name": "Doctrine_Pager::_initialize", "doc": "&quot;_initialize&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager", "fromLink": "Doctrine_Pager.html", "link": "Doctrine_Pager.html#method__adjustOffset", "name": "Doctrine_Pager::_adjustOffset", "doc": "&quot;_adjustOffset&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager", "fromLink": "Doctrine_Pager.html", "link": "Doctrine_Pager.html#method_getExecuted", "name": "Doctrine_Pager::getExecuted", "doc": "&quot;getExecuted&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager", "fromLink": "Doctrine_Pager.html", "link": "Doctrine_Pager.html#method__setExecuted", "name": "Doctrine_Pager::_setExecuted", "doc": "&quot;_setExecuted&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager", "fromLink": "Doctrine_Pager.html", "link": "Doctrine_Pager.html#method_getRange", "name": "Doctrine_Pager::getRange", "doc": "&quot;getRange&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager", "fromLink": "Doctrine_Pager.html", "link": "Doctrine_Pager.html#method_getNumResults", "name": "Doctrine_Pager::getNumResults", "doc": "&quot;getNumResults&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager", "fromLink": "Doctrine_Pager.html", "link": "Doctrine_Pager.html#method__setNumResults", "name": "Doctrine_Pager::_setNumResults", "doc": "&quot;_setNumResults&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager", "fromLink": "Doctrine_Pager.html", "link": "Doctrine_Pager.html#method_getFirstPage", "name": "Doctrine_Pager::getFirstPage", "doc": "&quot;getFirstPage&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager", "fromLink": "Doctrine_Pager.html", "link": "Doctrine_Pager.html#method_getLastPage", "name": "Doctrine_Pager::getLastPage", "doc": "&quot;getLastPage&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager", "fromLink": "Doctrine_Pager.html", "link": "Doctrine_Pager.html#method__setLastPage", "name": "Doctrine_Pager::_setLastPage", "doc": "&quot;_setLastPage&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager", "fromLink": "Doctrine_Pager.html", "link": "Doctrine_Pager.html#method_getPage", "name": "Doctrine_Pager::getPage", "doc": "&quot;getLastPage&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager", "fromLink": "Doctrine_Pager.html", "link": "Doctrine_Pager.html#method_getNextPage", "name": "Doctrine_Pager::getNextPage", "doc": "&quot;getNextPage&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager", "fromLink": "Doctrine_Pager.html", "link": "Doctrine_Pager.html#method_getPreviousPage", "name": "Doctrine_Pager::getPreviousPage", "doc": "&quot;getPreviousPage&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager", "fromLink": "Doctrine_Pager.html", "link": "Doctrine_Pager.html#method_getFirstIndice", "name": "Doctrine_Pager::getFirstIndice", "doc": "&quot;getFirstIndice&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager", "fromLink": "Doctrine_Pager.html", "link": "Doctrine_Pager.html#method_getLastIndice", "name": "Doctrine_Pager::getLastIndice", "doc": "&quot;getLastIndice&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager", "fromLink": "Doctrine_Pager.html", "link": "Doctrine_Pager.html#method_haveToPaginate", "name": "Doctrine_Pager::haveToPaginate", "doc": "&quot;haveToPaginate&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager", "fromLink": "Doctrine_Pager.html", "link": "Doctrine_Pager.html#method_setPage", "name": "Doctrine_Pager::setPage", "doc": "&quot;setPage&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager", "fromLink": "Doctrine_Pager.html", "link": "Doctrine_Pager.html#method__setPage", "name": "Doctrine_Pager::_setPage", "doc": "&quot;_setPage&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager", "fromLink": "Doctrine_Pager.html", "link": "Doctrine_Pager.html#method_getMaxPerPage", "name": "Doctrine_Pager::getMaxPerPage", "doc": "&quot;getLastPage&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager", "fromLink": "Doctrine_Pager.html", "link": "Doctrine_Pager.html#method_setMaxPerPage", "name": "Doctrine_Pager::setMaxPerPage", "doc": "&quot;setMaxPerPage&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager", "fromLink": "Doctrine_Pager.html", "link": "Doctrine_Pager.html#method_getResultsInPage", "name": "Doctrine_Pager::getResultsInPage", "doc": "&quot;getResultsInPage&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager", "fromLink": "Doctrine_Pager.html", "link": "Doctrine_Pager.html#method_getQuery", "name": "Doctrine_Pager::getQuery", "doc": "&quot;getQuery&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager", "fromLink": "Doctrine_Pager.html", "link": "Doctrine_Pager.html#method__setQuery", "name": "Doctrine_Pager::_setQuery", "doc": "&quot;_setQuery&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager", "fromLink": "Doctrine_Pager.html", "link": "Doctrine_Pager.html#method_getCountQuery", "name": "Doctrine_Pager::getCountQuery", "doc": "&quot;getCountQuery&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager", "fromLink": "Doctrine_Pager.html", "link": "Doctrine_Pager.html#method_setCountQuery", "name": "Doctrine_Pager::setCountQuery", "doc": "&quot;setCountQuery&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager", "fromLink": "Doctrine_Pager.html", "link": "Doctrine_Pager.html#method_getCountQueryParams", "name": "Doctrine_Pager::getCountQueryParams", "doc": "&quot;getCountQueryParams&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager", "fromLink": "Doctrine_Pager.html", "link": "Doctrine_Pager.html#method_setCountQueryParams", "name": "Doctrine_Pager::setCountQueryParams", "doc": "&quot;setCountQueryParams&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager", "fromLink": "Doctrine_Pager.html", "link": "Doctrine_Pager.html#method_execute", "name": "Doctrine_Pager::execute", "doc": "&quot;execute&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Pager_Exception.html", "name": "Doctrine_Pager_Exception", "doc": "&quot;Doctrine_Pager_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Pager_Layout.html", "name": "Doctrine_Pager_Layout", "doc": "&quot;Doctrine_Pager_Layout&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Pager_Layout", "fromLink": "Doctrine_Pager_Layout.html", "link": "Doctrine_Pager_Layout.html#method___construct", "name": "Doctrine_Pager_Layout::__construct", "doc": "&quot;__construct&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Layout", "fromLink": "Doctrine_Pager_Layout.html", "link": "Doctrine_Pager_Layout.html#method_getPager", "name": "Doctrine_Pager_Layout::getPager", "doc": "&quot;getPager&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Layout", "fromLink": "Doctrine_Pager_Layout.html", "link": "Doctrine_Pager_Layout.html#method__setPager", "name": "Doctrine_Pager_Layout::_setPager", "doc": "&quot;_setPager&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Layout", "fromLink": "Doctrine_Pager_Layout.html", "link": "Doctrine_Pager_Layout.html#method_execute", "name": "Doctrine_Pager_Layout::execute", "doc": "&quot;execute&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Layout", "fromLink": "Doctrine_Pager_Layout.html", "link": "Doctrine_Pager_Layout.html#method_getPagerRange", "name": "Doctrine_Pager_Layout::getPagerRange", "doc": "&quot;getPagerRange&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Layout", "fromLink": "Doctrine_Pager_Layout.html", "link": "Doctrine_Pager_Layout.html#method__setPagerRange", "name": "Doctrine_Pager_Layout::_setPagerRange", "doc": "&quot;_setPagerRange&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Layout", "fromLink": "Doctrine_Pager_Layout.html", "link": "Doctrine_Pager_Layout.html#method_getUrlMask", "name": "Doctrine_Pager_Layout::getUrlMask", "doc": "&quot;getUrlMask&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Layout", "fromLink": "Doctrine_Pager_Layout.html", "link": "Doctrine_Pager_Layout.html#method__setUrlMask", "name": "Doctrine_Pager_Layout::_setUrlMask", "doc": "&quot;_setUrlMask&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Layout", "fromLink": "Doctrine_Pager_Layout.html", "link": "Doctrine_Pager_Layout.html#method_getTemplate", "name": "Doctrine_Pager_Layout::getTemplate", "doc": "&quot;getTemplate&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Layout", "fromLink": "Doctrine_Pager_Layout.html", "link": "Doctrine_Pager_Layout.html#method_setTemplate", "name": "Doctrine_Pager_Layout::setTemplate", "doc": "&quot;setTemplate&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Layout", "fromLink": "Doctrine_Pager_Layout.html", "link": "Doctrine_Pager_Layout.html#method_getSelectedTemplate", "name": "Doctrine_Pager_Layout::getSelectedTemplate", "doc": "&quot;getSelectedTemplate&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Layout", "fromLink": "Doctrine_Pager_Layout.html", "link": "Doctrine_Pager_Layout.html#method_setSelectedTemplate", "name": "Doctrine_Pager_Layout::setSelectedTemplate", "doc": "&quot;setSelectedTemplate&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Layout", "fromLink": "Doctrine_Pager_Layout.html", "link": "Doctrine_Pager_Layout.html#method_getSeparatorTemplate", "name": "Doctrine_Pager_Layout::getSeparatorTemplate", "doc": "&quot;getSeparatorTemplate&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Layout", "fromLink": "Doctrine_Pager_Layout.html", "link": "Doctrine_Pager_Layout.html#method_setSeparatorTemplate", "name": "Doctrine_Pager_Layout::setSeparatorTemplate", "doc": "&quot;setSeparatorTemplate&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Layout", "fromLink": "Doctrine_Pager_Layout.html", "link": "Doctrine_Pager_Layout.html#method_addMaskReplacement", "name": "Doctrine_Pager_Layout::addMaskReplacement", "doc": "&quot;addMaskReplacement&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Layout", "fromLink": "Doctrine_Pager_Layout.html", "link": "Doctrine_Pager_Layout.html#method_removeMaskReplacement", "name": "Doctrine_Pager_Layout::removeMaskReplacement", "doc": "&quot;removeMaskReplacement&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Layout", "fromLink": "Doctrine_Pager_Layout.html", "link": "Doctrine_Pager_Layout.html#method_cleanMaskReplacements", "name": "Doctrine_Pager_Layout::cleanMaskReplacements", "doc": "&quot;cleanMaskReplacements&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Layout", "fromLink": "Doctrine_Pager_Layout.html", "link": "Doctrine_Pager_Layout.html#method_display", "name": "Doctrine_Pager_Layout::display", "doc": "&quot;display&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Layout", "fromLink": "Doctrine_Pager_Layout.html", "link": "Doctrine_Pager_Layout.html#method_processPage", "name": "Doctrine_Pager_Layout::processPage", "doc": "&quot;processPage&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Layout", "fromLink": "Doctrine_Pager_Layout.html", "link": "Doctrine_Pager_Layout.html#method___toString", "name": "Doctrine_Pager_Layout::__toString", "doc": "&quot;Simply calls display, and returns the output.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Layout", "fromLink": "Doctrine_Pager_Layout.html", "link": "Doctrine_Pager_Layout.html#method__parseTemplate", "name": "Doctrine_Pager_Layout::_parseTemplate", "doc": "&quot;_parseTemplate&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Layout", "fromLink": "Doctrine_Pager_Layout.html", "link": "Doctrine_Pager_Layout.html#method__parseUrlTemplate", "name": "Doctrine_Pager_Layout::_parseUrlTemplate", "doc": "&quot;_parseUrlTemplate&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Layout", "fromLink": "Doctrine_Pager_Layout.html", "link": "Doctrine_Pager_Layout.html#method__parseReplacementsTemplate", "name": "Doctrine_Pager_Layout::_parseReplacementsTemplate", "doc": "&quot;_parseUrl&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Layout", "fromLink": "Doctrine_Pager_Layout.html", "link": "Doctrine_Pager_Layout.html#method__parseUrl", "name": "Doctrine_Pager_Layout::_parseUrl", "doc": "&quot;_parseUrl&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Layout", "fromLink": "Doctrine_Pager_Layout.html", "link": "Doctrine_Pager_Layout.html#method__parseMaskReplacements", "name": "Doctrine_Pager_Layout::_parseMaskReplacements", "doc": "&quot;_parseMaskReplacements&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Pager_Range.html", "name": "Doctrine_Pager_Range", "doc": "&quot;Doctrine_Pager_Range&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Pager_Range", "fromLink": "Doctrine_Pager_Range.html", "link": "Doctrine_Pager_Range.html#method___construct", "name": "Doctrine_Pager_Range::__construct", "doc": "&quot;__construct&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Range", "fromLink": "Doctrine_Pager_Range.html", "link": "Doctrine_Pager_Range.html#method_getPager", "name": "Doctrine_Pager_Range::getPager", "doc": "&quot;getPager&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Range", "fromLink": "Doctrine_Pager_Range.html", "link": "Doctrine_Pager_Range.html#method_setPager", "name": "Doctrine_Pager_Range::setPager", "doc": "&quot;setPager&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Range", "fromLink": "Doctrine_Pager_Range.html", "link": "Doctrine_Pager_Range.html#method_getOptions", "name": "Doctrine_Pager_Range::getOptions", "doc": "&quot;getOptions&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Range", "fromLink": "Doctrine_Pager_Range.html", "link": "Doctrine_Pager_Range.html#method_getOption", "name": "Doctrine_Pager_Range::getOption", "doc": "&quot;getOption&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Range", "fromLink": "Doctrine_Pager_Range.html", "link": "Doctrine_Pager_Range.html#method__setOptions", "name": "Doctrine_Pager_Range::_setOptions", "doc": "&quot;_setOptions&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Range", "fromLink": "Doctrine_Pager_Range.html", "link": "Doctrine_Pager_Range.html#method_isInRange", "name": "Doctrine_Pager_Range::isInRange", "doc": "&quot;isInRange&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Range", "fromLink": "Doctrine_Pager_Range.html", "link": "Doctrine_Pager_Range.html#method__initialize", "name": "Doctrine_Pager_Range::_initialize", "doc": "&quot;_initialize&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Range", "fromLink": "Doctrine_Pager_Range.html", "link": "Doctrine_Pager_Range.html#method_rangeAroundPage", "name": "Doctrine_Pager_Range::rangeAroundPage", "doc": "&quot;rangeAroundPage&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Pager_Range_Jumping.html", "name": "Doctrine_Pager_Range_Jumping", "doc": "&quot;Doctrine_Pager_Range_Jumping&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Pager_Range_Jumping", "fromLink": "Doctrine_Pager_Range_Jumping.html", "link": "Doctrine_Pager_Range_Jumping.html#method__initialize", "name": "Doctrine_Pager_Range_Jumping::_initialize", "doc": "&quot;_initialize&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Range_Jumping", "fromLink": "Doctrine_Pager_Range_Jumping.html", "link": "Doctrine_Pager_Range_Jumping.html#method_getChunkLength", "name": "Doctrine_Pager_Range_Jumping::getChunkLength", "doc": "&quot;getChunkLength&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Range_Jumping", "fromLink": "Doctrine_Pager_Range_Jumping.html", "link": "Doctrine_Pager_Range_Jumping.html#method__setChunkLength", "name": "Doctrine_Pager_Range_Jumping::_setChunkLength", "doc": "&quot;_setChunkLength&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Range_Jumping", "fromLink": "Doctrine_Pager_Range_Jumping.html", "link": "Doctrine_Pager_Range_Jumping.html#method_rangeAroundPage", "name": "Doctrine_Pager_Range_Jumping::rangeAroundPage", "doc": "&quot;rangeAroundPage&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Pager_Range_Sliding.html", "name": "Doctrine_Pager_Range_Sliding", "doc": "&quot;Doctrine_Pager_Range_Sliding&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Pager_Range_Sliding", "fromLink": "Doctrine_Pager_Range_Sliding.html", "link": "Doctrine_Pager_Range_Sliding.html#method__initialize", "name": "Doctrine_Pager_Range_Sliding::_initialize", "doc": "&quot;_initialize&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Range_Sliding", "fromLink": "Doctrine_Pager_Range_Sliding.html", "link": "Doctrine_Pager_Range_Sliding.html#method_getChunkLength", "name": "Doctrine_Pager_Range_Sliding::getChunkLength", "doc": "&quot;getChunkLength&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Range_Sliding", "fromLink": "Doctrine_Pager_Range_Sliding.html", "link": "Doctrine_Pager_Range_Sliding.html#method__setChunkLength", "name": "Doctrine_Pager_Range_Sliding::_setChunkLength", "doc": "&quot;_setChunkLength&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Pager_Range_Sliding", "fromLink": "Doctrine_Pager_Range_Sliding.html", "link": "Doctrine_Pager_Range_Sliding.html#method_rangeAroundPage", "name": "Doctrine_Pager_Range_Sliding::rangeAroundPage", "doc": "&quot;rangeAroundPage&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Parser.html", "name": "Doctrine_Parser", "doc": "&quot;Doctrine_Parser&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Parser", "fromLink": "Doctrine_Parser.html", "link": "Doctrine_Parser.html#method_loadData", "name": "Doctrine_Parser::loadData", "doc": "&quot;loadData&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Parser", "fromLink": "Doctrine_Parser.html", "link": "Doctrine_Parser.html#method_dumpData", "name": "Doctrine_Parser::dumpData", "doc": "&quot;dumpData&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Parser", "fromLink": "Doctrine_Parser.html", "link": "Doctrine_Parser.html#method_getParser", "name": "Doctrine_Parser::getParser", "doc": "&quot;getParser&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Parser", "fromLink": "Doctrine_Parser.html", "link": "Doctrine_Parser.html#method_load", "name": "Doctrine_Parser::load", "doc": "&quot;load&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Parser", "fromLink": "Doctrine_Parser.html", "link": "Doctrine_Parser.html#method_dump", "name": "Doctrine_Parser::dump", "doc": "&quot;dump&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Parser", "fromLink": "Doctrine_Parser.html", "link": "Doctrine_Parser.html#method_doLoad", "name": "Doctrine_Parser::doLoad", "doc": "&quot;doLoad&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Parser", "fromLink": "Doctrine_Parser.html", "link": "Doctrine_Parser.html#method_doDump", "name": "Doctrine_Parser::doDump", "doc": "&quot;doDump&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Parser_Exception.html", "name": "Doctrine_Parser_Exception", "doc": "&quot;Doctrine_Parser_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Parser_Json.html", "name": "Doctrine_Parser_Json", "doc": "&quot;Doctrine_Parser_Json&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Parser_Json", "fromLink": "Doctrine_Parser_Json.html", "link": "Doctrine_Parser_Json.html#method_dumpData", "name": "Doctrine_Parser_Json::dumpData", "doc": "&quot;dumpData&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Parser_Json", "fromLink": "Doctrine_Parser_Json.html", "link": "Doctrine_Parser_Json.html#method_loadData", "name": "Doctrine_Parser_Json::loadData", "doc": "&quot;loadData&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Parser_Serialize.html", "name": "Doctrine_Parser_Serialize", "doc": "&quot;Doctrine_Parser_Serialize&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Parser_Serialize", "fromLink": "Doctrine_Parser_Serialize.html", "link": "Doctrine_Parser_Serialize.html#method_dumpData", "name": "Doctrine_Parser_Serialize::dumpData", "doc": "&quot;dumpData&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Parser_Serialize", "fromLink": "Doctrine_Parser_Serialize.html", "link": "Doctrine_Parser_Serialize.html#method_loadData", "name": "Doctrine_Parser_Serialize::loadData", "doc": "&quot;loadData&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Parser_Xml.html", "name": "Doctrine_Parser_Xml", "doc": "&quot;Doctrine_Parser_Xml&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Parser_Xml", "fromLink": "Doctrine_Parser_Xml.html", "link": "Doctrine_Parser_Xml.html#method_dumpData", "name": "Doctrine_Parser_Xml::dumpData", "doc": "&quot;dumpData&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Parser_Xml", "fromLink": "Doctrine_Parser_Xml.html", "link": "Doctrine_Parser_Xml.html#method_arrayToXml", "name": "Doctrine_Parser_Xml::arrayToXml", "doc": "&quot;arrayToXml&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Parser_Xml", "fromLink": "Doctrine_Parser_Xml.html", "link": "Doctrine_Parser_Xml.html#method_loadData", "name": "Doctrine_Parser_Xml::loadData", "doc": "&quot;loadData&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Parser_Xml", "fromLink": "Doctrine_Parser_Xml.html", "link": "Doctrine_Parser_Xml.html#method_prepareData", "name": "Doctrine_Parser_Xml::prepareData", "doc": "&quot;prepareData&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Parser_Yml.html", "name": "Doctrine_Parser_Yml", "doc": "&quot;Doctrine_Parser_Yml&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Parser_Yml", "fromLink": "Doctrine_Parser_Yml.html", "link": "Doctrine_Parser_Yml.html#method_dumpData", "name": "Doctrine_Parser_Yml::dumpData", "doc": "&quot;dumpData&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Parser_Yml", "fromLink": "Doctrine_Parser_Yml.html", "link": "Doctrine_Parser_Yml.html#method_loadData", "name": "Doctrine_Parser_Yml::loadData", "doc": "&quot;loadData&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Query.html", "name": "Doctrine_Query", "doc": "&quot;Doctrine_Query\nA Doctrine_Query object represents a DQL query. It is used to query databases for\ndata in an object-oriented fashion. A DQL query understands relations and inheritance\nand is dbms independant.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_create", "name": "Doctrine_Query::create", "doc": "&quot;create\nreturns a new Doctrine_Query object&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_clear", "name": "Doctrine_Query::clear", "doc": "&quot;Clears all the sql parts.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_reset", "name": "Doctrine_Query::reset", "doc": "&quot;Resets the query to the state just after it has been instantiated.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_createSubquery", "name": "Doctrine_Query::createSubquery", "doc": "&quot;createSubquery\ncreates a subquery&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_addPendingJoinCondition", "name": "Doctrine_Query::addPendingJoinCondition", "doc": "&quot;addPendingJoinCondition&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_fetchArray", "name": "Doctrine_Query::fetchArray", "doc": "&quot;fetchArray\nConvenience method to execute using array fetching as hydration mode.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_fetchOne", "name": "Doctrine_Query::fetchOne", "doc": "&quot;fetchOne\nConvenience method to execute the query and return the first item\nof the collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_isSubquery", "name": "Doctrine_Query::isSubquery", "doc": "&quot;isSubquery\nif $bool parameter is set this method sets the value of\nDoctrine_Query::$isSubquery. If this value is set to true\nthe query object will not load the primary key fields of the selected\ncomponents.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_getSqlAggregateAlias", "name": "Doctrine_Query::getSqlAggregateAlias", "doc": "&quot;getSqlAggregateAlias&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_hasSqlAggregateAlias", "name": "Doctrine_Query::hasSqlAggregateAlias", "doc": "&quot;Check if a dql alias has a sql aggregate alias&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_adjustProcessedParam", "name": "Doctrine_Query::adjustProcessedParam", "doc": "&quot;Adjust the processed param index for \&quot;foo.bar IN ?\&quot; support&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_getDqlPart", "name": "Doctrine_Query::getDqlPart", "doc": "&quot;Retrieves a specific DQL query part.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_contains", "name": "Doctrine_Query::contains", "doc": "&quot;contains&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_processPendingFields", "name": "Doctrine_Query::processPendingFields", "doc": "&quot;processPendingFields\nthe fields in SELECT clause cannot be parsed until the components\nin FROM clause are parsed, hence this method is called everytime a\nspecific component is being parsed. For instance, the wildcard &#039;*&#039;\nis expanded in the list of columns.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_parseSelectField", "name": "Doctrine_Query::parseSelectField", "doc": "&quot;Parses a nested field\n&lt;code&gt;\n$q-&gt;parseSelectField(&#039;u.Phonenumber.value&#039;);\n&lt;\/code&gt;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_getExpressionOwner", "name": "Doctrine_Query::getExpressionOwner", "doc": "&quot;getExpressionOwner\nreturns the component alias for owner of given expression&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_parseSelect", "name": "Doctrine_Query::parseSelect", "doc": "&quot;parseSelect\nparses the query select part and\nadds selected fields to pendingFields array&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_parseClause", "name": "Doctrine_Query::parseClause", "doc": "&quot;parseClause\nparses given DQL clause&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_parseIdentifierReference", "name": "Doctrine_Query::parseIdentifierReference", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_parseFunctionExpression", "name": "Doctrine_Query::parseFunctionExpression", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_parseSubquery", "name": "Doctrine_Query::parseSubquery", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_processPendingSubqueries", "name": "Doctrine_Query::processPendingSubqueries", "doc": "&quot;processPendingSubqueries\nprocesses pending subqueries&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_processPendingAggregates", "name": "Doctrine_Query::processPendingAggregates", "doc": "&quot;processPendingAggregates\nprocesses pending aggregate values for given component alias&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method__buildSqlQueryBase", "name": "Doctrine_Query::_buildSqlQueryBase", "doc": "&quot;_buildSqlQueryBase\nreturns the base of the generated sql query\nOn mysql driver special strategy has to be used for DELETE statements\n(where is this special strategy??)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method__buildSqlFromPart", "name": "Doctrine_Query::_buildSqlFromPart", "doc": "&quot;_buildSqlFromPart\nbuilds the from part of the query and returns it&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method__processPendingJoinConditions", "name": "Doctrine_Query::_processPendingJoinConditions", "doc": "&quot;Processes the pending join conditions, used for dynamically add conditions\nto root component\/joined components without interfering in the main dql\nhandling.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_getSqlQuery", "name": "Doctrine_Query::getSqlQuery", "doc": "&quot;builds the sql query from the given parameters and applies things such as\ncolumn aggregation inheritance and limit subqueries if needed&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_buildSqlQuery", "name": "Doctrine_Query::buildSqlQuery", "doc": "&quot;Build the SQL query from the DQL&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_getLimitSubquery", "name": "Doctrine_Query::getLimitSubquery", "doc": "&quot;getLimitSubquery\nthis is method is used by the record limit algorithm&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_parseDqlQuery", "name": "Doctrine_Query::parseDqlQuery", "doc": "&quot;DQL PARSER\nparses a DQL query\nfirst splits the query in parts and then uses individual\nparsers for each part&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_load", "name": "Doctrine_Query::load", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_buildSimpleRelationSql", "name": "Doctrine_Query::buildSimpleRelationSql", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_buildIndexBy", "name": "Doctrine_Query::buildIndexBy", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_buildAssociativeRelationSql", "name": "Doctrine_Query::buildAssociativeRelationSql", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_loadRoot", "name": "Doctrine_Query::loadRoot", "doc": "&quot;loadRoot&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_buildInheritanceJoinSql", "name": "Doctrine_Query::buildInheritanceJoinSql", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_getCountSqlQuery", "name": "Doctrine_Query::getCountSqlQuery", "doc": "&quot;Get count sql query for this Doctrine_Query instance.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_count", "name": "Doctrine_Query::count", "doc": "&quot;Fetches the count of the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_query", "name": "Doctrine_Query::query", "doc": "&quot;Queries the database with DQL (Doctrine Query Language).&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_copy", "name": "Doctrine_Query::copy", "doc": "&quot;Copies a Doctrine_Query object.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method___clone", "name": "Doctrine_Query::__clone", "doc": "&quot;Magic method called after cloning process.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method__killReference", "name": "Doctrine_Query::_killReference", "doc": "&quot;Kill the reference for the passed class property.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query", "fromLink": "Doctrine_Query.html", "link": "Doctrine_Query.html#method_free", "name": "Doctrine_Query::free", "doc": "&quot;Frees the resources used by the query object. It especially breaks a\ncyclic reference between the query object and it&#039;s parsers. This enables\nPHP&#039;s current GC to reclaim the memory.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Query_Abstract.html", "name": "Doctrine_Query_Abstract", "doc": "&quot;Doctrine_Query_Abstract&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method___construct", "name": "Doctrine_Query_Abstract::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_setConnection", "name": "Doctrine_Query_Abstract::setConnection", "doc": "&quot;Set the connection this query object should use&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_setOption", "name": "Doctrine_Query_Abstract::setOption", "doc": "&quot;setOption&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_hasSqlTableAlias", "name": "Doctrine_Query_Abstract::hasSqlTableAlias", "doc": "&quot;hasSqlTableAlias\nwhether or not this object has given tableAlias&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_getTableAliasMap", "name": "Doctrine_Query_Abstract::getTableAliasMap", "doc": "&quot;getTableAliasMap\nreturns all table aliases&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_getDql", "name": "Doctrine_Query_Abstract::getDql", "doc": "&quot;getDql\nreturns the DQL query that is represented by this query object.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_getSqlQueryPart", "name": "Doctrine_Query_Abstract::getSqlQueryPart", "doc": "&quot;getSqlQueryPart\ngets an SQL query part from the SQL query part array&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_setSqlQueryPart", "name": "Doctrine_Query_Abstract::setSqlQueryPart", "doc": "&quot;setSqlQueryPart\nsets an SQL query part in the SQL query part array&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_addSqlQueryPart", "name": "Doctrine_Query_Abstract::addSqlQueryPart", "doc": "&quot;addSqlQueryPart\nadds an SQL query part to the SQL query part array&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_removeSqlQueryPart", "name": "Doctrine_Query_Abstract::removeSqlQueryPart", "doc": "&quot;removeSqlQueryPart\nremoves a query part from the query part array&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_removeDqlQueryPart", "name": "Doctrine_Query_Abstract::removeDqlQueryPart", "doc": "&quot;removeDqlQueryPart\nremoves a dql query part from the dql query part array&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_getParams", "name": "Doctrine_Query_Abstract::getParams", "doc": "&quot;Get raw array of parameters for query and all parts.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_getFlattenedParams", "name": "Doctrine_Query_Abstract::getFlattenedParams", "doc": "&quot;Get flattened array of parameters for query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_getInternalParams", "name": "Doctrine_Query_Abstract::getInternalParams", "doc": "&quot;getInternalParams&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_setParams", "name": "Doctrine_Query_Abstract::setParams", "doc": "&quot;setParams&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_getCountQueryParams", "name": "Doctrine_Query_Abstract::getCountQueryParams", "doc": "&quot;getCountQueryParams\nRetrieves the parameters for count query&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_fixArrayParameterValues", "name": "Doctrine_Query_Abstract::fixArrayParameterValues", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_setView", "name": "Doctrine_Query_Abstract::setView", "doc": "&quot;setView\nsets a database view this query object uses\nthis method should only be called internally by doctrine&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_getView", "name": "Doctrine_Query_Abstract::getView", "doc": "&quot;getView\nreturns the view associated with this query object (if any)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_isLimitSubqueryUsed", "name": "Doctrine_Query_Abstract::isLimitSubqueryUsed", "doc": "&quot;limitSubqueryUsed&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_getInheritanceCondition", "name": "Doctrine_Query_Abstract::getInheritanceCondition", "doc": "&quot;Returns the inheritance condition for the passed componentAlias\nIf no component alias is specified it defaults to the root component&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_getSqlTableAlias", "name": "Doctrine_Query_Abstract::getSqlTableAlias", "doc": "&quot;getSqlTableAlias\nsome database such as Oracle need the identifier lengths to be &amp;lt; ~30 chars\nhence Doctrine creates as short identifier aliases as possible&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_generateNewSqlTableAlias", "name": "Doctrine_Query_Abstract::generateNewSqlTableAlias", "doc": "&quot;generateNewSqlTableAlias\ngenerates a new alias from given table alias&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_getSqlTableAliasSeed", "name": "Doctrine_Query_Abstract::getSqlTableAliasSeed", "doc": "&quot;getSqlTableAliasSeed\nreturns the alias seed for given table alias&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_hasAliasDeclaration", "name": "Doctrine_Query_Abstract::hasAliasDeclaration", "doc": "&quot;hasAliasDeclaration\nwhether or not this object has a declaration for given component alias&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_getQueryComponent", "name": "Doctrine_Query_Abstract::getQueryComponent", "doc": "&quot;getQueryComponent\nget the declaration for given component alias&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_copySubqueryInfo", "name": "Doctrine_Query_Abstract::copySubqueryInfo", "doc": "&quot;copySubqueryInfo\ncopy aliases from another Hydrate object&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_getRootAlias", "name": "Doctrine_Query_Abstract::getRootAlias", "doc": "&quot;getRootAlias\nreturns the alias of the root component&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_getRootDeclaration", "name": "Doctrine_Query_Abstract::getRootDeclaration", "doc": "&quot;getRootDeclaration\nreturns the root declaration&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_getRoot", "name": "Doctrine_Query_Abstract::getRoot", "doc": "&quot;getRoot\nreturns the root component for this object&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_generateSqlTableAlias", "name": "Doctrine_Query_Abstract::generateSqlTableAlias", "doc": "&quot;generateSqlTableAlias\ngenerates a table alias from given table name and associates\nit with given component alias&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_getComponentAlias", "name": "Doctrine_Query_Abstract::getComponentAlias", "doc": "&quot;getComponentAlias\nget component alias associated with given table alias&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_calculateQueryCacheHash", "name": "Doctrine_Query_Abstract::calculateQueryCacheHash", "doc": "&quot;calculateQueryCacheHash\ncalculate hash key for query cache&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_calculateResultCacheHash", "name": "Doctrine_Query_Abstract::calculateResultCacheHash", "doc": "&quot;calculateResultCacheHash\ncalculate hash key for result cache&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_getResultCacheHash", "name": "Doctrine_Query_Abstract::getResultCacheHash", "doc": "&quot;Get the result cache hash\/key. Returns key set with useResultCache()\nor generates a unique key from the query automatically.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method__execute", "name": "Doctrine_Query_Abstract::_execute", "doc": "&quot;_execute&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_execute", "name": "Doctrine_Query_Abstract::execute", "doc": "&quot;execute\nexecutes the query and populates the data set&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_free", "name": "Doctrine_Query_Abstract::free", "doc": "&quot;Blank template method free(). Override to be used to free query object memory&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method__getDqlCallback", "name": "Doctrine_Query_Abstract::_getDqlCallback", "doc": "&quot;Get the dql call back for this query&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method__preQuery", "name": "Doctrine_Query_Abstract::_preQuery", "doc": "&quot;Pre query method which invokes the pre*Query() methods on the model instance or any attached\nrecord listeners&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method__getDqlCallbackComponents", "name": "Doctrine_Query_Abstract::_getDqlCallbackComponents", "doc": "&quot;Returns an array of components to execute the query callbacks for&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_preQuery", "name": "Doctrine_Query_Abstract::preQuery", "doc": "&quot;Blank hook methods which can be implemented in Doctrine_Query child classes&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method__constructQueryFromCache", "name": "Doctrine_Query_Abstract::_constructQueryFromCache", "doc": "&quot;Constructs the query from the cached form.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_getCachedForm", "name": "Doctrine_Query_Abstract::getCachedForm", "doc": "&quot;getCachedForm\nreturns the cached form of this query for given resultSet&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_addSelect", "name": "Doctrine_Query_Abstract::addSelect", "doc": "&quot;Adds fields or aliased functions.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_addSqlTableAlias", "name": "Doctrine_Query_Abstract::addSqlTableAlias", "doc": "&quot;addSqlTableAlias\nadds an SQL table alias and associates it a component alias&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_addFrom", "name": "Doctrine_Query_Abstract::addFrom", "doc": "&quot;addFrom\nadds fields to the FROM part of the query&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_addWhere", "name": "Doctrine_Query_Abstract::addWhere", "doc": "&quot;Alias for see andWhere().&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_andWhere", "name": "Doctrine_Query_Abstract::andWhere", "doc": "&quot;Adds conditions to the WHERE part of the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_orWhere", "name": "Doctrine_Query_Abstract::orWhere", "doc": "&quot;Adds conditions to the WHERE part of the query\n&lt;code&gt;\n$q-&gt;orWhere(&#039;u.role = ?&#039;, &#039;admin&#039;);\n&lt;\/code&gt;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_whereIn", "name": "Doctrine_Query_Abstract::whereIn", "doc": "&quot;Adds IN condition to the query WHERE part. Alias to see andWhereIn().&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_andWhereIn", "name": "Doctrine_Query_Abstract::andWhereIn", "doc": "&quot;Adds IN condition to the query WHERE part\n&lt;code&gt;\n$q-&gt;whereIn(&#039;u.id&#039;, array(10, 23, 44));\n&lt;\/code&gt;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_orWhereIn", "name": "Doctrine_Query_Abstract::orWhereIn", "doc": "&quot;Adds IN condition to the query WHERE part, appending it with an OR operator.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method__processWhereIn", "name": "Doctrine_Query_Abstract::_processWhereIn", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_whereNotIn", "name": "Doctrine_Query_Abstract::whereNotIn", "doc": "&quot;Adds NOT IN condition to the query WHERE part.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_andWhereNotIn", "name": "Doctrine_Query_Abstract::andWhereNotIn", "doc": "&quot;Adds NOT IN condition to the query WHERE part\nAlias for see whereNotIn().&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_orWhereNotIn", "name": "Doctrine_Query_Abstract::orWhereNotIn", "doc": "&quot;Adds NOT IN condition to the query WHERE part&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_addGroupBy", "name": "Doctrine_Query_Abstract::addGroupBy", "doc": "&quot;Adds fields to the GROUP BY part of the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_addHaving", "name": "Doctrine_Query_Abstract::addHaving", "doc": "&quot;Adds conditions to the HAVING part of the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_addOrderBy", "name": "Doctrine_Query_Abstract::addOrderBy", "doc": "&quot;addOrderBy\nadds fields to the ORDER BY part of the query&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_select", "name": "Doctrine_Query_Abstract::select", "doc": "&quot;select\nsets the SELECT part of the query&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_distinct", "name": "Doctrine_Query_Abstract::distinct", "doc": "&quot;distinct\nMakes the query SELECT DISTINCT.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_forUpdate", "name": "Doctrine_Query_Abstract::forUpdate", "doc": "&quot;forUpdate\nMakes the query SELECT FOR UPDATE.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_delete", "name": "Doctrine_Query_Abstract::delete", "doc": "&quot;delete\nsets the query type to DELETE&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_update", "name": "Doctrine_Query_Abstract::update", "doc": "&quot;update\nsets the UPDATE part of the query&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_set", "name": "Doctrine_Query_Abstract::set", "doc": "&quot;set\nsets the SET part of the query&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_from", "name": "Doctrine_Query_Abstract::from", "doc": "&quot;from\nsets the FROM part of the query\n&lt;code&gt;\n$q-&gt;from(&#039;User u&#039;);\n&lt;\/code&gt;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_innerJoin", "name": "Doctrine_Query_Abstract::innerJoin", "doc": "&quot;innerJoin\nappends an INNER JOIN to the FROM part of the query&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_leftJoin", "name": "Doctrine_Query_Abstract::leftJoin", "doc": "&quot;leftJoin\nappends a LEFT JOIN to the FROM part of the query&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_groupBy", "name": "Doctrine_Query_Abstract::groupBy", "doc": "&quot;groupBy\nsets the GROUP BY part of the query&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_where", "name": "Doctrine_Query_Abstract::where", "doc": "&quot;where\nsets the WHERE part of the query&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_having", "name": "Doctrine_Query_Abstract::having", "doc": "&quot;having\nsets the HAVING part of the query&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_orderBy", "name": "Doctrine_Query_Abstract::orderBy", "doc": "&quot;Sets the ORDER BY part of the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_limit", "name": "Doctrine_Query_Abstract::limit", "doc": "&quot;limit\nsets the Query query limit&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_offset", "name": "Doctrine_Query_Abstract::offset", "doc": "&quot;offset\nsets the Query query offset&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_clear", "name": "Doctrine_Query_Abstract::clear", "doc": "&quot;Resets all the sql parts.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_setHydrationMode", "name": "Doctrine_Query_Abstract::setHydrationMode", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_getQueryComponents", "name": "Doctrine_Query_Abstract::getQueryComponents", "doc": "&quot;Gets the components of this query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_getSqlParts", "name": "Doctrine_Query_Abstract::getSqlParts", "doc": "&quot;Return the SQL parts.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_getType", "name": "Doctrine_Query_Abstract::getType", "doc": "&quot;getType&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_useResultCache", "name": "Doctrine_Query_Abstract::useResultCache", "doc": "&quot;useResultCache&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_setResultCacheHash", "name": "Doctrine_Query_Abstract::setResultCacheHash", "doc": "&quot;Set the result cache hash to be used for storing the results in the cache driver&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_clearResultCache", "name": "Doctrine_Query_Abstract::clearResultCache", "doc": "&quot;Clear the result cache entry for this query&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_useQueryCache", "name": "Doctrine_Query_Abstract::useQueryCache", "doc": "&quot;useQueryCache&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_expireResultCache", "name": "Doctrine_Query_Abstract::expireResultCache", "doc": "&quot;expireCache&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_expireQueryCache", "name": "Doctrine_Query_Abstract::expireQueryCache", "doc": "&quot;expireQueryCache&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_setResultCacheLifeSpan", "name": "Doctrine_Query_Abstract::setResultCacheLifeSpan", "doc": "&quot;setResultCacheLifeSpan&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_getResultCacheLifeSpan", "name": "Doctrine_Query_Abstract::getResultCacheLifeSpan", "doc": "&quot;Gets the life span of the result cache in seconds.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_setQueryCacheLifeSpan", "name": "Doctrine_Query_Abstract::setQueryCacheLifeSpan", "doc": "&quot;setQueryCacheLifeSpan&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_getQueryCacheLifeSpan", "name": "Doctrine_Query_Abstract::getQueryCacheLifeSpan", "doc": "&quot;Gets the life span of the query cache the Query object is using.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_getResultCacheDriver", "name": "Doctrine_Query_Abstract::getResultCacheDriver", "doc": "&quot;getResultCacheDriver\nreturns the cache driver used for caching result sets&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_getQueryCacheDriver", "name": "Doctrine_Query_Abstract::getQueryCacheDriver", "doc": "&quot;getQueryCacheDriver\nreturns the cache driver used for caching queries&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_getConnection", "name": "Doctrine_Query_Abstract::getConnection", "doc": "&quot;getConnection&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method__hasDqlQueryPart", "name": "Doctrine_Query_Abstract::_hasDqlQueryPart", "doc": "&quot;Checks if there&#039;s at least one DQL part defined to the internal parts collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method__addDqlQueryPart", "name": "Doctrine_Query_Abstract::_addDqlQueryPart", "doc": "&quot;Adds a DQL part to the internal parts collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method__processDqlQueryPart", "name": "Doctrine_Query_Abstract::_processDqlQueryPart", "doc": "&quot;_processDqlQueryPart\nparses given query part&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method__getParser", "name": "Doctrine_Query_Abstract::_getParser", "doc": "&quot;_getParser\nparser lazy-loader&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_getSqlQuery", "name": "Doctrine_Query_Abstract::getSqlQuery", "doc": "&quot;Gets the SQL query that corresponds to this query object.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_parseDqlQuery", "name": "Doctrine_Query_Abstract::parseDqlQuery", "doc": "&quot;parseDqlQuery\nparses a dql query&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method___toString", "name": "Doctrine_Query_Abstract::__toString", "doc": "&quot;toString magic call\nthis method is automatically called when Doctrine_Query object is trying to be used as a string\nSo, it it converted into its DQL correspondant&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_getDisableLimitSubquery", "name": "Doctrine_Query_Abstract::getDisableLimitSubquery", "doc": "&quot;Gets the disableLimitSubquery property.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Abstract", "fromLink": "Doctrine_Query_Abstract.html", "link": "Doctrine_Query_Abstract.html#method_setDisableLimitSubquery", "name": "Doctrine_Query_Abstract::setDisableLimitSubquery", "doc": "&quot;Allows you to set the disableLimitSubquery property -- setting this to true will\nrestrict the query object from using the limit sub query method of tranversing many relationships.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Query_Check.html", "name": "Doctrine_Query_Check", "doc": "&quot;Doctrine_Query_Check&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Query_Check", "fromLink": "Doctrine_Query_Check.html", "link": "Doctrine_Query_Check.html#method___construct", "name": "Doctrine_Query_Check::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Check", "fromLink": "Doctrine_Query_Check.html", "link": "Doctrine_Query_Check.html#method_getTable", "name": "Doctrine_Query_Check::getTable", "doc": "&quot;getTable\nreturns the table object associated with this object&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Check", "fromLink": "Doctrine_Query_Check.html", "link": "Doctrine_Query_Check.html#method_parse", "name": "Doctrine_Query_Check::parse", "doc": "&quot;parse&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Check", "fromLink": "Doctrine_Query_Check.html", "link": "Doctrine_Query_Check.html#method_parseClause", "name": "Doctrine_Query_Check::parseClause", "doc": "&quot;parseClause&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Check", "fromLink": "Doctrine_Query_Check.html", "link": "Doctrine_Query_Check.html#method_parseSingle", "name": "Doctrine_Query_Check::parseSingle", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Check", "fromLink": "Doctrine_Query_Check.html", "link": "Doctrine_Query_Check.html#method_parseFunction", "name": "Doctrine_Query_Check::parseFunction", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Check", "fromLink": "Doctrine_Query_Check.html", "link": "Doctrine_Query_Check.html#method_getSql", "name": "Doctrine_Query_Check::getSql", "doc": "&quot;getSql&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Query_Condition.html", "name": "Doctrine_Query_Condition", "doc": "&quot;Doctrine_Query_Condition&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Query_Condition", "fromLink": "Doctrine_Query_Condition.html", "link": "Doctrine_Query_Condition.html#method_parse", "name": "Doctrine_Query_Condition::parse", "doc": "&quot;DQL CONDITION PARSER\nparses the join condition\/where\/having part of the query string&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Condition", "fromLink": "Doctrine_Query_Condition.html", "link": "Doctrine_Query_Condition.html#method_parseLiteralValue", "name": "Doctrine_Query_Condition::parseLiteralValue", "doc": "&quot;parses a literal value and returns the parsed value&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Query_Exception.html", "name": "Doctrine_Query_Exception", "doc": "&quot;Doctrine_Query_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Query_Filter.html", "name": "Doctrine_Query_Filter", "doc": "&quot;Doctrine_Query_Filter&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Query_Filter", "fromLink": "Doctrine_Query_Filter.html", "link": "Doctrine_Query_Filter.html#method_preQuery", "name": "Doctrine_Query_Filter::preQuery", "doc": "&quot;preQuery&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Filter", "fromLink": "Doctrine_Query_Filter.html", "link": "Doctrine_Query_Filter.html#method_postQuery", "name": "Doctrine_Query_Filter::postQuery", "doc": "&quot;postQuery&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Query_Filter_Chain.html", "name": "Doctrine_Query_Filter_Chain", "doc": "&quot;Doctrine_Query_Filter_Chain&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Query_Filter_Chain", "fromLink": "Doctrine_Query_Filter_Chain.html", "link": "Doctrine_Query_Filter_Chain.html#method_add", "name": "Doctrine_Query_Filter_Chain::add", "doc": "&quot;add&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Filter_Chain", "fromLink": "Doctrine_Query_Filter_Chain.html", "link": "Doctrine_Query_Filter_Chain.html#method_get", "name": "Doctrine_Query_Filter_Chain::get", "doc": "&quot;returns a Doctrine_Query_Filter on success\nand null on failure&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Filter_Chain", "fromLink": "Doctrine_Query_Filter_Chain.html", "link": "Doctrine_Query_Filter_Chain.html#method_set", "name": "Doctrine_Query_Filter_Chain::set", "doc": "&quot;set&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Filter_Chain", "fromLink": "Doctrine_Query_Filter_Chain.html", "link": "Doctrine_Query_Filter_Chain.html#method_preQuery", "name": "Doctrine_Query_Filter_Chain::preQuery", "doc": "&quot;preQuery&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Filter_Chain", "fromLink": "Doctrine_Query_Filter_Chain.html", "link": "Doctrine_Query_Filter_Chain.html#method_postQuery", "name": "Doctrine_Query_Filter_Chain::postQuery", "doc": "&quot;postQuery&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Query_Filter_Interface.html", "name": "Doctrine_Query_Filter_Interface", "doc": "&quot;Doctrine_Query_Filter_Interface&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Query_Filter_Interface", "fromLink": "Doctrine_Query_Filter_Interface.html", "link": "Doctrine_Query_Filter_Interface.html#method_preQuery", "name": "Doctrine_Query_Filter_Interface::preQuery", "doc": "&quot;preQuery&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Filter_Interface", "fromLink": "Doctrine_Query_Filter_Interface.html", "link": "Doctrine_Query_Filter_Interface.html#method_postQuery", "name": "Doctrine_Query_Filter_Interface::postQuery", "doc": "&quot;postQuery&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Query_Forupdate.html", "name": "Doctrine_Query_Forupdate", "doc": "&quot;Doctrine_Query_Forupdate&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Query_Forupdate", "fromLink": "Doctrine_Query_Forupdate.html", "link": "Doctrine_Query_Forupdate.html#method_parse", "name": "Doctrine_Query_Forupdate::parse", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Query_From.html", "name": "Doctrine_Query_From", "doc": "&quot;Doctrine_Query_From&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Query_From", "fromLink": "Doctrine_Query_From.html", "link": "Doctrine_Query_From.html#method_parse", "name": "Doctrine_Query_From::parse", "doc": "&quot;DQL FROM PARSER\nparses the FROM part of the query string&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Query_Groupby.html", "name": "Doctrine_Query_Groupby", "doc": "&quot;Doctrine_Query_Groupby&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Query_Groupby", "fromLink": "Doctrine_Query_Groupby.html", "link": "Doctrine_Query_Groupby.html#method_parse", "name": "Doctrine_Query_Groupby::parse", "doc": "&quot;DQL GROUP BY PARSER\nparses the group by part of the query string&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Query_Having.html", "name": "Doctrine_Query_Having", "doc": "&quot;Doctrine_Query_Having&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Query_Having", "fromLink": "Doctrine_Query_Having.html", "link": "Doctrine_Query_Having.html#method_load", "name": "Doctrine_Query_Having::load", "doc": "&quot;load\nreturns the parsed query part&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Query_JoinCondition.html", "name": "Doctrine_Query_JoinCondition", "doc": "&quot;Doctrine_Query_JoinCondition&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Query_JoinCondition", "fromLink": "Doctrine_Query_JoinCondition.html", "link": "Doctrine_Query_JoinCondition.html#method_load", "name": "Doctrine_Query_JoinCondition::load", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_JoinCondition", "fromLink": "Doctrine_Query_JoinCondition.html", "link": "Doctrine_Query_JoinCondition.html#method__processPossibleAggExpression", "name": "Doctrine_Query_JoinCondition::_processPossibleAggExpression", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Query_Limit.html", "name": "Doctrine_Query_Limit", "doc": "&quot;Doctrine_Query_Limit&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Query_Limit", "fromLink": "Doctrine_Query_Limit.html", "link": "Doctrine_Query_Limit.html#method_parse", "name": "Doctrine_Query_Limit::parse", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Query_Offset.html", "name": "Doctrine_Query_Offset", "doc": "&quot;Doctrine_Query_Offset&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Query_Offset", "fromLink": "Doctrine_Query_Offset.html", "link": "Doctrine_Query_Offset.html#method_parse", "name": "Doctrine_Query_Offset::parse", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Query_Orderby.html", "name": "Doctrine_Query_Orderby", "doc": "&quot;Doctrine_Query_Orderby&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Query_Orderby", "fromLink": "Doctrine_Query_Orderby.html", "link": "Doctrine_Query_Orderby.html#method_parse", "name": "Doctrine_Query_Orderby::parse", "doc": "&quot;DQL ORDER BY PARSER\nparses the order by part of the query string&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Query_Parser.html", "name": "Doctrine_Query_Parser", "doc": "&quot;Doctrine_Query_Parser&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Query_Part.html", "name": "Doctrine_Query_Part", "doc": "&quot;Doctrine_Query_Part&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Query_Part", "fromLink": "Doctrine_Query_Part.html", "link": "Doctrine_Query_Part.html#method___construct", "name": "Doctrine_Query_Part::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Part", "fromLink": "Doctrine_Query_Part.html", "link": "Doctrine_Query_Part.html#method_getQuery", "name": "Doctrine_Query_Part::getQuery", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Query_Registry.html", "name": "Doctrine_Query_Registry", "doc": "&quot;Doctrine_Query_Registry&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Query_Registry", "fromLink": "Doctrine_Query_Registry.html", "link": "Doctrine_Query_Registry.html#method_add", "name": "Doctrine_Query_Registry::add", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Registry", "fromLink": "Doctrine_Query_Registry.html", "link": "Doctrine_Query_Registry.html#method_get", "name": "Doctrine_Query_Registry::get", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Registry", "fromLink": "Doctrine_Query_Registry.html", "link": "Doctrine_Query_Registry.html#method_has", "name": "Doctrine_Query_Registry::has", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Query_Registry_Exception.html", "name": "Doctrine_Query_Registry_Exception", "doc": "&quot;Doctrine_Query_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Query_Select.html", "name": "Doctrine_Query_Select", "doc": "&quot;Doctrine_Query_Select&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Query_Select", "fromLink": "Doctrine_Query_Select.html", "link": "Doctrine_Query_Select.html#method_parse", "name": "Doctrine_Query_Select::parse", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Query_Set.html", "name": "Doctrine_Query_Set", "doc": "&quot;Doctrine_Query&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Query_Set", "fromLink": "Doctrine_Query_Set.html", "link": "Doctrine_Query_Set.html#method_parse", "name": "Doctrine_Query_Set::parse", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Set", "fromLink": "Doctrine_Query_Set.html", "link": "Doctrine_Query_Set.html#method__processPossibleAggExpression", "name": "Doctrine_Query_Set::_processPossibleAggExpression", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Query_Tokenizer.html", "name": "Doctrine_Query_Tokenizer", "doc": "&quot;Doctrine_Query_Tokenizer&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Query_Tokenizer", "fromLink": "Doctrine_Query_Tokenizer.html", "link": "Doctrine_Query_Tokenizer.html#method_tokenizeQuery", "name": "Doctrine_Query_Tokenizer::tokenizeQuery", "doc": "&quot;Splits the given dql query into an array where keys represent different\nquery part names and values are arrays splitted using sqlExplode method&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Tokenizer", "fromLink": "Doctrine_Query_Tokenizer.html", "link": "Doctrine_Query_Tokenizer.html#method_bracketTrim", "name": "Doctrine_Query_Tokenizer::bracketTrim", "doc": "&quot;Trims brackets from string&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Tokenizer", "fromLink": "Doctrine_Query_Tokenizer.html", "link": "Doctrine_Query_Tokenizer.html#method_bracketExplode", "name": "Doctrine_Query_Tokenizer::bracketExplode", "doc": "&quot;Explodes a sql expression respecting bracket placement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Tokenizer", "fromLink": "Doctrine_Query_Tokenizer.html", "link": "Doctrine_Query_Tokenizer.html#method_quoteExplode", "name": "Doctrine_Query_Tokenizer::quoteExplode", "doc": "&quot;Explode quotes from string&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Tokenizer", "fromLink": "Doctrine_Query_Tokenizer.html", "link": "Doctrine_Query_Tokenizer.html#method_sqlExplode", "name": "Doctrine_Query_Tokenizer::sqlExplode", "doc": "&quot;Explodes a string into array using custom brackets and\nquote delimeters&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Tokenizer", "fromLink": "Doctrine_Query_Tokenizer.html", "link": "Doctrine_Query_Tokenizer.html#method_clauseExplode", "name": "Doctrine_Query_Tokenizer::clauseExplode", "doc": "&quot;Explodes a string into array using custom brackets and quote delimeters\nEach array element is a array of length 2 where the first entry contains\nthe term, and the second entry contains the corresponding delimiter&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Tokenizer", "fromLink": "Doctrine_Query_Tokenizer.html", "link": "Doctrine_Query_Tokenizer.html#method_quotedStringExplode", "name": "Doctrine_Query_Tokenizer::quotedStringExplode", "doc": "&quot;Explodes the given string by &lt;quoted words&gt;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Query_Tokenizer_Exception.html", "name": "Doctrine_Query_Tokenizer_Exception", "doc": "&quot;Doctrine_Query_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Query_Where.html", "name": "Doctrine_Query_Where", "doc": "&quot;Doctrine_Query_Where&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Query_Where", "fromLink": "Doctrine_Query_Where.html", "link": "Doctrine_Query_Where.html#method_load", "name": "Doctrine_Query_Where::load", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Where", "fromLink": "Doctrine_Query_Where.html", "link": "Doctrine_Query_Where.html#method__buildSql", "name": "Doctrine_Query_Where::_buildSql", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Where", "fromLink": "Doctrine_Query_Where.html", "link": "Doctrine_Query_Where.html#method__buildWhereInArraySqlPart", "name": "Doctrine_Query_Where::_buildWhereInArraySqlPart", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Query_Where", "fromLink": "Doctrine_Query_Where.html", "link": "Doctrine_Query_Where.html#method_parseExists", "name": "Doctrine_Query_Where::parseExists", "doc": "&quot;parses an EXISTS expression&quot;"},
            
            {"type": "Class",  "link": "Doctrine_RawSql.html", "name": "Doctrine_RawSql", "doc": "&quot;Doctrine_RawSql&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_RawSql", "fromLink": "Doctrine_RawSql.html", "link": "Doctrine_RawSql.html#method___construct", "name": "Doctrine_RawSql::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_RawSql", "fromLink": "Doctrine_RawSql.html", "link": "Doctrine_RawSql.html#method_clear", "name": "Doctrine_RawSql::clear", "doc": "&quot;Resets all the sql parts.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_RawSql", "fromLink": "Doctrine_RawSql.html", "link": "Doctrine_RawSql.html#method_parseDqlQueryPart", "name": "Doctrine_RawSql::parseDqlQueryPart", "doc": "&quot;parseDqlQueryPart\nparses given DQL query part. Overrides Doctrine_Query_Abstract::parseDqlQueryPart().&quot;"},
                    {"type": "Method", "fromName": "Doctrine_RawSql", "fromLink": "Doctrine_RawSql.html", "link": "Doctrine_RawSql.html#method__addDqlQueryPart", "name": "Doctrine_RawSql::_addDqlQueryPart", "doc": "&quot;Adds a DQL query part. Overrides Doctrine_Query_Abstract::_addDqlQueryPart().&quot;"},
                    {"type": "Method", "fromName": "Doctrine_RawSql", "fromLink": "Doctrine_RawSql.html", "link": "Doctrine_RawSql.html#method_parseDqlQuery", "name": "Doctrine_RawSql::parseDqlQuery", "doc": "&quot;parseDqlQuery\nparses an sql query and adds the parts to internal array.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_RawSql", "fromLink": "Doctrine_RawSql.html", "link": "Doctrine_RawSql.html#method_getSqlQuery", "name": "Doctrine_RawSql::getSqlQuery", "doc": "&quot;getSqlQuery\nbuilds the sql query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_RawSql", "fromLink": "Doctrine_RawSql.html", "link": "Doctrine_RawSql.html#method_getCountSqlQuery", "name": "Doctrine_RawSql::getCountSqlQuery", "doc": "&quot;getCountQuery\nbuilds the count query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_RawSql", "fromLink": "Doctrine_RawSql.html", "link": "Doctrine_RawSql.html#method_count", "name": "Doctrine_RawSql::count", "doc": "&quot;count\nfetches the count of the query&quot;"},
                    {"type": "Method", "fromName": "Doctrine_RawSql", "fromLink": "Doctrine_RawSql.html", "link": "Doctrine_RawSql.html#method_getFields", "name": "Doctrine_RawSql::getFields", "doc": "&quot;getFields\nreturns the fields associated with this parser&quot;"},
                    {"type": "Method", "fromName": "Doctrine_RawSql", "fromLink": "Doctrine_RawSql.html", "link": "Doctrine_RawSql.html#method_addComponent", "name": "Doctrine_RawSql::addComponent", "doc": "&quot;addComponent&quot;"},
                    {"type": "Method", "fromName": "Doctrine_RawSql", "fromLink": "Doctrine_RawSql.html", "link": "Doctrine_RawSql.html#method_calculateResultCacheHash", "name": "Doctrine_RawSql::calculateResultCacheHash", "doc": "&quot;calculateResultCacheHash\ncalculate hash key for result cache&quot;"},
            
            {"type": "Class",  "link": "Doctrine_RawSql_Exception.html", "name": "Doctrine_RawSql_Exception", "doc": "&quot;Doctrine_RawSql_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Record.html", "name": "Doctrine_Record", "doc": "&quot;Doctrine_Record\nAll record classes should inherit this super class&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method___construct", "name": "Doctrine_Record::__construct", "doc": "&quot;constructor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_serializeReferences", "name": "Doctrine_Record::serializeReferences", "doc": "&quot;Set whether or not to serialize references.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method__index", "name": "Doctrine_Record::_index", "doc": "&quot;the current instance counter used to generate unique ids for php objects. Contains the next identifier.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_setUp", "name": "Doctrine_Record::setUp", "doc": "&quot;setUp\nthis method is used for setting up relations and attributes\nit should be implemented by child classes&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_construct", "name": "Doctrine_Record::construct", "doc": "&quot;construct\nEmpty template method to provide concrete Record classes with the possibility\nto hook into the constructor procedure&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_getOid", "name": "Doctrine_Record::getOid", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_oid", "name": "Doctrine_Record::oid", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_invokeSaveHooks", "name": "Doctrine_Record::invokeSaveHooks", "doc": "&quot;calls a subclass hook. Idempotent until see clearInvokedSaveHooks() is called.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_clearInvokedSaveHooks", "name": "Doctrine_Record::clearInvokedSaveHooks", "doc": "&quot;makes all the already used save hooks available again&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_isValid", "name": "Doctrine_Record::isValid", "doc": "&quot;tests validity of the record using the current data.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_validate", "name": "Doctrine_Record::validate", "doc": "&quot;Empty template method to provide concrete Record classes with the possibility\nto hook into the validation procedure, doing any custom \/ specialized\nvalidations that are neccessary.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_validateOnUpdate", "name": "Doctrine_Record::validateOnUpdate", "doc": "&quot;Empty template method to provide concrete Record classes with the possibility\nto hook into the validation procedure only when the record is going to be\nupdated.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_validateOnInsert", "name": "Doctrine_Record::validateOnInsert", "doc": "&quot;Empty template method to provide concrete Record classes with the possibility\nto hook into the validation procedure only when the record is going to be\ninserted into the data store the first time.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_preSerialize", "name": "Doctrine_Record::preSerialize", "doc": "&quot;Empty template method to provide concrete Record classes with the possibility\nto hook into the serializing procedure.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_postSerialize", "name": "Doctrine_Record::postSerialize", "doc": "&quot;Empty template method to provide concrete Record classes with the possibility\nto hook into the serializing procedure.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_preUnserialize", "name": "Doctrine_Record::preUnserialize", "doc": "&quot;Empty template method to provide concrete Record classes with the possibility\nto hook into the serializing procedure.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_postUnserialize", "name": "Doctrine_Record::postUnserialize", "doc": "&quot;Empty template method to provide concrete Record classes with the possibility\nto hook into the serializing procedure.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_preSave", "name": "Doctrine_Record::preSave", "doc": "&quot;Empty template method to provide concrete Record classes with the possibility\nto hook into the saving procedure.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_postSave", "name": "Doctrine_Record::postSave", "doc": "&quot;Empty template method to provide concrete Record classes with the possibility\nto hook into the saving procedure.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_preDelete", "name": "Doctrine_Record::preDelete", "doc": "&quot;Empty template method to provide concrete Record classes with the possibility\nto hook into the deletion procedure.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_postDelete", "name": "Doctrine_Record::postDelete", "doc": "&quot;Empty template method to provide concrete Record classes with the possibility\nto hook into the deletion procedure.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_preUpdate", "name": "Doctrine_Record::preUpdate", "doc": "&quot;Empty template method to provide concrete Record classes with the possibility\nto hook into the saving procedure only when the record is going to be\nupdated.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_postUpdate", "name": "Doctrine_Record::postUpdate", "doc": "&quot;Empty template method to provide concrete Record classes with the possibility\nto hook into the saving procedure only when the record is going to be\nupdated.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_preInsert", "name": "Doctrine_Record::preInsert", "doc": "&quot;Empty template method to provide concrete Record classes with the possibility\nto hook into the saving procedure only when the record is going to be\ninserted into the data store the first time.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_postInsert", "name": "Doctrine_Record::postInsert", "doc": "&quot;Empty template method to provide concrete Record classes with the possibility\nto hook into the saving procedure only when the record is going to be\ninserted into the data store the first time.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_preValidate", "name": "Doctrine_Record::preValidate", "doc": "&quot;Empty template method to provide concrete Record classes with the possibility\nto hook into the validation procedure. Useful for cleaning up data before\nvalidating it.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_postValidate", "name": "Doctrine_Record::postValidate", "doc": "&quot;Empty template method to provide concrete Record classes with the possibility\nto hook into the validation procedure.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_preDqlSelect", "name": "Doctrine_Record::preDqlSelect", "doc": "&quot;Empty template method to provide Record classes with the ability to alter DQL select\nqueries at runtime&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_preDqlUpdate", "name": "Doctrine_Record::preDqlUpdate", "doc": "&quot;Empty template method to provide Record classes with the ability to alter DQL update\nqueries at runtime&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_preDqlDelete", "name": "Doctrine_Record::preDqlDelete", "doc": "&quot;Empty template method to provide Record classes with the ability to alter DQL delete\nqueries at runtime&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_preHydrate", "name": "Doctrine_Record::preHydrate", "doc": "&quot;Empty template method to provide Record classes with the ability to alter hydration\nbefore it runs&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_postHydrate", "name": "Doctrine_Record::postHydrate", "doc": "&quot;Empty template method to provide Record classes with the ability to alter hydration\nafter it runs&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_getErrorStackAsString", "name": "Doctrine_Record::getErrorStackAsString", "doc": "&quot;Get the record error stack as a human readable string.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_getErrorStack", "name": "Doctrine_Record::getErrorStack", "doc": "&quot;retrieves the ErrorStack. To be called after a failed validation attempt (see isValid()).&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_errorStack", "name": "Doctrine_Record::errorStack", "doc": "&quot;assigns the ErrorStack or returns it if called without parameters&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_assignInheritanceValues", "name": "Doctrine_Record::assignInheritanceValues", "doc": "&quot;Assign the inheritance column values&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_assignDefaultValues", "name": "Doctrine_Record::assignDefaultValues", "doc": "&quot;setDefaultValues\nsets the default values for records internal data&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_cleanData", "name": "Doctrine_Record::cleanData", "doc": "&quot;cleanData\nleaves the $data array only with values whose key is a field inside this\nrecord and returns the values that were removed from $data.  Also converts\nany values of &#039;null&#039; to objects of type Doctrine_Null.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_hydrate", "name": "Doctrine_Record::hydrate", "doc": "&quot;hydrate\nhydrates this object from given array&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_serialize", "name": "Doctrine_Record::serialize", "doc": "&quot;serialize\nthis method is automatically called when an instance of Doctrine_Record is serialized&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_unserialize", "name": "Doctrine_Record::unserialize", "doc": "&quot;this method is automatically called everytime an instance is unserialized&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_state", "name": "Doctrine_Record::state", "doc": "&quot;assigns the state of this record or returns it if called without parameters&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_refresh", "name": "Doctrine_Record::refresh", "doc": "&quot;refresh\nrefresh internal data from the database&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_refreshRelated", "name": "Doctrine_Record::refreshRelated", "doc": "&quot;refresh\nrefresh data of related objects from the database&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_clearRelated", "name": "Doctrine_Record::clearRelated", "doc": "&quot;Clear a related reference or all references&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_relatedExists", "name": "Doctrine_Record::relatedExists", "doc": "&quot;Check if a related relationship exists. Will lazily load the relationship\nin order to check. If the reference didn&#039;t already exist and it doesn&#039;t\nexist in the database, the related reference will be cleared immediately.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_getTable", "name": "Doctrine_Record::getTable", "doc": "&quot;returns the table object for this record.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_getData", "name": "Doctrine_Record::getData", "doc": "&quot;return all the internal data (columns)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_rawGet", "name": "Doctrine_Record::rawGet", "doc": "&quot;returns the value of a property (column). If the property is not yet loaded\nthis method does NOT load it.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_load", "name": "Doctrine_Record::load", "doc": "&quot;loads all the uninitialized properties from the database.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_isInProxyState", "name": "Doctrine_Record::isInProxyState", "doc": "&quot;indicates whether record has any not loaded fields&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_hasAccessor", "name": "Doctrine_Record::hasAccessor", "doc": "&quot;sets a fieldname to have a custom accessor or check if a field has a custom\naccessor defined (when called without $accessor parameter).&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_clearAccessor", "name": "Doctrine_Record::clearAccessor", "doc": "&quot;clears the accessor for a field name&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_getAccessor", "name": "Doctrine_Record::getAccessor", "doc": "&quot;gets the custom accessor for a field name&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_getAccessors", "name": "Doctrine_Record::getAccessors", "doc": "&quot;gets all accessors for this component instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_hasMutator", "name": "Doctrine_Record::hasMutator", "doc": "&quot;sets a fieldname to have a custom mutator or check if a field has a custom\nmutator defined (when called without the $mutator parameter)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_getMutator", "name": "Doctrine_Record::getMutator", "doc": "&quot;gets the custom mutator for a field name&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_clearMutator", "name": "Doctrine_Record::clearMutator", "doc": "&quot;clears the custom mutator for a field name&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_getMutators", "name": "Doctrine_Record::getMutators", "doc": "&quot;gets all custom mutators for this component instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_hasAccessorMutator", "name": "Doctrine_Record::hasAccessorMutator", "doc": "&quot;Set a fieldname to have a custom accessor and mutator&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_get", "name": "Doctrine_Record::get", "doc": "&quot;returns a value of a property or a related component&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method__get", "name": "Doctrine_Record::_get", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_mapValue", "name": "Doctrine_Record::mapValue", "doc": "&quot;sets a value that will be managed as if it were a field by magic accessor and mutators, see get() and see set().&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_hasMappedValue", "name": "Doctrine_Record::hasMappedValue", "doc": "&quot;Tests whether a mapped value exists&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_set", "name": "Doctrine_Record::set", "doc": "&quot;alters mapped values, properties and related components.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method__set", "name": "Doctrine_Record::_set", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method__isValueModified", "name": "Doctrine_Record::_isValueModified", "doc": "&quot;Check if a value has changed according to Doctrine\nDoctrine is loose with type checking in the same ways PHP is for consistancy of behavior&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_coreSetRelated", "name": "Doctrine_Record::coreSetRelated", "doc": "&quot;Places a related component in the object graph.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_contains", "name": "Doctrine_Record::contains", "doc": "&quot;test whether a field (column, mapped value, related component, accessor) is accessible by see get()&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method___unset", "name": "Doctrine_Record::__unset", "doc": "&quot;deletes a column or a related component.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_getPendingDeletes", "name": "Doctrine_Record::getPendingDeletes", "doc": "&quot;returns Doctrine_Record instances which need to be deleted on save&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_getPendingUnlinks", "name": "Doctrine_Record::getPendingUnlinks", "doc": "&quot;returns Doctrine_Record instances which need to be unlinked (deleting the relation) on save&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_resetPendingUnlinks", "name": "Doctrine_Record::resetPendingUnlinks", "doc": "&quot;resets pending record unlinks&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_save", "name": "Doctrine_Record::save", "doc": "&quot;applies the changes made to this object into database\nthis method is smart enough to know if any changes are made\nand whether to use INSERT or UPDATE statement&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_trySave", "name": "Doctrine_Record::trySave", "doc": "&quot;tries to save the object and all its related components.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_replace", "name": "Doctrine_Record::replace", "doc": "&quot;executes a SQL REPLACE query. A REPLACE query is identical to a INSERT\nquery, except that if there is already a row in the table with the same\nkey field values, the REPLACE query just updates its values instead of\ninserting a new row.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_getModified", "name": "Doctrine_Record::getModified", "doc": "&quot;retrieves an array of modified fields and associated new values.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_getLastModified", "name": "Doctrine_Record::getLastModified", "doc": "&quot;returns an array of the modified fields from the last transaction.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_getPrepared", "name": "Doctrine_Record::getPrepared", "doc": "&quot;Retrieves data prepared for a sql transaction.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_count", "name": "Doctrine_Record::count", "doc": "&quot;implements Countable interface&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_columnCount", "name": "Doctrine_Record::columnCount", "doc": "&quot;alias for see count()&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_toArray", "name": "Doctrine_Record::toArray", "doc": "&quot;returns the record representation as an array&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_merge", "name": "Doctrine_Record::merge", "doc": "&quot;merges this record with an array of values\nor with another existing instance of this object&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_fromArray", "name": "Doctrine_Record::fromArray", "doc": "&quot;imports data from a php array&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_synchronizeWithArray", "name": "Doctrine_Record::synchronizeWithArray", "doc": "&quot;synchronizes a Doctrine_Record instance and its relations with data from an array&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_exportTo", "name": "Doctrine_Record::exportTo", "doc": "&quot;exports instance to a chosen format&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_importFrom", "name": "Doctrine_Record::importFrom", "doc": "&quot;imports data from a chosen format in the current instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_exists", "name": "Doctrine_Record::exists", "doc": "&quot;returns true if this record is saved in the database, otherwise false (it is transient)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_isModified", "name": "Doctrine_Record::isModified", "doc": "&quot;returns true if this record was modified, otherwise false&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_hasRelation", "name": "Doctrine_Record::hasRelation", "doc": "&quot;checks existence of properties and related components&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_getIterator", "name": "Doctrine_Record::getIterator", "doc": "&quot;implements IteratorAggregate interface&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_delete", "name": "Doctrine_Record::delete", "doc": "&quot;deletes this data access object and all the related composites\nthis operation is isolated by a transaction&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_copy", "name": "Doctrine_Record::copy", "doc": "&quot;generates a copy of this object. Returns an instance of the same class of $this.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_assignIdentifier", "name": "Doctrine_Record::assignIdentifier", "doc": "&quot;assigns an identifier to the instance, for database storage&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_identifier", "name": "Doctrine_Record::identifier", "doc": "&quot;returns the primary keys of this object&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_getIncremented", "name": "Doctrine_Record::getIncremented", "doc": "&quot;returns the value of autoincremented primary key of this object (if any)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_getLast", "name": "Doctrine_Record::getLast", "doc": "&quot;getLast\nthis method is used internally by Doctrine_Query\nit is needed to provide compatibility between\nrecords and collections&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_hasReference", "name": "Doctrine_Record::hasReference", "doc": "&quot;tests whether a relation is set&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_reference", "name": "Doctrine_Record::reference", "doc": "&quot;gets a related component&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_obtainReference", "name": "Doctrine_Record::obtainReference", "doc": "&quot;gets a related component and fails if it does not exist&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_getReferences", "name": "Doctrine_Record::getReferences", "doc": "&quot;get all related components&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_setRelated", "name": "Doctrine_Record::setRelated", "doc": "&quot;set a related component&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_loadReference", "name": "Doctrine_Record::loadReference", "doc": "&quot;loadReference\nloads a related component&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_call", "name": "Doctrine_Record::call", "doc": "&quot;call&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_getNode", "name": "Doctrine_Record::getNode", "doc": "&quot;getter for node associated with this record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_unshiftFilter", "name": "Doctrine_Record::unshiftFilter", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_unlink", "name": "Doctrine_Record::unlink", "doc": "&quot;unlink\nremoves links from this record to given records\nif no ids are given, it removes all links&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_unlinkInDb", "name": "Doctrine_Record::unlinkInDb", "doc": "&quot;unlink now the related components, querying the db&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_link", "name": "Doctrine_Record::link", "doc": "&quot;creates links from this record to given records&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_linkInDb", "name": "Doctrine_Record::linkInDb", "doc": "&quot;creates links from this record to given records now, querying the db&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method__resetModified", "name": "Doctrine_Record::_resetModified", "doc": "&quot;Reset the modified array and store the old array in lastModified so it\ncan be accessed by users after saving a record, since the modified array\nis reset after the object is saved.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method___call", "name": "Doctrine_Record::__call", "doc": "&quot;magic method used for method overloading&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_deleteNode", "name": "Doctrine_Record::deleteNode", "doc": "&quot;used to delete node from tree - MUST BE USE TO DELETE RECORD IF TABLE ACTS AS TREE&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_free", "name": "Doctrine_Record::free", "doc": "&quot;Helps freeing the memory occupied by the entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method_toString", "name": "Doctrine_Record::toString", "doc": "&quot;__toString alias&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record", "fromLink": "Doctrine_Record.html", "link": "Doctrine_Record.html#method___toString", "name": "Doctrine_Record::__toString", "doc": "&quot;magic method&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Record_Abstract.html", "name": "Doctrine_Record_Abstract", "doc": "&quot;Doctrine_Record_Abstract&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Record_Abstract", "fromLink": "Doctrine_Record_Abstract.html", "link": "Doctrine_Record_Abstract.html#method_setTableDefinition", "name": "Doctrine_Record_Abstract::setTableDefinition", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Abstract", "fromLink": "Doctrine_Record_Abstract.html", "link": "Doctrine_Record_Abstract.html#method_setUp", "name": "Doctrine_Record_Abstract::setUp", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Abstract", "fromLink": "Doctrine_Record_Abstract.html", "link": "Doctrine_Record_Abstract.html#method_getTable", "name": "Doctrine_Record_Abstract::getTable", "doc": "&quot;getTable\nreturns the associated table object&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Abstract", "fromLink": "Doctrine_Record_Abstract.html", "link": "Doctrine_Record_Abstract.html#method_addListener", "name": "Doctrine_Record_Abstract::addListener", "doc": "&quot;addListener&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Abstract", "fromLink": "Doctrine_Record_Abstract.html", "link": "Doctrine_Record_Abstract.html#method_getListener", "name": "Doctrine_Record_Abstract::getListener", "doc": "&quot;getListener&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Abstract", "fromLink": "Doctrine_Record_Abstract.html", "link": "Doctrine_Record_Abstract.html#method_setListener", "name": "Doctrine_Record_Abstract::setListener", "doc": "&quot;setListener&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Abstract", "fromLink": "Doctrine_Record_Abstract.html", "link": "Doctrine_Record_Abstract.html#method_index", "name": "Doctrine_Record_Abstract::index", "doc": "&quot;index\ndefines or retrieves an index\nif the second parameter is set this method defines an index\nif not this method retrieves index named $name&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Abstract", "fromLink": "Doctrine_Record_Abstract.html", "link": "Doctrine_Record_Abstract.html#method_unique", "name": "Doctrine_Record_Abstract::unique", "doc": "&quot;Defines a n-uple of fields that must be unique for every record.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Abstract", "fromLink": "Doctrine_Record_Abstract.html", "link": "Doctrine_Record_Abstract.html#method_setAttribute", "name": "Doctrine_Record_Abstract::setAttribute", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Abstract", "fromLink": "Doctrine_Record_Abstract.html", "link": "Doctrine_Record_Abstract.html#method_setTableName", "name": "Doctrine_Record_Abstract::setTableName", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Abstract", "fromLink": "Doctrine_Record_Abstract.html", "link": "Doctrine_Record_Abstract.html#method_setInheritanceMap", "name": "Doctrine_Record_Abstract::setInheritanceMap", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Abstract", "fromLink": "Doctrine_Record_Abstract.html", "link": "Doctrine_Record_Abstract.html#method_setSubclasses", "name": "Doctrine_Record_Abstract::setSubclasses", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Abstract", "fromLink": "Doctrine_Record_Abstract.html", "link": "Doctrine_Record_Abstract.html#method_attribute", "name": "Doctrine_Record_Abstract::attribute", "doc": "&quot;attribute\nsets or retrieves an option&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Abstract", "fromLink": "Doctrine_Record_Abstract.html", "link": "Doctrine_Record_Abstract.html#method_option", "name": "Doctrine_Record_Abstract::option", "doc": "&quot;option\nsets or retrieves an option&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Abstract", "fromLink": "Doctrine_Record_Abstract.html", "link": "Doctrine_Record_Abstract.html#method_hasOne", "name": "Doctrine_Record_Abstract::hasOne", "doc": "&quot;Binds One-to-One aggregate relation&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Abstract", "fromLink": "Doctrine_Record_Abstract.html", "link": "Doctrine_Record_Abstract.html#method_hasMany", "name": "Doctrine_Record_Abstract::hasMany", "doc": "&quot;Binds One-to-Many \/ Many-to-Many aggregate relation&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Abstract", "fromLink": "Doctrine_Record_Abstract.html", "link": "Doctrine_Record_Abstract.html#method_hasColumn", "name": "Doctrine_Record_Abstract::hasColumn", "doc": "&quot;Sets a column definition&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Abstract", "fromLink": "Doctrine_Record_Abstract.html", "link": "Doctrine_Record_Abstract.html#method_hasColumns", "name": "Doctrine_Record_Abstract::hasColumns", "doc": "&quot;Set multiple column definitions at once&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Abstract", "fromLink": "Doctrine_Record_Abstract.html", "link": "Doctrine_Record_Abstract.html#method_setColumnOptions", "name": "Doctrine_Record_Abstract::setColumnOptions", "doc": "&quot;Customize the array of options for a column or multiple columns. First\nargument can be a single field\/column name or an array of them. The second\nargument is an array of options.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Abstract", "fromLink": "Doctrine_Record_Abstract.html", "link": "Doctrine_Record_Abstract.html#method_setColumnOption", "name": "Doctrine_Record_Abstract::setColumnOption", "doc": "&quot;Set an individual column option&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Abstract", "fromLink": "Doctrine_Record_Abstract.html", "link": "Doctrine_Record_Abstract.html#method_bindQueryParts", "name": "Doctrine_Record_Abstract::bindQueryParts", "doc": "&quot;bindQueryParts\nbinds query parts to given component&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Abstract", "fromLink": "Doctrine_Record_Abstract.html", "link": "Doctrine_Record_Abstract.html#method_loadGenerator", "name": "Doctrine_Record_Abstract::loadGenerator", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Abstract", "fromLink": "Doctrine_Record_Abstract.html", "link": "Doctrine_Record_Abstract.html#method_actAs", "name": "Doctrine_Record_Abstract::actAs", "doc": "&quot;Loads the given plugin.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Abstract", "fromLink": "Doctrine_Record_Abstract.html", "link": "Doctrine_Record_Abstract.html#method_check", "name": "Doctrine_Record_Abstract::check", "doc": "&quot;Adds a check constraint.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Record_Exception.html", "name": "Doctrine_Record_Exception", "doc": "&quot;Doctrine_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Record_Filter.html", "name": "Doctrine_Record_Filter", "doc": "&quot;Doctrine_Record_Filter\nFilters the record getters and setters&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Record_Filter", "fromLink": "Doctrine_Record_Filter.html", "link": "Doctrine_Record_Filter.html#method_setTable", "name": "Doctrine_Record_Filter::setTable", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Filter", "fromLink": "Doctrine_Record_Filter.html", "link": "Doctrine_Record_Filter.html#method_getTable", "name": "Doctrine_Record_Filter::getTable", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Filter", "fromLink": "Doctrine_Record_Filter.html", "link": "Doctrine_Record_Filter.html#method_init", "name": "Doctrine_Record_Filter::init", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Filter", "fromLink": "Doctrine_Record_Filter.html", "link": "Doctrine_Record_Filter.html#method_filterSet", "name": "Doctrine_Record_Filter::filterSet", "doc": "&quot;filterSet\ndefines an implementation for filtering the set() method of Doctrine_Record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Filter", "fromLink": "Doctrine_Record_Filter.html", "link": "Doctrine_Record_Filter.html#method_filterGet", "name": "Doctrine_Record_Filter::filterGet", "doc": "&quot;filterGet\ndefines an implementation for filtering the get() method of Doctrine_Record&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Record_Filter_Compound.html", "name": "Doctrine_Record_Filter_Compound", "doc": "&quot;Doctrine_Record_Filter_Compound&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Record_Filter_Compound", "fromLink": "Doctrine_Record_Filter_Compound.html", "link": "Doctrine_Record_Filter_Compound.html#method___construct", "name": "Doctrine_Record_Filter_Compound::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Filter_Compound", "fromLink": "Doctrine_Record_Filter_Compound.html", "link": "Doctrine_Record_Filter_Compound.html#method_init", "name": "Doctrine_Record_Filter_Compound::init", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Filter_Compound", "fromLink": "Doctrine_Record_Filter_Compound.html", "link": "Doctrine_Record_Filter_Compound.html#method_filterSet", "name": "Doctrine_Record_Filter_Compound::filterSet", "doc": "&quot;filterSet\ndefines an implementation for filtering the set() method of Doctrine_Record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Filter_Compound", "fromLink": "Doctrine_Record_Filter_Compound.html", "link": "Doctrine_Record_Filter_Compound.html#method_filterGet", "name": "Doctrine_Record_Filter_Compound::filterGet", "doc": "&quot;filterGet\ndefines an implementation for filtering the get() method of Doctrine_Record&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Record_Filter_Standard.html", "name": "Doctrine_Record_Filter_Standard", "doc": "&quot;Doctrine_Record_Filter_Standard\nFilters the record getters and setters&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Record_Filter_Standard", "fromLink": "Doctrine_Record_Filter_Standard.html", "link": "Doctrine_Record_Filter_Standard.html#method_filterSet", "name": "Doctrine_Record_Filter_Standard::filterSet", "doc": "&quot;filterSet\ndefines an implementation for filtering the set() method of Doctrine_Record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Filter_Standard", "fromLink": "Doctrine_Record_Filter_Standard.html", "link": "Doctrine_Record_Filter_Standard.html#method_filterGet", "name": "Doctrine_Record_Filter_Standard::filterGet", "doc": "&quot;filterGet\ndefines an implementation for filtering the get() method of Doctrine_Record&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Record_Generator.html", "name": "Doctrine_Record_Generator", "doc": "&quot;Doctrine_Record_Generator&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Record_Generator", "fromLink": "Doctrine_Record_Generator.html", "link": "Doctrine_Record_Generator.html#method___get", "name": "Doctrine_Record_Generator::__get", "doc": "&quot;An alias for getOption&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Generator", "fromLink": "Doctrine_Record_Generator.html", "link": "Doctrine_Record_Generator.html#method___isset", "name": "Doctrine_Record_Generator::__isset", "doc": "&quot;__isset&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Generator", "fromLink": "Doctrine_Record_Generator.html", "link": "Doctrine_Record_Generator.html#method_getOption", "name": "Doctrine_Record_Generator::getOption", "doc": "&quot;Returns the value of an option&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Generator", "fromLink": "Doctrine_Record_Generator.html", "link": "Doctrine_Record_Generator.html#method_setOption", "name": "Doctrine_Record_Generator::setOption", "doc": "&quot;Sets given value to an option&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Generator", "fromLink": "Doctrine_Record_Generator.html", "link": "Doctrine_Record_Generator.html#method_addChild", "name": "Doctrine_Record_Generator::addChild", "doc": "&quot;Add child record generator&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Generator", "fromLink": "Doctrine_Record_Generator.html", "link": "Doctrine_Record_Generator.html#method_getOptions", "name": "Doctrine_Record_Generator::getOptions", "doc": "&quot;Returns all options and their associated values&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Generator", "fromLink": "Doctrine_Record_Generator.html", "link": "Doctrine_Record_Generator.html#method_initialize", "name": "Doctrine_Record_Generator::initialize", "doc": "&quot;Initialize the plugin. Call in Doctrine_Template setTableDefinition() in order to initiate a generator in a template&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Generator", "fromLink": "Doctrine_Record_Generator.html", "link": "Doctrine_Record_Generator.html#method_buildTable", "name": "Doctrine_Record_Generator::buildTable", "doc": "&quot;Create the new Doctrine_Table instance in $this-&gt;_table based on the owning\ntable.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Generator", "fromLink": "Doctrine_Record_Generator.html", "link": "Doctrine_Record_Generator.html#method_initOptions", "name": "Doctrine_Record_Generator::initOptions", "doc": "&quot;Empty template method for providing the concrete plugins the ability\nto initialize options before the actual definition is being built&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Generator", "fromLink": "Doctrine_Record_Generator.html", "link": "Doctrine_Record_Generator.html#method_buildChildDefinitions", "name": "Doctrine_Record_Generator::buildChildDefinitions", "doc": "&quot;Build the child behavior definitions that are attached to this generator&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Generator", "fromLink": "Doctrine_Record_Generator.html", "link": "Doctrine_Record_Generator.html#method_buildForeignKeys", "name": "Doctrine_Record_Generator::buildForeignKeys", "doc": "&quot;Generates foreign keys for the plugin table based on the owner table.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Generator", "fromLink": "Doctrine_Record_Generator.html", "link": "Doctrine_Record_Generator.html#method_buildLocalRelation", "name": "Doctrine_Record_Generator::buildLocalRelation", "doc": "&quot;Build the local relationship on the generated model for this generator\ninstance which points to the invoking table in $this-&gt;_options[&#039;table&#039;]&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Generator", "fromLink": "Doctrine_Record_Generator.html", "link": "Doctrine_Record_Generator.html#method_ownerHasMany", "name": "Doctrine_Record_Generator::ownerHasMany", "doc": "&quot;Add a Doctrine_Relation::MANY relationship to the generator owner table&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Generator", "fromLink": "Doctrine_Record_Generator.html", "link": "Doctrine_Record_Generator.html#method_ownerHasOne", "name": "Doctrine_Record_Generator::ownerHasOne", "doc": "&quot;Add a Doctrine_Relation::ONE relationship to the generator owner table&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Generator", "fromLink": "Doctrine_Record_Generator.html", "link": "Doctrine_Record_Generator.html#method_buildForeignRelation", "name": "Doctrine_Record_Generator::buildForeignRelation", "doc": "&quot;Build the foreign relationship on the invoking table in $this-&gt;_options[&#039;table&#039;]\nwhich points back to the model generated in this generator instance.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Generator", "fromLink": "Doctrine_Record_Generator.html", "link": "Doctrine_Record_Generator.html#method_getRelationLocalKey", "name": "Doctrine_Record_Generator::getRelationLocalKey", "doc": "&quot;Get the local key of the generated relationship&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Generator", "fromLink": "Doctrine_Record_Generator.html", "link": "Doctrine_Record_Generator.html#method_getRelationForeignKey", "name": "Doctrine_Record_Generator::getRelationForeignKey", "doc": "&quot;Get the foreign key of the generated relationship&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Generator", "fromLink": "Doctrine_Record_Generator.html", "link": "Doctrine_Record_Generator.html#method_buildRelation", "name": "Doctrine_Record_Generator::buildRelation", "doc": "&quot;This method can be used for generating the relation from the plugin\ntable to the owner table. By default buildForeignRelation() and buildLocalRelation() are called\nThose methods can be overridden or this entire method can be overridden&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Generator", "fromLink": "Doctrine_Record_Generator.html", "link": "Doctrine_Record_Generator.html#method_generateClassFromTable", "name": "Doctrine_Record_Generator::generateClassFromTable", "doc": "&quot;Generate a Doctrine_Record from a populated Doctrine_Table instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Generator", "fromLink": "Doctrine_Record_Generator.html", "link": "Doctrine_Record_Generator.html#method_generateClass", "name": "Doctrine_Record_Generator::generateClass", "doc": "&quot;Generates the class definition for plugin class&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Record_Iterator.html", "name": "Doctrine_Record_Iterator", "doc": "&quot;Doctrine_Record_Iterator&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Record_Iterator", "fromLink": "Doctrine_Record_Iterator.html", "link": "Doctrine_Record_Iterator.html#method___construct", "name": "Doctrine_Record_Iterator::__construct", "doc": "&quot;constructor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Iterator", "fromLink": "Doctrine_Record_Iterator.html", "link": "Doctrine_Record_Iterator.html#method_initNullObject", "name": "Doctrine_Record_Iterator::initNullObject", "doc": "&quot;initNullObject&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Iterator", "fromLink": "Doctrine_Record_Iterator.html", "link": "Doctrine_Record_Iterator.html#method_current", "name": "Doctrine_Record_Iterator::current", "doc": "&quot;current&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Record_Listener.html", "name": "Doctrine_Record_Listener", "doc": "&quot;Doctrine_Record_Listener&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Record_Listener", "fromLink": "Doctrine_Record_Listener.html", "link": "Doctrine_Record_Listener.html#method_setOption", "name": "Doctrine_Record_Listener::setOption", "doc": "&quot;setOption\nsets an option in order to allow flexible listener&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener", "fromLink": "Doctrine_Record_Listener.html", "link": "Doctrine_Record_Listener.html#method_getOptions", "name": "Doctrine_Record_Listener::getOptions", "doc": "&quot;getOptions\nreturns all options of this template and the associated values&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener", "fromLink": "Doctrine_Record_Listener.html", "link": "Doctrine_Record_Listener.html#method_getOption", "name": "Doctrine_Record_Listener::getOption", "doc": "&quot;getOption\nreturns the value of given option&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener", "fromLink": "Doctrine_Record_Listener.html", "link": "Doctrine_Record_Listener.html#method_preSerialize", "name": "Doctrine_Record_Listener::preSerialize", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener", "fromLink": "Doctrine_Record_Listener.html", "link": "Doctrine_Record_Listener.html#method_postSerialize", "name": "Doctrine_Record_Listener::postSerialize", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener", "fromLink": "Doctrine_Record_Listener.html", "link": "Doctrine_Record_Listener.html#method_preUnserialize", "name": "Doctrine_Record_Listener::preUnserialize", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener", "fromLink": "Doctrine_Record_Listener.html", "link": "Doctrine_Record_Listener.html#method_postUnserialize", "name": "Doctrine_Record_Listener::postUnserialize", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener", "fromLink": "Doctrine_Record_Listener.html", "link": "Doctrine_Record_Listener.html#method_preDqlSelect", "name": "Doctrine_Record_Listener::preDqlSelect", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener", "fromLink": "Doctrine_Record_Listener.html", "link": "Doctrine_Record_Listener.html#method_preSave", "name": "Doctrine_Record_Listener::preSave", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener", "fromLink": "Doctrine_Record_Listener.html", "link": "Doctrine_Record_Listener.html#method_postSave", "name": "Doctrine_Record_Listener::postSave", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener", "fromLink": "Doctrine_Record_Listener.html", "link": "Doctrine_Record_Listener.html#method_preDqlDelete", "name": "Doctrine_Record_Listener::preDqlDelete", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener", "fromLink": "Doctrine_Record_Listener.html", "link": "Doctrine_Record_Listener.html#method_preDelete", "name": "Doctrine_Record_Listener::preDelete", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener", "fromLink": "Doctrine_Record_Listener.html", "link": "Doctrine_Record_Listener.html#method_postDelete", "name": "Doctrine_Record_Listener::postDelete", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener", "fromLink": "Doctrine_Record_Listener.html", "link": "Doctrine_Record_Listener.html#method_preDqlUpdate", "name": "Doctrine_Record_Listener::preDqlUpdate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener", "fromLink": "Doctrine_Record_Listener.html", "link": "Doctrine_Record_Listener.html#method_preUpdate", "name": "Doctrine_Record_Listener::preUpdate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener", "fromLink": "Doctrine_Record_Listener.html", "link": "Doctrine_Record_Listener.html#method_postUpdate", "name": "Doctrine_Record_Listener::postUpdate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener", "fromLink": "Doctrine_Record_Listener.html", "link": "Doctrine_Record_Listener.html#method_preInsert", "name": "Doctrine_Record_Listener::preInsert", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener", "fromLink": "Doctrine_Record_Listener.html", "link": "Doctrine_Record_Listener.html#method_postInsert", "name": "Doctrine_Record_Listener::postInsert", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener", "fromLink": "Doctrine_Record_Listener.html", "link": "Doctrine_Record_Listener.html#method_preHydrate", "name": "Doctrine_Record_Listener::preHydrate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener", "fromLink": "Doctrine_Record_Listener.html", "link": "Doctrine_Record_Listener.html#method_postHydrate", "name": "Doctrine_Record_Listener::postHydrate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener", "fromLink": "Doctrine_Record_Listener.html", "link": "Doctrine_Record_Listener.html#method_preValidate", "name": "Doctrine_Record_Listener::preValidate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener", "fromLink": "Doctrine_Record_Listener.html", "link": "Doctrine_Record_Listener.html#method_postValidate", "name": "Doctrine_Record_Listener::postValidate", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Record_Listener_Chain.html", "name": "Doctrine_Record_Listener_Chain", "doc": "&quot;Doctrine_Record_Listener_Chain\nthis class represents a chain of different listeners,\nuseful for having multiple listeners listening the events at the same time&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Record_Listener_Chain", "fromLink": "Doctrine_Record_Listener_Chain.html", "link": "Doctrine_Record_Listener_Chain.html#method_setOption", "name": "Doctrine_Record_Listener_Chain::setOption", "doc": "&quot;setOption\nsets an option in order to allow flexible listener chaining&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Chain", "fromLink": "Doctrine_Record_Listener_Chain.html", "link": "Doctrine_Record_Listener_Chain.html#method_getOption", "name": "Doctrine_Record_Listener_Chain::getOption", "doc": "&quot;getOption\nreturns the value of given option&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Chain", "fromLink": "Doctrine_Record_Listener_Chain.html", "link": "Doctrine_Record_Listener_Chain.html#method_getOptions", "name": "Doctrine_Record_Listener_Chain::getOptions", "doc": "&quot;Get array of configured options&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Chain", "fromLink": "Doctrine_Record_Listener_Chain.html", "link": "Doctrine_Record_Listener_Chain.html#method_add", "name": "Doctrine_Record_Listener_Chain::add", "doc": "&quot;add\nadds a listener to the chain of listeners&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Chain", "fromLink": "Doctrine_Record_Listener_Chain.html", "link": "Doctrine_Record_Listener_Chain.html#method_get", "name": "Doctrine_Record_Listener_Chain::get", "doc": "&quot;returns a Doctrine_Record_Listener on success\nand null on failure&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Chain", "fromLink": "Doctrine_Record_Listener_Chain.html", "link": "Doctrine_Record_Listener_Chain.html#method_set", "name": "Doctrine_Record_Listener_Chain::set", "doc": "&quot;set&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Chain", "fromLink": "Doctrine_Record_Listener_Chain.html", "link": "Doctrine_Record_Listener_Chain.html#method_preSerialize", "name": "Doctrine_Record_Listener_Chain::preSerialize", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Chain", "fromLink": "Doctrine_Record_Listener_Chain.html", "link": "Doctrine_Record_Listener_Chain.html#method_postSerialize", "name": "Doctrine_Record_Listener_Chain::postSerialize", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Chain", "fromLink": "Doctrine_Record_Listener_Chain.html", "link": "Doctrine_Record_Listener_Chain.html#method_preUnserialize", "name": "Doctrine_Record_Listener_Chain::preUnserialize", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Chain", "fromLink": "Doctrine_Record_Listener_Chain.html", "link": "Doctrine_Record_Listener_Chain.html#method_postUnserialize", "name": "Doctrine_Record_Listener_Chain::postUnserialize", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Chain", "fromLink": "Doctrine_Record_Listener_Chain.html", "link": "Doctrine_Record_Listener_Chain.html#method_preDqlSelect", "name": "Doctrine_Record_Listener_Chain::preDqlSelect", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Chain", "fromLink": "Doctrine_Record_Listener_Chain.html", "link": "Doctrine_Record_Listener_Chain.html#method_preSave", "name": "Doctrine_Record_Listener_Chain::preSave", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Chain", "fromLink": "Doctrine_Record_Listener_Chain.html", "link": "Doctrine_Record_Listener_Chain.html#method_postSave", "name": "Doctrine_Record_Listener_Chain::postSave", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Chain", "fromLink": "Doctrine_Record_Listener_Chain.html", "link": "Doctrine_Record_Listener_Chain.html#method_preDqlDelete", "name": "Doctrine_Record_Listener_Chain::preDqlDelete", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Chain", "fromLink": "Doctrine_Record_Listener_Chain.html", "link": "Doctrine_Record_Listener_Chain.html#method_preDelete", "name": "Doctrine_Record_Listener_Chain::preDelete", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Chain", "fromLink": "Doctrine_Record_Listener_Chain.html", "link": "Doctrine_Record_Listener_Chain.html#method_postDelete", "name": "Doctrine_Record_Listener_Chain::postDelete", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Chain", "fromLink": "Doctrine_Record_Listener_Chain.html", "link": "Doctrine_Record_Listener_Chain.html#method_preDqlUpdate", "name": "Doctrine_Record_Listener_Chain::preDqlUpdate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Chain", "fromLink": "Doctrine_Record_Listener_Chain.html", "link": "Doctrine_Record_Listener_Chain.html#method_preUpdate", "name": "Doctrine_Record_Listener_Chain::preUpdate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Chain", "fromLink": "Doctrine_Record_Listener_Chain.html", "link": "Doctrine_Record_Listener_Chain.html#method_postUpdate", "name": "Doctrine_Record_Listener_Chain::postUpdate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Chain", "fromLink": "Doctrine_Record_Listener_Chain.html", "link": "Doctrine_Record_Listener_Chain.html#method_preInsert", "name": "Doctrine_Record_Listener_Chain::preInsert", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Chain", "fromLink": "Doctrine_Record_Listener_Chain.html", "link": "Doctrine_Record_Listener_Chain.html#method_postInsert", "name": "Doctrine_Record_Listener_Chain::postInsert", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Chain", "fromLink": "Doctrine_Record_Listener_Chain.html", "link": "Doctrine_Record_Listener_Chain.html#method_preHydrate", "name": "Doctrine_Record_Listener_Chain::preHydrate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Chain", "fromLink": "Doctrine_Record_Listener_Chain.html", "link": "Doctrine_Record_Listener_Chain.html#method_postHydrate", "name": "Doctrine_Record_Listener_Chain::postHydrate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Chain", "fromLink": "Doctrine_Record_Listener_Chain.html", "link": "Doctrine_Record_Listener_Chain.html#method_preValidate", "name": "Doctrine_Record_Listener_Chain::preValidate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Chain", "fromLink": "Doctrine_Record_Listener_Chain.html", "link": "Doctrine_Record_Listener_Chain.html#method_postValidate", "name": "Doctrine_Record_Listener_Chain::postValidate", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Record_Listener_Interface.html", "name": "Doctrine_Record_Listener_Interface", "doc": "&quot;Doctrine_Record_Listener&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_setOption", "name": "Doctrine_Record_Listener_Interface::setOption", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_getOptions", "name": "Doctrine_Record_Listener_Interface::getOptions", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_getOption", "name": "Doctrine_Record_Listener_Interface::getOption", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_preSerialize", "name": "Doctrine_Record_Listener_Interface::preSerialize", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_postSerialize", "name": "Doctrine_Record_Listener_Interface::postSerialize", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_preUnserialize", "name": "Doctrine_Record_Listener_Interface::preUnserialize", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_postUnserialize", "name": "Doctrine_Record_Listener_Interface::postUnserialize", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_preSave", "name": "Doctrine_Record_Listener_Interface::preSave", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_postSave", "name": "Doctrine_Record_Listener_Interface::postSave", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_preDelete", "name": "Doctrine_Record_Listener_Interface::preDelete", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_postDelete", "name": "Doctrine_Record_Listener_Interface::postDelete", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_preUpdate", "name": "Doctrine_Record_Listener_Interface::preUpdate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_postUpdate", "name": "Doctrine_Record_Listener_Interface::postUpdate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_preInsert", "name": "Doctrine_Record_Listener_Interface::preInsert", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_postInsert", "name": "Doctrine_Record_Listener_Interface::postInsert", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_preHydrate", "name": "Doctrine_Record_Listener_Interface::preHydrate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Record_Listener_Interface", "fromLink": "Doctrine_Record_Listener_Interface.html", "link": "Doctrine_Record_Listener_Interface.html#method_postHydrate", "name": "Doctrine_Record_Listener_Interface::postHydrate", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Record_State_Exception.html", "name": "Doctrine_Record_State_Exception", "doc": "&quot;Doctrine_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Record_UnknownPropertyException.html", "name": "Doctrine_Record_UnknownPropertyException", "doc": "&quot;Doctrine_Record_UnknownPropertyException&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Relation.html", "name": "Doctrine_Relation", "doc": "&quot;Doctrine_Relation\nThis class represents a relation between components&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Relation", "fromLink": "Doctrine_Relation.html", "link": "Doctrine_Relation.html#method___construct", "name": "Doctrine_Relation::__construct", "doc": "&quot;constructor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation", "fromLink": "Doctrine_Relation.html", "link": "Doctrine_Relation.html#method_hasConstraint", "name": "Doctrine_Relation::hasConstraint", "doc": "&quot;hasConstraint\nwhether or not this relation has an explicit constraint&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation", "fromLink": "Doctrine_Relation.html", "link": "Doctrine_Relation.html#method_isDeferred", "name": "Doctrine_Relation::isDeferred", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation", "fromLink": "Doctrine_Relation.html", "link": "Doctrine_Relation.html#method_isDeferrable", "name": "Doctrine_Relation::isDeferrable", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation", "fromLink": "Doctrine_Relation.html", "link": "Doctrine_Relation.html#method_isEqual", "name": "Doctrine_Relation::isEqual", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation", "fromLink": "Doctrine_Relation.html", "link": "Doctrine_Relation.html#method_offsetExists", "name": "Doctrine_Relation::offsetExists", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation", "fromLink": "Doctrine_Relation.html", "link": "Doctrine_Relation.html#method_offsetGet", "name": "Doctrine_Relation::offsetGet", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation", "fromLink": "Doctrine_Relation.html", "link": "Doctrine_Relation.html#method_offsetSet", "name": "Doctrine_Relation::offsetSet", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation", "fromLink": "Doctrine_Relation.html", "link": "Doctrine_Relation.html#method_offsetUnset", "name": "Doctrine_Relation::offsetUnset", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation", "fromLink": "Doctrine_Relation.html", "link": "Doctrine_Relation.html#method_toArray", "name": "Doctrine_Relation::toArray", "doc": "&quot;toArray&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation", "fromLink": "Doctrine_Relation.html", "link": "Doctrine_Relation.html#method_getAlias", "name": "Doctrine_Relation::getAlias", "doc": "&quot;getAlias\nreturns the relation alias&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation", "fromLink": "Doctrine_Relation.html", "link": "Doctrine_Relation.html#method_getType", "name": "Doctrine_Relation::getType", "doc": "&quot;getType\nreturns the relation type, either 0 or 1&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation", "fromLink": "Doctrine_Relation.html", "link": "Doctrine_Relation.html#method_isCascadeDelete", "name": "Doctrine_Relation::isCascadeDelete", "doc": "&quot;Checks whether this relation cascades deletions to the related objects\non the application level.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation", "fromLink": "Doctrine_Relation.html", "link": "Doctrine_Relation.html#method_getTable", "name": "Doctrine_Relation::getTable", "doc": "&quot;getTable\nreturns the foreign table object&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation", "fromLink": "Doctrine_Relation.html", "link": "Doctrine_Relation.html#method_getClass", "name": "Doctrine_Relation::getClass", "doc": "&quot;getClass\nreturns the name of the related class&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation", "fromLink": "Doctrine_Relation.html", "link": "Doctrine_Relation.html#method_getLocal", "name": "Doctrine_Relation::getLocal", "doc": "&quot;getLocal\nreturns the name of the local column&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation", "fromLink": "Doctrine_Relation.html", "link": "Doctrine_Relation.html#method_getLocalFieldName", "name": "Doctrine_Relation::getLocalFieldName", "doc": "&quot;getLocalFieldName\nreturns the field name of the local column&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation", "fromLink": "Doctrine_Relation.html", "link": "Doctrine_Relation.html#method_getLocalColumnName", "name": "Doctrine_Relation::getLocalColumnName", "doc": "&quot;getLocalColumnName\nreturns the column name of the local column&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation", "fromLink": "Doctrine_Relation.html", "link": "Doctrine_Relation.html#method_getForeign", "name": "Doctrine_Relation::getForeign", "doc": "&quot;getForeign\nreturns the name of the foreignkey column where\nthe localkey column is pointing at&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation", "fromLink": "Doctrine_Relation.html", "link": "Doctrine_Relation.html#method_getForeignFieldName", "name": "Doctrine_Relation::getForeignFieldName", "doc": "&quot;getLocalFieldName\nreturns the field name of the foreign column&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation", "fromLink": "Doctrine_Relation.html", "link": "Doctrine_Relation.html#method_getForeignColumnName", "name": "Doctrine_Relation::getForeignColumnName", "doc": "&quot;getForeignColumnName\nreturns the column name of the foreign column&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation", "fromLink": "Doctrine_Relation.html", "link": "Doctrine_Relation.html#method_isOneToOne", "name": "Doctrine_Relation::isOneToOne", "doc": "&quot;isOneToOne\nreturns whether or not this relation is a one-to-one relation&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation", "fromLink": "Doctrine_Relation.html", "link": "Doctrine_Relation.html#method_getRelationDql", "name": "Doctrine_Relation::getRelationDql", "doc": "&quot;getRelationDql&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation", "fromLink": "Doctrine_Relation.html", "link": "Doctrine_Relation.html#method_fetchRelatedFor", "name": "Doctrine_Relation::fetchRelatedFor", "doc": "&quot;fetchRelatedFor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation", "fromLink": "Doctrine_Relation.html", "link": "Doctrine_Relation.html#method_getForeignKeyName", "name": "Doctrine_Relation::getForeignKeyName", "doc": "&quot;Get the name of the foreign key for this relationship&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation", "fromLink": "Doctrine_Relation.html", "link": "Doctrine_Relation.html#method_getOrderBy", "name": "Doctrine_Relation::getOrderBy", "doc": "&quot;Get the relationship orderby SQL\/DQL&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation", "fromLink": "Doctrine_Relation.html", "link": "Doctrine_Relation.html#method_getOrderByStatement", "name": "Doctrine_Relation::getOrderByStatement", "doc": "&quot;Get the relationship orderby statement&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation", "fromLink": "Doctrine_Relation.html", "link": "Doctrine_Relation.html#method_isRefClass", "name": "Doctrine_Relation::isRefClass", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation", "fromLink": "Doctrine_Relation.html", "link": "Doctrine_Relation.html#method___toString", "name": "Doctrine_Relation::__toString", "doc": "&quot;__toString&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Relation_Association.html", "name": "Doctrine_Relation_Association", "doc": "&quot;Doctrine_Relation_Association    this class takes care of association mapping\n                        (= many-to-many relationships, where the relationship is handled with an additional relational table\n                        which holds 2 foreign keys)&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Relation_Association", "fromLink": "Doctrine_Relation_Association.html", "link": "Doctrine_Relation_Association.html#method_getAssociationFactory", "name": "Doctrine_Relation_Association::getAssociationFactory", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation_Association", "fromLink": "Doctrine_Relation_Association.html", "link": "Doctrine_Relation_Association.html#method_getAssociationTable", "name": "Doctrine_Relation_Association::getAssociationTable", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation_Association", "fromLink": "Doctrine_Relation_Association.html", "link": "Doctrine_Relation_Association.html#method_getRelationDql", "name": "Doctrine_Relation_Association::getRelationDql", "doc": "&quot;getRelationDql&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation_Association", "fromLink": "Doctrine_Relation_Association.html", "link": "Doctrine_Relation_Association.html#method_getLocalRefColumnName", "name": "Doctrine_Relation_Association::getLocalRefColumnName", "doc": "&quot;getLocalRefColumnName\nreturns the column name of the local reference column&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation_Association", "fromLink": "Doctrine_Relation_Association.html", "link": "Doctrine_Relation_Association.html#method_getLocalRefFieldName", "name": "Doctrine_Relation_Association::getLocalRefFieldName", "doc": "&quot;getLocalRefFieldName\nreturns the field name of the local reference column&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation_Association", "fromLink": "Doctrine_Relation_Association.html", "link": "Doctrine_Relation_Association.html#method_getForeignRefColumnName", "name": "Doctrine_Relation_Association::getForeignRefColumnName", "doc": "&quot;getForeignRefColumnName\nreturns the column name of the foreign reference column&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation_Association", "fromLink": "Doctrine_Relation_Association.html", "link": "Doctrine_Relation_Association.html#method_getForeignRefFieldName", "name": "Doctrine_Relation_Association::getForeignRefFieldName", "doc": "&quot;getForeignRefFieldName\nreturns the field name of the foreign reference column&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation_Association", "fromLink": "Doctrine_Relation_Association.html", "link": "Doctrine_Relation_Association.html#method_fetchRelatedFor", "name": "Doctrine_Relation_Association::fetchRelatedFor", "doc": "&quot;fetchRelatedFor&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Relation_Association_Self.html", "name": "Doctrine_Relation_Association_Self", "doc": "&quot;Doctrine_Relation_Association_Self&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Relation_Association_Self", "fromLink": "Doctrine_Relation_Association_Self.html", "link": "Doctrine_Relation_Association_Self.html#method_getRelationDql", "name": "Doctrine_Relation_Association_Self::getRelationDql", "doc": "&quot;getRelationDql&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation_Association_Self", "fromLink": "Doctrine_Relation_Association_Self.html", "link": "Doctrine_Relation_Association_Self.html#method_fetchRelatedFor", "name": "Doctrine_Relation_Association_Self::fetchRelatedFor", "doc": "&quot;fetchRelatedFor&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Relation_Exception.html", "name": "Doctrine_Relation_Exception", "doc": "&quot;Doctrine_Relation_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Relation_ForeignKey.html", "name": "Doctrine_Relation_ForeignKey", "doc": "&quot;Doctrine_Relation_ForeignKey\nThis class represents a foreign key relation&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Relation_ForeignKey", "fromLink": "Doctrine_Relation_ForeignKey.html", "link": "Doctrine_Relation_ForeignKey.html#method_fetchRelatedFor", "name": "Doctrine_Relation_ForeignKey::fetchRelatedFor", "doc": "&quot;fetchRelatedFor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation_ForeignKey", "fromLink": "Doctrine_Relation_ForeignKey.html", "link": "Doctrine_Relation_ForeignKey.html#method_getCondition", "name": "Doctrine_Relation_ForeignKey::getCondition", "doc": "&quot;getCondition&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Relation_LocalKey.html", "name": "Doctrine_Relation_LocalKey", "doc": "&quot;Doctrine_Relation_LocalKey\nThis class represents a local key relation&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Relation_LocalKey", "fromLink": "Doctrine_Relation_LocalKey.html", "link": "Doctrine_Relation_LocalKey.html#method_fetchRelatedFor", "name": "Doctrine_Relation_LocalKey::fetchRelatedFor", "doc": "&quot;fetchRelatedFor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation_LocalKey", "fromLink": "Doctrine_Relation_LocalKey.html", "link": "Doctrine_Relation_LocalKey.html#method_getCondition", "name": "Doctrine_Relation_LocalKey::getCondition", "doc": "&quot;getCondition&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Relation_Nest.html", "name": "Doctrine_Relation_Nest", "doc": "&quot;Doctrine_Relation_Association_Self&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Relation_Nest", "fromLink": "Doctrine_Relation_Nest.html", "link": "Doctrine_Relation_Nest.html#method_fetchRelatedFor", "name": "Doctrine_Relation_Nest::fetchRelatedFor", "doc": "&quot;fetchRelatedFor&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Relation_Parser.html", "name": "Doctrine_Relation_Parser", "doc": "&quot;Doctrine_Relation_Parser&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Relation_Parser", "fromLink": "Doctrine_Relation_Parser.html", "link": "Doctrine_Relation_Parser.html#method___construct", "name": "Doctrine_Relation_Parser::__construct", "doc": "&quot;constructor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation_Parser", "fromLink": "Doctrine_Relation_Parser.html", "link": "Doctrine_Relation_Parser.html#method_getTable", "name": "Doctrine_Relation_Parser::getTable", "doc": "&quot;getTable&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation_Parser", "fromLink": "Doctrine_Relation_Parser.html", "link": "Doctrine_Relation_Parser.html#method_getPendingRelation", "name": "Doctrine_Relation_Parser::getPendingRelation", "doc": "&quot;getPendingRelation&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation_Parser", "fromLink": "Doctrine_Relation_Parser.html", "link": "Doctrine_Relation_Parser.html#method_getPendingRelations", "name": "Doctrine_Relation_Parser::getPendingRelations", "doc": "&quot;getPendingRelations&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation_Parser", "fromLink": "Doctrine_Relation_Parser.html", "link": "Doctrine_Relation_Parser.html#method_unsetPendingRelations", "name": "Doctrine_Relation_Parser::unsetPendingRelations", "doc": "&quot;unsetPendingRelations\nRemoves a relation. Warning: this only affects pending relations&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation_Parser", "fromLink": "Doctrine_Relation_Parser.html", "link": "Doctrine_Relation_Parser.html#method_hasRelation", "name": "Doctrine_Relation_Parser::hasRelation", "doc": "&quot;Check if a relation alias exists&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation_Parser", "fromLink": "Doctrine_Relation_Parser.html", "link": "Doctrine_Relation_Parser.html#method_bind", "name": "Doctrine_Relation_Parser::bind", "doc": "&quot;binds a relation&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation_Parser", "fromLink": "Doctrine_Relation_Parser.html", "link": "Doctrine_Relation_Parser.html#method_getRelation", "name": "Doctrine_Relation_Parser::getRelation", "doc": "&quot;getRelation&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation_Parser", "fromLink": "Doctrine_Relation_Parser.html", "link": "Doctrine_Relation_Parser.html#method_getRelations", "name": "Doctrine_Relation_Parser::getRelations", "doc": "&quot;getRelations\nreturns an array containing all relation objects&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation_Parser", "fromLink": "Doctrine_Relation_Parser.html", "link": "Doctrine_Relation_Parser.html#method_getImpl", "name": "Doctrine_Relation_Parser::getImpl", "doc": "&quot;getImpl\nreturns the table class of the concrete implementation for given template\nif the given template is not a template then this method just returns the\ntable class for the given record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation_Parser", "fromLink": "Doctrine_Relation_Parser.html", "link": "Doctrine_Relation_Parser.html#method_completeAssocDefinition", "name": "Doctrine_Relation_Parser::completeAssocDefinition", "doc": "&quot;Completes the given association definition&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation_Parser", "fromLink": "Doctrine_Relation_Parser.html", "link": "Doctrine_Relation_Parser.html#method_getIdentifiers", "name": "Doctrine_Relation_Parser::getIdentifiers", "doc": "&quot;getIdentifiers\ngives a list of identifiers from given table&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation_Parser", "fromLink": "Doctrine_Relation_Parser.html", "link": "Doctrine_Relation_Parser.html#method_guessColumns", "name": "Doctrine_Relation_Parser::guessColumns", "doc": "&quot;guessColumns&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Relation_Parser", "fromLink": "Doctrine_Relation_Parser.html", "link": "Doctrine_Relation_Parser.html#method_completeDefinition", "name": "Doctrine_Relation_Parser::completeDefinition", "doc": "&quot;Completes the given definition&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Relation_Parser_Exception.html", "name": "Doctrine_Relation_Parser_Exception", "doc": "&quot;Doctrine_Relation_Parser_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Search.html", "name": "Doctrine_Search", "doc": "&quot;Doctrine_Search&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Search", "fromLink": "Doctrine_Search.html", "link": "Doctrine_Search.html#method___construct", "name": "Doctrine_Search::__construct", "doc": "&quot;__construct&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Search", "fromLink": "Doctrine_Search.html", "link": "Doctrine_Search.html#method_buildTable", "name": "Doctrine_Search::buildTable", "doc": "&quot;Create the new Doctrine_Table instance in $this-&gt;_table based on the owning\ntable.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Search", "fromLink": "Doctrine_Search.html", "link": "Doctrine_Search.html#method_search", "name": "Doctrine_Search::search", "doc": "&quot;Searchable keyword search&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Search", "fromLink": "Doctrine_Search.html", "link": "Doctrine_Search.html#method_analyze", "name": "Doctrine_Search::analyze", "doc": "&quot;analyze a text in the encoding format&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Search", "fromLink": "Doctrine_Search.html", "link": "Doctrine_Search.html#method_updateIndex", "name": "Doctrine_Search::updateIndex", "doc": "&quot;updateIndex\nupdates the index&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Search", "fromLink": "Doctrine_Search.html", "link": "Doctrine_Search.html#method_readTableData", "name": "Doctrine_Search::readTableData", "doc": "&quot;readTableData&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Search", "fromLink": "Doctrine_Search.html", "link": "Doctrine_Search.html#method_batchUpdateIndex", "name": "Doctrine_Search::batchUpdateIndex", "doc": "&quot;batchUpdateIndex&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Search", "fromLink": "Doctrine_Search.html", "link": "Doctrine_Search.html#method_setTableDefinition", "name": "Doctrine_Search::setTableDefinition", "doc": "&quot;buildDefinition&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Search_Analyzer.html", "name": "Doctrine_Search_Analyzer", "doc": "&quot;Doctrine_Search_Analyzer&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Search_Analyzer", "fromLink": "Doctrine_Search_Analyzer.html", "link": "Doctrine_Search_Analyzer.html#method___construct", "name": "Doctrine_Search_Analyzer::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Search_Analyzer", "fromLink": "Doctrine_Search_Analyzer.html", "link": "Doctrine_Search_Analyzer.html#method_analyze", "name": "Doctrine_Search_Analyzer::analyze", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Search_Analyzer_Exception.html", "name": "Doctrine_Search_Analyzer_Exception", "doc": "&quot;Doctrine_Search_Analyzer_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Search_Analyzer_Interface.html", "name": "Doctrine_Search_Analyzer_Interface", "doc": "&quot;Doctrine_Search_Analyzer_Interface&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Search_Analyzer_Interface", "fromLink": "Doctrine_Search_Analyzer_Interface.html", "link": "Doctrine_Search_Analyzer_Interface.html#method_analyze", "name": "Doctrine_Search_Analyzer_Interface::analyze", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Search_Analyzer_Standard.html", "name": "Doctrine_Search_Analyzer_Standard", "doc": "&quot;Doctrine_Search_Analyzer_Standard&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Search_Analyzer_Standard", "fromLink": "Doctrine_Search_Analyzer_Standard.html", "link": "Doctrine_Search_Analyzer_Standard.html#method_analyze", "name": "Doctrine_Search_Analyzer_Standard::analyze", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Search_Analyzer_Utf8.html", "name": "Doctrine_Search_Analyzer_Utf8", "doc": "&quot;Doctrine_Search_Analyzer_Utf8&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Search_Analyzer_Utf8", "fromLink": "Doctrine_Search_Analyzer_Utf8.html", "link": "Doctrine_Search_Analyzer_Utf8.html#method_analyze", "name": "Doctrine_Search_Analyzer_Utf8::analyze", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Search_Exception.html", "name": "Doctrine_Search_Exception", "doc": "&quot;Doctrine_Search_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Search_File.html", "name": "Doctrine_Search_File", "doc": "&quot;Doctrine_Search&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Search_File", "fromLink": "Doctrine_Search_File.html", "link": "Doctrine_Search_File.html#method___construct", "name": "Doctrine_Search_File::__construct", "doc": "&quot;constructor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Search_File", "fromLink": "Doctrine_Search_File.html", "link": "Doctrine_Search_File.html#method_buildRelation", "name": "Doctrine_Search_File::buildRelation", "doc": "&quot;This method can be used for generating the relation from the plugin\ntable to the owner table. By default buildForeignRelation() and buildLocalRelation() are called\nThose methods can be overridden or this entire method can be overridden&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Search_File", "fromLink": "Doctrine_Search_File.html", "link": "Doctrine_Search_File.html#method_indexDirectory", "name": "Doctrine_Search_File::indexDirectory", "doc": "&quot;indexes given directory&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Search_Indexer.html", "name": "Doctrine_Search_Indexer", "doc": "&quot;Doctrine_Search_Indexer&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Search_Indexer", "fromLink": "Doctrine_Search_Indexer.html", "link": "Doctrine_Search_Indexer.html#method_indexDirectory", "name": "Doctrine_Search_Indexer::indexDirectory", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Search_Indexer_Dir.html", "name": "Doctrine_Search_Indexer_Dir", "doc": "&quot;Doctrine_Search_Indexer_Dir&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Search_Indexer_Dir", "fromLink": "Doctrine_Search_Indexer_Dir.html", "link": "Doctrine_Search_Indexer_Dir.html#method_add", "name": "Doctrine_Search_Indexer_Dir::add", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Search_Indexer_Exception.html", "name": "Doctrine_Search_Indexer_Exception", "doc": "&quot;Doctrine_Search_Indexer&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Search_Listener.html", "name": "Doctrine_Search_Listener", "doc": "&quot;Doctrine_Search_Listener&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Search_Listener", "fromLink": "Doctrine_Search_Listener.html", "link": "Doctrine_Search_Listener.html#method___construct", "name": "Doctrine_Search_Listener::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Search_Listener", "fromLink": "Doctrine_Search_Listener.html", "link": "Doctrine_Search_Listener.html#method_preUpdate", "name": "Doctrine_Search_Listener::preUpdate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Search_Listener", "fromLink": "Doctrine_Search_Listener.html", "link": "Doctrine_Search_Listener.html#method_postUpdate", "name": "Doctrine_Search_Listener::postUpdate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Search_Listener", "fromLink": "Doctrine_Search_Listener.html", "link": "Doctrine_Search_Listener.html#method_postInsert", "name": "Doctrine_Search_Listener::postInsert", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Search_Parser.html", "name": "Doctrine_Search_Parser", "doc": "&quot;Doctrine_Search_Parser_Standard&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Search_Parser", "fromLink": "Doctrine_Search_Parser.html", "link": "Doctrine_Search_Parser.html#method_parse", "name": "Doctrine_Search_Parser::parse", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Search_Query.html", "name": "Doctrine_Search_Query", "doc": "&quot;Doctrine_Search_Query&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Search_Query", "fromLink": "Doctrine_Search_Query.html", "link": "Doctrine_Search_Query.html#method___construct", "name": "Doctrine_Search_Query::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Search_Query", "fromLink": "Doctrine_Search_Query.html", "link": "Doctrine_Search_Query.html#method_query", "name": "Doctrine_Search_Query::query", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Search_Query", "fromLink": "Doctrine_Search_Query.html", "link": "Doctrine_Search_Query.html#method_parseClause", "name": "Doctrine_Search_Query::parseClause", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Search_Query", "fromLink": "Doctrine_Search_Query.html", "link": "Doctrine_Search_Query.html#method_isExpression", "name": "Doctrine_Search_Query::isExpression", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Search_Query", "fromLink": "Doctrine_Search_Query.html", "link": "Doctrine_Search_Query.html#method_parseTerm", "name": "Doctrine_Search_Query::parseTerm", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Search_Query", "fromLink": "Doctrine_Search_Query.html", "link": "Doctrine_Search_Query.html#method_parseWord", "name": "Doctrine_Search_Query::parseWord", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Search_Query", "fromLink": "Doctrine_Search_Query.html", "link": "Doctrine_Search_Query.html#method_getWords", "name": "Doctrine_Search_Query::getWords", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Search_Query", "fromLink": "Doctrine_Search_Query.html", "link": "Doctrine_Search_Query.html#method_getParams", "name": "Doctrine_Search_Query::getParams", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Search_Query", "fromLink": "Doctrine_Search_Query.html", "link": "Doctrine_Search_Query.html#method_getSqlQuery", "name": "Doctrine_Search_Query::getSqlQuery", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Search_Record.html", "name": "Doctrine_Search_Record", "doc": "&quot;Doctrine_Search_Record&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Search_Record", "fromLink": "Doctrine_Search_Record.html", "link": "Doctrine_Search_Record.html#method_setTableDefinition", "name": "Doctrine_Search_Record::setTableDefinition", "doc": "&quot;Blank method for template table definition&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Search_Record", "fromLink": "Doctrine_Search_Record.html", "link": "Doctrine_Search_Record.html#method_setUp", "name": "Doctrine_Search_Record::setUp", "doc": "&quot;Blank method for template setup&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Sequence.html", "name": "Doctrine_Sequence", "doc": "&quot;Doctrine_Sequence\nThe base class for sequence handling drivers.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Sequence", "fromLink": "Doctrine_Sequence.html", "link": "Doctrine_Sequence.html#method_nextId", "name": "Doctrine_Sequence::nextId", "doc": "&quot;Returns the next free id of a sequence&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Sequence", "fromLink": "Doctrine_Sequence.html", "link": "Doctrine_Sequence.html#method_lastInsertId", "name": "Doctrine_Sequence::lastInsertId", "doc": "&quot;Returns the autoincrement ID if supported or $id or fetches the current\nID in a sequence called: $table.(empty($field) ? &#039;&#039; : &#039;_&#039;.$field)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Sequence", "fromLink": "Doctrine_Sequence.html", "link": "Doctrine_Sequence.html#method_currId", "name": "Doctrine_Sequence::currId", "doc": "&quot;Returns the current id of a sequence&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Sequence_Db2.html", "name": "Doctrine_Sequence_Db2", "doc": "&quot;Doctrine_Sequence_Db2&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Sequence_Db2", "fromLink": "Doctrine_Sequence_Db2.html", "link": "Doctrine_Sequence_Db2.html#method_nextId", "name": "Doctrine_Sequence_Db2::nextId", "doc": "&quot;Returns the next free id of a sequence&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Sequence_Db2", "fromLink": "Doctrine_Sequence_Db2.html", "link": "Doctrine_Sequence_Db2.html#method_currId", "name": "Doctrine_Sequence_Db2::currId", "doc": "&quot;Return the most recent value from the specified sequence in the database.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Sequence_Db2", "fromLink": "Doctrine_Sequence_Db2.html", "link": "Doctrine_Sequence_Db2.html#method_lastInsertId", "name": "Doctrine_Sequence_Db2::lastInsertId", "doc": "&quot;Gets the last ID generated automatically by an IDENTITY\/AUTOINCREMENT column.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Sequence_Exception.html", "name": "Doctrine_Sequence_Exception", "doc": "&quot;Doctrine_Sequence_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Sequence_Mssql.html", "name": "Doctrine_Sequence_Mssql", "doc": "&quot;Doctrine_Sequence_Mssql&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Sequence_Mssql", "fromLink": "Doctrine_Sequence_Mssql.html", "link": "Doctrine_Sequence_Mssql.html#method_nextId", "name": "Doctrine_Sequence_Mssql::nextId", "doc": "&quot;Returns the next free id of a sequence&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Sequence_Mssql", "fromLink": "Doctrine_Sequence_Mssql.html", "link": "Doctrine_Sequence_Mssql.html#method_checkSequence", "name": "Doctrine_Sequence_Mssql::checkSequence", "doc": "&quot;Checks if there&#039;s a sequence that exists.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Sequence_Mssql", "fromLink": "Doctrine_Sequence_Mssql.html", "link": "Doctrine_Sequence_Mssql.html#method_lastInsertId", "name": "Doctrine_Sequence_Mssql::lastInsertId", "doc": "&quot;Returns the autoincrement ID if supported or $id or fetches the current\nID in a sequence called: $table.(empty($field) ? &#039;&#039; : &#039;_&#039;.$field)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Sequence_Mssql", "fromLink": "Doctrine_Sequence_Mssql.html", "link": "Doctrine_Sequence_Mssql.html#method_currId", "name": "Doctrine_Sequence_Mssql::currId", "doc": "&quot;Returns the current id of a sequence&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Sequence_Mysql.html", "name": "Doctrine_Sequence_Mysql", "doc": "&quot;Doctrine_Sequence_Mysql&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Sequence_Mysql", "fromLink": "Doctrine_Sequence_Mysql.html", "link": "Doctrine_Sequence_Mysql.html#method_nextId", "name": "Doctrine_Sequence_Mysql::nextId", "doc": "&quot;Returns the next free id of a sequence&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Sequence_Mysql", "fromLink": "Doctrine_Sequence_Mysql.html", "link": "Doctrine_Sequence_Mysql.html#method_lastInsertId", "name": "Doctrine_Sequence_Mysql::lastInsertId", "doc": "&quot;Returns the autoincrement ID if supported or $id or fetches the current\nID in a sequence called: $table.(empty($field) ? &#039;&#039; : &#039;_&#039;.$field)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Sequence_Mysql", "fromLink": "Doctrine_Sequence_Mysql.html", "link": "Doctrine_Sequence_Mysql.html#method_currId", "name": "Doctrine_Sequence_Mysql::currId", "doc": "&quot;Returns the current id of a sequence&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Sequence_Oracle.html", "name": "Doctrine_Sequence_Oracle", "doc": "&quot;Doctrine_Sequence_Oracle&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Sequence_Oracle", "fromLink": "Doctrine_Sequence_Oracle.html", "link": "Doctrine_Sequence_Oracle.html#method_nextID", "name": "Doctrine_Sequence_Oracle::nextID", "doc": "&quot;Returns the next free id of a sequence&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Sequence_Oracle", "fromLink": "Doctrine_Sequence_Oracle.html", "link": "Doctrine_Sequence_Oracle.html#method_lastInsertID", "name": "Doctrine_Sequence_Oracle::lastInsertID", "doc": "&quot;Returns the autoincrement ID if supported or $id or fetches the current\nID in a sequence called: $table.(empty($field) ? &#039;&#039; : &#039;_&#039;.$field)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Sequence_Oracle", "fromLink": "Doctrine_Sequence_Oracle.html", "link": "Doctrine_Sequence_Oracle.html#method_currId", "name": "Doctrine_Sequence_Oracle::currId", "doc": "&quot;Returns the current id of a sequence&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Sequence_Pgsql.html", "name": "Doctrine_Sequence_Pgsql", "doc": "&quot;Doctrine_Sequence_Pgsql&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Sequence_Pgsql", "fromLink": "Doctrine_Sequence_Pgsql.html", "link": "Doctrine_Sequence_Pgsql.html#method_nextId", "name": "Doctrine_Sequence_Pgsql::nextId", "doc": "&quot;Returns the next free id of a sequence&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Sequence_Pgsql", "fromLink": "Doctrine_Sequence_Pgsql.html", "link": "Doctrine_Sequence_Pgsql.html#method_lastInsertId", "name": "Doctrine_Sequence_Pgsql::lastInsertId", "doc": "&quot;lastInsertId&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Sequence_Pgsql", "fromLink": "Doctrine_Sequence_Pgsql.html", "link": "Doctrine_Sequence_Pgsql.html#method_currId", "name": "Doctrine_Sequence_Pgsql::currId", "doc": "&quot;Returns the current id of a sequence&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Sequence_Sqlite.html", "name": "Doctrine_Sequence_Sqlite", "doc": "&quot;Doctrine_Sequence_Sqlite&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Sequence_Sqlite", "fromLink": "Doctrine_Sequence_Sqlite.html", "link": "Doctrine_Sequence_Sqlite.html#method_nextId", "name": "Doctrine_Sequence_Sqlite::nextId", "doc": "&quot;Returns the next free id of a sequence&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Sequence_Sqlite", "fromLink": "Doctrine_Sequence_Sqlite.html", "link": "Doctrine_Sequence_Sqlite.html#method_lastInsertId", "name": "Doctrine_Sequence_Sqlite::lastInsertId", "doc": "&quot;Returns the autoincrement ID if supported or $id or fetches the current\nID in a sequence called: $table.(empty($field) ? &#039;&#039; : &#039;_&#039;.$field)&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Sequence_Sqlite", "fromLink": "Doctrine_Sequence_Sqlite.html", "link": "Doctrine_Sequence_Sqlite.html#method_currId", "name": "Doctrine_Sequence_Sqlite::currId", "doc": "&quot;Returns the current id of a sequence&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Table.html", "name": "Doctrine_Table", "doc": "&quot;Doctrine_Table   represents a database table\n                 each Doctrine_Table holds the information of foreignKeys and associations&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method___construct", "name": "Doctrine_Table::__construct", "doc": "&quot;the constructor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_construct", "name": "Doctrine_Table::construct", "doc": "&quot;Construct template method.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_initDefinition", "name": "Doctrine_Table::initDefinition", "doc": "&quot;Initializes the in-memory table definition.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_initIdentifier", "name": "Doctrine_Table::initIdentifier", "doc": "&quot;Initializes the primary key.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getColumnOwner", "name": "Doctrine_Table::getColumnOwner", "doc": "&quot;Gets the owner of a column.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getRecordInstance", "name": "Doctrine_Table::getRecordInstance", "doc": "&quot;Gets the record instance for this table.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_isInheritedColumn", "name": "Doctrine_Table::isInheritedColumn", "doc": "&quot;Checks whether a column is inherited from a component further up in the hierarchy.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_isIdentifier", "name": "Doctrine_Table::isIdentifier", "doc": "&quot;Checks whether a field is in the primary key.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_isIdentifierAutoincrement", "name": "Doctrine_Table::isIdentifierAutoincrement", "doc": "&quot;Checks whether a field identifier is of type autoincrement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_isIdentifierComposite", "name": "Doctrine_Table::isIdentifierComposite", "doc": "&quot;Checks whether a field identifier is a composite key.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getMethodOwner", "name": "Doctrine_Table::getMethodOwner", "doc": "&quot;getMethodOwner&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_setMethodOwner", "name": "Doctrine_Table::setMethodOwner", "doc": "&quot;setMethodOwner&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_export", "name": "Doctrine_Table::export", "doc": "&quot;Exports this table to database based on the schema definition.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getExportableFormat", "name": "Doctrine_Table::getExportableFormat", "doc": "&quot;Returns an exportable representation of this object.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method__checkForeignKeyExists", "name": "Doctrine_Table::_checkForeignKeyExists", "doc": "&quot;Check if a foreign definition already exists in the fks array for a\nforeign table, local and foreign key&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getRelationParser", "name": "Doctrine_Table::getRelationParser", "doc": "&quot;Retrieves the relation parser associated with this table.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method___get", "name": "Doctrine_Table::__get", "doc": "&quot;Magic method for accessing to object properties.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method___isset", "name": "Doctrine_Table::__isset", "doc": "&quot;Magic method for testing object properties existence.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getOptions", "name": "Doctrine_Table::getOptions", "doc": "&quot;Retrieves all options of this table and the associated values.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_setOptions", "name": "Doctrine_Table::setOptions", "doc": "&quot;Sets all the options.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_addForeignKey", "name": "Doctrine_Table::addForeignKey", "doc": "&quot;Adds a foreignKey to the table in-memory definition.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_addCheckConstraint", "name": "Doctrine_Table::addCheckConstraint", "doc": "&quot;Adds a check constraint to the table in-memory definition.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_addIndex", "name": "Doctrine_Table::addIndex", "doc": "&quot;Adds an index to this table in-memory definition.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getIndex", "name": "Doctrine_Table::getIndex", "doc": "&quot;Retrieves an index definition.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_unique", "name": "Doctrine_Table::unique", "doc": "&quot;Defines a n-uple of fields that must be unique for every record.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_bind", "name": "Doctrine_Table::bind", "doc": "&quot;Adds a relation to the table.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_hasOne", "name": "Doctrine_Table::hasOne", "doc": "&quot;Binds One-to-One aggregate relation&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_hasMany", "name": "Doctrine_Table::hasMany", "doc": "&quot;Binds One-to-Many \/ Many-to-Many aggregate relation&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_hasRelation", "name": "Doctrine_Table::hasRelation", "doc": "&quot;Tests if a relation exists.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getRelation", "name": "Doctrine_Table::getRelation", "doc": "&quot;Retrieves a relation object for this component.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getRelations", "name": "Doctrine_Table::getRelations", "doc": "&quot;Retrieves all relation objects defined on this table.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_createQuery", "name": "Doctrine_Table::createQuery", "doc": "&quot;Creates a query on this table.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getRepository", "name": "Doctrine_Table::getRepository", "doc": "&quot;Gets the internal record repository.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_setOption", "name": "Doctrine_Table::setOption", "doc": "&quot;Sets an option for the table.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getOption", "name": "Doctrine_Table::getOption", "doc": "&quot;Returns the value of a given option.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getOrderByStatement", "name": "Doctrine_Table::getOrderByStatement", "doc": "&quot;Get the table orderby statement&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_processOrderBy", "name": "Doctrine_Table::processOrderBy", "doc": "&quot;Process an order by statement to be prefixed with the passed alias and\nfield names converted to column names if the 3rd argument is true.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getColumnName", "name": "Doctrine_Table::getColumnName", "doc": "&quot;Returns a column name for a column alias.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getColumnDefinition", "name": "Doctrine_Table::getColumnDefinition", "doc": "&quot;Retrieves a column definition from this table schema.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getFieldName", "name": "Doctrine_Table::getFieldName", "doc": "&quot;Returns a column alias for a column name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_setColumnOptions", "name": "Doctrine_Table::setColumnOptions", "doc": "&quot;Customize the array of options for a column or multiple columns. First\nargument can be a single field\/column name or an array of them. The second\nargument is an array of options.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_setColumnOption", "name": "Doctrine_Table::setColumnOption", "doc": "&quot;Set an individual column option&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_setColumns", "name": "Doctrine_Table::setColumns", "doc": "&quot;Set multiple column definitions at once&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_setColumn", "name": "Doctrine_Table::setColumn", "doc": "&quot;Adds a column to the schema.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_hasDefaultValues", "name": "Doctrine_Table::hasDefaultValues", "doc": "&quot;Finds out whether this table has default values for columns.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getDefaultValueOf", "name": "Doctrine_Table::getDefaultValueOf", "doc": "&quot;Retrieves the default value (if any) for a given column.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getIdentifier", "name": "Doctrine_Table::getIdentifier", "doc": "&quot;Returns the definition of the identifier key.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getIdentifierType", "name": "Doctrine_Table::getIdentifierType", "doc": "&quot;Retrieves the type of primary key.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_hasColumn", "name": "Doctrine_Table::hasColumn", "doc": "&quot;Finds out whether the table definition contains a given column.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_hasField", "name": "Doctrine_Table::hasField", "doc": "&quot;Finds out whether the table definition has a given field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_setConnection", "name": "Doctrine_Table::setConnection", "doc": "&quot;Sets the default connection for this table.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getConnection", "name": "Doctrine_Table::getConnection", "doc": "&quot;Returns the connection associated with this table (if any).&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_create", "name": "Doctrine_Table::create", "doc": "&quot;Creates a new record.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_addNamedQuery", "name": "Doctrine_Table::addNamedQuery", "doc": "&quot;Adds a named query in the query registry.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_createNamedQuery", "name": "Doctrine_Table::createNamedQuery", "doc": "&quot;Creates a named query from one in the query registry.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_find", "name": "Doctrine_Table::find", "doc": "&quot;Finds a record by its identifier.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_findAll", "name": "Doctrine_Table::findAll", "doc": "&quot;Retrieves all the records stored in this table.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_findBySql", "name": "Doctrine_Table::findBySql", "doc": "&quot;Finds records in this table with a given SQL where clause.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_findByDql", "name": "Doctrine_Table::findByDql", "doc": "&quot;Finds records in this table with a given DQL where clause.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_findBy", "name": "Doctrine_Table::findBy", "doc": "&quot;Find records basing on a field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_findOneBy", "name": "Doctrine_Table::findOneBy", "doc": "&quot;Finds the first record that satisfy the clause.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_execute", "name": "Doctrine_Table::execute", "doc": "&quot;Finds result of a named query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_executeOne", "name": "Doctrine_Table::executeOne", "doc": "&quot;Fetches one record with a named query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_clear", "name": "Doctrine_Table::clear", "doc": "&quot;Clears the first level cache (identityMap).&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_addRecord", "name": "Doctrine_Table::addRecord", "doc": "&quot;Adds a record to the first level cache (identity map).&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_removeRecord", "name": "Doctrine_Table::removeRecord", "doc": "&quot;Removes a record from the identity map.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getRecord", "name": "Doctrine_Table::getRecord", "doc": "&quot;Returns a new record.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getClassnameToReturn", "name": "Doctrine_Table::getClassnameToReturn", "doc": "&quot;Get the classname to return. Most often this is just the options[&#039;name&#039;].&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getProxy", "name": "Doctrine_Table::getProxy", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_applyInheritance", "name": "Doctrine_Table::applyInheritance", "doc": "&quot;applyInheritance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_count", "name": "Doctrine_Table::count", "doc": "&quot;Implements Countable interface.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getQueryObject", "name": "Doctrine_Table::getQueryObject", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getEnumValues", "name": "Doctrine_Table::getEnumValues", "doc": "&quot;Retrieves the enum values for a given field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_enumValue", "name": "Doctrine_Table::enumValue", "doc": "&quot;Retrieves an enum value.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_enumIndex", "name": "Doctrine_Table::enumIndex", "doc": "&quot;Retrieves an enum index.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_validateField", "name": "Doctrine_Table::validateField", "doc": "&quot;Validates a given field using table ATTR_VALIDATE rules.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_validateUniques", "name": "Doctrine_Table::validateUniques", "doc": "&quot;Validates all the unique indexes.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getColumnCount", "name": "Doctrine_Table::getColumnCount", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getColumns", "name": "Doctrine_Table::getColumns", "doc": "&quot;Retrieves all columns of the table.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_removeColumn", "name": "Doctrine_Table::removeColumn", "doc": "&quot;Removes a field name from the table schema information.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getColumnNames", "name": "Doctrine_Table::getColumnNames", "doc": "&quot;Returns an array containing all the column names.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getIdentifierColumnNames", "name": "Doctrine_Table::getIdentifierColumnNames", "doc": "&quot;Returns an array with all the identifier column names.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getUniques", "name": "Doctrine_Table::getUniques", "doc": "&quot;Gets the array of unique fields sets.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getFieldNames", "name": "Doctrine_Table::getFieldNames", "doc": "&quot;Returns an array containing all the field names.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getDefinitionOf", "name": "Doctrine_Table::getDefinitionOf", "doc": "&quot;Retrieves the definition of a field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getTypeOf", "name": "Doctrine_Table::getTypeOf", "doc": "&quot;Retrieves the type of a field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getTypeOfColumn", "name": "Doctrine_Table::getTypeOfColumn", "doc": "&quot;Retrieves the type of a column.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_setData", "name": "Doctrine_Table::setData", "doc": "&quot;Doctrine uses this function internally.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getData", "name": "Doctrine_Table::getData", "doc": "&quot;Returns internal data.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_prepareValue", "name": "Doctrine_Table::prepareValue", "doc": "&quot;Performs special data preparation.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getTree", "name": "Doctrine_Table::getTree", "doc": "&quot;Gets associated tree.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getComponentName", "name": "Doctrine_Table::getComponentName", "doc": "&quot;Gets the subclass of Doctrine_Record that belongs to this table.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getTableName", "name": "Doctrine_Table::getTableName", "doc": "&quot;Gets the table name in the db.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_setTableName", "name": "Doctrine_Table::setTableName", "doc": "&quot;sets the table name in the schema definition.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_isTree", "name": "Doctrine_Table::isTree", "doc": "&quot;Determines if table acts as tree.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getTemplates", "name": "Doctrine_Table::getTemplates", "doc": "&quot;Retrieves all templates (behaviors) attached to this table.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getTemplate", "name": "Doctrine_Table::getTemplate", "doc": "&quot;Retrieves a particular template by class name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_hasTemplate", "name": "Doctrine_Table::hasTemplate", "doc": "&quot;Checks if the table has a given template.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_addTemplate", "name": "Doctrine_Table::addTemplate", "doc": "&quot;Adds a template to this table.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getGenerators", "name": "Doctrine_Table::getGenerators", "doc": "&quot;Gets all the generators for this table.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getGenerator", "name": "Doctrine_Table::getGenerator", "doc": "&quot;Gets generator instance for a passed name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_hasGenerator", "name": "Doctrine_Table::hasGenerator", "doc": "&quot;Checks if a generator name exists.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_addGenerator", "name": "Doctrine_Table::addGenerator", "doc": "&quot;Adds a generate to the table instance.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_setGenerator", "name": "Doctrine_Table::setGenerator", "doc": "&quot;Set the generator responsible for creating this table&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_isGenerator", "name": "Doctrine_Table::isGenerator", "doc": "&quot;Check whether this table was created by a record generator or not&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getParentGenerator", "name": "Doctrine_Table::getParentGenerator", "doc": "&quot;Get the parent generator responsible for this table instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_bindQueryParts", "name": "Doctrine_Table::bindQueryParts", "doc": "&quot;Binds query parts to this component.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_bindQueryPart", "name": "Doctrine_Table::bindQueryPart", "doc": "&quot;Adds default query parts to the selects executed on this table.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getFieldValidators", "name": "Doctrine_Table::getFieldValidators", "doc": "&quot;Gets the names of all validators being applied on a field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getFieldLength", "name": "Doctrine_Table::getFieldLength", "doc": "&quot;Gets the maximum length of a field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getBoundQueryPart", "name": "Doctrine_Table::getBoundQueryPart", "doc": "&quot;Retrieves a bound query part.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_unshiftFilter", "name": "Doctrine_Table::unshiftFilter", "doc": "&quot;unshiftFilter&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_getFilters", "name": "Doctrine_Table::getFilters", "doc": "&quot;getFilters&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method___toString", "name": "Doctrine_Table::__toString", "doc": "&quot;Generates a string representation of this object.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method_buildFindByWhere", "name": "Doctrine_Table::buildFindByWhere", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method__resolveFindByFieldName", "name": "Doctrine_Table::_resolveFindByFieldName", "doc": "&quot;Resolves the passed find by field name inflecting the parameter.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table", "fromLink": "Doctrine_Table.html", "link": "Doctrine_Table.html#method___call", "name": "Doctrine_Table::__call", "doc": "&quot;Adds support for magic finders.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Table_Exception.html", "name": "Doctrine_Table_Exception", "doc": "&quot;thrown when user tries to initialize a new instance of Doctrine_Table,\nwhile there already exists an instance of that table&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Table_Exception", "fromLink": "Doctrine_Table_Exception.html", "link": "Doctrine_Table_Exception.html#method___construct", "name": "Doctrine_Table_Exception::__construct", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Table_Repository.html", "name": "Doctrine_Table_Repository", "doc": "&quot;Doctrine_Repository\neach record is added into Doctrine_Repository at the same time they are created,\nloaded from the database or retrieved from the cache&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Table_Repository", "fromLink": "Doctrine_Table_Repository.html", "link": "Doctrine_Table_Repository.html#method___construct", "name": "Doctrine_Table_Repository::__construct", "doc": "&quot;constructor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table_Repository", "fromLink": "Doctrine_Table_Repository.html", "link": "Doctrine_Table_Repository.html#method_getTable", "name": "Doctrine_Table_Repository::getTable", "doc": "&quot;getTable&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table_Repository", "fromLink": "Doctrine_Table_Repository.html", "link": "Doctrine_Table_Repository.html#method_add", "name": "Doctrine_Table_Repository::add", "doc": "&quot;add&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table_Repository", "fromLink": "Doctrine_Table_Repository.html", "link": "Doctrine_Table_Repository.html#method_get", "name": "Doctrine_Table_Repository::get", "doc": "&quot;get&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table_Repository", "fromLink": "Doctrine_Table_Repository.html", "link": "Doctrine_Table_Repository.html#method_count", "name": "Doctrine_Table_Repository::count", "doc": "&quot;count\nDoctrine_Registry implements interface Countable&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table_Repository", "fromLink": "Doctrine_Table_Repository.html", "link": "Doctrine_Table_Repository.html#method_evict", "name": "Doctrine_Table_Repository::evict", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table_Repository", "fromLink": "Doctrine_Table_Repository.html", "link": "Doctrine_Table_Repository.html#method_evictAll", "name": "Doctrine_Table_Repository::evictAll", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table_Repository", "fromLink": "Doctrine_Table_Repository.html", "link": "Doctrine_Table_Repository.html#method_getIterator", "name": "Doctrine_Table_Repository::getIterator", "doc": "&quot;getIterator&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table_Repository", "fromLink": "Doctrine_Table_Repository.html", "link": "Doctrine_Table_Repository.html#method_contains", "name": "Doctrine_Table_Repository::contains", "doc": "&quot;contains&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Table_Repository", "fromLink": "Doctrine_Table_Repository.html", "link": "Doctrine_Table_Repository.html#method_loadAll", "name": "Doctrine_Table_Repository::loadAll", "doc": "&quot;loadAll&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Table_Repository_Exception.html", "name": "Doctrine_Table_Repository_Exception", "doc": "&quot;Doctrine_Table_Repository_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Task.html", "name": "Doctrine_Task", "doc": "&quot;Doctrine_Task&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Task", "fromLink": "Doctrine_Task.html", "link": "Doctrine_Task.html#method___construct", "name": "Doctrine_Task::__construct", "doc": "&quot;__construct&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Task", "fromLink": "Doctrine_Task.html", "link": "Doctrine_Task.html#method_deriveTaskName", "name": "Doctrine_Task::deriveTaskName", "doc": "&quot;Returns the name of the task the specified class &lt;em&gt;would&lt;\/em&gt; implement&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Task", "fromLink": "Doctrine_Task.html", "link": "Doctrine_Task.html#method_notify", "name": "Doctrine_Task::notify", "doc": "&quot;notify&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Task", "fromLink": "Doctrine_Task.html", "link": "Doctrine_Task.html#method_ask", "name": "Doctrine_Task::ask", "doc": "&quot;ask&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Task", "fromLink": "Doctrine_Task.html", "link": "Doctrine_Task.html#method_execute", "name": "Doctrine_Task::execute", "doc": "&quot;execute&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Task", "fromLink": "Doctrine_Task.html", "link": "Doctrine_Task.html#method_validate", "name": "Doctrine_Task::validate", "doc": "&quot;validate&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Task", "fromLink": "Doctrine_Task.html", "link": "Doctrine_Task.html#method_addArgument", "name": "Doctrine_Task::addArgument", "doc": "&quot;addArgument&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Task", "fromLink": "Doctrine_Task.html", "link": "Doctrine_Task.html#method_getArgument", "name": "Doctrine_Task::getArgument", "doc": "&quot;getArgument&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Task", "fromLink": "Doctrine_Task.html", "link": "Doctrine_Task.html#method_getArguments", "name": "Doctrine_Task::getArguments", "doc": "&quot;getArguments&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Task", "fromLink": "Doctrine_Task.html", "link": "Doctrine_Task.html#method_setArguments", "name": "Doctrine_Task::setArguments", "doc": "&quot;setArguments&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Task", "fromLink": "Doctrine_Task.html", "link": "Doctrine_Task.html#method_validateTaskName", "name": "Doctrine_Task::validateTaskName", "doc": "&quot;Returns TRUE if the specified task name is valid, or FALSE otherwise&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Task", "fromLink": "Doctrine_Task.html", "link": "Doctrine_Task.html#method_setTaskName", "name": "Doctrine_Task::setTaskName", "doc": "&quot;Sets the name of the task, the name that&#039;s used to invoke it through a CLI&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Task", "fromLink": "Doctrine_Task.html", "link": "Doctrine_Task.html#method_getTaskName", "name": "Doctrine_Task::getTaskName", "doc": "&quot;getTaskName&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Task", "fromLink": "Doctrine_Task.html", "link": "Doctrine_Task.html#method_getDescription", "name": "Doctrine_Task::getDescription", "doc": "&quot;getDescription&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Task", "fromLink": "Doctrine_Task.html", "link": "Doctrine_Task.html#method_getRequiredArguments", "name": "Doctrine_Task::getRequiredArguments", "doc": "&quot;getRequiredArguments&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Task", "fromLink": "Doctrine_Task.html", "link": "Doctrine_Task.html#method_getOptionalArguments", "name": "Doctrine_Task::getOptionalArguments", "doc": "&quot;getOptionalArguments&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Task", "fromLink": "Doctrine_Task.html", "link": "Doctrine_Task.html#method_getRequiredArgumentsDescriptions", "name": "Doctrine_Task::getRequiredArgumentsDescriptions", "doc": "&quot;getRequiredArgumentsDescriptions&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Task", "fromLink": "Doctrine_Task.html", "link": "Doctrine_Task.html#method_getOptionalArgumentsDescriptions", "name": "Doctrine_Task::getOptionalArgumentsDescriptions", "doc": "&quot;getOptionalArgumentsDescriptions&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Task_BuildAll.html", "name": "Doctrine_Task_BuildAll", "doc": "&quot;Doctrine_Task_BuildAll&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Task_BuildAll", "fromLink": "Doctrine_Task_BuildAll.html", "link": "Doctrine_Task_BuildAll.html#method___construct", "name": "Doctrine_Task_BuildAll::__construct", "doc": "&quot;__construct&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Task_BuildAll", "fromLink": "Doctrine_Task_BuildAll.html", "link": "Doctrine_Task_BuildAll.html#method_execute", "name": "Doctrine_Task_BuildAll::execute", "doc": "&quot;execute&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Task_BuildAllLoad.html", "name": "Doctrine_Task_BuildAllLoad", "doc": "&quot;Doctrine_Task_BuildAllLoad&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Task_BuildAllLoad", "fromLink": "Doctrine_Task_BuildAllLoad.html", "link": "Doctrine_Task_BuildAllLoad.html#method___construct", "name": "Doctrine_Task_BuildAllLoad::__construct", "doc": "&quot;__construct&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Task_BuildAllLoad", "fromLink": "Doctrine_Task_BuildAllLoad.html", "link": "Doctrine_Task_BuildAllLoad.html#method_execute", "name": "Doctrine_Task_BuildAllLoad::execute", "doc": "&quot;execute&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Task_BuildAllReload.html", "name": "Doctrine_Task_BuildAllReload", "doc": "&quot;Doctrine_Task_BuildAllReload&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Task_BuildAllReload", "fromLink": "Doctrine_Task_BuildAllReload.html", "link": "Doctrine_Task_BuildAllReload.html#method___construct", "name": "Doctrine_Task_BuildAllReload::__construct", "doc": "&quot;__construct&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Task_BuildAllReload", "fromLink": "Doctrine_Task_BuildAllReload.html", "link": "Doctrine_Task_BuildAllReload.html#method_execute", "name": "Doctrine_Task_BuildAllReload::execute", "doc": "&quot;execute&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Task_Compile.html", "name": "Doctrine_Task_Compile", "doc": "&quot;Doctrine_Task_Compile&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Task_Compile", "fromLink": "Doctrine_Task_Compile.html", "link": "Doctrine_Task_Compile.html#method_execute", "name": "Doctrine_Task_Compile::execute", "doc": "&quot;execute&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Task_CreateDb.html", "name": "Doctrine_Task_CreateDb", "doc": "&quot;Doctrine_Task_CreateDb&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Task_CreateDb", "fromLink": "Doctrine_Task_CreateDb.html", "link": "Doctrine_Task_CreateDb.html#method_execute", "name": "Doctrine_Task_CreateDb::execute", "doc": "&quot;execute&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Task_CreateTables.html", "name": "Doctrine_Task_CreateTables", "doc": "&quot;Doctrine_Task_CreateTables&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Task_CreateTables", "fromLink": "Doctrine_Task_CreateTables.html", "link": "Doctrine_Task_CreateTables.html#method_execute", "name": "Doctrine_Task_CreateTables::execute", "doc": "&quot;execute&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Task_Dql.html", "name": "Doctrine_Task_Dql", "doc": "&quot;Doctrine_Task_Dql&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Task_Dql", "fromLink": "Doctrine_Task_Dql.html", "link": "Doctrine_Task_Dql.html#method_execute", "name": "Doctrine_Task_Dql::execute", "doc": "&quot;execute&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Task_Dql", "fromLink": "Doctrine_Task_Dql.html", "link": "Doctrine_Task_Dql.html#method__printResults", "name": "Doctrine_Task_Dql::_printResults", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Task_DropDb.html", "name": "Doctrine_Task_DropDb", "doc": "&quot;Doctrine_Task_DropDb&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Task_DropDb", "fromLink": "Doctrine_Task_DropDb.html", "link": "Doctrine_Task_DropDb.html#method_execute", "name": "Doctrine_Task_DropDb::execute", "doc": "&quot;execute&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Task_DumpData.html", "name": "Doctrine_Task_DumpData", "doc": "&quot;Doctrine_Task_DumpData&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Task_DumpData", "fromLink": "Doctrine_Task_DumpData.html", "link": "Doctrine_Task_DumpData.html#method_execute", "name": "Doctrine_Task_DumpData::execute", "doc": "&quot;execute&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Task_Exception.html", "name": "Doctrine_Task_Exception", "doc": "&quot;Doctrine_Task_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Task_GenerateMigration.html", "name": "Doctrine_Task_GenerateMigration", "doc": "&quot;Doctrine_Task_GenerateMigration&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Task_GenerateMigration", "fromLink": "Doctrine_Task_GenerateMigration.html", "link": "Doctrine_Task_GenerateMigration.html#method_execute", "name": "Doctrine_Task_GenerateMigration::execute", "doc": "&quot;execute&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Task_GenerateMigrationsDb.html", "name": "Doctrine_Task_GenerateMigrationsDb", "doc": "&quot;Doctrine_Task_GenerateMigrationsDb&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Task_GenerateMigrationsDb", "fromLink": "Doctrine_Task_GenerateMigrationsDb.html", "link": "Doctrine_Task_GenerateMigrationsDb.html#method_execute", "name": "Doctrine_Task_GenerateMigrationsDb::execute", "doc": "&quot;execute&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Task_GenerateMigrationsDiff.html", "name": "Doctrine_Task_GenerateMigrationsDiff", "doc": "&quot;Doctrine_Task_GenerateMigrationsDiff&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Task_GenerateMigrationsDiff", "fromLink": "Doctrine_Task_GenerateMigrationsDiff.html", "link": "Doctrine_Task_GenerateMigrationsDiff.html#method_execute", "name": "Doctrine_Task_GenerateMigrationsDiff::execute", "doc": "&quot;execute&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Task_GenerateMigrationsModels.html", "name": "Doctrine_Task_GenerateMigrationsModels", "doc": "&quot;Doctrine_Task_GenerateMigrationsModels&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Task_GenerateMigrationsModels", "fromLink": "Doctrine_Task_GenerateMigrationsModels.html", "link": "Doctrine_Task_GenerateMigrationsModels.html#method_execute", "name": "Doctrine_Task_GenerateMigrationsModels::execute", "doc": "&quot;execute&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Task_GenerateModelsDb.html", "name": "Doctrine_Task_GenerateModelsDb", "doc": "&quot;Doctrine_Task_GenerateModelsDb&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Task_GenerateModelsDb", "fromLink": "Doctrine_Task_GenerateModelsDb.html", "link": "Doctrine_Task_GenerateModelsDb.html#method_execute", "name": "Doctrine_Task_GenerateModelsDb::execute", "doc": "&quot;execute&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Task_GenerateModelsYaml.html", "name": "Doctrine_Task_GenerateModelsYaml", "doc": "&quot;Doctrine_Task_GenerateModelsYaml&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Task_GenerateModelsYaml", "fromLink": "Doctrine_Task_GenerateModelsYaml.html", "link": "Doctrine_Task_GenerateModelsYaml.html#method_execute", "name": "Doctrine_Task_GenerateModelsYaml::execute", "doc": "&quot;execute&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Task_GenerateSql.html", "name": "Doctrine_Task_GenerateSql", "doc": "&quot;Doctrine_Task_GenerateSql&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Task_GenerateSql", "fromLink": "Doctrine_Task_GenerateSql.html", "link": "Doctrine_Task_GenerateSql.html#method_execute", "name": "Doctrine_Task_GenerateSql::execute", "doc": "&quot;execute&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Task_GenerateYamlDb.html", "name": "Doctrine_Task_GenerateYamlDb", "doc": "&quot;Doctrine_Task_GenerateYamlDb&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Task_GenerateYamlDb", "fromLink": "Doctrine_Task_GenerateYamlDb.html", "link": "Doctrine_Task_GenerateYamlDb.html#method_execute", "name": "Doctrine_Task_GenerateYamlDb::execute", "doc": "&quot;execute&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Task_GenerateYamlModels.html", "name": "Doctrine_Task_GenerateYamlModels", "doc": "&quot;Doctrine_Task_GenerateFromModels&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Task_GenerateYamlModels", "fromLink": "Doctrine_Task_GenerateYamlModels.html", "link": "Doctrine_Task_GenerateYamlModels.html#method_execute", "name": "Doctrine_Task_GenerateYamlModels::execute", "doc": "&quot;execute&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Task_LoadData.html", "name": "Doctrine_Task_LoadData", "doc": "&quot;Doctrine_Task_LoadData&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Task_LoadData", "fromLink": "Doctrine_Task_LoadData.html", "link": "Doctrine_Task_LoadData.html#method_execute", "name": "Doctrine_Task_LoadData::execute", "doc": "&quot;execute&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Task_Migrate.html", "name": "Doctrine_Task_Migrate", "doc": "&quot;Doctrine_Task_Migrate&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Task_Migrate", "fromLink": "Doctrine_Task_Migrate.html", "link": "Doctrine_Task_Migrate.html#method_execute", "name": "Doctrine_Task_Migrate::execute", "doc": "&quot;execute&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Task_RebuildDb.html", "name": "Doctrine_Task_RebuildDb", "doc": "&quot;Doctrine_Task_RebuildDb&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Task_RebuildDb", "fromLink": "Doctrine_Task_RebuildDb.html", "link": "Doctrine_Task_RebuildDb.html#method___construct", "name": "Doctrine_Task_RebuildDb::__construct", "doc": "&quot;__construct&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Task_RebuildDb", "fromLink": "Doctrine_Task_RebuildDb.html", "link": "Doctrine_Task_RebuildDb.html#method_execute", "name": "Doctrine_Task_RebuildDb::execute", "doc": "&quot;execute&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Template.html", "name": "Doctrine_Template", "doc": "&quot;Base abstract class for defining templates which are the base of all behaviors that can be attached\nto your Doctrine models&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Template", "fromLink": "Doctrine_Template.html", "link": "Doctrine_Template.html#method___construct", "name": "Doctrine_Template::__construct", "doc": "&quot;__construct&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template", "fromLink": "Doctrine_Template.html", "link": "Doctrine_Template.html#method_setTable", "name": "Doctrine_Template::setTable", "doc": "&quot;Set the table object that this Template belongs to&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template", "fromLink": "Doctrine_Template.html", "link": "Doctrine_Template.html#method_getTable", "name": "Doctrine_Template::getTable", "doc": "&quot;returns the associated table object&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template", "fromLink": "Doctrine_Template.html", "link": "Doctrine_Template.html#method_setInvoker", "name": "Doctrine_Template::setInvoker", "doc": "&quot;sets the last used invoker&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template", "fromLink": "Doctrine_Template.html", "link": "Doctrine_Template.html#method_getInvoker", "name": "Doctrine_Template::getInvoker", "doc": "&quot;returns the last used invoker&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template", "fromLink": "Doctrine_Template.html", "link": "Doctrine_Template.html#method_addChild", "name": "Doctrine_Template::addChild", "doc": "&quot;Adds a plugin as a child to this plugin&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template", "fromLink": "Doctrine_Template.html", "link": "Doctrine_Template.html#method_getPlugin", "name": "Doctrine_Template::getPlugin", "doc": "&quot;Get plugin instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template", "fromLink": "Doctrine_Template.html", "link": "Doctrine_Template.html#method_hasPlugin", "name": "Doctrine_Template::hasPlugin", "doc": "&quot;Check if this template has a generator plugin&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template", "fromLink": "Doctrine_Template.html", "link": "Doctrine_Template.html#method_getOptions", "name": "Doctrine_Template::getOptions", "doc": "&quot;getOptions\nreturns all options of this template and the associated values&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template", "fromLink": "Doctrine_Template.html", "link": "Doctrine_Template.html#method_getOption", "name": "Doctrine_Template::getOption", "doc": "&quot;getOption\nreturns the value of given option&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template", "fromLink": "Doctrine_Template.html", "link": "Doctrine_Template.html#method_get", "name": "Doctrine_Template::get", "doc": "&quot;get&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template", "fromLink": "Doctrine_Template.html", "link": "Doctrine_Template.html#method_set", "name": "Doctrine_Template::set", "doc": "&quot;set&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template", "fromLink": "Doctrine_Template.html", "link": "Doctrine_Template.html#method_setUp", "name": "Doctrine_Template::setUp", "doc": "&quot;Blank method for template setup&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template", "fromLink": "Doctrine_Template.html", "link": "Doctrine_Template.html#method_setTableDefinition", "name": "Doctrine_Template::setTableDefinition", "doc": "&quot;Blank method for template table definition&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Template_Geographical.html", "name": "Doctrine_Template_Geographical", "doc": "&quot;Easily add longitude and latitude columns to your records and use inherited functionality for\ncalculating distances&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Template_Geographical", "fromLink": "Doctrine_Template_Geographical.html", "link": "Doctrine_Template_Geographical.html#method_setTableDefinition", "name": "Doctrine_Template_Geographical::setTableDefinition", "doc": "&quot;Set table definition for Geographical behavior&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template_Geographical", "fromLink": "Doctrine_Template_Geographical.html", "link": "Doctrine_Template_Geographical.html#method_getDistanceQuery", "name": "Doctrine_Template_Geographical::getDistanceQuery", "doc": "&quot;Initiate and get a distance query with the select parts for the number of kilometers and miles\nbetween this record and other zipcode records in the database&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template_Geographical", "fromLink": "Doctrine_Template_Geographical.html", "link": "Doctrine_Template_Geographical.html#method_getDistance", "name": "Doctrine_Template_Geographical::getDistance", "doc": "&quot;Get distance between this record and another&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Template_I18n.html", "name": "Doctrine_Template_I18n", "doc": "&quot;Add multilingual capabilities to your Doctrine models&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Template_I18n", "fromLink": "Doctrine_Template_I18n.html", "link": "Doctrine_Template_I18n.html#method___construct", "name": "Doctrine_Template_I18n::__construct", "doc": "&quot;__construct&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template_I18n", "fromLink": "Doctrine_Template_I18n.html", "link": "Doctrine_Template_I18n.html#method_setUp", "name": "Doctrine_Template_I18n::setUp", "doc": "&quot;Initialize the I18n plugin for the template&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template_I18n", "fromLink": "Doctrine_Template_I18n.html", "link": "Doctrine_Template_I18n.html#method_getI18n", "name": "Doctrine_Template_I18n::getI18n", "doc": "&quot;Get the plugin instance for the I18n template&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Template_Listener_Sluggable.html", "name": "Doctrine_Template_Listener_Sluggable", "doc": "&quot;Easily create a slug for each record based on a specified set of fields&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Template_Listener_Sluggable", "fromLink": "Doctrine_Template_Listener_Sluggable.html", "link": "Doctrine_Template_Listener_Sluggable.html#method___construct", "name": "Doctrine_Template_Listener_Sluggable::__construct", "doc": "&quot;__construct&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template_Listener_Sluggable", "fromLink": "Doctrine_Template_Listener_Sluggable.html", "link": "Doctrine_Template_Listener_Sluggable.html#method_preInsert", "name": "Doctrine_Template_Listener_Sluggable::preInsert", "doc": "&quot;Set the slug value automatically when a record is inserted&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template_Listener_Sluggable", "fromLink": "Doctrine_Template_Listener_Sluggable.html", "link": "Doctrine_Template_Listener_Sluggable.html#method_preUpdate", "name": "Doctrine_Template_Listener_Sluggable::preUpdate", "doc": "&quot;Set the slug value automatically when a record is updated if the options are configured\nto allow it&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template_Listener_Sluggable", "fromLink": "Doctrine_Template_Listener_Sluggable.html", "link": "Doctrine_Template_Listener_Sluggable.html#method_buildSlugFromFields", "name": "Doctrine_Template_Listener_Sluggable::buildSlugFromFields", "doc": "&quot;Generate the slug for a given Doctrine_Record based on the configured options&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template_Listener_Sluggable", "fromLink": "Doctrine_Template_Listener_Sluggable.html", "link": "Doctrine_Template_Listener_Sluggable.html#method_buildSlugFromSlugField", "name": "Doctrine_Template_Listener_Sluggable::buildSlugFromSlugField", "doc": "&quot;Generate the slug for a given Doctrine_Record slug field&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template_Listener_Sluggable", "fromLink": "Doctrine_Template_Listener_Sluggable.html", "link": "Doctrine_Template_Listener_Sluggable.html#method_getUniqueSlug", "name": "Doctrine_Template_Listener_Sluggable::getUniqueSlug", "doc": "&quot;Creates a unique slug for a given Doctrine_Record. This function enforces the uniqueness by\nincrementing the values with a postfix if the slug is not unique&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Template_Listener_SoftDelete.html", "name": "Doctrine_Template_Listener_SoftDelete", "doc": "&quot;Listener for SoftDelete behavior which will allow you to turn on the behavior which\nsets a delete flag instead of actually deleting the record and all queries automatically\ninclude a check for the deleted flag to exclude deleted records.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Template_Listener_SoftDelete", "fromLink": "Doctrine_Template_Listener_SoftDelete.html", "link": "Doctrine_Template_Listener_SoftDelete.html#method___construct", "name": "Doctrine_Template_Listener_SoftDelete::__construct", "doc": "&quot;__construct&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template_Listener_SoftDelete", "fromLink": "Doctrine_Template_Listener_SoftDelete.html", "link": "Doctrine_Template_Listener_SoftDelete.html#method_hardDelete", "name": "Doctrine_Template_Listener_SoftDelete::hardDelete", "doc": "&quot;Set the hard delete flag so that it is really deleted&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template_Listener_SoftDelete", "fromLink": "Doctrine_Template_Listener_SoftDelete.html", "link": "Doctrine_Template_Listener_SoftDelete.html#method_preDelete", "name": "Doctrine_Template_Listener_SoftDelete::preDelete", "doc": "&quot;Skip the normal delete options so we can override it with our own&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template_Listener_SoftDelete", "fromLink": "Doctrine_Template_Listener_SoftDelete.html", "link": "Doctrine_Template_Listener_SoftDelete.html#method_postDelete", "name": "Doctrine_Template_Listener_SoftDelete::postDelete", "doc": "&quot;Implement postDelete() hook and set the deleted flag to true&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template_Listener_SoftDelete", "fromLink": "Doctrine_Template_Listener_SoftDelete.html", "link": "Doctrine_Template_Listener_SoftDelete.html#method_preDqlDelete", "name": "Doctrine_Template_Listener_SoftDelete::preDqlDelete", "doc": "&quot;Implement preDqlDelete() hook and modify a dql delete query so it updates the deleted flag\ninstead of deleting the record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template_Listener_SoftDelete", "fromLink": "Doctrine_Template_Listener_SoftDelete.html", "link": "Doctrine_Template_Listener_SoftDelete.html#method_preDqlSelect", "name": "Doctrine_Template_Listener_SoftDelete::preDqlSelect", "doc": "&quot;Implement preDqlSelect() hook and add the deleted flag to all queries for which this model\nis being used in.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Template_Listener_Timestampable.html", "name": "Doctrine_Template_Listener_Timestampable", "doc": "&quot;Listener for the Timestampable behavior which automatically sets the created\nand updated columns when a record is inserted and updated.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Template_Listener_Timestampable", "fromLink": "Doctrine_Template_Listener_Timestampable.html", "link": "Doctrine_Template_Listener_Timestampable.html#method___construct", "name": "Doctrine_Template_Listener_Timestampable::__construct", "doc": "&quot;__construct&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template_Listener_Timestampable", "fromLink": "Doctrine_Template_Listener_Timestampable.html", "link": "Doctrine_Template_Listener_Timestampable.html#method_preInsert", "name": "Doctrine_Template_Listener_Timestampable::preInsert", "doc": "&quot;Set the created and updated Timestampable columns when a record is inserted&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template_Listener_Timestampable", "fromLink": "Doctrine_Template_Listener_Timestampable.html", "link": "Doctrine_Template_Listener_Timestampable.html#method_preUpdate", "name": "Doctrine_Template_Listener_Timestampable::preUpdate", "doc": "&quot;Set updated Timestampable column when a record is updated&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template_Listener_Timestampable", "fromLink": "Doctrine_Template_Listener_Timestampable.html", "link": "Doctrine_Template_Listener_Timestampable.html#method_preDqlUpdate", "name": "Doctrine_Template_Listener_Timestampable::preDqlUpdate", "doc": "&quot;Set the updated field for dql update queries&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template_Listener_Timestampable", "fromLink": "Doctrine_Template_Listener_Timestampable.html", "link": "Doctrine_Template_Listener_Timestampable.html#method_getTimestamp", "name": "Doctrine_Template_Listener_Timestampable::getTimestamp", "doc": "&quot;Gets the timestamp in the correct format based on the way the behavior is configured&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Template_NestedSet.html", "name": "Doctrine_Template_NestedSet", "doc": "&quot;Doctrine template which implements the custom NestedSet implementation&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Template_NestedSet", "fromLink": "Doctrine_Template_NestedSet.html", "link": "Doctrine_Template_NestedSet.html#method_setUp", "name": "Doctrine_Template_NestedSet::setUp", "doc": "&quot;Set up NestedSet template&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template_NestedSet", "fromLink": "Doctrine_Template_NestedSet.html", "link": "Doctrine_Template_NestedSet.html#method_setTableDefinition", "name": "Doctrine_Template_NestedSet::setTableDefinition", "doc": "&quot;Call set table definition for the NestedSet behavior&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Template_Searchable.html", "name": "Doctrine_Template_Searchable", "doc": "&quot;Doctrine_Template_Searchable&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Template_Searchable", "fromLink": "Doctrine_Template_Searchable.html", "link": "Doctrine_Template_Searchable.html#method___construct", "name": "Doctrine_Template_Searchable::__construct", "doc": "&quot;__construct&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template_Searchable", "fromLink": "Doctrine_Template_Searchable.html", "link": "Doctrine_Template_Searchable.html#method_setUp", "name": "Doctrine_Template_Searchable::setUp", "doc": "&quot;Setup the Searchable template behavior&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template_Searchable", "fromLink": "Doctrine_Template_Searchable.html", "link": "Doctrine_Template_Searchable.html#method_batchUpdateIndex", "name": "Doctrine_Template_Searchable::batchUpdateIndex", "doc": "&quot;Make the batchUpdateIndex() function available to the template so Doctrine_Record child classes\nwith the behavior enabled can all the function&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template_Searchable", "fromLink": "Doctrine_Template_Searchable.html", "link": "Doctrine_Template_Searchable.html#method_batchUpdateIndexTableProxy", "name": "Doctrine_Template_Searchable::batchUpdateIndexTableProxy", "doc": "&quot;Proxy method so the batch updating can be called from table classes&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template_Searchable", "fromLink": "Doctrine_Template_Searchable.html", "link": "Doctrine_Template_Searchable.html#method_searchTableProxy", "name": "Doctrine_Template_Searchable::searchTableProxy", "doc": "&quot;Searchable keyword search proxy for Doctrine_Table&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Template_Sluggable.html", "name": "Doctrine_Template_Sluggable", "doc": "&quot;Doctrine_Template_Sluggable&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Template_Sluggable", "fromLink": "Doctrine_Template_Sluggable.html", "link": "Doctrine_Template_Sluggable.html#method_setTableDefinition", "name": "Doctrine_Template_Sluggable::setTableDefinition", "doc": "&quot;Set table definition for Sluggable behavior&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Template_SoftDelete.html", "name": "Doctrine_Template_SoftDelete", "doc": "&quot;Doctrine_Template_SoftDelete&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Template_SoftDelete", "fromLink": "Doctrine_Template_SoftDelete.html", "link": "Doctrine_Template_SoftDelete.html#method_setTableDefinition", "name": "Doctrine_Template_SoftDelete::setTableDefinition", "doc": "&quot;Set table definition for SoftDelete behavior&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template_SoftDelete", "fromLink": "Doctrine_Template_SoftDelete.html", "link": "Doctrine_Template_SoftDelete.html#method_hardDelete", "name": "Doctrine_Template_SoftDelete::hardDelete", "doc": "&quot;Add a hardDelete() method to any of the models who act as SoftDelete behavior&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Template_Timestampable.html", "name": "Doctrine_Template_Timestampable", "doc": "&quot;Doctrine_Template_Timestampable&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Template_Timestampable", "fromLink": "Doctrine_Template_Timestampable.html", "link": "Doctrine_Template_Timestampable.html#method_setTableDefinition", "name": "Doctrine_Template_Timestampable::setTableDefinition", "doc": "&quot;Set table definition for Timestampable behavior&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Template_Versionable.html", "name": "Doctrine_Template_Versionable", "doc": "&quot;Doctrine_Template_Versionable&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Template_Versionable", "fromLink": "Doctrine_Template_Versionable.html", "link": "Doctrine_Template_Versionable.html#method___construct", "name": "Doctrine_Template_Versionable::__construct", "doc": "&quot;__construct&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template_Versionable", "fromLink": "Doctrine_Template_Versionable.html", "link": "Doctrine_Template_Versionable.html#method_setUp", "name": "Doctrine_Template_Versionable::setUp", "doc": "&quot;Setup the Versionable behavior for the template&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template_Versionable", "fromLink": "Doctrine_Template_Versionable.html", "link": "Doctrine_Template_Versionable.html#method_getAuditLog", "name": "Doctrine_Template_Versionable::getAuditLog", "doc": "&quot;Get plugin for Versionable template&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Template_Versionable", "fromLink": "Doctrine_Template_Versionable.html", "link": "Doctrine_Template_Versionable.html#method_revert", "name": "Doctrine_Template_Versionable::revert", "doc": "&quot;revert\nreverts this record to given version, this method only works if versioning plugin\nis enabled&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Transaction.html", "name": "Doctrine_Transaction", "doc": "&quot;Doctrine_Transaction\nHandles transaction savepoint and isolation abstraction&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Transaction", "fromLink": "Doctrine_Transaction.html", "link": "Doctrine_Transaction.html#method_addCollection", "name": "Doctrine_Transaction::addCollection", "doc": "&quot;addCollection\nadds a collection in the internal array of collections&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction", "fromLink": "Doctrine_Transaction.html", "link": "Doctrine_Transaction.html#method_getState", "name": "Doctrine_Transaction::getState", "doc": "&quot;getState\nreturns the state of this transaction module.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction", "fromLink": "Doctrine_Transaction.html", "link": "Doctrine_Transaction.html#method_addInvalid", "name": "Doctrine_Transaction::addInvalid", "doc": "&quot;addInvalid\nadds record into invalid records list&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction", "fromLink": "Doctrine_Transaction.html", "link": "Doctrine_Transaction.html#method_getInvalid", "name": "Doctrine_Transaction::getInvalid", "doc": "&quot;Return the invalid records&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction", "fromLink": "Doctrine_Transaction.html", "link": "Doctrine_Transaction.html#method_getTransactionLevel", "name": "Doctrine_Transaction::getTransactionLevel", "doc": "&quot;getTransactionLevel\nget the current transaction nesting level&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction", "fromLink": "Doctrine_Transaction.html", "link": "Doctrine_Transaction.html#method_getInternalTransactionLevel", "name": "Doctrine_Transaction::getInternalTransactionLevel", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction", "fromLink": "Doctrine_Transaction.html", "link": "Doctrine_Transaction.html#method_beginTransaction", "name": "Doctrine_Transaction::beginTransaction", "doc": "&quot;beginTransaction\nStart a transaction or set a savepoint.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction", "fromLink": "Doctrine_Transaction.html", "link": "Doctrine_Transaction.html#method_commit", "name": "Doctrine_Transaction::commit", "doc": "&quot;Commit the database changes done during a transaction that is in\nprogress or release a savepoint. This function may only be called when\nauto-committing is disabled, otherwise it will fail.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction", "fromLink": "Doctrine_Transaction.html", "link": "Doctrine_Transaction.html#method_rollback", "name": "Doctrine_Transaction::rollback", "doc": "&quot;rollback\nCancel any database changes done during a transaction or since a specific\nsavepoint that is in progress. This function may only be called when\nauto-committing is disabled, otherwise it will fail. Therefore, a new\ntransaction is implicitly started after canceling the pending changes.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction", "fromLink": "Doctrine_Transaction.html", "link": "Doctrine_Transaction.html#method_createSavePoint", "name": "Doctrine_Transaction::createSavePoint", "doc": "&quot;releaseSavePoint\ncreates a new savepoint&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction", "fromLink": "Doctrine_Transaction.html", "link": "Doctrine_Transaction.html#method_releaseSavePoint", "name": "Doctrine_Transaction::releaseSavePoint", "doc": "&quot;releaseSavePoint\nreleases given savepoint&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction", "fromLink": "Doctrine_Transaction.html", "link": "Doctrine_Transaction.html#method_rollbackSavePoint", "name": "Doctrine_Transaction::rollbackSavePoint", "doc": "&quot;rollbackSavePoint\nreleases given savepoint&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction", "fromLink": "Doctrine_Transaction.html", "link": "Doctrine_Transaction.html#method__doRollback", "name": "Doctrine_Transaction::_doRollback", "doc": "&quot;Performs the rollback.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction", "fromLink": "Doctrine_Transaction.html", "link": "Doctrine_Transaction.html#method__doCommit", "name": "Doctrine_Transaction::_doCommit", "doc": "&quot;Performs the commit.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction", "fromLink": "Doctrine_Transaction.html", "link": "Doctrine_Transaction.html#method__doBeginTransaction", "name": "Doctrine_Transaction::_doBeginTransaction", "doc": "&quot;Begins a database transaction.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction", "fromLink": "Doctrine_Transaction.html", "link": "Doctrine_Transaction.html#method_setIsolation", "name": "Doctrine_Transaction::setIsolation", "doc": "&quot;setIsolation&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction", "fromLink": "Doctrine_Transaction.html", "link": "Doctrine_Transaction.html#method_getIsolation", "name": "Doctrine_Transaction::getIsolation", "doc": "&quot;getTransactionIsolation&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction", "fromLink": "Doctrine_Transaction.html", "link": "Doctrine_Transaction.html#method_beginInternalTransaction", "name": "Doctrine_Transaction::beginInternalTransaction", "doc": "&quot;Initiates a transaction.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Transaction_Exception.html", "name": "Doctrine_Transaction_Exception", "doc": "&quot;Doctrine_Transaction_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Transaction_Mock.html", "name": "Doctrine_Transaction_Mock", "doc": "&quot;Doctrine_Transaction_Mock\nThis class is used for testing purposes&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Transaction_Mssql.html", "name": "Doctrine_Transaction_Mssql", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Transaction_Mssql", "fromLink": "Doctrine_Transaction_Mssql.html", "link": "Doctrine_Transaction_Mssql.html#method_setIsolation", "name": "Doctrine_Transaction_Mssql::setIsolation", "doc": "&quot;Set the transacton isolation level.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction_Mssql", "fromLink": "Doctrine_Transaction_Mssql.html", "link": "Doctrine_Transaction_Mssql.html#method__doRollback", "name": "Doctrine_Transaction_Mssql::_doRollback", "doc": "&quot;Performs the rollback.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction_Mssql", "fromLink": "Doctrine_Transaction_Mssql.html", "link": "Doctrine_Transaction_Mssql.html#method__doCommit", "name": "Doctrine_Transaction_Mssql::_doCommit", "doc": "&quot;Performs the commit.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction_Mssql", "fromLink": "Doctrine_Transaction_Mssql.html", "link": "Doctrine_Transaction_Mssql.html#method__doBeginTransaction", "name": "Doctrine_Transaction_Mssql::_doBeginTransaction", "doc": "&quot;Begins a database transaction.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Transaction_Mysql.html", "name": "Doctrine_Transaction_Mysql", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Transaction_Mysql", "fromLink": "Doctrine_Transaction_Mysql.html", "link": "Doctrine_Transaction_Mysql.html#method_createSavePoint", "name": "Doctrine_Transaction_Mysql::createSavePoint", "doc": "&quot;createSavepoint\ncreates a new savepoint&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction_Mysql", "fromLink": "Doctrine_Transaction_Mysql.html", "link": "Doctrine_Transaction_Mysql.html#method_releaseSavePoint", "name": "Doctrine_Transaction_Mysql::releaseSavePoint", "doc": "&quot;releaseSavePoint\nreleases given savepoint&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction_Mysql", "fromLink": "Doctrine_Transaction_Mysql.html", "link": "Doctrine_Transaction_Mysql.html#method_rollbackSavePoint", "name": "Doctrine_Transaction_Mysql::rollbackSavePoint", "doc": "&quot;rollbackSavePoint\nreleases given savepoint&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction_Mysql", "fromLink": "Doctrine_Transaction_Mysql.html", "link": "Doctrine_Transaction_Mysql.html#method_setIsolation", "name": "Doctrine_Transaction_Mysql::setIsolation", "doc": "&quot;Set the transacton isolation level.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction_Mysql", "fromLink": "Doctrine_Transaction_Mysql.html", "link": "Doctrine_Transaction_Mysql.html#method_getIsolation", "name": "Doctrine_Transaction_Mysql::getIsolation", "doc": "&quot;getTransactionIsolation&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Transaction_Oracle.html", "name": "Doctrine_Transaction_Oracle", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Transaction_Oracle", "fromLink": "Doctrine_Transaction_Oracle.html", "link": "Doctrine_Transaction_Oracle.html#method_createSavePoint", "name": "Doctrine_Transaction_Oracle::createSavePoint", "doc": "&quot;createSavepoint\ncreates a new savepoint&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction_Oracle", "fromLink": "Doctrine_Transaction_Oracle.html", "link": "Doctrine_Transaction_Oracle.html#method_releaseSavePoint", "name": "Doctrine_Transaction_Oracle::releaseSavePoint", "doc": "&quot;releaseSavePoint\nreleases given savepoint&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction_Oracle", "fromLink": "Doctrine_Transaction_Oracle.html", "link": "Doctrine_Transaction_Oracle.html#method_rollbackSavePoint", "name": "Doctrine_Transaction_Oracle::rollbackSavePoint", "doc": "&quot;rollbackSavePoint\nreleases given savepoint&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction_Oracle", "fromLink": "Doctrine_Transaction_Oracle.html", "link": "Doctrine_Transaction_Oracle.html#method_setIsolation", "name": "Doctrine_Transaction_Oracle::setIsolation", "doc": "&quot;Set the transacton isolation level.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Transaction_Pgsql.html", "name": "Doctrine_Transaction_Pgsql", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Transaction_Pgsql", "fromLink": "Doctrine_Transaction_Pgsql.html", "link": "Doctrine_Transaction_Pgsql.html#method_createSavePoint", "name": "Doctrine_Transaction_Pgsql::createSavePoint", "doc": "&quot;createSavepoint\ncreates a new savepoint&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction_Pgsql", "fromLink": "Doctrine_Transaction_Pgsql.html", "link": "Doctrine_Transaction_Pgsql.html#method_releaseSavePoint", "name": "Doctrine_Transaction_Pgsql::releaseSavePoint", "doc": "&quot;releaseSavePoint\nreleases given savepoint&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction_Pgsql", "fromLink": "Doctrine_Transaction_Pgsql.html", "link": "Doctrine_Transaction_Pgsql.html#method_rollbackSavePoint", "name": "Doctrine_Transaction_Pgsql::rollbackSavePoint", "doc": "&quot;rollbackSavePoint\nreleases given savepoint&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Transaction_Pgsql", "fromLink": "Doctrine_Transaction_Pgsql.html", "link": "Doctrine_Transaction_Pgsql.html#method_setIsolation", "name": "Doctrine_Transaction_Pgsql::setIsolation", "doc": "&quot;Set the transacton isolation level.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Transaction_Sqlite.html", "name": "Doctrine_Transaction_Sqlite", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Transaction_Sqlite", "fromLink": "Doctrine_Transaction_Sqlite.html", "link": "Doctrine_Transaction_Sqlite.html#method_setIsolation", "name": "Doctrine_Transaction_Sqlite::setIsolation", "doc": "&quot;Set the transacton isolation level.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Tree.html", "name": "Doctrine_Tree", "doc": "&quot;Doctrine_Tree&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Tree", "fromLink": "Doctrine_Tree.html", "link": "Doctrine_Tree.html#method___construct", "name": "Doctrine_Tree::__construct", "doc": "&quot;constructor, creates tree with reference to table and any options&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Tree", "fromLink": "Doctrine_Tree.html", "link": "Doctrine_Tree.html#method_setTableDefinition", "name": "Doctrine_Tree::setTableDefinition", "doc": "&quot;Used to define table attributes required for the given implementation&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Tree", "fromLink": "Doctrine_Tree.html", "link": "Doctrine_Tree.html#method_setUp", "name": "Doctrine_Tree::setUp", "doc": "&quot;this method is used for setting up relations and attributes and should be used by specific implementations&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Tree", "fromLink": "Doctrine_Tree.html", "link": "Doctrine_Tree.html#method_factory", "name": "Doctrine_Tree::factory", "doc": "&quot;Factory method to create a Tree.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Tree", "fromLink": "Doctrine_Tree.html", "link": "Doctrine_Tree.html#method_getAttribute", "name": "Doctrine_Tree::getAttribute", "doc": "&quot;gets tree attribute value&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Tree", "fromLink": "Doctrine_Tree.html", "link": "Doctrine_Tree.html#method_setAttribute", "name": "Doctrine_Tree::setAttribute", "doc": "&quot;sets tree attribute value&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Tree", "fromLink": "Doctrine_Tree.html", "link": "Doctrine_Tree.html#method_getBaseComponent", "name": "Doctrine_Tree::getBaseComponent", "doc": "&quot;Returns the base tree component.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Tree_AdjacencyList.html", "name": "Doctrine_Tree_AdjacencyList", "doc": "&quot;Doctrine_Tree_AdjacencyList&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Tree_Exception.html", "name": "Doctrine_Tree_Exception", "doc": "&quot;Doctrine_Tree_Exception&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Tree_Interface.html", "name": "Doctrine_Tree_Interface", "doc": "&quot;Doctrine_Tree_Interface&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Tree_Interface", "fromLink": "Doctrine_Tree_Interface.html", "link": "Doctrine_Tree_Interface.html#method_createRoot", "name": "Doctrine_Tree_Interface::createRoot", "doc": "&quot;creates root node from given record or from a new record&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Tree_Interface", "fromLink": "Doctrine_Tree_Interface.html", "link": "Doctrine_Tree_Interface.html#method_fetchRoot", "name": "Doctrine_Tree_Interface::fetchRoot", "doc": "&quot;returns root node&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Tree_Interface", "fromLink": "Doctrine_Tree_Interface.html", "link": "Doctrine_Tree_Interface.html#method_fetchTree", "name": "Doctrine_Tree_Interface::fetchTree", "doc": "&quot;optimised method to returns iterator for traversal of the entire tree from root&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Tree_Interface", "fromLink": "Doctrine_Tree_Interface.html", "link": "Doctrine_Tree_Interface.html#method_fetchBranch", "name": "Doctrine_Tree_Interface::fetchBranch", "doc": "&quot;optimised method that returns iterator for traversal of the tree from the given record primary key&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Tree_MaterializedPath.html", "name": "Doctrine_Tree_MaterializedPath", "doc": "&quot;Doctrine_Tree_MaterializedPath&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Tree_NestedSet.html", "name": "Doctrine_Tree_NestedSet", "doc": "&quot;Doctrine_Tree_NestedSet&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Tree_NestedSet", "fromLink": "Doctrine_Tree_NestedSet.html", "link": "Doctrine_Tree_NestedSet.html#method___construct", "name": "Doctrine_Tree_NestedSet::__construct", "doc": "&quot;constructor, creates tree with reference to table and sets default root options&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Tree_NestedSet", "fromLink": "Doctrine_Tree_NestedSet.html", "link": "Doctrine_Tree_NestedSet.html#method_setTableDefinition", "name": "Doctrine_Tree_NestedSet::setTableDefinition", "doc": "&quot;used to define table attributes required for the NestetSet implementation\nadds lft and rgt columns for corresponding left and right values&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Tree_NestedSet", "fromLink": "Doctrine_Tree_NestedSet.html", "link": "Doctrine_Tree_NestedSet.html#method_createRoot", "name": "Doctrine_Tree_NestedSet::createRoot", "doc": "&quot;Creates root node from given record or from a new record.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Tree_NestedSet", "fromLink": "Doctrine_Tree_NestedSet.html", "link": "Doctrine_Tree_NestedSet.html#method_fetchRoot", "name": "Doctrine_Tree_NestedSet::fetchRoot", "doc": "&quot;Fetches a\/the root node.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Tree_NestedSet", "fromLink": "Doctrine_Tree_NestedSet.html", "link": "Doctrine_Tree_NestedSet.html#method_fetchTree", "name": "Doctrine_Tree_NestedSet::fetchTree", "doc": "&quot;Fetches a tree.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Tree_NestedSet", "fromLink": "Doctrine_Tree_NestedSet.html", "link": "Doctrine_Tree_NestedSet.html#method_fetchBranch", "name": "Doctrine_Tree_NestedSet::fetchBranch", "doc": "&quot;Fetches a branch of a tree.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Tree_NestedSet", "fromLink": "Doctrine_Tree_NestedSet.html", "link": "Doctrine_Tree_NestedSet.html#method_fetchRoots", "name": "Doctrine_Tree_NestedSet::fetchRoots", "doc": "&quot;Fetches all root nodes. If the tree has only one root this is the same as\nfetchRoot().&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Tree_NestedSet", "fromLink": "Doctrine_Tree_NestedSet.html", "link": "Doctrine_Tree_NestedSet.html#method_returnQueryWithRootId", "name": "Doctrine_Tree_NestedSet::returnQueryWithRootId", "doc": "&quot;returns parsed query with root id where clause added if applicable&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Tree_NestedSet", "fromLink": "Doctrine_Tree_NestedSet.html", "link": "Doctrine_Tree_NestedSet.html#method_getBaseQuery", "name": "Doctrine_Tree_NestedSet::getBaseQuery", "doc": "&quot;Enter description here.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Tree_NestedSet", "fromLink": "Doctrine_Tree_NestedSet.html", "link": "Doctrine_Tree_NestedSet.html#method_getBaseAlias", "name": "Doctrine_Tree_NestedSet::getBaseAlias", "doc": "&quot;Enter description here.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Tree_NestedSet", "fromLink": "Doctrine_Tree_NestedSet.html", "link": "Doctrine_Tree_NestedSet.html#method_setBaseQuery", "name": "Doctrine_Tree_NestedSet::setBaseQuery", "doc": "&quot;Enter description here.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Tree_NestedSet", "fromLink": "Doctrine_Tree_NestedSet.html", "link": "Doctrine_Tree_NestedSet.html#method_resetBaseQuery", "name": "Doctrine_Tree_NestedSet::resetBaseQuery", "doc": "&quot;Enter description here.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Util.html", "name": "Doctrine_Util", "doc": "&quot;Doctrine_Util&quot;"},
                    
            {"type": "Class",  "link": "Doctrine_Validator.html", "name": "Doctrine_Validator", "doc": "&quot;This class is responsible for performing all validations on record properties&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Validator", "fromLink": "Doctrine_Validator.html", "link": "Doctrine_Validator.html#method_getValidator", "name": "Doctrine_Validator::getValidator", "doc": "&quot;Get a validator instance for the passed $name&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Validator", "fromLink": "Doctrine_Validator.html", "link": "Doctrine_Validator.html#method_validateRecord", "name": "Doctrine_Validator::validateRecord", "doc": "&quot;Validates a given record and saves possible errors in Doctrine_Validator::$stack&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Validator", "fromLink": "Doctrine_Validator.html", "link": "Doctrine_Validator.html#method_validateLength", "name": "Doctrine_Validator::validateLength", "doc": "&quot;Validates the length of a field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Validator", "fromLink": "Doctrine_Validator.html", "link": "Doctrine_Validator.html#method_getStringLength", "name": "Doctrine_Validator::getStringLength", "doc": "&quot;Get length of passed string. Will use multibyte character functions if they exist&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Validator", "fromLink": "Doctrine_Validator.html", "link": "Doctrine_Validator.html#method_hasErrors", "name": "Doctrine_Validator::hasErrors", "doc": "&quot;Whether or not errors exist on this validator&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Validator", "fromLink": "Doctrine_Validator.html", "link": "Doctrine_Validator.html#method_isValidType", "name": "Doctrine_Validator::isValidType", "doc": "&quot;Validate the type of the passed variable&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Validator_Country.html", "name": "Doctrine_Validator_Country", "doc": "&quot;Doctrine_Validator_Country&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Validator_Country", "fromLink": "Doctrine_Validator_Country.html", "link": "Doctrine_Validator_Country.html#method_getCountries", "name": "Doctrine_Validator_Country::getCountries", "doc": "&quot;returns all available country codes&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Validator_Country", "fromLink": "Doctrine_Validator_Country.html", "link": "Doctrine_Validator_Country.html#method_validate", "name": "Doctrine_Validator_Country::validate", "doc": "&quot;checks if given value is a valid country code&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Validator_Creditcard.html", "name": "Doctrine_Validator_Creditcard", "doc": "&quot;Doctrine_Validator_Creditcard&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Validator_Creditcard", "fromLink": "Doctrine_Validator_Creditcard.html", "link": "Doctrine_Validator_Creditcard.html#method_validate", "name": "Doctrine_Validator_Creditcard::validate", "doc": "&quot;checks if given value is a valid credit card number&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Validator_Date.html", "name": "Doctrine_Validator_Date", "doc": "&quot;Doctrine_Validator_Date&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Validator_Date", "fromLink": "Doctrine_Validator_Date.html", "link": "Doctrine_Validator_Date.html#method_validate", "name": "Doctrine_Validator_Date::validate", "doc": "&quot;checks if given value is a valid date&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Validator_Driver.html", "name": "Doctrine_Validator_Driver", "doc": "&quot;Doctrine_Validator_Driver&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Validator_Driver", "fromLink": "Doctrine_Validator_Driver.html", "link": "Doctrine_Validator_Driver.html#method___get", "name": "Doctrine_Validator_Driver::__get", "doc": "&quot;__get\nan alias for getOption&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Validator_Driver", "fromLink": "Doctrine_Validator_Driver.html", "link": "Doctrine_Validator_Driver.html#method___isset", "name": "Doctrine_Validator_Driver::__isset", "doc": "&quot;__isset&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Validator_Driver", "fromLink": "Doctrine_Validator_Driver.html", "link": "Doctrine_Validator_Driver.html#method___set", "name": "Doctrine_Validator_Driver::__set", "doc": "&quot;sets given value to an argument&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Validator_Driver", "fromLink": "Doctrine_Validator_Driver.html", "link": "Doctrine_Validator_Driver.html#method_getArg", "name": "Doctrine_Validator_Driver::getArg", "doc": "&quot;returns the value of an argument&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Validator_Driver", "fromLink": "Doctrine_Validator_Driver.html", "link": "Doctrine_Validator_Driver.html#method_setArg", "name": "Doctrine_Validator_Driver::setArg", "doc": "&quot;sets given value to an argument&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Validator_Driver", "fromLink": "Doctrine_Validator_Driver.html", "link": "Doctrine_Validator_Driver.html#method_getArgs", "name": "Doctrine_Validator_Driver::getArgs", "doc": "&quot;returns all args and their associated values&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Validator_Driver", "fromLink": "Doctrine_Validator_Driver.html", "link": "Doctrine_Validator_Driver.html#method___toString", "name": "Doctrine_Validator_Driver::__toString", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Validator_Email.html", "name": "Doctrine_Validator_Email", "doc": "&quot;Doctrine_Validator_Email&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Validator_Email", "fromLink": "Doctrine_Validator_Email.html", "link": "Doctrine_Validator_Email.html#method_validate", "name": "Doctrine_Validator_Email::validate", "doc": "&quot;checks if given value is a valid email address&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Validator_ErrorStack.html", "name": "Doctrine_Validator_ErrorStack", "doc": "&quot;Doctrine_Validator_ErrorStack&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Validator_ErrorStack", "fromLink": "Doctrine_Validator_ErrorStack.html", "link": "Doctrine_Validator_ErrorStack.html#method___construct", "name": "Doctrine_Validator_ErrorStack::__construct", "doc": "&quot;Constructor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Validator_ErrorStack", "fromLink": "Doctrine_Validator_ErrorStack.html", "link": "Doctrine_Validator_ErrorStack.html#method_add", "name": "Doctrine_Validator_ErrorStack::add", "doc": "&quot;Adds an error to the stack.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Validator_ErrorStack", "fromLink": "Doctrine_Validator_ErrorStack.html", "link": "Doctrine_Validator_ErrorStack.html#method_remove", "name": "Doctrine_Validator_ErrorStack::remove", "doc": "&quot;Removes all existing errors for the specified field from the stack.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Validator_ErrorStack", "fromLink": "Doctrine_Validator_ErrorStack.html", "link": "Doctrine_Validator_ErrorStack.html#method_get", "name": "Doctrine_Validator_ErrorStack::get", "doc": "&quot;Get errors for field&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Validator_ErrorStack", "fromLink": "Doctrine_Validator_ErrorStack.html", "link": "Doctrine_Validator_ErrorStack.html#method_set", "name": "Doctrine_Validator_ErrorStack::set", "doc": "&quot;Alias for add()&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Validator_ErrorStack", "fromLink": "Doctrine_Validator_ErrorStack.html", "link": "Doctrine_Validator_ErrorStack.html#method_contains", "name": "Doctrine_Validator_ErrorStack::contains", "doc": "&quot;Check if a field has an error&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Validator_ErrorStack", "fromLink": "Doctrine_Validator_ErrorStack.html", "link": "Doctrine_Validator_ErrorStack.html#method_clear", "name": "Doctrine_Validator_ErrorStack::clear", "doc": "&quot;Removes all errors from the stack.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Validator_ErrorStack", "fromLink": "Doctrine_Validator_ErrorStack.html", "link": "Doctrine_Validator_ErrorStack.html#method_getIterator", "name": "Doctrine_Validator_ErrorStack::getIterator", "doc": "&quot;Enter description here.&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Validator_ErrorStack", "fromLink": "Doctrine_Validator_ErrorStack.html", "link": "Doctrine_Validator_ErrorStack.html#method_toArray", "name": "Doctrine_Validator_ErrorStack::toArray", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Validator_ErrorStack", "fromLink": "Doctrine_Validator_ErrorStack.html", "link": "Doctrine_Validator_ErrorStack.html#method_count", "name": "Doctrine_Validator_ErrorStack::count", "doc": "&quot;Count the number of errors&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Validator_ErrorStack", "fromLink": "Doctrine_Validator_ErrorStack.html", "link": "Doctrine_Validator_ErrorStack.html#method_getClassname", "name": "Doctrine_Validator_ErrorStack::getClassname", "doc": "&quot;Get the classname where the errors occured&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Validator_ErrorStack", "fromLink": "Doctrine_Validator_ErrorStack.html", "link": "Doctrine_Validator_ErrorStack.html#method_getValidators", "name": "Doctrine_Validator_ErrorStack::getValidators", "doc": "&quot;Get array of failed validators&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Validator_Exception.html", "name": "Doctrine_Validator_Exception", "doc": "&quot;Doctrine_Validator_Exception&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Validator_Exception", "fromLink": "Doctrine_Validator_Exception.html", "link": "Doctrine_Validator_Exception.html#method___construct", "name": "Doctrine_Validator_Exception::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Validator_Exception", "fromLink": "Doctrine_Validator_Exception.html", "link": "Doctrine_Validator_Exception.html#method_getInvalidRecords", "name": "Doctrine_Validator_Exception::getInvalidRecords", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Validator_Exception", "fromLink": "Doctrine_Validator_Exception.html", "link": "Doctrine_Validator_Exception.html#method_getIterator", "name": "Doctrine_Validator_Exception::getIterator", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Validator_Exception", "fromLink": "Doctrine_Validator_Exception.html", "link": "Doctrine_Validator_Exception.html#method_count", "name": "Doctrine_Validator_Exception::count", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Validator_Exception", "fromLink": "Doctrine_Validator_Exception.html", "link": "Doctrine_Validator_Exception.html#method_inspect", "name": "Doctrine_Validator_Exception::inspect", "doc": "&quot;This method will apply the value of the $function variable as a user_func\nto tall errorstack objects in the exception&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Validator_Future.html", "name": "Doctrine_Validator_Future", "doc": "&quot;Doctrine_Validator_Future&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Validator_Future", "fromLink": "Doctrine_Validator_Future.html", "link": "Doctrine_Validator_Future.html#method_validate", "name": "Doctrine_Validator_Future::validate", "doc": "&quot;checks if the given value is a valid date in the future.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Validator_HtmlColor.html", "name": "Doctrine_Validator_HtmlColor", "doc": "&quot;Doctrine_Validator_HtmlColor&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Validator_HtmlColor", "fromLink": "Doctrine_Validator_HtmlColor.html", "link": "Doctrine_Validator_HtmlColor.html#method_validate", "name": "Doctrine_Validator_HtmlColor::validate", "doc": "&quot;checks if given value is a valid html color code&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Validator_Ip.html", "name": "Doctrine_Validator_Ip", "doc": "&quot;Doctrine_Validator_Ip&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Validator_Ip", "fromLink": "Doctrine_Validator_Ip.html", "link": "Doctrine_Validator_Ip.html#method_validate", "name": "Doctrine_Validator_Ip::validate", "doc": "&quot;checks if given value is valid ip address&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Validator_Minlength.html", "name": "Doctrine_Validator_Minlength", "doc": "&quot;Doctrine_Validator_Regexp&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Validator_Minlength", "fromLink": "Doctrine_Validator_Minlength.html", "link": "Doctrine_Validator_Minlength.html#method_validate", "name": "Doctrine_Validator_Minlength::validate", "doc": "&quot;checks if given value is more length than the minimum length required&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Validator_Nospace.html", "name": "Doctrine_Validator_Nospace", "doc": "&quot;Doctrine_Validator_Nospace&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Validator_Nospace", "fromLink": "Doctrine_Validator_Nospace.html", "link": "Doctrine_Validator_Nospace.html#method_validate", "name": "Doctrine_Validator_Nospace::validate", "doc": "&quot;checks that value doesn&#039;t contain any space chars&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Validator_Notblank.html", "name": "Doctrine_Validator_Notblank", "doc": "&quot;Doctrine_Validator_Notblank&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Validator_Notblank", "fromLink": "Doctrine_Validator_Notblank.html", "link": "Doctrine_Validator_Notblank.html#method_validate", "name": "Doctrine_Validator_Notblank::validate", "doc": "&quot;checks that value isn&#039;t blank\na value is blank when its either null or contains only space characters&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Validator_Notnull.html", "name": "Doctrine_Validator_Notnull", "doc": "&quot;Doctrine_Validator_Notnull&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Validator_Notnull", "fromLink": "Doctrine_Validator_Notnull.html", "link": "Doctrine_Validator_Notnull.html#method_validate", "name": "Doctrine_Validator_Notnull::validate", "doc": "&quot;checks that given value isn&#039;t null&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Validator_Past.html", "name": "Doctrine_Validator_Past", "doc": "&quot;Doctrine_Validator_Past&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Validator_Past", "fromLink": "Doctrine_Validator_Past.html", "link": "Doctrine_Validator_Past.html#method_validate", "name": "Doctrine_Validator_Past::validate", "doc": "&quot;checks if the given value is a valid date in the past.&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Validator_Range.html", "name": "Doctrine_Validator_Range", "doc": "&quot;Doctrine_Validator_Range&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Validator_Range", "fromLink": "Doctrine_Validator_Range.html", "link": "Doctrine_Validator_Range.html#method_validate", "name": "Doctrine_Validator_Range::validate", "doc": "&quot;checks if value is within given range&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Validator_Readonly.html", "name": "Doctrine_Validator_Readonly", "doc": "&quot;Doctrine_Validator_Readonly&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Validator_Readonly", "fromLink": "Doctrine_Validator_Readonly.html", "link": "Doctrine_Validator_Readonly.html#method_validate", "name": "Doctrine_Validator_Readonly::validate", "doc": "&quot;checks if value has been modified&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Validator_Regexp.html", "name": "Doctrine_Validator_Regexp", "doc": "&quot;Doctrine_Validator_Regexp&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Validator_Regexp", "fromLink": "Doctrine_Validator_Regexp.html", "link": "Doctrine_Validator_Regexp.html#method_validate", "name": "Doctrine_Validator_Regexp::validate", "doc": "&quot;checks if given value satisfies a regular expression&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Validator_Time.html", "name": "Doctrine_Validator_Time", "doc": "&quot;Doctrine_Validator_Time&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Validator_Time", "fromLink": "Doctrine_Validator_Time.html", "link": "Doctrine_Validator_Time.html#method_validate", "name": "Doctrine_Validator_Time::validate", "doc": "&quot;validate&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Validator_Timestamp.html", "name": "Doctrine_Validator_Timestamp", "doc": "&quot;Doctrine_Validator_Timestamp&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Validator_Timestamp", "fromLink": "Doctrine_Validator_Timestamp.html", "link": "Doctrine_Validator_Timestamp.html#method_validate", "name": "Doctrine_Validator_Timestamp::validate", "doc": "&quot;checks if given value is a valid timestamp\nISO-8601 timestamp (YYYY-MM-DDTHH:MM:SS+00:00) or (YYYY-MM-DD HH:MM:SS)&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Validator_Unique.html", "name": "Doctrine_Validator_Unique", "doc": "&quot;Doctrine_Validator_Unique&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Validator_Unique", "fromLink": "Doctrine_Validator_Unique.html", "link": "Doctrine_Validator_Unique.html#method_validate", "name": "Doctrine_Validator_Unique::validate", "doc": "&quot;checks if given value is unique&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Validator_Unsigned.html", "name": "Doctrine_Validator_Unsigned", "doc": "&quot;Doctrine_Validator_Unsigned&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Validator_Unsigned", "fromLink": "Doctrine_Validator_Unsigned.html", "link": "Doctrine_Validator_Unsigned.html#method_validate", "name": "Doctrine_Validator_Unsigned::validate", "doc": "&quot;checks if given value is a valid unsigned integer or float&quot;"},
            
            {"type": "Class",  "link": "Doctrine_Validator_Usstate.html", "name": "Doctrine_Validator_Usstate", "doc": "&quot;Doctrine_Validator_Usstate&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_Validator_Usstate", "fromLink": "Doctrine_Validator_Usstate.html", "link": "Doctrine_Validator_Usstate.html#method_getStates", "name": "Doctrine_Validator_Usstate::getStates", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine_Validator_Usstate", "fromLink": "Doctrine_Validator_Usstate.html", "link": "Doctrine_Validator_Usstate.html#method_validate", "name": "Doctrine_Validator_Usstate::validate", "doc": "&quot;checks if given value is a valid US state code&quot;"},
            
            {"type": "Class",  "link": "Doctrine_View.html", "name": "Doctrine_View", "doc": "&quot;Doctrine_View&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine_View", "fromLink": "Doctrine_View.html", "link": "Doctrine_View.html#method___construct", "name": "Doctrine_View::__construct", "doc": "&quot;constructor&quot;"},
                    {"type": "Method", "fromName": "Doctrine_View", "fromLink": "Doctrine_View.html", "link": "Doctrine_View.html#method_getQuery", "name": "Doctrine_View::getQuery", "doc": "&quot;returns the associated query object&quot;"},
                    {"type": "Method", "fromName": "Doctrine_View", "fromLink": "Doctrine_View.html", "link": "Doctrine_View.html#method_getName", "name": "Doctrine_View::getName", "doc": "&quot;returns the name of this view&quot;"},
                    {"type": "Method", "fromName": "Doctrine_View", "fromLink": "Doctrine_View.html", "link": "Doctrine_View.html#method_getConnection", "name": "Doctrine_View::getConnection", "doc": "&quot;returns the connection object&quot;"},
                    {"type": "Method", "fromName": "Doctrine_View", "fromLink": "Doctrine_View.html", "link": "Doctrine_View.html#method_create", "name": "Doctrine_View::create", "doc": "&quot;creates this view&quot;"},
                    {"type": "Method", "fromName": "Doctrine_View", "fromLink": "Doctrine_View.html", "link": "Doctrine_View.html#method_drop", "name": "Doctrine_View::drop", "doc": "&quot;drops this view from the database&quot;"},
                    {"type": "Method", "fromName": "Doctrine_View", "fromLink": "Doctrine_View.html", "link": "Doctrine_View.html#method_execute", "name": "Doctrine_View::execute", "doc": "&quot;returns a collection of Doctrine_Record objects&quot;"},
                    {"type": "Method", "fromName": "Doctrine_View", "fromLink": "Doctrine_View.html", "link": "Doctrine_View.html#method_getSelectSql", "name": "Doctrine_View::getSelectSql", "doc": "&quot;returns the select sql for this view&quot;"},
                    {"type": "Method", "fromName": "Doctrine_View", "fromLink": "Doctrine_View.html", "link": "Doctrine_View.html#method_getViewSql", "name": "Doctrine_View::getViewSql", "doc": "&quot;Get the view sql string&quot;"},
                    {"type": "Method", "fromName": "Doctrine_View", "fromLink": "Doctrine_View.html", "link": "Doctrine_View.html#method_getViewDql", "name": "Doctrine_View::getViewDql", "doc": "&quot;Get the view dql string&quot;"},
            
            {"type": "Class",  "link": "Doctrine_View_Exception.html", "name": "Doctrine_View_Exception", "doc": "&quot;Doctrine_View_Exception&quot;"},
                    
            {"type": "Class",  "link": "sfYaml.html", "name": "sfYaml", "doc": "&quot;sfYaml offers convenience methods to load and dump YAML.&quot;"},
                                                        {"type": "Method", "fromName": "sfYaml", "fromLink": "sfYaml.html", "link": "sfYaml.html#method_setSpecVersion", "name": "sfYaml::setSpecVersion", "doc": "&quot;Sets the YAML specification version to use.&quot;"},
                    {"type": "Method", "fromName": "sfYaml", "fromLink": "sfYaml.html", "link": "sfYaml.html#method_getSpecVersion", "name": "sfYaml::getSpecVersion", "doc": "&quot;Gets the YAML specification version to use.&quot;"},
                    {"type": "Method", "fromName": "sfYaml", "fromLink": "sfYaml.html", "link": "sfYaml.html#method_load", "name": "sfYaml::load", "doc": "&quot;Loads YAML into a PHP array.&quot;"},
                    {"type": "Method", "fromName": "sfYaml", "fromLink": "sfYaml.html", "link": "sfYaml.html#method_dump", "name": "sfYaml::dump", "doc": "&quot;Dumps a PHP array to a YAML string.&quot;"},
            
            {"type": "Class",  "link": "sfYamlDumper.html", "name": "sfYamlDumper", "doc": "&quot;sfYamlDumper dumps PHP variables to YAML strings.&quot;"},
                                                        {"type": "Method", "fromName": "sfYamlDumper", "fromLink": "sfYamlDumper.html", "link": "sfYamlDumper.html#method_dump", "name": "sfYamlDumper::dump", "doc": "&quot;Dumps a PHP value to YAML.&quot;"},
            
            {"type": "Class",  "link": "sfYamlInline.html", "name": "sfYamlInline", "doc": "&quot;sfYamlInline implements a YAML parser\/dumper for the YAML inline syntax.&quot;"},
                                                        {"type": "Method", "fromName": "sfYamlInline", "fromLink": "sfYamlInline.html", "link": "sfYamlInline.html#method_load", "name": "sfYamlInline::load", "doc": "&quot;Convert a YAML string to a PHP array.&quot;"},
                    {"type": "Method", "fromName": "sfYamlInline", "fromLink": "sfYamlInline.html", "link": "sfYamlInline.html#method_dump", "name": "sfYamlInline::dump", "doc": "&quot;Dumps a given PHP variable to a YAML string.&quot;"},
                    {"type": "Method", "fromName": "sfYamlInline", "fromLink": "sfYamlInline.html", "link": "sfYamlInline.html#method_dumpArray", "name": "sfYamlInline::dumpArray", "doc": "&quot;Dumps a PHP array to a YAML string.&quot;"},
                    {"type": "Method", "fromName": "sfYamlInline", "fromLink": "sfYamlInline.html", "link": "sfYamlInline.html#method_parseScalar", "name": "sfYamlInline::parseScalar", "doc": "&quot;Parses a scalar to a YAML string.&quot;"},
                    {"type": "Method", "fromName": "sfYamlInline", "fromLink": "sfYamlInline.html", "link": "sfYamlInline.html#method_parseQuotedScalar", "name": "sfYamlInline::parseQuotedScalar", "doc": "&quot;Parses a quoted scalar to YAML.&quot;"},
                    {"type": "Method", "fromName": "sfYamlInline", "fromLink": "sfYamlInline.html", "link": "sfYamlInline.html#method_parseSequence", "name": "sfYamlInline::parseSequence", "doc": "&quot;Parses a sequence to a YAML string.&quot;"},
                    {"type": "Method", "fromName": "sfYamlInline", "fromLink": "sfYamlInline.html", "link": "sfYamlInline.html#method_parseMapping", "name": "sfYamlInline::parseMapping", "doc": "&quot;Parses a mapping to a YAML string.&quot;"},
                    {"type": "Method", "fromName": "sfYamlInline", "fromLink": "sfYamlInline.html", "link": "sfYamlInline.html#method_evaluateScalar", "name": "sfYamlInline::evaluateScalar", "doc": "&quot;Evaluates scalars and replaces magic values.&quot;"},
                    {"type": "Method", "fromName": "sfYamlInline", "fromLink": "sfYamlInline.html", "link": "sfYamlInline.html#method_getTimestampRegex", "name": "sfYamlInline::getTimestampRegex", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "sfYamlParser.html", "name": "sfYamlParser", "doc": "&quot;sfYamlParser parses YAML strings to convert them to PHP arrays.&quot;"},
                                                        {"type": "Method", "fromName": "sfYamlParser", "fromLink": "sfYamlParser.html", "link": "sfYamlParser.html#method___construct", "name": "sfYamlParser::__construct", "doc": "&quot;Constructor&quot;"},
                    {"type": "Method", "fromName": "sfYamlParser", "fromLink": "sfYamlParser.html", "link": "sfYamlParser.html#method_parse", "name": "sfYamlParser::parse", "doc": "&quot;Parses a YAML string to a PHP value.&quot;"},
                    {"type": "Method", "fromName": "sfYamlParser", "fromLink": "sfYamlParser.html", "link": "sfYamlParser.html#method_getRealCurrentLineNb", "name": "sfYamlParser::getRealCurrentLineNb", "doc": "&quot;Returns the current line number (takes the offset into account).&quot;"},
                    {"type": "Method", "fromName": "sfYamlParser", "fromLink": "sfYamlParser.html", "link": "sfYamlParser.html#method_getCurrentLineIndentation", "name": "sfYamlParser::getCurrentLineIndentation", "doc": "&quot;Returns the current line indentation.&quot;"},
                    {"type": "Method", "fromName": "sfYamlParser", "fromLink": "sfYamlParser.html", "link": "sfYamlParser.html#method_getNextEmbedBlock", "name": "sfYamlParser::getNextEmbedBlock", "doc": "&quot;Returns the next embed block of YAML.&quot;"},
                    {"type": "Method", "fromName": "sfYamlParser", "fromLink": "sfYamlParser.html", "link": "sfYamlParser.html#method_moveToNextLine", "name": "sfYamlParser::moveToNextLine", "doc": "&quot;Moves the parser to the next line.&quot;"},
                    {"type": "Method", "fromName": "sfYamlParser", "fromLink": "sfYamlParser.html", "link": "sfYamlParser.html#method_moveToPreviousLine", "name": "sfYamlParser::moveToPreviousLine", "doc": "&quot;Moves the parser to the previous line.&quot;"},
                    {"type": "Method", "fromName": "sfYamlParser", "fromLink": "sfYamlParser.html", "link": "sfYamlParser.html#method_parseValue", "name": "sfYamlParser::parseValue", "doc": "&quot;Parses a YAML value.&quot;"},
                    {"type": "Method", "fromName": "sfYamlParser", "fromLink": "sfYamlParser.html", "link": "sfYamlParser.html#method_parseFoldedScalar", "name": "sfYamlParser::parseFoldedScalar", "doc": "&quot;Parses a folded scalar.&quot;"},
                    {"type": "Method", "fromName": "sfYamlParser", "fromLink": "sfYamlParser.html", "link": "sfYamlParser.html#method_isNextLineIndented", "name": "sfYamlParser::isNextLineIndented", "doc": "&quot;Returns true if the next line is indented.&quot;"},
                    {"type": "Method", "fromName": "sfYamlParser", "fromLink": "sfYamlParser.html", "link": "sfYamlParser.html#method_isCurrentLineEmpty", "name": "sfYamlParser::isCurrentLineEmpty", "doc": "&quot;Returns true if the current line is blank or if it is a comment line.&quot;"},
                    {"type": "Method", "fromName": "sfYamlParser", "fromLink": "sfYamlParser.html", "link": "sfYamlParser.html#method_isCurrentLineBlank", "name": "sfYamlParser::isCurrentLineBlank", "doc": "&quot;Returns true if the current line is blank.&quot;"},
                    {"type": "Method", "fromName": "sfYamlParser", "fromLink": "sfYamlParser.html", "link": "sfYamlParser.html#method_isCurrentLineComment", "name": "sfYamlParser::isCurrentLineComment", "doc": "&quot;Returns true if the current line is a comment line.&quot;"},
                    {"type": "Method", "fromName": "sfYamlParser", "fromLink": "sfYamlParser.html", "link": "sfYamlParser.html#method_cleanup", "name": "sfYamlParser::cleanup", "doc": "&quot;Cleanups a YAML string to be parsed.&quot;"},
            
            
                                        // Fix trailing commas in the index
        {}
    ];

    /** Tokenizes strings by namespaces and functions */
    function tokenizer(term) {
        if (!term) {
            return [];
        }

        var tokens = [term];
        var meth = term.indexOf('::');

        // Split tokens into methods if "::" is found.
        if (meth > -1) {
            tokens.push(term.substr(meth + 2));
            term = term.substr(0, meth - 2);
        }

        // Split by namespace or fake namespace.
        if (term.indexOf('\\') > -1) {
            tokens = tokens.concat(term.split('\\'));
        } else if (term.indexOf('_') > 0) {
            tokens = tokens.concat(term.split('_'));
        }

        // Merge in splitting the string by case and return
        tokens = tokens.concat(term.match(/(([A-Z]?[^A-Z]*)|([a-z]?[^a-z]*))/g).slice(0,-1));

        return tokens;
    };

    root.Sami = {
        /**
         * Cleans the provided term. If no term is provided, then one is
         * grabbed from the query string "search" parameter.
         */
        cleanSearchTerm: function(term) {
            // Grab from the query string
            if (typeof term === 'undefined') {
                var name = 'search';
                var regex = new RegExp("[\\?&]" + name + "=([^&#]*)");
                var results = regex.exec(location.search);
                if (results === null) {
                    return null;
                }
                term = decodeURIComponent(results[1].replace(/\+/g, " "));
            }

            return term.replace(/<(?:.|\n)*?>/gm, '');
        },

        /** Searches through the index for a given term */
        search: function(term) {
            // Create a new search index if needed
            if (!bhIndex) {
                bhIndex = new Bloodhound({
                    limit: 500,
                    local: searchIndex,
                    datumTokenizer: function (d) {
                        return tokenizer(d.name);
                    },
                    queryTokenizer: Bloodhound.tokenizers.whitespace
                });
                bhIndex.initialize();
            }

            results = [];
            bhIndex.get(term, function(matches) {
                results = matches;
            });

            if (!rootPath) {
                return results;
            }

            // Fix the element links based on the current page depth.
            return $.map(results, function(ele) {
                if (ele.link.indexOf('..') > -1) {
                    return ele;
                }
                ele.link = rootPath + ele.link;
                if (ele.fromLink) {
                    ele.fromLink = rootPath + ele.fromLink;
                }
                return ele;
            });
        },

        /** Get a search class for a specific type */
        getSearchClass: function(type) {
            return searchTypeClasses[type] || searchTypeClasses['_'];
        },

        /** Add the left-nav tree to the site */
        injectApiTree: function(ele) {
            ele.html(treeHtml);
        }
    };

    $(function() {
        // Modify the HTML to work correctly based on the current depth
        rootPath = $('body').attr('data-root-path');
        treeHtml = treeHtml.replace(/href="/g, 'href="' + rootPath);
        Sami.injectApiTree($('#api-tree'));
    });

    return root.Sami;
})(window);

$(function() {

    // Enable the version switcher
    $('#version-switcher').change(function() {
        window.location = $(this).val()
    });

    
        // Toggle left-nav divs on click
        $('#api-tree .hd span').click(function() {
            $(this).parent().parent().toggleClass('opened');
        });

        // Expand the parent namespaces of the current page.
        var expected = $('body').attr('data-name');

        if (expected) {
            // Open the currently selected node and its parents.
            var container = $('#api-tree');
            var node = $('#api-tree li[data-name="' + expected + '"]');
            // Node might not be found when simulating namespaces
            if (node.length > 0) {
                node.addClass('active').addClass('opened');
                node.parents('li').addClass('opened');
                var scrollPos = node.offset().top - container.offset().top + container.scrollTop();
                // Position the item nearer to the top of the screen.
                scrollPos -= 200;
                container.scrollTop(scrollPos);
            }
        }

    
    
        var form = $('#search-form .typeahead');
        form.typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        }, {
            name: 'search',
            displayKey: 'name',
            source: function (q, cb) {
                cb(Sami.search(q));
            }
        });

        // The selection is direct-linked when the user selects a suggestion.
        form.on('typeahead:selected', function(e, suggestion) {
            window.location = suggestion.link;
        });

        // The form is submitted when the user hits enter.
        form.keypress(function (e) {
            if (e.which == 13) {
                $('#search-form').submit();
                return true;
            }
        });

    
});


