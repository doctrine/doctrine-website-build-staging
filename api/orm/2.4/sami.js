
window.projectVersion = '2.4';

(function(root) {

    var bhIndex = null;
    var rootPath = '';
    var treeHtml = '        <ul>                <li data-name="namespace:Doctrine" class="opened">                    <div style="padding-left:0px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine.html">Doctrine</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Doctrine_ORM" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/ORM.html">ORM</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Doctrine_ORM_Decorator" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/ORM/Decorator.html">Decorator</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Doctrine_ORM_Decorator_EntityManagerDecorator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Decorator/EntityManagerDecorator.html">EntityManagerDecorator</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Doctrine_ORM_Event" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/ORM/Event.html">Event</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Doctrine_ORM_Event_LifecycleEventArgs" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Event/LifecycleEventArgs.html">LifecycleEventArgs</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Event_ListenersInvoker" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Event/ListenersInvoker.html">ListenersInvoker</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Event_LoadClassMetadataEventArgs" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Event/LoadClassMetadataEventArgs.html">LoadClassMetadataEventArgs</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Event_OnClearEventArgs" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Event/OnClearEventArgs.html">OnClearEventArgs</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Event_OnFlushEventArgs" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Event/OnFlushEventArgs.html">OnFlushEventArgs</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Event_PostFlushEventArgs" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Event/PostFlushEventArgs.html">PostFlushEventArgs</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Event_PreFlushEventArgs" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Event/PreFlushEventArgs.html">PreFlushEventArgs</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Event_PreUpdateEventArgs" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Event/PreUpdateEventArgs.html">PreUpdateEventArgs</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Doctrine_ORM_Id" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/ORM/Id.html">Id</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Doctrine_ORM_Id_AbstractIdGenerator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Id/AbstractIdGenerator.html">AbstractIdGenerator</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Id_AssignedGenerator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Id/AssignedGenerator.html">AssignedGenerator</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Id_BigIntegerIdentityGenerator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Id/BigIntegerIdentityGenerator.html">BigIntegerIdentityGenerator</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Id_IdentityGenerator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Id/IdentityGenerator.html">IdentityGenerator</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Id_SequenceGenerator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Id/SequenceGenerator.html">SequenceGenerator</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Id_TableGenerator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Id/TableGenerator.html">TableGenerator</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Id_UuidGenerator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Id/UuidGenerator.html">UuidGenerator</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Doctrine_ORM_Internal" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/ORM/Internal.html">Internal</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Doctrine_ORM_Internal_Hydration" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/ORM/Internal/Hydration.html">Hydration</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Doctrine_ORM_Internal_Hydration_AbstractHydrator" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Internal/Hydration/AbstractHydrator.html">AbstractHydrator</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Internal_Hydration_ArrayHydrator" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Internal/Hydration/ArrayHydrator.html">ArrayHydrator</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Internal_Hydration_HydrationException" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Internal/Hydration/HydrationException.html">HydrationException</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Internal_Hydration_IterableResult" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Internal/Hydration/IterableResult.html">IterableResult</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Internal_Hydration_ObjectHydrator" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Internal/Hydration/ObjectHydrator.html">ObjectHydrator</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Internal_Hydration_ScalarHydrator" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Internal/Hydration/ScalarHydrator.html">ScalarHydrator</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Internal_Hydration_SimpleObjectHydrator" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Internal/Hydration/SimpleObjectHydrator.html">SimpleObjectHydrator</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Internal_Hydration_SingleScalarHydrator" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Internal/Hydration/SingleScalarHydrator.html">SingleScalarHydrator</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Doctrine_ORM_Internal_CommitOrderCalculator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Internal/CommitOrderCalculator.html">CommitOrderCalculator</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Doctrine_ORM_Mapping" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/ORM/Mapping.html">Mapping</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Doctrine_ORM_Mapping_Builder" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/ORM/Mapping/Builder.html">Builder</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Doctrine_ORM_Mapping_Builder_AssociationBuilder" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/Builder/AssociationBuilder.html">AssociationBuilder</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_Builder_ClassMetadataBuilder" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html">ClassMetadataBuilder</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_Builder_EntityListenerBuilder" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/Builder/EntityListenerBuilder.html">EntityListenerBuilder</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_Builder_FieldBuilder" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/Builder/FieldBuilder.html">FieldBuilder</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_Builder_ManyToManyAssociationBuilder" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/Builder/ManyToManyAssociationBuilder.html">ManyToManyAssociationBuilder</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_Builder_OneToManyAssociationBuilder" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/Builder/OneToManyAssociationBuilder.html">OneToManyAssociationBuilder</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Doctrine_ORM_Mapping_Driver" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/ORM/Mapping/Driver.html">Driver</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Doctrine_ORM_Mapping_Driver_AnnotationDriver" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/Driver/AnnotationDriver.html">AnnotationDriver</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_Driver_DatabaseDriver" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/Driver/DatabaseDriver.html">DatabaseDriver</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_Driver_DriverChain" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/Driver/DriverChain.html">DriverChain</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_Driver_PHPDriver" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/Driver/PHPDriver.html">PHPDriver</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_Driver_SimplifiedXmlDriver" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/Driver/SimplifiedXmlDriver.html">SimplifiedXmlDriver</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_Driver_SimplifiedYamlDriver" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/Driver/SimplifiedYamlDriver.html">SimplifiedYamlDriver</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_Driver_StaticPHPDriver" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/Driver/StaticPHPDriver.html">StaticPHPDriver</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_Driver_XmlDriver" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/Driver/XmlDriver.html">XmlDriver</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_Driver_YamlDriver" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/Driver/YamlDriver.html">YamlDriver</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_Annotation" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/Annotation.html">Annotation</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_AnsiQuoteStrategy" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/AnsiQuoteStrategy.html">AnsiQuoteStrategy</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_AssociationOverride" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/AssociationOverride.html">AssociationOverride</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_AssociationOverrides" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/AssociationOverrides.html">AssociationOverrides</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_AttributeOverride" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/AttributeOverride.html">AttributeOverride</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_AttributeOverrides" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/AttributeOverrides.html">AttributeOverrides</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_ChangeTrackingPolicy" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/ChangeTrackingPolicy.html">ChangeTrackingPolicy</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_ClassMetadata" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/ClassMetadata.html">ClassMetadata</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_ClassMetadataFactory" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/ClassMetadataFactory.html">ClassMetadataFactory</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_ClassMetadataInfo" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/ClassMetadataInfo.html">ClassMetadataInfo</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_Column" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/Column.html">Column</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_ColumnResult" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/ColumnResult.html">ColumnResult</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_CustomIdGenerator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/CustomIdGenerator.html">CustomIdGenerator</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_DefaultEntityListenerResolver" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/DefaultEntityListenerResolver.html">DefaultEntityListenerResolver</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_DefaultNamingStrategy" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/DefaultNamingStrategy.html">DefaultNamingStrategy</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_DefaultQuoteStrategy" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/DefaultQuoteStrategy.html">DefaultQuoteStrategy</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_DiscriminatorColumn" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/DiscriminatorColumn.html">DiscriminatorColumn</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_DiscriminatorMap" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/DiscriminatorMap.html">DiscriminatorMap</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_ElementCollection" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/ElementCollection.html">ElementCollection</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_Entity" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/Entity.html">Entity</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_EntityListenerResolver" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/EntityListenerResolver.html">EntityListenerResolver</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_EntityListeners" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/EntityListeners.html">EntityListeners</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_EntityResult" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/EntityResult.html">EntityResult</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_FieldResult" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/FieldResult.html">FieldResult</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_GeneratedValue" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/GeneratedValue.html">GeneratedValue</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_HasLifecycleCallbacks" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/HasLifecycleCallbacks.html">HasLifecycleCallbacks</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_Id" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/Id.html">Id</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_Index" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/Index.html">Index</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_InheritanceType" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/InheritanceType.html">InheritanceType</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_JoinColumn" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/JoinColumn.html">JoinColumn</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_JoinColumns" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/JoinColumns.html">JoinColumns</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_JoinTable" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/JoinTable.html">JoinTable</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_ManyToMany" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/ManyToMany.html">ManyToMany</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_ManyToOne" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/ManyToOne.html">ManyToOne</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_MappedSuperclass" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/MappedSuperclass.html">MappedSuperclass</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_MappingException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/MappingException.html">MappingException</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_NamedNativeQueries" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/NamedNativeQueries.html">NamedNativeQueries</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_NamedNativeQuery" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/NamedNativeQuery.html">NamedNativeQuery</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_NamedQueries" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/NamedQueries.html">NamedQueries</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_NamedQuery" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/NamedQuery.html">NamedQuery</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_NamingStrategy" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/NamingStrategy.html">NamingStrategy</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_OneToMany" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/OneToMany.html">OneToMany</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_OneToOne" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/OneToOne.html">OneToOne</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_OrderBy" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/OrderBy.html">OrderBy</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_PostLoad" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/PostLoad.html">PostLoad</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_PostPersist" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/PostPersist.html">PostPersist</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_PostRemove" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/PostRemove.html">PostRemove</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_PostUpdate" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/PostUpdate.html">PostUpdate</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_PreFlush" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/PreFlush.html">PreFlush</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_PrePersist" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/PrePersist.html">PrePersist</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_PreRemove" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/PreRemove.html">PreRemove</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_PreUpdate" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/PreUpdate.html">PreUpdate</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_QuoteStrategy" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/QuoteStrategy.html">QuoteStrategy</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_SequenceGenerator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/SequenceGenerator.html">SequenceGenerator</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_SqlResultSetMapping" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/SqlResultSetMapping.html">SqlResultSetMapping</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_SqlResultSetMappings" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/SqlResultSetMappings.html">SqlResultSetMappings</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_Table" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/Table.html">Table</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_UnderscoreNamingStrategy" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/UnderscoreNamingStrategy.html">UnderscoreNamingStrategy</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_UniqueConstraint" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/UniqueConstraint.html">UniqueConstraint</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Mapping_Version" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Mapping/Version.html">Version</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Doctrine_ORM_Persisters" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/ORM/Persisters.html">Persisters</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Doctrine_ORM_Persisters_AbstractCollectionPersister" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Persisters/AbstractCollectionPersister.html">AbstractCollectionPersister</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Persisters_AbstractEntityInheritancePersister" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Persisters/AbstractEntityInheritancePersister.html">AbstractEntityInheritancePersister</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Persisters_BasicEntityPersister" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Persisters/BasicEntityPersister.html">BasicEntityPersister</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Persisters_ElementCollectionPersister" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Persisters/ElementCollectionPersister.html">ElementCollectionPersister</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Persisters_JoinedSubclassPersister" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Persisters/JoinedSubclassPersister.html">JoinedSubclassPersister</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Persisters_ManyToManyPersister" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Persisters/ManyToManyPersister.html">ManyToManyPersister</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Persisters_OneToManyPersister" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Persisters/OneToManyPersister.html">OneToManyPersister</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Persisters_PersisterException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Persisters/PersisterException.html">PersisterException</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Persisters_SingleTablePersister" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Persisters/SingleTablePersister.html">SingleTablePersister</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Persisters_SqlExpressionVisitor" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Persisters/SqlExpressionVisitor.html">SqlExpressionVisitor</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Persisters_SqlValueVisitor" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Persisters/SqlValueVisitor.html">SqlValueVisitor</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Persisters_UnionSubclassPersister" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Persisters/UnionSubclassPersister.html">UnionSubclassPersister</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Doctrine_ORM_Proxy" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/ORM/Proxy.html">Proxy</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Doctrine_ORM_Proxy_Autoloader" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Proxy/Autoloader.html">Autoloader</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Proxy_Proxy" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Proxy/Proxy.html">Proxy</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Proxy_ProxyFactory" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Proxy/ProxyFactory.html">ProxyFactory</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Doctrine_ORM_Query" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/ORM/Query.html">Query</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Doctrine_ORM_Query_AST" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/ORM/Query/AST.html">AST</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Doctrine_ORM_Query_AST_Functions" >                    <div style="padding-left:72px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/ORM/Query/AST/Functions.html">Functions</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Doctrine_ORM_Query_AST_Functions_AbsFunction" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/Functions/AbsFunction.html">AbsFunction</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_Functions_BitAndFunction" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/Functions/BitAndFunction.html">BitAndFunction</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_Functions_BitOrFunction" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/Functions/BitOrFunction.html">BitOrFunction</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_Functions_ConcatFunction" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/Functions/ConcatFunction.html">ConcatFunction</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_Functions_CurrentDateFunction" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/Functions/CurrentDateFunction.html">CurrentDateFunction</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_Functions_CurrentTimeFunction" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/Functions/CurrentTimeFunction.html">CurrentTimeFunction</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_Functions_CurrentTimestampFunction" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/Functions/CurrentTimestampFunction.html">CurrentTimestampFunction</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_Functions_DateAddFunction" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/Functions/DateAddFunction.html">DateAddFunction</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_Functions_DateDiffFunction" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/Functions/DateDiffFunction.html">DateDiffFunction</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_Functions_DateSubFunction" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/Functions/DateSubFunction.html">DateSubFunction</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_Functions_FunctionNode" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/Functions/FunctionNode.html">FunctionNode</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_Functions_IdentityFunction" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/Functions/IdentityFunction.html">IdentityFunction</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_Functions_LengthFunction" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/Functions/LengthFunction.html">LengthFunction</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_Functions_LocateFunction" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/Functions/LocateFunction.html">LocateFunction</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_Functions_LowerFunction" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/Functions/LowerFunction.html">LowerFunction</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_Functions_ModFunction" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/Functions/ModFunction.html">ModFunction</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_Functions_SizeFunction" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/Functions/SizeFunction.html">SizeFunction</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_Functions_SqrtFunction" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/Functions/SqrtFunction.html">SqrtFunction</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_Functions_SubstringFunction" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/Functions/SubstringFunction.html">SubstringFunction</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_Functions_TrimFunction" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/Functions/TrimFunction.html">TrimFunction</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_Functions_UpperFunction" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/Functions/UpperFunction.html">UpperFunction</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_ASTException" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/ASTException.html">ASTException</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_AggregateExpression" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/AggregateExpression.html">AggregateExpression</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_ArithmeticExpression" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/ArithmeticExpression.html">ArithmeticExpression</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_ArithmeticFactor" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/ArithmeticFactor.html">ArithmeticFactor</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_ArithmeticTerm" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/ArithmeticTerm.html">ArithmeticTerm</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_BetweenExpression" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/BetweenExpression.html">BetweenExpression</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_CoalesceExpression" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/CoalesceExpression.html">CoalesceExpression</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_CollectionMemberExpression" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/CollectionMemberExpression.html">CollectionMemberExpression</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_ComparisonExpression" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/ComparisonExpression.html">ComparisonExpression</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_ConditionalExpression" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/ConditionalExpression.html">ConditionalExpression</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_ConditionalFactor" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/ConditionalFactor.html">ConditionalFactor</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_ConditionalPrimary" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/ConditionalPrimary.html">ConditionalPrimary</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_ConditionalTerm" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/ConditionalTerm.html">ConditionalTerm</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_DeleteClause" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/DeleteClause.html">DeleteClause</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_DeleteStatement" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/DeleteStatement.html">DeleteStatement</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_EmptyCollectionComparisonExpression" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/EmptyCollectionComparisonExpression.html">EmptyCollectionComparisonExpression</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_ExistsExpression" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/ExistsExpression.html">ExistsExpression</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_FromClause" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/FromClause.html">FromClause</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_GeneralCaseExpression" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/GeneralCaseExpression.html">GeneralCaseExpression</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_GroupByClause" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/GroupByClause.html">GroupByClause</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_HavingClause" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/HavingClause.html">HavingClause</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_IdentificationVariableDeclaration" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/IdentificationVariableDeclaration.html">IdentificationVariableDeclaration</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_InExpression" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/InExpression.html">InExpression</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_IndexBy" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/IndexBy.html">IndexBy</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_InputParameter" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/InputParameter.html">InputParameter</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_InstanceOfExpression" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/InstanceOfExpression.html">InstanceOfExpression</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_Join" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/Join.html">Join</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_JoinAssociationDeclaration" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/JoinAssociationDeclaration.html">JoinAssociationDeclaration</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_JoinAssociationPathExpression" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/JoinAssociationPathExpression.html">JoinAssociationPathExpression</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_JoinClassPathExpression" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/JoinClassPathExpression.html">JoinClassPathExpression</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_LikeExpression" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/LikeExpression.html">LikeExpression</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_Literal" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/Literal.html">Literal</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_NewObjectExpression" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/NewObjectExpression.html">NewObjectExpression</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_Node" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/Node.html">Node</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_NullComparisonExpression" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/NullComparisonExpression.html">NullComparisonExpression</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_NullIfExpression" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/NullIfExpression.html">NullIfExpression</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_OrderByClause" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/OrderByClause.html">OrderByClause</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_OrderByItem" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/OrderByItem.html">OrderByItem</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_ParenthesisExpression" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/ParenthesisExpression.html">ParenthesisExpression</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_PartialObjectExpression" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/PartialObjectExpression.html">PartialObjectExpression</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_PathExpression" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/PathExpression.html">PathExpression</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_QuantifiedExpression" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/QuantifiedExpression.html">QuantifiedExpression</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_RangeVariableDeclaration" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/RangeVariableDeclaration.html">RangeVariableDeclaration</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_SelectClause" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/SelectClause.html">SelectClause</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_SelectExpression" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/SelectExpression.html">SelectExpression</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_SelectStatement" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/SelectStatement.html">SelectStatement</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_SimpleArithmeticExpression" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/SimpleArithmeticExpression.html">SimpleArithmeticExpression</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_SimpleCaseExpression" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/SimpleCaseExpression.html">SimpleCaseExpression</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_SimpleSelectClause" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/SimpleSelectClause.html">SimpleSelectClause</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_SimpleSelectExpression" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/SimpleSelectExpression.html">SimpleSelectExpression</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_SimpleWhenClause" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/SimpleWhenClause.html">SimpleWhenClause</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_Subselect" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/Subselect.html">Subselect</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_SubselectFromClause" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/SubselectFromClause.html">SubselectFromClause</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_UpdateClause" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/UpdateClause.html">UpdateClause</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_UpdateItem" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/UpdateItem.html">UpdateItem</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_UpdateStatement" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/UpdateStatement.html">UpdateStatement</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_WhenClause" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/WhenClause.html">WhenClause</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_AST_WhereClause" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/AST/WhereClause.html">WhereClause</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Doctrine_ORM_Query_Exec" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/ORM/Query/Exec.html">Exec</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Doctrine_ORM_Query_Exec_AbstractSqlExecutor" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/Exec/AbstractSqlExecutor.html">AbstractSqlExecutor</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_Exec_MultiTableDeleteExecutor" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/Exec/MultiTableDeleteExecutor.html">MultiTableDeleteExecutor</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_Exec_MultiTableUpdateExecutor" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/Exec/MultiTableUpdateExecutor.html">MultiTableUpdateExecutor</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_Exec_SingleSelectExecutor" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/Exec/SingleSelectExecutor.html">SingleSelectExecutor</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_Exec_SingleTableDeleteUpdateExecutor" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/Exec/SingleTableDeleteUpdateExecutor.html">SingleTableDeleteUpdateExecutor</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Doctrine_ORM_Query_Expr" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/ORM/Query/Expr.html">Expr</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Doctrine_ORM_Query_Expr_Andx" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/Expr/Andx.html">Andx</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_Expr_Base" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/Expr/Base.html">Base</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_Expr_Comparison" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/Expr/Comparison.html">Comparison</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_Expr_Composite" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/Expr/Composite.html">Composite</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_Expr_From" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/Expr/From.html">From</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_Expr_Func" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/Expr/Func.html">Func</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_Expr_GroupBy" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/Expr/GroupBy.html">GroupBy</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_Expr_Join" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/Expr/Join.html">Join</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_Expr_Literal" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/Expr/Literal.html">Literal</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_Expr_Math" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/Expr/Math.html">Math</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_Expr_OrderBy" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/Expr/OrderBy.html">OrderBy</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_Expr_Orx" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/Expr/Orx.html">Orx</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_Expr_Select" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/Expr/Select.html">Select</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Doctrine_ORM_Query_Filter" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/ORM/Query/Filter.html">Filter</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Doctrine_ORM_Query_Filter_SQLFilter" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Query/Filter/SQLFilter.html">SQLFilter</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Doctrine_ORM_Query_Expr" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Query/Expr.html">Expr</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_FilterCollection" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Query/FilterCollection.html">FilterCollection</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_Lexer" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Query/Lexer.html">Lexer</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_Parameter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Query/Parameter.html">Parameter</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_ParameterTypeInferer" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Query/ParameterTypeInferer.html">ParameterTypeInferer</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_Parser" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Query/Parser.html">Parser</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_ParserResult" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Query/ParserResult.html">ParserResult</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_Printer" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Query/Printer.html">Printer</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_QueryException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Query/QueryException.html">QueryException</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_QueryExpressionVisitor" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Query/QueryExpressionVisitor.html">QueryExpressionVisitor</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_ResultSetMapping" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Query/ResultSetMapping.html">ResultSetMapping</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_ResultSetMappingBuilder" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Query/ResultSetMappingBuilder.html">ResultSetMappingBuilder</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_SqlWalker" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Query/SqlWalker.html">SqlWalker</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_TreeWalker" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Query/TreeWalker.html">TreeWalker</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_TreeWalkerAdapter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Query/TreeWalkerAdapter.html">TreeWalkerAdapter</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query_TreeWalkerChain" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Query/TreeWalkerChain.html">TreeWalkerChain</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Doctrine_ORM_Repository" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/ORM/Repository.html">Repository</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Doctrine_ORM_Repository_DefaultRepositoryFactory" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Repository/DefaultRepositoryFactory.html">DefaultRepositoryFactory</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Repository_RepositoryFactory" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Repository/RepositoryFactory.html">RepositoryFactory</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Doctrine_ORM_Tools" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/ORM/Tools.html">Tools</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Doctrine_ORM_Tools_Console" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/ORM/Tools/Console.html">Console</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Doctrine_ORM_Tools_Console_Command" >                    <div style="padding-left:72px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/ORM/Tools/Console/Command.html">Command</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Doctrine_ORM_Tools_Console_Command_ClearCache" >                    <div style="padding-left:90px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/ORM/Tools/Console/Command/ClearCache.html">ClearCache</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Doctrine_ORM_Tools_Console_Command_ClearCache_MetadataCommand" >                    <div style="padding-left:116px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Console/Command/ClearCache/MetadataCommand.html">MetadataCommand</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_Console_Command_ClearCache_QueryCommand" >                    <div style="padding-left:116px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Console/Command/ClearCache/QueryCommand.html">QueryCommand</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_Console_Command_ClearCache_ResultCommand" >                    <div style="padding-left:116px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Console/Command/ClearCache/ResultCommand.html">ResultCommand</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Doctrine_ORM_Tools_Console_Command_SchemaTool" >                    <div style="padding-left:90px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/ORM/Tools/Console/Command/SchemaTool.html">SchemaTool</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Doctrine_ORM_Tools_Console_Command_SchemaTool_AbstractCommand" >                    <div style="padding-left:116px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Console/Command/SchemaTool/AbstractCommand.html">AbstractCommand</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_Console_Command_SchemaTool_CreateCommand" >                    <div style="padding-left:116px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Console/Command/SchemaTool/CreateCommand.html">CreateCommand</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_Console_Command_SchemaTool_DropCommand" >                    <div style="padding-left:116px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Console/Command/SchemaTool/DropCommand.html">DropCommand</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_Console_Command_SchemaTool_UpdateCommand" >                    <div style="padding-left:116px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Console/Command/SchemaTool/UpdateCommand.html">UpdateCommand</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_Console_Command_ConvertDoctrine1SchemaCommand" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Console/Command/ConvertDoctrine1SchemaCommand.html">ConvertDoctrine1SchemaCommand</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_Console_Command_ConvertMappingCommand" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Console/Command/ConvertMappingCommand.html">ConvertMappingCommand</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_Console_Command_EnsureProductionSettingsCommand" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Console/Command/EnsureProductionSettingsCommand.html">EnsureProductionSettingsCommand</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_Console_Command_GenerateEntitiesCommand" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Console/Command/GenerateEntitiesCommand.html">GenerateEntitiesCommand</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_Console_Command_GenerateProxiesCommand" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Console/Command/GenerateProxiesCommand.html">GenerateProxiesCommand</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_Console_Command_GenerateRepositoriesCommand" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Console/Command/GenerateRepositoriesCommand.html">GenerateRepositoriesCommand</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_Console_Command_InfoCommand" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Console/Command/InfoCommand.html">InfoCommand</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_Console_Command_RunDqlCommand" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Console/Command/RunDqlCommand.html">RunDqlCommand</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_Console_Command_ValidateSchemaCommand" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Console/Command/ValidateSchemaCommand.html">ValidateSchemaCommand</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Doctrine_ORM_Tools_Console_Helper" >                    <div style="padding-left:72px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/ORM/Tools/Console/Helper.html">Helper</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Doctrine_ORM_Tools_Console_Helper_EntityManagerHelper" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Console/Helper/EntityManagerHelper.html">EntityManagerHelper</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_Console_ConsoleRunner" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Console/ConsoleRunner.html">ConsoleRunner</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_Console_MetadataFilter" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Console/MetadataFilter.html">MetadataFilter</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Doctrine_ORM_Tools_Event" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/ORM/Tools/Event.html">Event</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Doctrine_ORM_Tools_Event_GenerateSchemaEventArgs" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Event/GenerateSchemaEventArgs.html">GenerateSchemaEventArgs</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_Event_GenerateSchemaTableEventArgs" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Event/GenerateSchemaTableEventArgs.html">GenerateSchemaTableEventArgs</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Doctrine_ORM_Tools_Export" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/ORM/Tools/Export.html">Export</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Doctrine_ORM_Tools_Export_Driver" >                    <div style="padding-left:72px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/ORM/Tools/Export/Driver.html">Driver</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Doctrine_ORM_Tools_Export_Driver_AbstractExporter" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Export/Driver/AbstractExporter.html">AbstractExporter</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_Export_Driver_AnnotationExporter" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Export/Driver/AnnotationExporter.html">AnnotationExporter</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_Export_Driver_PhpExporter" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Export/Driver/PhpExporter.html">PhpExporter</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_Export_Driver_XmlExporter" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Export/Driver/XmlExporter.html">XmlExporter</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_Export_Driver_YamlExporter" >                    <div style="padding-left:98px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Export/Driver/YamlExporter.html">YamlExporter</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_Export_ClassMetadataExporter" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Export/ClassMetadataExporter.html">ClassMetadataExporter</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_Export_ExportException" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Export/ExportException.html">ExportException</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Doctrine_ORM_Tools_Pagination" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Doctrine/ORM/Tools/Pagination.html">Pagination</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Doctrine_ORM_Tools_Pagination_CountOutputWalker" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Pagination/CountOutputWalker.html">CountOutputWalker</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_Pagination_CountWalker" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Pagination/CountWalker.html">CountWalker</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_Pagination_LimitSubqueryOutputWalker" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Pagination/LimitSubqueryOutputWalker.html">LimitSubqueryOutputWalker</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_Pagination_LimitSubqueryWalker" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Pagination/LimitSubqueryWalker.html">LimitSubqueryWalker</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_Pagination_Paginator" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Pagination/Paginator.html">Paginator</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_Pagination_WhereInWalker" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Pagination/WhereInWalker.html">WhereInWalker</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_ConvertDoctrine1Schema" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/ConvertDoctrine1Schema.html">ConvertDoctrine1Schema</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_DebugUnitOfWorkListener" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/DebugUnitOfWorkListener.html">DebugUnitOfWorkListener</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_DisconnectedClassMetadataFactory" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/DisconnectedClassMetadataFactory.html">DisconnectedClassMetadataFactory</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_EntityGenerator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/EntityGenerator.html">EntityGenerator</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_EntityRepositoryGenerator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/EntityRepositoryGenerator.html">EntityRepositoryGenerator</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_ResolveTargetEntityListener" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/ResolveTargetEntityListener.html">ResolveTargetEntityListener</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_SchemaTool" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/SchemaTool.html">SchemaTool</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_SchemaValidator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/SchemaValidator.html">SchemaValidator</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_Setup" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/Setup.html">Setup</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_ToolEvents" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/ToolEvents.html">ToolEvents</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Tools_ToolsException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Doctrine/ORM/Tools/ToolsException.html">ToolsException</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Doctrine_ORM_AbstractQuery" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/ORM/AbstractQuery.html">AbstractQuery</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Configuration" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/ORM/Configuration.html">Configuration</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_EntityManager" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/ORM/EntityManager.html">EntityManager</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_EntityManagerInterface" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/ORM/EntityManagerInterface.html">EntityManagerInterface</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_EntityNotFoundException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/ORM/EntityNotFoundException.html">EntityNotFoundException</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_EntityRepository" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/ORM/EntityRepository.html">EntityRepository</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Events" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/ORM/Events.html">Events</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_NativeQuery" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/ORM/NativeQuery.html">NativeQuery</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_NoResultException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/ORM/NoResultException.html">NoResultException</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_NonUniqueResultException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/ORM/NonUniqueResultException.html">NonUniqueResultException</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_ORMException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/ORM/ORMException.html">ORMException</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_ORMInvalidArgumentException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/ORM/ORMInvalidArgumentException.html">ORMInvalidArgumentException</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_OptimisticLockException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/ORM/OptimisticLockException.html">OptimisticLockException</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_PersistentCollection" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/ORM/PersistentCollection.html">PersistentCollection</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_PessimisticLockException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/ORM/PessimisticLockException.html">PessimisticLockException</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Query" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/ORM/Query.html">Query</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_QueryBuilder" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/ORM/QueryBuilder.html">QueryBuilder</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_TransactionRequiredException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/ORM/TransactionRequiredException.html">TransactionRequiredException</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_UnexpectedResultException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/ORM/UnexpectedResultException.html">UnexpectedResultException</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_UnitOfWork" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/ORM/UnitOfWork.html">UnitOfWork</a>                    </div>                </li>                            <li data-name="class:Doctrine_ORM_Version" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Doctrine/ORM/Version.html">Version</a>                    </div>                </li>                </ul></div>                </li>                </ul></div>                </li>                </ul>';

    var searchTypeClasses = {
        'Namespace': 'label-default',
        'Class': 'label-info',
        'Interface': 'label-primary',
        'Trait': 'label-success',
        'Method': 'label-danger',
        '_': 'label-warning'
    };

    var searchIndex = [
                    
            {"type": "Namespace", "link": "Doctrine.html", "name": "Doctrine", "doc": "Namespace Doctrine"},{"type": "Namespace", "link": "Doctrine/ORM.html", "name": "Doctrine\\ORM", "doc": "Namespace Doctrine\\ORM"},{"type": "Namespace", "link": "Doctrine/ORM/Decorator.html", "name": "Doctrine\\ORM\\Decorator", "doc": "Namespace Doctrine\\ORM\\Decorator"},{"type": "Namespace", "link": "Doctrine/ORM/Event.html", "name": "Doctrine\\ORM\\Event", "doc": "Namespace Doctrine\\ORM\\Event"},{"type": "Namespace", "link": "Doctrine/ORM/Id.html", "name": "Doctrine\\ORM\\Id", "doc": "Namespace Doctrine\\ORM\\Id"},{"type": "Namespace", "link": "Doctrine/ORM/Internal.html", "name": "Doctrine\\ORM\\Internal", "doc": "Namespace Doctrine\\ORM\\Internal"},{"type": "Namespace", "link": "Doctrine/ORM/Internal/Hydration.html", "name": "Doctrine\\ORM\\Internal\\Hydration", "doc": "Namespace Doctrine\\ORM\\Internal\\Hydration"},{"type": "Namespace", "link": "Doctrine/ORM/Mapping.html", "name": "Doctrine\\ORM\\Mapping", "doc": "Namespace Doctrine\\ORM\\Mapping"},{"type": "Namespace", "link": "Doctrine/ORM/Mapping/Builder.html", "name": "Doctrine\\ORM\\Mapping\\Builder", "doc": "Namespace Doctrine\\ORM\\Mapping\\Builder"},{"type": "Namespace", "link": "Doctrine/ORM/Mapping/Driver.html", "name": "Doctrine\\ORM\\Mapping\\Driver", "doc": "Namespace Doctrine\\ORM\\Mapping\\Driver"},{"type": "Namespace", "link": "Doctrine/ORM/Persisters.html", "name": "Doctrine\\ORM\\Persisters", "doc": "Namespace Doctrine\\ORM\\Persisters"},{"type": "Namespace", "link": "Doctrine/ORM/Proxy.html", "name": "Doctrine\\ORM\\Proxy", "doc": "Namespace Doctrine\\ORM\\Proxy"},{"type": "Namespace", "link": "Doctrine/ORM/Query.html", "name": "Doctrine\\ORM\\Query", "doc": "Namespace Doctrine\\ORM\\Query"},{"type": "Namespace", "link": "Doctrine/ORM/Query/AST.html", "name": "Doctrine\\ORM\\Query\\AST", "doc": "Namespace Doctrine\\ORM\\Query\\AST"},{"type": "Namespace", "link": "Doctrine/ORM/Query/AST/Functions.html", "name": "Doctrine\\ORM\\Query\\AST\\Functions", "doc": "Namespace Doctrine\\ORM\\Query\\AST\\Functions"},{"type": "Namespace", "link": "Doctrine/ORM/Query/Exec.html", "name": "Doctrine\\ORM\\Query\\Exec", "doc": "Namespace Doctrine\\ORM\\Query\\Exec"},{"type": "Namespace", "link": "Doctrine/ORM/Query/Expr.html", "name": "Doctrine\\ORM\\Query\\Expr", "doc": "Namespace Doctrine\\ORM\\Query\\Expr"},{"type": "Namespace", "link": "Doctrine/ORM/Query/Filter.html", "name": "Doctrine\\ORM\\Query\\Filter", "doc": "Namespace Doctrine\\ORM\\Query\\Filter"},{"type": "Namespace", "link": "Doctrine/ORM/Repository.html", "name": "Doctrine\\ORM\\Repository", "doc": "Namespace Doctrine\\ORM\\Repository"},{"type": "Namespace", "link": "Doctrine/ORM/Tools.html", "name": "Doctrine\\ORM\\Tools", "doc": "Namespace Doctrine\\ORM\\Tools"},{"type": "Namespace", "link": "Doctrine/ORM/Tools/Console.html", "name": "Doctrine\\ORM\\Tools\\Console", "doc": "Namespace Doctrine\\ORM\\Tools\\Console"},{"type": "Namespace", "link": "Doctrine/ORM/Tools/Console/Command.html", "name": "Doctrine\\ORM\\Tools\\Console\\Command", "doc": "Namespace Doctrine\\ORM\\Tools\\Console\\Command"},{"type": "Namespace", "link": "Doctrine/ORM/Tools/Console/Command/ClearCache.html", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache", "doc": "Namespace Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache"},{"type": "Namespace", "link": "Doctrine/ORM/Tools/Console/Command/SchemaTool.html", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool", "doc": "Namespace Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool"},{"type": "Namespace", "link": "Doctrine/ORM/Tools/Console/Helper.html", "name": "Doctrine\\ORM\\Tools\\Console\\Helper", "doc": "Namespace Doctrine\\ORM\\Tools\\Console\\Helper"},{"type": "Namespace", "link": "Doctrine/ORM/Tools/Event.html", "name": "Doctrine\\ORM\\Tools\\Event", "doc": "Namespace Doctrine\\ORM\\Tools\\Event"},{"type": "Namespace", "link": "Doctrine/ORM/Tools/Export.html", "name": "Doctrine\\ORM\\Tools\\Export", "doc": "Namespace Doctrine\\ORM\\Tools\\Export"},{"type": "Namespace", "link": "Doctrine/ORM/Tools/Export/Driver.html", "name": "Doctrine\\ORM\\Tools\\Export\\Driver", "doc": "Namespace Doctrine\\ORM\\Tools\\Export\\Driver"},{"type": "Namespace", "link": "Doctrine/ORM/Tools/Pagination.html", "name": "Doctrine\\ORM\\Tools\\Pagination", "doc": "Namespace Doctrine\\ORM\\Tools\\Pagination"},
            {"type": "Interface", "fromName": "Doctrine\\ORM", "fromLink": "Doctrine/ORM.html", "link": "Doctrine/ORM/EntityManagerInterface.html", "name": "Doctrine\\ORM\\EntityManagerInterface", "doc": "&quot;EntityManager interface&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_getConnection", "name": "Doctrine\\ORM\\EntityManagerInterface::getConnection", "doc": "&quot;Gets the database connection object used by the EntityManager.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_getExpressionBuilder", "name": "Doctrine\\ORM\\EntityManagerInterface::getExpressionBuilder", "doc": "&quot;Gets an ExpressionBuilder used for object-oriented construction of query expressions.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_beginTransaction", "name": "Doctrine\\ORM\\EntityManagerInterface::beginTransaction", "doc": "&quot;Starts a transaction on the underlying database connection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_transactional", "name": "Doctrine\\ORM\\EntityManagerInterface::transactional", "doc": "&quot;Executes a function in a transaction.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_commit", "name": "Doctrine\\ORM\\EntityManagerInterface::commit", "doc": "&quot;Commits a transaction on the underlying database connection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_rollback", "name": "Doctrine\\ORM\\EntityManagerInterface::rollback", "doc": "&quot;Performs a rollback on the underlying database connection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_createQuery", "name": "Doctrine\\ORM\\EntityManagerInterface::createQuery", "doc": "&quot;Creates a new Query object.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_createNamedQuery", "name": "Doctrine\\ORM\\EntityManagerInterface::createNamedQuery", "doc": "&quot;Creates a Query from a named query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_createNativeQuery", "name": "Doctrine\\ORM\\EntityManagerInterface::createNativeQuery", "doc": "&quot;Creates a native SQL query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_createNamedNativeQuery", "name": "Doctrine\\ORM\\EntityManagerInterface::createNamedNativeQuery", "doc": "&quot;Creates a NativeQuery from a named native query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_createQueryBuilder", "name": "Doctrine\\ORM\\EntityManagerInterface::createQueryBuilder", "doc": "&quot;Create a QueryBuilder instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_getReference", "name": "Doctrine\\ORM\\EntityManagerInterface::getReference", "doc": "&quot;Gets a reference to the entity identified by the given type and identifier\nwithout actually loading it, if the entity is not yet loaded.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_getPartialReference", "name": "Doctrine\\ORM\\EntityManagerInterface::getPartialReference", "doc": "&quot;Gets a partial reference to the entity identified by the given type and identifier\nwithout actually loading it, if the entity is not yet loaded.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_close", "name": "Doctrine\\ORM\\EntityManagerInterface::close", "doc": "&quot;Closes the EntityManager. All entities that are currently managed\nby this EntityManager become detached. The EntityManager may no longer\nbe used after it is closed.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_copy", "name": "Doctrine\\ORM\\EntityManagerInterface::copy", "doc": "&quot;Creates a copy of the given entity. Can create a shallow or a deep copy.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_lock", "name": "Doctrine\\ORM\\EntityManagerInterface::lock", "doc": "&quot;Acquire a lock on the given entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_getEventManager", "name": "Doctrine\\ORM\\EntityManagerInterface::getEventManager", "doc": "&quot;Gets the EventManager used by the EntityManager.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_getConfiguration", "name": "Doctrine\\ORM\\EntityManagerInterface::getConfiguration", "doc": "&quot;Gets the Configuration used by the EntityManager.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_isOpen", "name": "Doctrine\\ORM\\EntityManagerInterface::isOpen", "doc": "&quot;Check if the Entity manager is open or closed.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_getUnitOfWork", "name": "Doctrine\\ORM\\EntityManagerInterface::getUnitOfWork", "doc": "&quot;Gets the UnitOfWork used by the EntityManager to coordinate operations.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_getHydrator", "name": "Doctrine\\ORM\\EntityManagerInterface::getHydrator", "doc": "&quot;Gets a hydrator for the given hydration mode.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_newHydrator", "name": "Doctrine\\ORM\\EntityManagerInterface::newHydrator", "doc": "&quot;Create a new instance for the given hydration mode.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_getProxyFactory", "name": "Doctrine\\ORM\\EntityManagerInterface::getProxyFactory", "doc": "&quot;Gets the proxy factory used by the EntityManager to create entity proxies.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_getFilters", "name": "Doctrine\\ORM\\EntityManagerInterface::getFilters", "doc": "&quot;Gets the enabled filters.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_isFiltersStateClean", "name": "Doctrine\\ORM\\EntityManagerInterface::isFiltersStateClean", "doc": "&quot;Checks whether the state of the filter collection is clean.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_hasFilters", "name": "Doctrine\\ORM\\EntityManagerInterface::hasFilters", "doc": "&quot;Checks whether the Entity Manager has filters.&quot;"},
            
            {"type": "Interface", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/Annotation.html", "name": "Doctrine\\ORM\\Mapping\\Annotation", "doc": "&quot;&quot;"},
                    
            {"type": "Interface", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/EntityListenerResolver.html", "name": "Doctrine\\ORM\\Mapping\\EntityListenerResolver", "doc": "&quot;A resolver is used to instantiate an entity listener.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\EntityListenerResolver", "fromLink": "Doctrine/ORM/Mapping/EntityListenerResolver.html", "link": "Doctrine/ORM/Mapping/EntityListenerResolver.html#method_clear", "name": "Doctrine\\ORM\\Mapping\\EntityListenerResolver::clear", "doc": "&quot;Clear all instances from the set, or a specific class when given.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\EntityListenerResolver", "fromLink": "Doctrine/ORM/Mapping/EntityListenerResolver.html", "link": "Doctrine/ORM/Mapping/EntityListenerResolver.html#method_resolve", "name": "Doctrine\\ORM\\Mapping\\EntityListenerResolver::resolve", "doc": "&quot;Returns a entity listener instance for the given class name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\EntityListenerResolver", "fromLink": "Doctrine/ORM/Mapping/EntityListenerResolver.html", "link": "Doctrine/ORM/Mapping/EntityListenerResolver.html#method_register", "name": "Doctrine\\ORM\\Mapping\\EntityListenerResolver::register", "doc": "&quot;Register a entity listener instance.&quot;"},
            
            {"type": "Interface", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/NamingStrategy.html", "name": "Doctrine\\ORM\\Mapping\\NamingStrategy", "doc": "&quot;A set of rules for determining the physical column and table names&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\NamingStrategy", "fromLink": "Doctrine/ORM/Mapping/NamingStrategy.html", "link": "Doctrine/ORM/Mapping/NamingStrategy.html#method_classToTableName", "name": "Doctrine\\ORM\\Mapping\\NamingStrategy::classToTableName", "doc": "&quot;Returns a table name for an entity class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\NamingStrategy", "fromLink": "Doctrine/ORM/Mapping/NamingStrategy.html", "link": "Doctrine/ORM/Mapping/NamingStrategy.html#method_propertyToColumnName", "name": "Doctrine\\ORM\\Mapping\\NamingStrategy::propertyToColumnName", "doc": "&quot;Returns a column name for a property.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\NamingStrategy", "fromLink": "Doctrine/ORM/Mapping/NamingStrategy.html", "link": "Doctrine/ORM/Mapping/NamingStrategy.html#method_referenceColumnName", "name": "Doctrine\\ORM\\Mapping\\NamingStrategy::referenceColumnName", "doc": "&quot;Returns the default reference column name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\NamingStrategy", "fromLink": "Doctrine/ORM/Mapping/NamingStrategy.html", "link": "Doctrine/ORM/Mapping/NamingStrategy.html#method_joinColumnName", "name": "Doctrine\\ORM\\Mapping\\NamingStrategy::joinColumnName", "doc": "&quot;Returns a join column name for a property.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\NamingStrategy", "fromLink": "Doctrine/ORM/Mapping/NamingStrategy.html", "link": "Doctrine/ORM/Mapping/NamingStrategy.html#method_joinTableName", "name": "Doctrine\\ORM\\Mapping\\NamingStrategy::joinTableName", "doc": "&quot;Returns a join table name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\NamingStrategy", "fromLink": "Doctrine/ORM/Mapping/NamingStrategy.html", "link": "Doctrine/ORM/Mapping/NamingStrategy.html#method_joinKeyColumnName", "name": "Doctrine\\ORM\\Mapping\\NamingStrategy::joinKeyColumnName", "doc": "&quot;Returns the foreign key column name for the given parameters.&quot;"},
            
            {"type": "Interface", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/QuoteStrategy.html", "name": "Doctrine\\ORM\\Mapping\\QuoteStrategy", "doc": "&quot;A set of rules for determining the column, alias and table quotes.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\QuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/QuoteStrategy.html", "link": "Doctrine/ORM/Mapping/QuoteStrategy.html#method_getColumnName", "name": "Doctrine\\ORM\\Mapping\\QuoteStrategy::getColumnName", "doc": "&quot;Gets the (possibly quoted) column name for safe use in an SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\QuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/QuoteStrategy.html", "link": "Doctrine/ORM/Mapping/QuoteStrategy.html#method_getTableName", "name": "Doctrine\\ORM\\Mapping\\QuoteStrategy::getTableName", "doc": "&quot;Gets the (possibly quoted) primary table name for safe use in an SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\QuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/QuoteStrategy.html", "link": "Doctrine/ORM/Mapping/QuoteStrategy.html#method_getSequenceName", "name": "Doctrine\\ORM\\Mapping\\QuoteStrategy::getSequenceName", "doc": "&quot;Gets the (possibly quoted) sequence name for safe use in an SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\QuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/QuoteStrategy.html", "link": "Doctrine/ORM/Mapping/QuoteStrategy.html#method_getJoinTableName", "name": "Doctrine\\ORM\\Mapping\\QuoteStrategy::getJoinTableName", "doc": "&quot;Gets the (possibly quoted) name of the join table.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\QuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/QuoteStrategy.html", "link": "Doctrine/ORM/Mapping/QuoteStrategy.html#method_getJoinColumnName", "name": "Doctrine\\ORM\\Mapping\\QuoteStrategy::getJoinColumnName", "doc": "&quot;Gets the (possibly quoted) join column name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\QuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/QuoteStrategy.html", "link": "Doctrine/ORM/Mapping/QuoteStrategy.html#method_getReferencedJoinColumnName", "name": "Doctrine\\ORM\\Mapping\\QuoteStrategy::getReferencedJoinColumnName", "doc": "&quot;Gets the (possibly quoted) join column name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\QuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/QuoteStrategy.html", "link": "Doctrine/ORM/Mapping/QuoteStrategy.html#method_getIdentifierColumnNames", "name": "Doctrine\\ORM\\Mapping\\QuoteStrategy::getIdentifierColumnNames", "doc": "&quot;Gets the (possibly quoted) identifier column names for safe use in an SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\QuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/QuoteStrategy.html", "link": "Doctrine/ORM/Mapping/QuoteStrategy.html#method_getColumnAlias", "name": "Doctrine\\ORM\\Mapping\\QuoteStrategy::getColumnAlias", "doc": "&quot;Gets the column alias.&quot;"},
            
            {"type": "Interface", "fromName": "Doctrine\\ORM\\Proxy", "fromLink": "Doctrine/ORM/Proxy.html", "link": "Doctrine/ORM/Proxy/Proxy.html", "name": "Doctrine\\ORM\\Proxy\\Proxy", "doc": "&quot;Interface for proxy classes.&quot;"},
                    
            {"type": "Interface", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query/TreeWalker.html", "name": "Doctrine\\ORM\\Query\\TreeWalker", "doc": "&quot;Interface for walkers of DQL ASTs (abstract syntax trees).&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method___construct", "name": "Doctrine\\ORM\\Query\\TreeWalker::__construct", "doc": "&quot;Initializes TreeWalker with important information about the ASTs to be walked.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_getQueryComponents", "name": "Doctrine\\ORM\\Query\\TreeWalker::getQueryComponents", "doc": "&quot;Returns internal queryComponents array.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_setQueryComponent", "name": "Doctrine\\ORM\\Query\\TreeWalker::setQueryComponent", "doc": "&quot;Sets or overrides a query component for a given dql alias.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkSelectStatement", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkSelectStatement", "doc": "&quot;Walks down a SelectStatement AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkSelectClause", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkSelectClause", "doc": "&quot;Walks down a SelectClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkFromClause", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkFromClause", "doc": "&quot;Walks down a FromClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkFunction", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkFunction", "doc": "&quot;Walks down a FunctionNode AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkOrderByClause", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkOrderByClause", "doc": "&quot;Walks down an OrderByClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkOrderByItem", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkOrderByItem", "doc": "&quot;Walks down an OrderByItem AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkHavingClause", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkHavingClause", "doc": "&quot;Walks down a HavingClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkJoin", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkJoin", "doc": "&quot;Walks down a Join AST node and creates the corresponding SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkSelectExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkSelectExpression", "doc": "&quot;Walks down a SelectExpression AST node and generates the corresponding SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkQuantifiedExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkQuantifiedExpression", "doc": "&quot;Walks down a QuantifiedExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkSubselect", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkSubselect", "doc": "&quot;Walks down a Subselect AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkSubselectFromClause", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkSubselectFromClause", "doc": "&quot;Walks down a SubselectFromClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkSimpleSelectClause", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkSimpleSelectClause", "doc": "&quot;Walks down a SimpleSelectClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkSimpleSelectExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkSimpleSelectExpression", "doc": "&quot;Walks down a SimpleSelectExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkAggregateExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkAggregateExpression", "doc": "&quot;Walks down an AggregateExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkGroupByClause", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkGroupByClause", "doc": "&quot;Walks down a GroupByClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkGroupByItem", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkGroupByItem", "doc": "&quot;Walks down a GroupByItem AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkUpdateStatement", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkUpdateStatement", "doc": "&quot;Walks down an UpdateStatement AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkDeleteStatement", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkDeleteStatement", "doc": "&quot;Walks down a DeleteStatement AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkDeleteClause", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkDeleteClause", "doc": "&quot;Walks down a DeleteClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkUpdateClause", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkUpdateClause", "doc": "&quot;Walks down an UpdateClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkUpdateItem", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkUpdateItem", "doc": "&quot;Walks down an UpdateItem AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkWhereClause", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkWhereClause", "doc": "&quot;Walks down a WhereClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkConditionalExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkConditionalExpression", "doc": "&quot;Walk down a ConditionalExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkConditionalTerm", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkConditionalTerm", "doc": "&quot;Walks down a ConditionalTerm AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkConditionalFactor", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkConditionalFactor", "doc": "&quot;Walks down a ConditionalFactor AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkConditionalPrimary", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkConditionalPrimary", "doc": "&quot;Walks down a ConditionalPrimary AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkExistsExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkExistsExpression", "doc": "&quot;Walks down an ExistsExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkCollectionMemberExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkCollectionMemberExpression", "doc": "&quot;Walks down a CollectionMemberExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkEmptyCollectionComparisonExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkEmptyCollectionComparisonExpression", "doc": "&quot;Walks down an EmptyCollectionComparisonExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkNullComparisonExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkNullComparisonExpression", "doc": "&quot;Walks down a NullComparisonExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkInExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkInExpression", "doc": "&quot;Walks down an InExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkInstanceOfExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkInstanceOfExpression", "doc": "&quot;Walks down an InstanceOfExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkLiteral", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkLiteral", "doc": "&quot;Walks down a literal that represents an AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkBetweenExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkBetweenExpression", "doc": "&quot;Walks down a BetweenExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkLikeExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkLikeExpression", "doc": "&quot;Walks down a LikeExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkStateFieldPathExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkStateFieldPathExpression", "doc": "&quot;Walks down a StateFieldPathExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkComparisonExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkComparisonExpression", "doc": "&quot;Walks down a ComparisonExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkInputParameter", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkInputParameter", "doc": "&quot;Walks down an InputParameter AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkArithmeticExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkArithmeticExpression", "doc": "&quot;Walks down an ArithmeticExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkArithmeticTerm", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkArithmeticTerm", "doc": "&quot;Walks down an ArithmeticTerm AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkStringPrimary", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkStringPrimary", "doc": "&quot;Walks down a StringPrimary that represents an AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkArithmeticFactor", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkArithmeticFactor", "doc": "&quot;Walks down an ArithmeticFactor that represents an AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkSimpleArithmeticExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkSimpleArithmeticExpression", "doc": "&quot;Walks down an SimpleArithmeticExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkPathExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkPathExpression", "doc": "&quot;Walks down a PathExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkResultVariable", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkResultVariable", "doc": "&quot;Walks down a ResultVariable that represents an AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_getExecutor", "name": "Doctrine\\ORM\\Query\\TreeWalker::getExecutor", "doc": "&quot;Gets an executor that can be used to execute the result of this walker.&quot;"},
            
            {"type": "Interface", "fromName": "Doctrine\\ORM\\Repository", "fromLink": "Doctrine/ORM/Repository.html", "link": "Doctrine/ORM/Repository/RepositoryFactory.html", "name": "Doctrine\\ORM\\Repository\\RepositoryFactory", "doc": "&quot;Interface for entity repository factory.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Repository\\RepositoryFactory", "fromLink": "Doctrine/ORM/Repository/RepositoryFactory.html", "link": "Doctrine/ORM/Repository/RepositoryFactory.html#method_getRepository", "name": "Doctrine\\ORM\\Repository\\RepositoryFactory::getRepository", "doc": "&quot;Gets the repository for an entity class.&quot;"},
            
            
            {"type": "Class", "fromName": "Doctrine\\ORM", "fromLink": "Doctrine/ORM.html", "link": "Doctrine/ORM/AbstractQuery.html", "name": "Doctrine\\ORM\\AbstractQuery", "doc": "&quot;Base contract for ORM queries. Base class for Query and NativeQuery.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method___construct", "name": "Doctrine\\ORM\\AbstractQuery::__construct", "doc": "&quot;Initializes a new instance of a class derived from &lt;tt&gt;AbstractQuery&lt;\/tt&gt;.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_getSQL", "name": "Doctrine\\ORM\\AbstractQuery::getSQL", "doc": "&quot;Gets the SQL query that corresponds to this query object.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_getEntityManager", "name": "Doctrine\\ORM\\AbstractQuery::getEntityManager", "doc": "&quot;Retrieves the associated EntityManager of this Query instance.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_free", "name": "Doctrine\\ORM\\AbstractQuery::free", "doc": "&quot;Frees the resources used by the query object.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_getParameters", "name": "Doctrine\\ORM\\AbstractQuery::getParameters", "doc": "&quot;Get all defined parameters.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_getParameter", "name": "Doctrine\\ORM\\AbstractQuery::getParameter", "doc": "&quot;Gets a query parameter.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_setParameters", "name": "Doctrine\\ORM\\AbstractQuery::setParameters", "doc": "&quot;Sets a collection of query parameters.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_setParameter", "name": "Doctrine\\ORM\\AbstractQuery::setParameter", "doc": "&quot;Sets a query parameter.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_processParameterValue", "name": "Doctrine\\ORM\\AbstractQuery::processParameterValue", "doc": "&quot;Processes an individual parameter value.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_setResultSetMapping", "name": "Doctrine\\ORM\\AbstractQuery::setResultSetMapping", "doc": "&quot;Sets the ResultSetMapping that should be used for hydration.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_setHydrationCacheProfile", "name": "Doctrine\\ORM\\AbstractQuery::setHydrationCacheProfile", "doc": "&quot;Set a cache profile for hydration caching.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_getHydrationCacheProfile", "name": "Doctrine\\ORM\\AbstractQuery::getHydrationCacheProfile", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_setResultCacheProfile", "name": "Doctrine\\ORM\\AbstractQuery::setResultCacheProfile", "doc": "&quot;Set a cache profile for the result cache.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_setResultCacheDriver", "name": "Doctrine\\ORM\\AbstractQuery::setResultCacheDriver", "doc": "&quot;Defines a cache driver to be used for caching result sets and implicitly enables caching.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_getResultCacheDriver", "name": "Doctrine\\ORM\\AbstractQuery::getResultCacheDriver", "doc": "&quot;Returns the cache driver used for caching result sets.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_useResultCache", "name": "Doctrine\\ORM\\AbstractQuery::useResultCache", "doc": "&quot;Set whether or not to cache the results of this query and if so, for\nhow long and which ID to use for the cache entry.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_setResultCacheLifetime", "name": "Doctrine\\ORM\\AbstractQuery::setResultCacheLifetime", "doc": "&quot;Defines how long the result cache will be active before expire.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_getResultCacheLifetime", "name": "Doctrine\\ORM\\AbstractQuery::getResultCacheLifetime", "doc": "&quot;Retrieves the lifetime of resultset cache.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_expireResultCache", "name": "Doctrine\\ORM\\AbstractQuery::expireResultCache", "doc": "&quot;Defines if the result cache is active or not.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_getExpireResultCache", "name": "Doctrine\\ORM\\AbstractQuery::getExpireResultCache", "doc": "&quot;Retrieves if the resultset cache is active or not.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_getQueryCacheProfile", "name": "Doctrine\\ORM\\AbstractQuery::getQueryCacheProfile", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_setFetchMode", "name": "Doctrine\\ORM\\AbstractQuery::setFetchMode", "doc": "&quot;Change the default fetch mode of an association for this query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_setHydrationMode", "name": "Doctrine\\ORM\\AbstractQuery::setHydrationMode", "doc": "&quot;Defines the processing mode to be used during hydration \/ result set transformation.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_getHydrationMode", "name": "Doctrine\\ORM\\AbstractQuery::getHydrationMode", "doc": "&quot;Gets the hydration mode currently used by the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_getResult", "name": "Doctrine\\ORM\\AbstractQuery::getResult", "doc": "&quot;Gets the list of results for the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_getArrayResult", "name": "Doctrine\\ORM\\AbstractQuery::getArrayResult", "doc": "&quot;Gets the array of results for the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_getScalarResult", "name": "Doctrine\\ORM\\AbstractQuery::getScalarResult", "doc": "&quot;Gets the scalar results for the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_getOneOrNullResult", "name": "Doctrine\\ORM\\AbstractQuery::getOneOrNullResult", "doc": "&quot;Get exactly one result or null.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_getSingleResult", "name": "Doctrine\\ORM\\AbstractQuery::getSingleResult", "doc": "&quot;Gets the single result of the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_getSingleScalarResult", "name": "Doctrine\\ORM\\AbstractQuery::getSingleScalarResult", "doc": "&quot;Gets the single scalar result of the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_setHint", "name": "Doctrine\\ORM\\AbstractQuery::setHint", "doc": "&quot;Sets a query hint. If the hint name is not recognized, it is silently ignored.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_getHint", "name": "Doctrine\\ORM\\AbstractQuery::getHint", "doc": "&quot;Gets the value of a query hint. If the hint name is not recognized, FALSE is returned.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_hasHint", "name": "Doctrine\\ORM\\AbstractQuery::hasHint", "doc": "&quot;Check if the query has a hint&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_getHints", "name": "Doctrine\\ORM\\AbstractQuery::getHints", "doc": "&quot;Return the key value map of query hints that are currently set.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_iterate", "name": "Doctrine\\ORM\\AbstractQuery::iterate", "doc": "&quot;Executes the query and returns an IterableResult that can be used to incrementally\niterate over the result.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_execute", "name": "Doctrine\\ORM\\AbstractQuery::execute", "doc": "&quot;Executes the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_getHydrationCacheId", "name": "Doctrine\\ORM\\AbstractQuery::getHydrationCacheId", "doc": "&quot;Get the result cache id to use to store the result set cache entry.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_setResultCacheId", "name": "Doctrine\\ORM\\AbstractQuery::setResultCacheId", "doc": "&quot;Set the result cache id to use to store the result set cache entry.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method_getResultCacheId", "name": "Doctrine\\ORM\\AbstractQuery::getResultCacheId", "doc": "&quot;Get the result cache id to use to store the result set cache entry if set.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method__doExecute", "name": "Doctrine\\ORM\\AbstractQuery::_doExecute", "doc": "&quot;Executes the query and returns a the resulting Statement object.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\AbstractQuery", "fromLink": "Doctrine/ORM/AbstractQuery.html", "link": "Doctrine/ORM/AbstractQuery.html#method___clone", "name": "Doctrine\\ORM\\AbstractQuery::__clone", "doc": "&quot;Cleanup Query resource when clone is called.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM", "fromLink": "Doctrine/ORM.html", "link": "Doctrine/ORM/Configuration.html", "name": "Doctrine\\ORM\\Configuration", "doc": "&quot;Configuration container for all configuration options of Doctrine.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_setProxyDir", "name": "Doctrine\\ORM\\Configuration::setProxyDir", "doc": "&quot;Sets the directory where Doctrine generates any necessary proxy class files.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_getProxyDir", "name": "Doctrine\\ORM\\Configuration::getProxyDir", "doc": "&quot;Gets the directory where Doctrine generates any necessary proxy class files.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_getAutoGenerateProxyClasses", "name": "Doctrine\\ORM\\Configuration::getAutoGenerateProxyClasses", "doc": "&quot;Gets a boolean flag that indicates whether proxy classes should always be regenerated\nduring each script execution.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_setAutoGenerateProxyClasses", "name": "Doctrine\\ORM\\Configuration::setAutoGenerateProxyClasses", "doc": "&quot;Sets a boolean flag that indicates whether proxy classes should always be regenerated\nduring each script execution.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_getProxyNamespace", "name": "Doctrine\\ORM\\Configuration::getProxyNamespace", "doc": "&quot;Gets the namespace where proxy classes reside.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_setProxyNamespace", "name": "Doctrine\\ORM\\Configuration::setProxyNamespace", "doc": "&quot;Sets the namespace where proxy classes reside.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_setMetadataDriverImpl", "name": "Doctrine\\ORM\\Configuration::setMetadataDriverImpl", "doc": "&quot;Sets the cache driver implementation that is used for metadata caching.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_newDefaultAnnotationDriver", "name": "Doctrine\\ORM\\Configuration::newDefaultAnnotationDriver", "doc": "&quot;Adds a new default annotation driver with a correctly configured annotation reader. If $useSimpleAnnotationReader\nis true, the notation &lt;code&gt;@Entity&lt;\/code&gt; will work, otherwise, the notation &lt;code&gt;@ORM\\Entity&lt;\/code&gt; will be supported.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_addEntityNamespace", "name": "Doctrine\\ORM\\Configuration::addEntityNamespace", "doc": "&quot;Adds a namespace under a certain alias.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_getEntityNamespace", "name": "Doctrine\\ORM\\Configuration::getEntityNamespace", "doc": "&quot;Resolves a registered namespace alias to the full namespace.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_setEntityNamespaces", "name": "Doctrine\\ORM\\Configuration::setEntityNamespaces", "doc": "&quot;Sets the entity alias map.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_getEntityNamespaces", "name": "Doctrine\\ORM\\Configuration::getEntityNamespaces", "doc": "&quot;Retrieves the list of registered entity namespace aliases.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_getMetadataDriverImpl", "name": "Doctrine\\ORM\\Configuration::getMetadataDriverImpl", "doc": "&quot;Gets the cache driver implementation that is used for the mapping metadata.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_getQueryCacheImpl", "name": "Doctrine\\ORM\\Configuration::getQueryCacheImpl", "doc": "&quot;Gets the cache driver implementation that is used for the query cache (SQL cache).&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_setQueryCacheImpl", "name": "Doctrine\\ORM\\Configuration::setQueryCacheImpl", "doc": "&quot;Sets the cache driver implementation that is used for the query cache (SQL cache).&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_getHydrationCacheImpl", "name": "Doctrine\\ORM\\Configuration::getHydrationCacheImpl", "doc": "&quot;Gets the cache driver implementation that is used for the hydration cache (SQL cache).&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_setHydrationCacheImpl", "name": "Doctrine\\ORM\\Configuration::setHydrationCacheImpl", "doc": "&quot;Sets the cache driver implementation that is used for the hydration cache (SQL cache).&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_getMetadataCacheImpl", "name": "Doctrine\\ORM\\Configuration::getMetadataCacheImpl", "doc": "&quot;Gets the cache driver implementation that is used for metadata caching.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_setMetadataCacheImpl", "name": "Doctrine\\ORM\\Configuration::setMetadataCacheImpl", "doc": "&quot;Sets the cache driver implementation that is used for metadata caching.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_addNamedQuery", "name": "Doctrine\\ORM\\Configuration::addNamedQuery", "doc": "&quot;Adds a named DQL query to the configuration.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_getNamedQuery", "name": "Doctrine\\ORM\\Configuration::getNamedQuery", "doc": "&quot;Gets a previously registered named DQL query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_addNamedNativeQuery", "name": "Doctrine\\ORM\\Configuration::addNamedNativeQuery", "doc": "&quot;Adds a named native query to the configuration.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_getNamedNativeQuery", "name": "Doctrine\\ORM\\Configuration::getNamedNativeQuery", "doc": "&quot;Gets the components of a previously registered named native query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_ensureProductionSettings", "name": "Doctrine\\ORM\\Configuration::ensureProductionSettings", "doc": "&quot;Ensures that this Configuration instance contains settings that are\nsuitable for a production environment.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_addCustomStringFunction", "name": "Doctrine\\ORM\\Configuration::addCustomStringFunction", "doc": "&quot;Registers a custom DQL function that produces a string value.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_getCustomStringFunction", "name": "Doctrine\\ORM\\Configuration::getCustomStringFunction", "doc": "&quot;Gets the implementation class name of a registered custom string DQL function.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_setCustomStringFunctions", "name": "Doctrine\\ORM\\Configuration::setCustomStringFunctions", "doc": "&quot;Sets a map of custom DQL string functions.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_addCustomNumericFunction", "name": "Doctrine\\ORM\\Configuration::addCustomNumericFunction", "doc": "&quot;Registers a custom DQL function that produces a numeric value.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_getCustomNumericFunction", "name": "Doctrine\\ORM\\Configuration::getCustomNumericFunction", "doc": "&quot;Gets the implementation class name of a registered custom numeric DQL function.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_setCustomNumericFunctions", "name": "Doctrine\\ORM\\Configuration::setCustomNumericFunctions", "doc": "&quot;Sets a map of custom DQL numeric functions.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_addCustomDatetimeFunction", "name": "Doctrine\\ORM\\Configuration::addCustomDatetimeFunction", "doc": "&quot;Registers a custom DQL function that produces a date\/time value.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_getCustomDatetimeFunction", "name": "Doctrine\\ORM\\Configuration::getCustomDatetimeFunction", "doc": "&quot;Gets the implementation class name of a registered custom date\/time DQL function.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_setCustomDatetimeFunctions", "name": "Doctrine\\ORM\\Configuration::setCustomDatetimeFunctions", "doc": "&quot;Sets a map of custom DQL date\/time functions.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_setCustomHydrationModes", "name": "Doctrine\\ORM\\Configuration::setCustomHydrationModes", "doc": "&quot;Sets the custom hydrator modes in one pass.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_getCustomHydrationMode", "name": "Doctrine\\ORM\\Configuration::getCustomHydrationMode", "doc": "&quot;Gets the hydrator class for the given hydration mode name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_addCustomHydrationMode", "name": "Doctrine\\ORM\\Configuration::addCustomHydrationMode", "doc": "&quot;Adds a custom hydration mode.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_setClassMetadataFactoryName", "name": "Doctrine\\ORM\\Configuration::setClassMetadataFactoryName", "doc": "&quot;Sets a class metadata factory.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_getClassMetadataFactoryName", "name": "Doctrine\\ORM\\Configuration::getClassMetadataFactoryName", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_addFilter", "name": "Doctrine\\ORM\\Configuration::addFilter", "doc": "&quot;Adds a filter to the list of possible filters.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_getFilterClassName", "name": "Doctrine\\ORM\\Configuration::getFilterClassName", "doc": "&quot;Gets the class name for a given filter name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_setDefaultRepositoryClassName", "name": "Doctrine\\ORM\\Configuration::setDefaultRepositoryClassName", "doc": "&quot;Sets default repository class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_getDefaultRepositoryClassName", "name": "Doctrine\\ORM\\Configuration::getDefaultRepositoryClassName", "doc": "&quot;Get default repository class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_setNamingStrategy", "name": "Doctrine\\ORM\\Configuration::setNamingStrategy", "doc": "&quot;Sets naming strategy.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_getNamingStrategy", "name": "Doctrine\\ORM\\Configuration::getNamingStrategy", "doc": "&quot;Gets naming strategy.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_setQuoteStrategy", "name": "Doctrine\\ORM\\Configuration::setQuoteStrategy", "doc": "&quot;Sets quote strategy.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_getQuoteStrategy", "name": "Doctrine\\ORM\\Configuration::getQuoteStrategy", "doc": "&quot;Gets quote strategy.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_setEntityListenerResolver", "name": "Doctrine\\ORM\\Configuration::setEntityListenerResolver", "doc": "&quot;Set the entity listener resolver.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_getEntityListenerResolver", "name": "Doctrine\\ORM\\Configuration::getEntityListenerResolver", "doc": "&quot;Get the entity listener resolver.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_setRepositoryFactory", "name": "Doctrine\\ORM\\Configuration::setRepositoryFactory", "doc": "&quot;Set the entity repository factory.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Configuration", "fromLink": "Doctrine/ORM/Configuration.html", "link": "Doctrine/ORM/Configuration.html#method_getRepositoryFactory", "name": "Doctrine\\ORM\\Configuration::getRepositoryFactory", "doc": "&quot;Get the entity repository factory.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Decorator", "fromLink": "Doctrine/ORM/Decorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "doc": "&quot;Base class for EntityManager decorators&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "fromLink": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html#method___construct", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "fromLink": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html#method_getConnection", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator::getConnection", "doc": "&quot;Gets the database connection object used by the EntityManager.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "fromLink": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html#method_getExpressionBuilder", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator::getExpressionBuilder", "doc": "&quot;Gets an ExpressionBuilder used for object-oriented construction of query expressions.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "fromLink": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html#method_beginTransaction", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator::beginTransaction", "doc": "&quot;Starts a transaction on the underlying database connection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "fromLink": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html#method_transactional", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator::transactional", "doc": "&quot;Executes a function in a transaction.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "fromLink": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html#method_commit", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator::commit", "doc": "&quot;Commits a transaction on the underlying database connection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "fromLink": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html#method_rollback", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator::rollback", "doc": "&quot;Performs a rollback on the underlying database connection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "fromLink": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html#method_createQuery", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator::createQuery", "doc": "&quot;Creates a new Query object.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "fromLink": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html#method_createNamedQuery", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator::createNamedQuery", "doc": "&quot;Creates a Query from a named query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "fromLink": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html#method_createNativeQuery", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator::createNativeQuery", "doc": "&quot;Creates a native SQL query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "fromLink": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html#method_createNamedNativeQuery", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator::createNamedNativeQuery", "doc": "&quot;Creates a NativeQuery from a named native query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "fromLink": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html#method_createQueryBuilder", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator::createQueryBuilder", "doc": "&quot;Create a QueryBuilder instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "fromLink": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html#method_getReference", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator::getReference", "doc": "&quot;Gets a reference to the entity identified by the given type and identifier\nwithout actually loading it, if the entity is not yet loaded.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "fromLink": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html#method_getPartialReference", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator::getPartialReference", "doc": "&quot;Gets a partial reference to the entity identified by the given type and identifier\nwithout actually loading it, if the entity is not yet loaded.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "fromLink": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html#method_close", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator::close", "doc": "&quot;Closes the EntityManager. All entities that are currently managed\nby this EntityManager become detached. The EntityManager may no longer\nbe used after it is closed.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "fromLink": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html#method_copy", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator::copy", "doc": "&quot;Creates a copy of the given entity. Can create a shallow or a deep copy.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "fromLink": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html#method_lock", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator::lock", "doc": "&quot;Acquire a lock on the given entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "fromLink": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html#method_find", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator::find", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "fromLink": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html#method_flush", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator::flush", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "fromLink": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html#method_getEventManager", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator::getEventManager", "doc": "&quot;Gets the EventManager used by the EntityManager.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "fromLink": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html#method_getConfiguration", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator::getConfiguration", "doc": "&quot;Gets the Configuration used by the EntityManager.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "fromLink": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html#method_isOpen", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator::isOpen", "doc": "&quot;Check if the Entity manager is open or closed.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "fromLink": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html#method_getUnitOfWork", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator::getUnitOfWork", "doc": "&quot;Gets the UnitOfWork used by the EntityManager to coordinate operations.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "fromLink": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html#method_getHydrator", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator::getHydrator", "doc": "&quot;Gets a hydrator for the given hydration mode.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "fromLink": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html#method_newHydrator", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator::newHydrator", "doc": "&quot;Create a new instance for the given hydration mode.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "fromLink": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html#method_getProxyFactory", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator::getProxyFactory", "doc": "&quot;Gets the proxy factory used by the EntityManager to create entity proxies.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "fromLink": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html#method_getFilters", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator::getFilters", "doc": "&quot;Gets the enabled filters.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "fromLink": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html#method_isFiltersStateClean", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator::isFiltersStateClean", "doc": "&quot;Checks whether the state of the filter collection is clean.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator", "fromLink": "Doctrine/ORM/Decorator/EntityManagerDecorator.html", "link": "Doctrine/ORM/Decorator/EntityManagerDecorator.html#method_hasFilters", "name": "Doctrine\\ORM\\Decorator\\EntityManagerDecorator::hasFilters", "doc": "&quot;Checks whether the Entity Manager has filters.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM", "fromLink": "Doctrine/ORM.html", "link": "Doctrine/ORM/EntityManager.html", "name": "Doctrine\\ORM\\EntityManager", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method___construct", "name": "Doctrine\\ORM\\EntityManager::__construct", "doc": "&quot;Creates a new EntityManager that operates on the given database connection\nand uses the given Configuration and EventManager implementations.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_getConnection", "name": "Doctrine\\ORM\\EntityManager::getConnection", "doc": "&quot;Gets the database connection object used by the EntityManager.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_getMetadataFactory", "name": "Doctrine\\ORM\\EntityManager::getMetadataFactory", "doc": "&quot;Gets the metadata factory used to gather the metadata of classes.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_getExpressionBuilder", "name": "Doctrine\\ORM\\EntityManager::getExpressionBuilder", "doc": "&quot;Gets an ExpressionBuilder used for object-oriented construction of query expressions.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_beginTransaction", "name": "Doctrine\\ORM\\EntityManager::beginTransaction", "doc": "&quot;Starts a transaction on the underlying database connection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_transactional", "name": "Doctrine\\ORM\\EntityManager::transactional", "doc": "&quot;Executes a function in a transaction.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_commit", "name": "Doctrine\\ORM\\EntityManager::commit", "doc": "&quot;Commits a transaction on the underlying database connection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_rollback", "name": "Doctrine\\ORM\\EntityManager::rollback", "doc": "&quot;Performs a rollback on the underlying database connection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_getClassMetadata", "name": "Doctrine\\ORM\\EntityManager::getClassMetadata", "doc": "&quot;Returns the ORM metadata descriptor for a class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_createQuery", "name": "Doctrine\\ORM\\EntityManager::createQuery", "doc": "&quot;Creates a new Query object.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_createNamedQuery", "name": "Doctrine\\ORM\\EntityManager::createNamedQuery", "doc": "&quot;Creates a Query from a named query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_createNativeQuery", "name": "Doctrine\\ORM\\EntityManager::createNativeQuery", "doc": "&quot;Creates a native SQL query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_createNamedNativeQuery", "name": "Doctrine\\ORM\\EntityManager::createNamedNativeQuery", "doc": "&quot;Creates a NativeQuery from a named native query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_createQueryBuilder", "name": "Doctrine\\ORM\\EntityManager::createQueryBuilder", "doc": "&quot;Create a QueryBuilder instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_flush", "name": "Doctrine\\ORM\\EntityManager::flush", "doc": "&quot;Flushes all changes to objects that have been queued up to now to the database.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_find", "name": "Doctrine\\ORM\\EntityManager::find", "doc": "&quot;Finds an Entity by its identifier.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_getReference", "name": "Doctrine\\ORM\\EntityManager::getReference", "doc": "&quot;Gets a reference to the entity identified by the given type and identifier\nwithout actually loading it, if the entity is not yet loaded.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_getPartialReference", "name": "Doctrine\\ORM\\EntityManager::getPartialReference", "doc": "&quot;Gets a partial reference to the entity identified by the given type and identifier\nwithout actually loading it, if the entity is not yet loaded.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_clear", "name": "Doctrine\\ORM\\EntityManager::clear", "doc": "&quot;Clears the EntityManager. All entities that are currently managed\nby this EntityManager become detached.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_close", "name": "Doctrine\\ORM\\EntityManager::close", "doc": "&quot;Closes the EntityManager. All entities that are currently managed\nby this EntityManager become detached. The EntityManager may no longer\nbe used after it is closed.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_persist", "name": "Doctrine\\ORM\\EntityManager::persist", "doc": "&quot;Tells the EntityManager to make an instance managed and persistent.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_remove", "name": "Doctrine\\ORM\\EntityManager::remove", "doc": "&quot;Removes an entity instance.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_refresh", "name": "Doctrine\\ORM\\EntityManager::refresh", "doc": "&quot;Refreshes the persistent state of an entity from the database,\noverriding any local changes that have not yet been persisted.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_detach", "name": "Doctrine\\ORM\\EntityManager::detach", "doc": "&quot;Detaches an entity from the EntityManager, causing a managed entity to\nbecome detached.  Unflushed changes made to the entity if any\n(including removal of the entity), will not be synchronized to the database.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_merge", "name": "Doctrine\\ORM\\EntityManager::merge", "doc": "&quot;Merges the state of a detached entity into the persistence context\nof this EntityManager and returns the managed copy of the entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_copy", "name": "Doctrine\\ORM\\EntityManager::copy", "doc": "&quot;Creates a copy of the given entity. Can create a shallow or a deep copy.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_lock", "name": "Doctrine\\ORM\\EntityManager::lock", "doc": "&quot;Acquire a lock on the given entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_getRepository", "name": "Doctrine\\ORM\\EntityManager::getRepository", "doc": "&quot;Gets the repository for an entity class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_contains", "name": "Doctrine\\ORM\\EntityManager::contains", "doc": "&quot;Determines whether an entity instance is managed in this EntityManager.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_getEventManager", "name": "Doctrine\\ORM\\EntityManager::getEventManager", "doc": "&quot;Gets the EventManager used by the EntityManager.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_getConfiguration", "name": "Doctrine\\ORM\\EntityManager::getConfiguration", "doc": "&quot;Gets the Configuration used by the EntityManager.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_isOpen", "name": "Doctrine\\ORM\\EntityManager::isOpen", "doc": "&quot;Check if the Entity manager is open or closed.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_getUnitOfWork", "name": "Doctrine\\ORM\\EntityManager::getUnitOfWork", "doc": "&quot;Gets the UnitOfWork used by the EntityManager to coordinate operations.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_getHydrator", "name": "Doctrine\\ORM\\EntityManager::getHydrator", "doc": "&quot;Gets a hydrator for the given hydration mode.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_newHydrator", "name": "Doctrine\\ORM\\EntityManager::newHydrator", "doc": "&quot;Create a new instance for the given hydration mode.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_getProxyFactory", "name": "Doctrine\\ORM\\EntityManager::getProxyFactory", "doc": "&quot;Gets the proxy factory used by the EntityManager to create entity proxies.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_initializeObject", "name": "Doctrine\\ORM\\EntityManager::initializeObject", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_create", "name": "Doctrine\\ORM\\EntityManager::create", "doc": "&quot;Factory method to create EntityManager instances.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_getFilters", "name": "Doctrine\\ORM\\EntityManager::getFilters", "doc": "&quot;Gets the enabled filters.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_isFiltersStateClean", "name": "Doctrine\\ORM\\EntityManager::isFiltersStateClean", "doc": "&quot;Checks whether the state of the filter collection is clean.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManager", "fromLink": "Doctrine/ORM/EntityManager.html", "link": "Doctrine/ORM/EntityManager.html#method_hasFilters", "name": "Doctrine\\ORM\\EntityManager::hasFilters", "doc": "&quot;Checks whether the Entity Manager has filters.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM", "fromLink": "Doctrine/ORM.html", "link": "Doctrine/ORM/EntityManagerInterface.html", "name": "Doctrine\\ORM\\EntityManagerInterface", "doc": "&quot;EntityManager interface&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_getConnection", "name": "Doctrine\\ORM\\EntityManagerInterface::getConnection", "doc": "&quot;Gets the database connection object used by the EntityManager.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_getExpressionBuilder", "name": "Doctrine\\ORM\\EntityManagerInterface::getExpressionBuilder", "doc": "&quot;Gets an ExpressionBuilder used for object-oriented construction of query expressions.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_beginTransaction", "name": "Doctrine\\ORM\\EntityManagerInterface::beginTransaction", "doc": "&quot;Starts a transaction on the underlying database connection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_transactional", "name": "Doctrine\\ORM\\EntityManagerInterface::transactional", "doc": "&quot;Executes a function in a transaction.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_commit", "name": "Doctrine\\ORM\\EntityManagerInterface::commit", "doc": "&quot;Commits a transaction on the underlying database connection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_rollback", "name": "Doctrine\\ORM\\EntityManagerInterface::rollback", "doc": "&quot;Performs a rollback on the underlying database connection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_createQuery", "name": "Doctrine\\ORM\\EntityManagerInterface::createQuery", "doc": "&quot;Creates a new Query object.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_createNamedQuery", "name": "Doctrine\\ORM\\EntityManagerInterface::createNamedQuery", "doc": "&quot;Creates a Query from a named query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_createNativeQuery", "name": "Doctrine\\ORM\\EntityManagerInterface::createNativeQuery", "doc": "&quot;Creates a native SQL query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_createNamedNativeQuery", "name": "Doctrine\\ORM\\EntityManagerInterface::createNamedNativeQuery", "doc": "&quot;Creates a NativeQuery from a named native query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_createQueryBuilder", "name": "Doctrine\\ORM\\EntityManagerInterface::createQueryBuilder", "doc": "&quot;Create a QueryBuilder instance&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_getReference", "name": "Doctrine\\ORM\\EntityManagerInterface::getReference", "doc": "&quot;Gets a reference to the entity identified by the given type and identifier\nwithout actually loading it, if the entity is not yet loaded.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_getPartialReference", "name": "Doctrine\\ORM\\EntityManagerInterface::getPartialReference", "doc": "&quot;Gets a partial reference to the entity identified by the given type and identifier\nwithout actually loading it, if the entity is not yet loaded.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_close", "name": "Doctrine\\ORM\\EntityManagerInterface::close", "doc": "&quot;Closes the EntityManager. All entities that are currently managed\nby this EntityManager become detached. The EntityManager may no longer\nbe used after it is closed.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_copy", "name": "Doctrine\\ORM\\EntityManagerInterface::copy", "doc": "&quot;Creates a copy of the given entity. Can create a shallow or a deep copy.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_lock", "name": "Doctrine\\ORM\\EntityManagerInterface::lock", "doc": "&quot;Acquire a lock on the given entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_getEventManager", "name": "Doctrine\\ORM\\EntityManagerInterface::getEventManager", "doc": "&quot;Gets the EventManager used by the EntityManager.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_getConfiguration", "name": "Doctrine\\ORM\\EntityManagerInterface::getConfiguration", "doc": "&quot;Gets the Configuration used by the EntityManager.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_isOpen", "name": "Doctrine\\ORM\\EntityManagerInterface::isOpen", "doc": "&quot;Check if the Entity manager is open or closed.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_getUnitOfWork", "name": "Doctrine\\ORM\\EntityManagerInterface::getUnitOfWork", "doc": "&quot;Gets the UnitOfWork used by the EntityManager to coordinate operations.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_getHydrator", "name": "Doctrine\\ORM\\EntityManagerInterface::getHydrator", "doc": "&quot;Gets a hydrator for the given hydration mode.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_newHydrator", "name": "Doctrine\\ORM\\EntityManagerInterface::newHydrator", "doc": "&quot;Create a new instance for the given hydration mode.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_getProxyFactory", "name": "Doctrine\\ORM\\EntityManagerInterface::getProxyFactory", "doc": "&quot;Gets the proxy factory used by the EntityManager to create entity proxies.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_getFilters", "name": "Doctrine\\ORM\\EntityManagerInterface::getFilters", "doc": "&quot;Gets the enabled filters.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_isFiltersStateClean", "name": "Doctrine\\ORM\\EntityManagerInterface::isFiltersStateClean", "doc": "&quot;Checks whether the state of the filter collection is clean.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityManagerInterface", "fromLink": "Doctrine/ORM/EntityManagerInterface.html", "link": "Doctrine/ORM/EntityManagerInterface.html#method_hasFilters", "name": "Doctrine\\ORM\\EntityManagerInterface::hasFilters", "doc": "&quot;Checks whether the Entity Manager has filters.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM", "fromLink": "Doctrine/ORM.html", "link": "Doctrine/ORM/EntityNotFoundException.html", "name": "Doctrine\\ORM\\EntityNotFoundException", "doc": "&quot;Exception thrown when a Proxy fails to retrieve an Entity result.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\EntityNotFoundException", "fromLink": "Doctrine/ORM/EntityNotFoundException.html", "link": "Doctrine/ORM/EntityNotFoundException.html#method___construct", "name": "Doctrine\\ORM\\EntityNotFoundException::__construct", "doc": "&quot;Constructor.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM", "fromLink": "Doctrine/ORM.html", "link": "Doctrine/ORM/EntityRepository.html", "name": "Doctrine\\ORM\\EntityRepository", "doc": "&quot;An EntityRepository serves as a repository for entities with generic as well as\nbusiness specific methods for retrieving entities.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\EntityRepository", "fromLink": "Doctrine/ORM/EntityRepository.html", "link": "Doctrine/ORM/EntityRepository.html#method___construct", "name": "Doctrine\\ORM\\EntityRepository::__construct", "doc": "&quot;Initializes a new &lt;tt&gt;EntityRepository&lt;\/tt&gt;.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityRepository", "fromLink": "Doctrine/ORM/EntityRepository.html", "link": "Doctrine/ORM/EntityRepository.html#method_createQueryBuilder", "name": "Doctrine\\ORM\\EntityRepository::createQueryBuilder", "doc": "&quot;Creates a new QueryBuilder instance that is prepopulated for this entity name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityRepository", "fromLink": "Doctrine/ORM/EntityRepository.html", "link": "Doctrine/ORM/EntityRepository.html#method_createResultSetMappingBuilder", "name": "Doctrine\\ORM\\EntityRepository::createResultSetMappingBuilder", "doc": "&quot;Creates a new result set mapping builder for this entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityRepository", "fromLink": "Doctrine/ORM/EntityRepository.html", "link": "Doctrine/ORM/EntityRepository.html#method_createNamedQuery", "name": "Doctrine\\ORM\\EntityRepository::createNamedQuery", "doc": "&quot;Creates a new Query instance based on a predefined metadata named query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityRepository", "fromLink": "Doctrine/ORM/EntityRepository.html", "link": "Doctrine/ORM/EntityRepository.html#method_createNativeNamedQuery", "name": "Doctrine\\ORM\\EntityRepository::createNativeNamedQuery", "doc": "&quot;Creates a native SQL query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityRepository", "fromLink": "Doctrine/ORM/EntityRepository.html", "link": "Doctrine/ORM/EntityRepository.html#method_clear", "name": "Doctrine\\ORM\\EntityRepository::clear", "doc": "&quot;Clears the repository, causing all managed entities to become detached.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityRepository", "fromLink": "Doctrine/ORM/EntityRepository.html", "link": "Doctrine/ORM/EntityRepository.html#method_find", "name": "Doctrine\\ORM\\EntityRepository::find", "doc": "&quot;Finds an entity by its primary key \/ identifier.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityRepository", "fromLink": "Doctrine/ORM/EntityRepository.html", "link": "Doctrine/ORM/EntityRepository.html#method_findAll", "name": "Doctrine\\ORM\\EntityRepository::findAll", "doc": "&quot;Finds all entities in the repository.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityRepository", "fromLink": "Doctrine/ORM/EntityRepository.html", "link": "Doctrine/ORM/EntityRepository.html#method_findBy", "name": "Doctrine\\ORM\\EntityRepository::findBy", "doc": "&quot;Finds entities by a set of criteria.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityRepository", "fromLink": "Doctrine/ORM/EntityRepository.html", "link": "Doctrine/ORM/EntityRepository.html#method_findOneBy", "name": "Doctrine\\ORM\\EntityRepository::findOneBy", "doc": "&quot;Finds a single entity by a set of criteria.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityRepository", "fromLink": "Doctrine/ORM/EntityRepository.html", "link": "Doctrine/ORM/EntityRepository.html#method___call", "name": "Doctrine\\ORM\\EntityRepository::__call", "doc": "&quot;Adds support for magic finders.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityRepository", "fromLink": "Doctrine/ORM/EntityRepository.html", "link": "Doctrine/ORM/EntityRepository.html#method_getEntityName", "name": "Doctrine\\ORM\\EntityRepository::getEntityName", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityRepository", "fromLink": "Doctrine/ORM/EntityRepository.html", "link": "Doctrine/ORM/EntityRepository.html#method_getClassName", "name": "Doctrine\\ORM\\EntityRepository::getClassName", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityRepository", "fromLink": "Doctrine/ORM/EntityRepository.html", "link": "Doctrine/ORM/EntityRepository.html#method_getEntityManager", "name": "Doctrine\\ORM\\EntityRepository::getEntityManager", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityRepository", "fromLink": "Doctrine/ORM/EntityRepository.html", "link": "Doctrine/ORM/EntityRepository.html#method_getClassMetadata", "name": "Doctrine\\ORM\\EntityRepository::getClassMetadata", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\EntityRepository", "fromLink": "Doctrine/ORM/EntityRepository.html", "link": "Doctrine/ORM/EntityRepository.html#method_matching", "name": "Doctrine\\ORM\\EntityRepository::matching", "doc": "&quot;Select all elements from a selectable that match the expression and\nreturn a new collection containing these elements.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Event", "fromLink": "Doctrine/ORM/Event.html", "link": "Doctrine/ORM/Event/LifecycleEventArgs.html", "name": "Doctrine\\ORM\\Event\\LifecycleEventArgs", "doc": "&quot;Lifecycle Events are triggered by the UnitOfWork during lifecycle transitions\nof entities.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Event\\LifecycleEventArgs", "fromLink": "Doctrine/ORM/Event/LifecycleEventArgs.html", "link": "Doctrine/ORM/Event/LifecycleEventArgs.html#method_getEntity", "name": "Doctrine\\ORM\\Event\\LifecycleEventArgs::getEntity", "doc": "&quot;Retrieves associated Entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Event\\LifecycleEventArgs", "fromLink": "Doctrine/ORM/Event/LifecycleEventArgs.html", "link": "Doctrine/ORM/Event/LifecycleEventArgs.html#method_getEntityManager", "name": "Doctrine\\ORM\\Event\\LifecycleEventArgs::getEntityManager", "doc": "&quot;Retrieves associated EntityManager.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Event", "fromLink": "Doctrine/ORM/Event.html", "link": "Doctrine/ORM/Event/ListenersInvoker.html", "name": "Doctrine\\ORM\\Event\\ListenersInvoker", "doc": "&quot;A method invoker based on entity lifecycle.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Event\\ListenersInvoker", "fromLink": "Doctrine/ORM/Event/ListenersInvoker.html", "link": "Doctrine/ORM/Event/ListenersInvoker.html#method___construct", "name": "Doctrine\\ORM\\Event\\ListenersInvoker::__construct", "doc": "&quot;Initializes a new ListenersInvoker instance.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Event\\ListenersInvoker", "fromLink": "Doctrine/ORM/Event/ListenersInvoker.html", "link": "Doctrine/ORM/Event/ListenersInvoker.html#method_getSubscribedSystems", "name": "Doctrine\\ORM\\Event\\ListenersInvoker::getSubscribedSystems", "doc": "&quot;Get the subscribed event systems&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Event\\ListenersInvoker", "fromLink": "Doctrine/ORM/Event/ListenersInvoker.html", "link": "Doctrine/ORM/Event/ListenersInvoker.html#method_invoke", "name": "Doctrine\\ORM\\Event\\ListenersInvoker::invoke", "doc": "&quot;Dispatches the lifecycle event of the given entity.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Event", "fromLink": "Doctrine/ORM/Event.html", "link": "Doctrine/ORM/Event/LoadClassMetadataEventArgs.html", "name": "Doctrine\\ORM\\Event\\LoadClassMetadataEventArgs", "doc": "&quot;Class that holds event arguments for a loadMetadata event.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Event\\LoadClassMetadataEventArgs", "fromLink": "Doctrine/ORM/Event/LoadClassMetadataEventArgs.html", "link": "Doctrine/ORM/Event/LoadClassMetadataEventArgs.html#method_getEntityManager", "name": "Doctrine\\ORM\\Event\\LoadClassMetadataEventArgs::getEntityManager", "doc": "&quot;Retrieve associated EntityManager.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Event", "fromLink": "Doctrine/ORM/Event.html", "link": "Doctrine/ORM/Event/OnClearEventArgs.html", "name": "Doctrine\\ORM\\Event\\OnClearEventArgs", "doc": "&quot;Provides event arguments for the onClear event.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Event\\OnClearEventArgs", "fromLink": "Doctrine/ORM/Event/OnClearEventArgs.html", "link": "Doctrine/ORM/Event/OnClearEventArgs.html#method___construct", "name": "Doctrine\\ORM\\Event\\OnClearEventArgs::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Event\\OnClearEventArgs", "fromLink": "Doctrine/ORM/Event/OnClearEventArgs.html", "link": "Doctrine/ORM/Event/OnClearEventArgs.html#method_getEntityManager", "name": "Doctrine\\ORM\\Event\\OnClearEventArgs::getEntityManager", "doc": "&quot;Retrieves associated EntityManager.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Event\\OnClearEventArgs", "fromLink": "Doctrine/ORM/Event/OnClearEventArgs.html", "link": "Doctrine/ORM/Event/OnClearEventArgs.html#method_getEntityClass", "name": "Doctrine\\ORM\\Event\\OnClearEventArgs::getEntityClass", "doc": "&quot;Name of the entity class that is cleared, or empty if all are cleared.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Event\\OnClearEventArgs", "fromLink": "Doctrine/ORM/Event/OnClearEventArgs.html", "link": "Doctrine/ORM/Event/OnClearEventArgs.html#method_clearsAllEntities", "name": "Doctrine\\ORM\\Event\\OnClearEventArgs::clearsAllEntities", "doc": "&quot;Checks if event clears all entities.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Event", "fromLink": "Doctrine/ORM/Event.html", "link": "Doctrine/ORM/Event/OnFlushEventArgs.html", "name": "Doctrine\\ORM\\Event\\OnFlushEventArgs", "doc": "&quot;Provides event arguments for the preFlush event.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Event\\OnFlushEventArgs", "fromLink": "Doctrine/ORM/Event/OnFlushEventArgs.html", "link": "Doctrine/ORM/Event/OnFlushEventArgs.html#method___construct", "name": "Doctrine\\ORM\\Event\\OnFlushEventArgs::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Event\\OnFlushEventArgs", "fromLink": "Doctrine/ORM/Event/OnFlushEventArgs.html", "link": "Doctrine/ORM/Event/OnFlushEventArgs.html#method_getEntityManager", "name": "Doctrine\\ORM\\Event\\OnFlushEventArgs::getEntityManager", "doc": "&quot;Retrieve associated EntityManager.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Event", "fromLink": "Doctrine/ORM/Event.html", "link": "Doctrine/ORM/Event/PostFlushEventArgs.html", "name": "Doctrine\\ORM\\Event\\PostFlushEventArgs", "doc": "&quot;Provides event arguments for the postFlush event.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Event\\PostFlushEventArgs", "fromLink": "Doctrine/ORM/Event/PostFlushEventArgs.html", "link": "Doctrine/ORM/Event/PostFlushEventArgs.html#method___construct", "name": "Doctrine\\ORM\\Event\\PostFlushEventArgs::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Event\\PostFlushEventArgs", "fromLink": "Doctrine/ORM/Event/PostFlushEventArgs.html", "link": "Doctrine/ORM/Event/PostFlushEventArgs.html#method_getEntityManager", "name": "Doctrine\\ORM\\Event\\PostFlushEventArgs::getEntityManager", "doc": "&quot;Retrieves associated EntityManager.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Event", "fromLink": "Doctrine/ORM/Event.html", "link": "Doctrine/ORM/Event/PreFlushEventArgs.html", "name": "Doctrine\\ORM\\Event\\PreFlushEventArgs", "doc": "&quot;Provides event arguments for the preFlush event.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Event\\PreFlushEventArgs", "fromLink": "Doctrine/ORM/Event/PreFlushEventArgs.html", "link": "Doctrine/ORM/Event/PreFlushEventArgs.html#method___construct", "name": "Doctrine\\ORM\\Event\\PreFlushEventArgs::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Event\\PreFlushEventArgs", "fromLink": "Doctrine/ORM/Event/PreFlushEventArgs.html", "link": "Doctrine/ORM/Event/PreFlushEventArgs.html#method_getEntityManager", "name": "Doctrine\\ORM\\Event\\PreFlushEventArgs::getEntityManager", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Event", "fromLink": "Doctrine/ORM/Event.html", "link": "Doctrine/ORM/Event/PreUpdateEventArgs.html", "name": "Doctrine\\ORM\\Event\\PreUpdateEventArgs", "doc": "&quot;Class that holds event arguments for a preInsert\/preUpdate event.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Event\\PreUpdateEventArgs", "fromLink": "Doctrine/ORM/Event/PreUpdateEventArgs.html", "link": "Doctrine/ORM/Event/PreUpdateEventArgs.html#method___construct", "name": "Doctrine\\ORM\\Event\\PreUpdateEventArgs::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Event\\PreUpdateEventArgs", "fromLink": "Doctrine/ORM/Event/PreUpdateEventArgs.html", "link": "Doctrine/ORM/Event/PreUpdateEventArgs.html#method_getEntityChangeSet", "name": "Doctrine\\ORM\\Event\\PreUpdateEventArgs::getEntityChangeSet", "doc": "&quot;Retrieves entity changeset.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Event\\PreUpdateEventArgs", "fromLink": "Doctrine/ORM/Event/PreUpdateEventArgs.html", "link": "Doctrine/ORM/Event/PreUpdateEventArgs.html#method_hasChangedField", "name": "Doctrine\\ORM\\Event\\PreUpdateEventArgs::hasChangedField", "doc": "&quot;Checks if field has a changeset.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Event\\PreUpdateEventArgs", "fromLink": "Doctrine/ORM/Event/PreUpdateEventArgs.html", "link": "Doctrine/ORM/Event/PreUpdateEventArgs.html#method_getOldValue", "name": "Doctrine\\ORM\\Event\\PreUpdateEventArgs::getOldValue", "doc": "&quot;Gets the old value of the changeset of the changed field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Event\\PreUpdateEventArgs", "fromLink": "Doctrine/ORM/Event/PreUpdateEventArgs.html", "link": "Doctrine/ORM/Event/PreUpdateEventArgs.html#method_getNewValue", "name": "Doctrine\\ORM\\Event\\PreUpdateEventArgs::getNewValue", "doc": "&quot;Gets the new value of the changeset of the changed field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Event\\PreUpdateEventArgs", "fromLink": "Doctrine/ORM/Event/PreUpdateEventArgs.html", "link": "Doctrine/ORM/Event/PreUpdateEventArgs.html#method_setNewValue", "name": "Doctrine\\ORM\\Event\\PreUpdateEventArgs::setNewValue", "doc": "&quot;Sets the new value of this field.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM", "fromLink": "Doctrine/ORM.html", "link": "Doctrine/ORM/Events.html", "name": "Doctrine\\ORM\\Events", "doc": "&quot;Container for all ORM events.&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Id", "fromLink": "Doctrine/ORM/Id.html", "link": "Doctrine/ORM/Id/AbstractIdGenerator.html", "name": "Doctrine\\ORM\\Id\\AbstractIdGenerator", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Id\\AbstractIdGenerator", "fromLink": "Doctrine/ORM/Id/AbstractIdGenerator.html", "link": "Doctrine/ORM/Id/AbstractIdGenerator.html#method_generate", "name": "Doctrine\\ORM\\Id\\AbstractIdGenerator::generate", "doc": "&quot;Generates an identifier for an entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Id\\AbstractIdGenerator", "fromLink": "Doctrine/ORM/Id/AbstractIdGenerator.html", "link": "Doctrine/ORM/Id/AbstractIdGenerator.html#method_isPostInsertGenerator", "name": "Doctrine\\ORM\\Id\\AbstractIdGenerator::isPostInsertGenerator", "doc": "&quot;Gets whether this generator is a post-insert generator which means that\n{@link generate()} must be called after the entity has been inserted\ninto the database.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Id", "fromLink": "Doctrine/ORM/Id.html", "link": "Doctrine/ORM/Id/AssignedGenerator.html", "name": "Doctrine\\ORM\\Id\\AssignedGenerator", "doc": "&quot;Special generator for application-assigned identifiers (doesn&#039;t really generate anything).&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Id\\AssignedGenerator", "fromLink": "Doctrine/ORM/Id/AssignedGenerator.html", "link": "Doctrine/ORM/Id/AssignedGenerator.html#method_generate", "name": "Doctrine\\ORM\\Id\\AssignedGenerator::generate", "doc": "&quot;Returns the identifier assigned to the given entity.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Id", "fromLink": "Doctrine/ORM/Id.html", "link": "Doctrine/ORM/Id/BigIntegerIdentityGenerator.html", "name": "Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator", "doc": "&quot;Id generator that obtains IDs from special \&quot;identity\&quot; columns. These are columns\nthat automatically get a database-generated, auto-incremented identifier on INSERT.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator", "fromLink": "Doctrine/ORM/Id/BigIntegerIdentityGenerator.html", "link": "Doctrine/ORM/Id/BigIntegerIdentityGenerator.html#method___construct", "name": "Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator", "fromLink": "Doctrine/ORM/Id/BigIntegerIdentityGenerator.html", "link": "Doctrine/ORM/Id/BigIntegerIdentityGenerator.html#method_generate", "name": "Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator::generate", "doc": "&quot;Generates an identifier for an entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator", "fromLink": "Doctrine/ORM/Id/BigIntegerIdentityGenerator.html", "link": "Doctrine/ORM/Id/BigIntegerIdentityGenerator.html#method_isPostInsertGenerator", "name": "Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator::isPostInsertGenerator", "doc": "&quot;Gets whether this generator is a post-insert generator which means that\n{@link generate()} must be called after the entity has been inserted\ninto the database.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Id", "fromLink": "Doctrine/ORM/Id.html", "link": "Doctrine/ORM/Id/IdentityGenerator.html", "name": "Doctrine\\ORM\\Id\\IdentityGenerator", "doc": "&quot;Id generator that obtains IDs from special \&quot;identity\&quot; columns. These are columns\nthat automatically get a database-generated, auto-incremented identifier on INSERT.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Id\\IdentityGenerator", "fromLink": "Doctrine/ORM/Id/IdentityGenerator.html", "link": "Doctrine/ORM/Id/IdentityGenerator.html#method___construct", "name": "Doctrine\\ORM\\Id\\IdentityGenerator::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Id\\IdentityGenerator", "fromLink": "Doctrine/ORM/Id/IdentityGenerator.html", "link": "Doctrine/ORM/Id/IdentityGenerator.html#method_generate", "name": "Doctrine\\ORM\\Id\\IdentityGenerator::generate", "doc": "&quot;Generates an identifier for an entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Id\\IdentityGenerator", "fromLink": "Doctrine/ORM/Id/IdentityGenerator.html", "link": "Doctrine/ORM/Id/IdentityGenerator.html#method_isPostInsertGenerator", "name": "Doctrine\\ORM\\Id\\IdentityGenerator::isPostInsertGenerator", "doc": "&quot;Gets whether this generator is a post-insert generator which means that\n{@link generate()} must be called after the entity has been inserted\ninto the database.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Id", "fromLink": "Doctrine/ORM/Id.html", "link": "Doctrine/ORM/Id/SequenceGenerator.html", "name": "Doctrine\\ORM\\Id\\SequenceGenerator", "doc": "&quot;Represents an ID generator that uses a database sequence.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Id\\SequenceGenerator", "fromLink": "Doctrine/ORM/Id/SequenceGenerator.html", "link": "Doctrine/ORM/Id/SequenceGenerator.html#method___construct", "name": "Doctrine\\ORM\\Id\\SequenceGenerator::__construct", "doc": "&quot;Initializes a new sequence generator.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Id\\SequenceGenerator", "fromLink": "Doctrine/ORM/Id/SequenceGenerator.html", "link": "Doctrine/ORM/Id/SequenceGenerator.html#method_generate", "name": "Doctrine\\ORM\\Id\\SequenceGenerator::generate", "doc": "&quot;Generates an ID for the given entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Id\\SequenceGenerator", "fromLink": "Doctrine/ORM/Id/SequenceGenerator.html", "link": "Doctrine/ORM/Id/SequenceGenerator.html#method_getCurrentMaxValue", "name": "Doctrine\\ORM\\Id\\SequenceGenerator::getCurrentMaxValue", "doc": "&quot;Gets the maximum value of the currently allocated bag of values.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Id\\SequenceGenerator", "fromLink": "Doctrine/ORM/Id/SequenceGenerator.html", "link": "Doctrine/ORM/Id/SequenceGenerator.html#method_getNextValue", "name": "Doctrine\\ORM\\Id\\SequenceGenerator::getNextValue", "doc": "&quot;Gets the next value that will be returned by generate().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Id\\SequenceGenerator", "fromLink": "Doctrine/ORM/Id/SequenceGenerator.html", "link": "Doctrine/ORM/Id/SequenceGenerator.html#method_serialize", "name": "Doctrine\\ORM\\Id\\SequenceGenerator::serialize", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Id\\SequenceGenerator", "fromLink": "Doctrine/ORM/Id/SequenceGenerator.html", "link": "Doctrine/ORM/Id/SequenceGenerator.html#method_unserialize", "name": "Doctrine\\ORM\\Id\\SequenceGenerator::unserialize", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Id", "fromLink": "Doctrine/ORM/Id.html", "link": "Doctrine/ORM/Id/TableGenerator.html", "name": "Doctrine\\ORM\\Id\\TableGenerator", "doc": "&quot;Id generator that uses a single-row database table and a hi\/lo algorithm.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Id\\TableGenerator", "fromLink": "Doctrine/ORM/Id/TableGenerator.html", "link": "Doctrine/ORM/Id/TableGenerator.html#method___construct", "name": "Doctrine\\ORM\\Id\\TableGenerator::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Id\\TableGenerator", "fromLink": "Doctrine/ORM/Id/TableGenerator.html", "link": "Doctrine/ORM/Id/TableGenerator.html#method_generate", "name": "Doctrine\\ORM\\Id\\TableGenerator::generate", "doc": "&quot;Generates an identifier for an entity.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Id", "fromLink": "Doctrine/ORM/Id.html", "link": "Doctrine/ORM/Id/UuidGenerator.html", "name": "Doctrine\\ORM\\Id\\UuidGenerator", "doc": "&quot;Represents an ID generator that uses the database UUID expression&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Id\\UuidGenerator", "fromLink": "Doctrine/ORM/Id/UuidGenerator.html", "link": "Doctrine/ORM/Id/UuidGenerator.html#method_generate", "name": "Doctrine\\ORM\\Id\\UuidGenerator::generate", "doc": "&quot;Generates an ID for the given entity.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Internal", "fromLink": "Doctrine/ORM/Internal.html", "link": "Doctrine/ORM/Internal/CommitOrderCalculator.html", "name": "Doctrine\\ORM\\Internal\\CommitOrderCalculator", "doc": "&quot;The CommitOrderCalculator is used by the UnitOfWork to sort out the\ncorrect order in which changes to entities need to be persisted.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\CommitOrderCalculator", "fromLink": "Doctrine/ORM/Internal/CommitOrderCalculator.html", "link": "Doctrine/ORM/Internal/CommitOrderCalculator.html#method_clear", "name": "Doctrine\\ORM\\Internal\\CommitOrderCalculator::clear", "doc": "&quot;Clears the current graph.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\CommitOrderCalculator", "fromLink": "Doctrine/ORM/Internal/CommitOrderCalculator.html", "link": "Doctrine/ORM/Internal/CommitOrderCalculator.html#method_getCommitOrder", "name": "Doctrine\\ORM\\Internal\\CommitOrderCalculator::getCommitOrder", "doc": "&quot;Gets a valid commit order for all current nodes.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\CommitOrderCalculator", "fromLink": "Doctrine/ORM/Internal/CommitOrderCalculator.html", "link": "Doctrine/ORM/Internal/CommitOrderCalculator.html#method_addDependency", "name": "Doctrine\\ORM\\Internal\\CommitOrderCalculator::addDependency", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\CommitOrderCalculator", "fromLink": "Doctrine/ORM/Internal/CommitOrderCalculator.html", "link": "Doctrine/ORM/Internal/CommitOrderCalculator.html#method_hasClass", "name": "Doctrine\\ORM\\Internal\\CommitOrderCalculator::hasClass", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\CommitOrderCalculator", "fromLink": "Doctrine/ORM/Internal/CommitOrderCalculator.html", "link": "Doctrine/ORM/Internal/CommitOrderCalculator.html#method_addClass", "name": "Doctrine\\ORM\\Internal\\CommitOrderCalculator::addClass", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Internal\\Hydration", "fromLink": "Doctrine/ORM/Internal/Hydration.html", "link": "Doctrine/ORM/Internal/Hydration/AbstractHydrator.html", "name": "Doctrine\\ORM\\Internal\\Hydration\\AbstractHydrator", "doc": "&quot;Base class for all hydrators. A hydrator is a class that provides some form\nof transformation of an SQL result set into another structure.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\AbstractHydrator", "fromLink": "Doctrine/ORM/Internal/Hydration/AbstractHydrator.html", "link": "Doctrine/ORM/Internal/Hydration/AbstractHydrator.html#method___construct", "name": "Doctrine\\ORM\\Internal\\Hydration\\AbstractHydrator::__construct", "doc": "&quot;Initializes a new instance of a class derived from &lt;tt&gt;AbstractHydrator&lt;\/tt&gt;.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\AbstractHydrator", "fromLink": "Doctrine/ORM/Internal/Hydration/AbstractHydrator.html", "link": "Doctrine/ORM/Internal/Hydration/AbstractHydrator.html#method_iterate", "name": "Doctrine\\ORM\\Internal\\Hydration\\AbstractHydrator::iterate", "doc": "&quot;Initiates a row-by-row hydration.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\AbstractHydrator", "fromLink": "Doctrine/ORM/Internal/Hydration/AbstractHydrator.html", "link": "Doctrine/ORM/Internal/Hydration/AbstractHydrator.html#method_hydrateAll", "name": "Doctrine\\ORM\\Internal\\Hydration\\AbstractHydrator::hydrateAll", "doc": "&quot;Hydrates all rows returned by the passed statement instance at once.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\AbstractHydrator", "fromLink": "Doctrine/ORM/Internal/Hydration/AbstractHydrator.html", "link": "Doctrine/ORM/Internal/Hydration/AbstractHydrator.html#method_hydrateRow", "name": "Doctrine\\ORM\\Internal\\Hydration\\AbstractHydrator::hydrateRow", "doc": "&quot;Hydrates a single row returned by the current statement instance during\nrow-by-row hydration with {@link iterate()}.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\AbstractHydrator", "fromLink": "Doctrine/ORM/Internal/Hydration/AbstractHydrator.html", "link": "Doctrine/ORM/Internal/Hydration/AbstractHydrator.html#method_prepare", "name": "Doctrine\\ORM\\Internal\\Hydration\\AbstractHydrator::prepare", "doc": "&quot;Executes one-time preparation tasks, once each time hydration is started\nthrough {@link hydrateAll} or {@link iterate()}.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\AbstractHydrator", "fromLink": "Doctrine/ORM/Internal/Hydration/AbstractHydrator.html", "link": "Doctrine/ORM/Internal/Hydration/AbstractHydrator.html#method_cleanup", "name": "Doctrine\\ORM\\Internal\\Hydration\\AbstractHydrator::cleanup", "doc": "&quot;Executes one-time cleanup tasks at the end of a hydration that was initiated\nthrough {@link hydrateAll} or {@link iterate()}.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\AbstractHydrator", "fromLink": "Doctrine/ORM/Internal/Hydration/AbstractHydrator.html", "link": "Doctrine/ORM/Internal/Hydration/AbstractHydrator.html#method_hydrateRowData", "name": "Doctrine\\ORM\\Internal\\Hydration\\AbstractHydrator::hydrateRowData", "doc": "&quot;Hydrates a single row from the current statement instance.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\AbstractHydrator", "fromLink": "Doctrine/ORM/Internal/Hydration/AbstractHydrator.html", "link": "Doctrine/ORM/Internal/Hydration/AbstractHydrator.html#method_hydrateAllData", "name": "Doctrine\\ORM\\Internal\\Hydration\\AbstractHydrator::hydrateAllData", "doc": "&quot;Hydrates all rows from the current statement instance at once.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\AbstractHydrator", "fromLink": "Doctrine/ORM/Internal/Hydration/AbstractHydrator.html", "link": "Doctrine/ORM/Internal/Hydration/AbstractHydrator.html#method_gatherRowData", "name": "Doctrine\\ORM\\Internal\\Hydration\\AbstractHydrator::gatherRowData", "doc": "&quot;Processes a row of the result set.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\AbstractHydrator", "fromLink": "Doctrine/ORM/Internal/Hydration/AbstractHydrator.html", "link": "Doctrine/ORM/Internal/Hydration/AbstractHydrator.html#method_gatherScalarRowData", "name": "Doctrine\\ORM\\Internal\\Hydration\\AbstractHydrator::gatherScalarRowData", "doc": "&quot;Processes a row of the result set.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\AbstractHydrator", "fromLink": "Doctrine/ORM/Internal/Hydration/AbstractHydrator.html", "link": "Doctrine/ORM/Internal/Hydration/AbstractHydrator.html#method_registerManaged", "name": "Doctrine\\ORM\\Internal\\Hydration\\AbstractHydrator::registerManaged", "doc": "&quot;Register entity as managed in UnitOfWork.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\AbstractHydrator", "fromLink": "Doctrine/ORM/Internal/Hydration/AbstractHydrator.html", "link": "Doctrine/ORM/Internal/Hydration/AbstractHydrator.html#method_onClear", "name": "Doctrine\\ORM\\Internal\\Hydration\\AbstractHydrator::onClear", "doc": "&quot;When executed in a hydrate() loop we have to clear internal state to\ndecrease memory consumption.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Internal\\Hydration", "fromLink": "Doctrine/ORM/Internal/Hydration.html", "link": "Doctrine/ORM/Internal/Hydration/ArrayHydrator.html", "name": "Doctrine\\ORM\\Internal\\Hydration\\ArrayHydrator", "doc": "&quot;The ArrayHydrator produces a nested array \&quot;graph\&quot; that is often (not always)\ninterchangeable with the corresponding object graph for read-only access.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\ArrayHydrator", "fromLink": "Doctrine/ORM/Internal/Hydration/ArrayHydrator.html", "link": "Doctrine/ORM/Internal/Hydration/ArrayHydrator.html#method_prepare", "name": "Doctrine\\ORM\\Internal\\Hydration\\ArrayHydrator::prepare", "doc": "&quot;Executes one-time preparation tasks, once each time hydration is started\nthrough {@link hydrateAll} or {@link iterate()}.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\ArrayHydrator", "fromLink": "Doctrine/ORM/Internal/Hydration/ArrayHydrator.html", "link": "Doctrine/ORM/Internal/Hydration/ArrayHydrator.html#method_hydrateAllData", "name": "Doctrine\\ORM\\Internal\\Hydration\\ArrayHydrator::hydrateAllData", "doc": "&quot;Hydrates all rows from the current statement instance at once.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\ArrayHydrator", "fromLink": "Doctrine/ORM/Internal/Hydration/ArrayHydrator.html", "link": "Doctrine/ORM/Internal/Hydration/ArrayHydrator.html#method_hydrateRowData", "name": "Doctrine\\ORM\\Internal\\Hydration\\ArrayHydrator::hydrateRowData", "doc": "&quot;Hydrates a single row from the current statement instance.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Internal\\Hydration", "fromLink": "Doctrine/ORM/Internal/Hydration.html", "link": "Doctrine/ORM/Internal/Hydration/HydrationException.html", "name": "Doctrine\\ORM\\Internal\\Hydration\\HydrationException", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\HydrationException", "fromLink": "Doctrine/ORM/Internal/Hydration/HydrationException.html", "link": "Doctrine/ORM/Internal/Hydration/HydrationException.html#method_nonUniqueResult", "name": "Doctrine\\ORM\\Internal\\Hydration\\HydrationException::nonUniqueResult", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\HydrationException", "fromLink": "Doctrine/ORM/Internal/Hydration/HydrationException.html", "link": "Doctrine/ORM/Internal/Hydration/HydrationException.html#method_parentObjectOfRelationNotFound", "name": "Doctrine\\ORM\\Internal\\Hydration\\HydrationException::parentObjectOfRelationNotFound", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\HydrationException", "fromLink": "Doctrine/ORM/Internal/Hydration/HydrationException.html", "link": "Doctrine/ORM/Internal/Hydration/HydrationException.html#method_emptyDiscriminatorValue", "name": "Doctrine\\ORM\\Internal\\Hydration\\HydrationException::emptyDiscriminatorValue", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\HydrationException", "fromLink": "Doctrine/ORM/Internal/Hydration/HydrationException.html", "link": "Doctrine/ORM/Internal/Hydration/HydrationException.html#method_missingDiscriminatorColumn", "name": "Doctrine\\ORM\\Internal\\Hydration\\HydrationException::missingDiscriminatorColumn", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\HydrationException", "fromLink": "Doctrine/ORM/Internal/Hydration/HydrationException.html", "link": "Doctrine/ORM/Internal/Hydration/HydrationException.html#method_missingDiscriminatorMetaMappingColumn", "name": "Doctrine\\ORM\\Internal\\Hydration\\HydrationException::missingDiscriminatorMetaMappingColumn", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\HydrationException", "fromLink": "Doctrine/ORM/Internal/Hydration/HydrationException.html", "link": "Doctrine/ORM/Internal/Hydration/HydrationException.html#method_invalidDiscriminatorValue", "name": "Doctrine\\ORM\\Internal\\Hydration\\HydrationException::invalidDiscriminatorValue", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Internal\\Hydration", "fromLink": "Doctrine/ORM/Internal/Hydration.html", "link": "Doctrine/ORM/Internal/Hydration/IterableResult.html", "name": "Doctrine\\ORM\\Internal\\Hydration\\IterableResult", "doc": "&quot;Represents a result structure that can be iterated over, hydrating row-by-row\nduring the iteration. An IterableResult is obtained by AbstractHydrator#iterate().&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\IterableResult", "fromLink": "Doctrine/ORM/Internal/Hydration/IterableResult.html", "link": "Doctrine/ORM/Internal/Hydration/IterableResult.html#method___construct", "name": "Doctrine\\ORM\\Internal\\Hydration\\IterableResult::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\IterableResult", "fromLink": "Doctrine/ORM/Internal/Hydration/IterableResult.html", "link": "Doctrine/ORM/Internal/Hydration/IterableResult.html#method_rewind", "name": "Doctrine\\ORM\\Internal\\Hydration\\IterableResult::rewind", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\IterableResult", "fromLink": "Doctrine/ORM/Internal/Hydration/IterableResult.html", "link": "Doctrine/ORM/Internal/Hydration/IterableResult.html#method_next", "name": "Doctrine\\ORM\\Internal\\Hydration\\IterableResult::next", "doc": "&quot;Gets the next set of results.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\IterableResult", "fromLink": "Doctrine/ORM/Internal/Hydration/IterableResult.html", "link": "Doctrine/ORM/Internal/Hydration/IterableResult.html#method_current", "name": "Doctrine\\ORM\\Internal\\Hydration\\IterableResult::current", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\IterableResult", "fromLink": "Doctrine/ORM/Internal/Hydration/IterableResult.html", "link": "Doctrine/ORM/Internal/Hydration/IterableResult.html#method_key", "name": "Doctrine\\ORM\\Internal\\Hydration\\IterableResult::key", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\IterableResult", "fromLink": "Doctrine/ORM/Internal/Hydration/IterableResult.html", "link": "Doctrine/ORM/Internal/Hydration/IterableResult.html#method_valid", "name": "Doctrine\\ORM\\Internal\\Hydration\\IterableResult::valid", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Internal\\Hydration", "fromLink": "Doctrine/ORM/Internal/Hydration.html", "link": "Doctrine/ORM/Internal/Hydration/ObjectHydrator.html", "name": "Doctrine\\ORM\\Internal\\Hydration\\ObjectHydrator", "doc": "&quot;The ObjectHydrator constructs an object graph out of an SQL result set.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\ObjectHydrator", "fromLink": "Doctrine/ORM/Internal/Hydration/ObjectHydrator.html", "link": "Doctrine/ORM/Internal/Hydration/ObjectHydrator.html#method_prepare", "name": "Doctrine\\ORM\\Internal\\Hydration\\ObjectHydrator::prepare", "doc": "&quot;Executes one-time preparation tasks, once each time hydration is started\nthrough {@link hydrateAll} or {@link iterate()}.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\ObjectHydrator", "fromLink": "Doctrine/ORM/Internal/Hydration/ObjectHydrator.html", "link": "Doctrine/ORM/Internal/Hydration/ObjectHydrator.html#method_cleanup", "name": "Doctrine\\ORM\\Internal\\Hydration\\ObjectHydrator::cleanup", "doc": "&quot;Executes one-time cleanup tasks at the end of a hydration that was initiated\nthrough {@link hydrateAll} or {@link iterate()}.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\ObjectHydrator", "fromLink": "Doctrine/ORM/Internal/Hydration/ObjectHydrator.html", "link": "Doctrine/ORM/Internal/Hydration/ObjectHydrator.html#method_hydrateAllData", "name": "Doctrine\\ORM\\Internal\\Hydration\\ObjectHydrator::hydrateAllData", "doc": "&quot;Hydrates all rows from the current statement instance at once.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\ObjectHydrator", "fromLink": "Doctrine/ORM/Internal/Hydration/ObjectHydrator.html", "link": "Doctrine/ORM/Internal/Hydration/ObjectHydrator.html#method_hydrateRowData", "name": "Doctrine\\ORM\\Internal\\Hydration\\ObjectHydrator::hydrateRowData", "doc": "&quot;Hydrates a single row in an SQL result set.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\ObjectHydrator", "fromLink": "Doctrine/ORM/Internal/Hydration/ObjectHydrator.html", "link": "Doctrine/ORM/Internal/Hydration/ObjectHydrator.html#method_onClear", "name": "Doctrine\\ORM\\Internal\\Hydration\\ObjectHydrator::onClear", "doc": "&quot;When executed in a hydrate() loop we may have to clear internal state to\ndecrease memory consumption.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Internal\\Hydration", "fromLink": "Doctrine/ORM/Internal/Hydration.html", "link": "Doctrine/ORM/Internal/Hydration/ScalarHydrator.html", "name": "Doctrine\\ORM\\Internal\\Hydration\\ScalarHydrator", "doc": "&quot;Hydrator that produces flat, rectangular results of scalar data.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\ScalarHydrator", "fromLink": "Doctrine/ORM/Internal/Hydration/ScalarHydrator.html", "link": "Doctrine/ORM/Internal/Hydration/ScalarHydrator.html#method_hydrateAllData", "name": "Doctrine\\ORM\\Internal\\Hydration\\ScalarHydrator::hydrateAllData", "doc": "&quot;Hydrates all rows from the current statement instance at once.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\ScalarHydrator", "fromLink": "Doctrine/ORM/Internal/Hydration/ScalarHydrator.html", "link": "Doctrine/ORM/Internal/Hydration/ScalarHydrator.html#method_hydrateRowData", "name": "Doctrine\\ORM\\Internal\\Hydration\\ScalarHydrator::hydrateRowData", "doc": "&quot;Hydrates a single row from the current statement instance.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Internal\\Hydration", "fromLink": "Doctrine/ORM/Internal/Hydration.html", "link": "Doctrine/ORM/Internal/Hydration/SimpleObjectHydrator.html", "name": "Doctrine\\ORM\\Internal\\Hydration\\SimpleObjectHydrator", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\SimpleObjectHydrator", "fromLink": "Doctrine/ORM/Internal/Hydration/SimpleObjectHydrator.html", "link": "Doctrine/ORM/Internal/Hydration/SimpleObjectHydrator.html#method_hydrateAllData", "name": "Doctrine\\ORM\\Internal\\Hydration\\SimpleObjectHydrator::hydrateAllData", "doc": "&quot;Hydrates all rows from the current statement instance at once.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\SimpleObjectHydrator", "fromLink": "Doctrine/ORM/Internal/Hydration/SimpleObjectHydrator.html", "link": "Doctrine/ORM/Internal/Hydration/SimpleObjectHydrator.html#method_prepare", "name": "Doctrine\\ORM\\Internal\\Hydration\\SimpleObjectHydrator::prepare", "doc": "&quot;Executes one-time preparation tasks, once each time hydration is started\nthrough {@link hydrateAll} or {@link iterate()}.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\SimpleObjectHydrator", "fromLink": "Doctrine/ORM/Internal/Hydration/SimpleObjectHydrator.html", "link": "Doctrine/ORM/Internal/Hydration/SimpleObjectHydrator.html#method_hydrateRowData", "name": "Doctrine\\ORM\\Internal\\Hydration\\SimpleObjectHydrator::hydrateRowData", "doc": "&quot;Hydrates a single row from the current statement instance.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\SimpleObjectHydrator", "fromLink": "Doctrine/ORM/Internal/Hydration/SimpleObjectHydrator.html", "link": "Doctrine/ORM/Internal/Hydration/SimpleObjectHydrator.html#method_hydrateColumnInfo", "name": "Doctrine\\ORM\\Internal\\Hydration\\SimpleObjectHydrator::hydrateColumnInfo", "doc": "&quot;Retrieve column information form ResultSetMapping.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Internal\\Hydration", "fromLink": "Doctrine/ORM/Internal/Hydration.html", "link": "Doctrine/ORM/Internal/Hydration/SingleScalarHydrator.html", "name": "Doctrine\\ORM\\Internal\\Hydration\\SingleScalarHydrator", "doc": "&quot;Hydrator that hydrates a single scalar value from the result set.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Internal\\Hydration\\SingleScalarHydrator", "fromLink": "Doctrine/ORM/Internal/Hydration/SingleScalarHydrator.html", "link": "Doctrine/ORM/Internal/Hydration/SingleScalarHydrator.html#method_hydrateAllData", "name": "Doctrine\\ORM\\Internal\\Hydration\\SingleScalarHydrator::hydrateAllData", "doc": "&quot;Hydrates all rows from the current statement instance at once.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/Annotation.html", "name": "Doctrine\\ORM\\Mapping\\Annotation", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/AnsiQuoteStrategy.html", "name": "Doctrine\\ORM\\Mapping\\AnsiQuoteStrategy", "doc": "&quot;ANSI compliant quote strategy, this strategy does not apply any quote.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\AnsiQuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/AnsiQuoteStrategy.html", "link": "Doctrine/ORM/Mapping/AnsiQuoteStrategy.html#method_getColumnName", "name": "Doctrine\\ORM\\Mapping\\AnsiQuoteStrategy::getColumnName", "doc": "&quot;Gets the (possibly quoted) column name for safe use in an SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\AnsiQuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/AnsiQuoteStrategy.html", "link": "Doctrine/ORM/Mapping/AnsiQuoteStrategy.html#method_getTableName", "name": "Doctrine\\ORM\\Mapping\\AnsiQuoteStrategy::getTableName", "doc": "&quot;Gets the (possibly quoted) primary table name for safe use in an SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\AnsiQuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/AnsiQuoteStrategy.html", "link": "Doctrine/ORM/Mapping/AnsiQuoteStrategy.html#method_getSequenceName", "name": "Doctrine\\ORM\\Mapping\\AnsiQuoteStrategy::getSequenceName", "doc": "&quot;Gets the (possibly quoted) sequence name for safe use in an SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\AnsiQuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/AnsiQuoteStrategy.html", "link": "Doctrine/ORM/Mapping/AnsiQuoteStrategy.html#method_getJoinColumnName", "name": "Doctrine\\ORM\\Mapping\\AnsiQuoteStrategy::getJoinColumnName", "doc": "&quot;Gets the (possibly quoted) join column name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\AnsiQuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/AnsiQuoteStrategy.html", "link": "Doctrine/ORM/Mapping/AnsiQuoteStrategy.html#method_getReferencedJoinColumnName", "name": "Doctrine\\ORM\\Mapping\\AnsiQuoteStrategy::getReferencedJoinColumnName", "doc": "&quot;Gets the (possibly quoted) join column name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\AnsiQuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/AnsiQuoteStrategy.html", "link": "Doctrine/ORM/Mapping/AnsiQuoteStrategy.html#method_getJoinTableName", "name": "Doctrine\\ORM\\Mapping\\AnsiQuoteStrategy::getJoinTableName", "doc": "&quot;Gets the (possibly quoted) name of the join table.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\AnsiQuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/AnsiQuoteStrategy.html", "link": "Doctrine/ORM/Mapping/AnsiQuoteStrategy.html#method_getIdentifierColumnNames", "name": "Doctrine\\ORM\\Mapping\\AnsiQuoteStrategy::getIdentifierColumnNames", "doc": "&quot;Gets the (possibly quoted) identifier column names for safe use in an SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\AnsiQuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/AnsiQuoteStrategy.html", "link": "Doctrine/ORM/Mapping/AnsiQuoteStrategy.html#method_getColumnAlias", "name": "Doctrine\\ORM\\Mapping\\AnsiQuoteStrategy::getColumnAlias", "doc": "&quot;Gets the column alias.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/AssociationOverride.html", "name": "Doctrine\\ORM\\Mapping\\AssociationOverride", "doc": "&quot;This annotation is used to override association mapping of property for an entity relationship.&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/AssociationOverrides.html", "name": "Doctrine\\ORM\\Mapping\\AssociationOverrides", "doc": "&quot;This annotation is used to override association mappings of relationship properties.&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/AttributeOverride.html", "name": "Doctrine\\ORM\\Mapping\\AttributeOverride", "doc": "&quot;This annotation is used to override the mapping of a entity property.&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/AttributeOverrides.html", "name": "Doctrine\\ORM\\Mapping\\AttributeOverrides", "doc": "&quot;This annotation is used to override the mapping of a entity property.&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping\\Builder", "fromLink": "Doctrine/ORM/Mapping/Builder.html", "link": "Doctrine/ORM/Mapping/Builder/AssociationBuilder.html", "name": "Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/AssociationBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/AssociationBuilder.html#method___construct", "name": "Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/AssociationBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/AssociationBuilder.html#method_mappedBy", "name": "Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder::mappedBy", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/AssociationBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/AssociationBuilder.html#method_inversedBy", "name": "Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder::inversedBy", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/AssociationBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/AssociationBuilder.html#method_cascadeAll", "name": "Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder::cascadeAll", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/AssociationBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/AssociationBuilder.html#method_cascadePersist", "name": "Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder::cascadePersist", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/AssociationBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/AssociationBuilder.html#method_cascadeRemove", "name": "Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder::cascadeRemove", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/AssociationBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/AssociationBuilder.html#method_cascadeMerge", "name": "Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder::cascadeMerge", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/AssociationBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/AssociationBuilder.html#method_cascadeDetach", "name": "Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder::cascadeDetach", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/AssociationBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/AssociationBuilder.html#method_cascadeRefresh", "name": "Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder::cascadeRefresh", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/AssociationBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/AssociationBuilder.html#method_fetchExtraLazy", "name": "Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder::fetchExtraLazy", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/AssociationBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/AssociationBuilder.html#method_fetchEager", "name": "Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder::fetchEager", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/AssociationBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/AssociationBuilder.html#method_fetchLazy", "name": "Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder::fetchLazy", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/AssociationBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/AssociationBuilder.html#method_addJoinColumn", "name": "Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder::addJoinColumn", "doc": "&quot;Add Join Columns.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/AssociationBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/AssociationBuilder.html#method_build", "name": "Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder::build", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping\\Builder", "fromLink": "Doctrine/ORM/Mapping/Builder.html", "link": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html", "name": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder", "doc": "&quot;Builder Object for ClassMetadata&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html#method___construct", "name": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html#method_getClassMetadata", "name": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder::getClassMetadata", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html#method_setMappedSuperClass", "name": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder::setMappedSuperClass", "doc": "&quot;Marks the class as mapped superclass.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html#method_setCustomRepositoryClass", "name": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder::setCustomRepositoryClass", "doc": "&quot;Sets custom Repository class name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html#method_setReadOnly", "name": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder::setReadOnly", "doc": "&quot;Marks class read only.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html#method_setTable", "name": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder::setTable", "doc": "&quot;Sets the table name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html#method_addIndex", "name": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder::addIndex", "doc": "&quot;Adds Index.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html#method_addUniqueConstraint", "name": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder::addUniqueConstraint", "doc": "&quot;Adds Unique Constraint.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html#method_addNamedQuery", "name": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder::addNamedQuery", "doc": "&quot;Adds named query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html#method_setJoinedTableInheritance", "name": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder::setJoinedTableInheritance", "doc": "&quot;Sets class as root of a joined table inheritance hierarchy.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html#method_setSingleTableInheritance", "name": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder::setSingleTableInheritance", "doc": "&quot;Sets class as root of a single table inheritance hierarchy.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html#method_setDiscriminatorColumn", "name": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder::setDiscriminatorColumn", "doc": "&quot;Sets the discriminator column details.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html#method_addDiscriminatorMapClass", "name": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder::addDiscriminatorMapClass", "doc": "&quot;Adds a subclass to this inheritance hierarchy.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html#method_setChangeTrackingPolicyDeferredExplicit", "name": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder::setChangeTrackingPolicyDeferredExplicit", "doc": "&quot;Sets deferred explicit change tracking policy.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html#method_setChangeTrackingPolicyNotify", "name": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder::setChangeTrackingPolicyNotify", "doc": "&quot;Sets notify change tracking policy.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html#method_addLifecycleEvent", "name": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder::addLifecycleEvent", "doc": "&quot;Adds lifecycle event.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html#method_addField", "name": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder::addField", "doc": "&quot;Adds Field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html#method_createField", "name": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder::createField", "doc": "&quot;Creates a field builder.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html#method_addManyToOne", "name": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder::addManyToOne", "doc": "&quot;Adds a simple many to one association, optionally with the inversed by field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html#method_createManyToOne", "name": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder::createManyToOne", "doc": "&quot;Creates a ManyToOne Association Builder.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html#method_createOneToOne", "name": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder::createOneToOne", "doc": "&quot;Creates a OneToOne Association Builder.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html#method_addInverseOneToOne", "name": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder::addInverseOneToOne", "doc": "&quot;Adds simple inverse one-to-one association.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html#method_addOwningOneToOne", "name": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder::addOwningOneToOne", "doc": "&quot;Adds simple owning one-to-one association.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html#method_createManyToMany", "name": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder::createManyToMany", "doc": "&quot;Creates a ManyToMany Association Builder.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html#method_addOwningManyToMany", "name": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder::addOwningManyToMany", "doc": "&quot;Adds a simple owning many to many association.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html#method_addInverseManyToMany", "name": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder::addInverseManyToMany", "doc": "&quot;Adds a simple inverse many to many association.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html#method_createOneToMany", "name": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder::createOneToMany", "doc": "&quot;Creates a one to many association builder.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.html#method_addOneToMany", "name": "Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder::addOneToMany", "doc": "&quot;Adds simple OneToMany association.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping\\Builder", "fromLink": "Doctrine/ORM/Mapping/Builder.html", "link": "Doctrine/ORM/Mapping/Builder/EntityListenerBuilder.html", "name": "Doctrine\\ORM\\Mapping\\Builder\\EntityListenerBuilder", "doc": "&quot;Builder for entity listeners.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\EntityListenerBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/EntityListenerBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/EntityListenerBuilder.html#method_bindEntityListener", "name": "Doctrine\\ORM\\Mapping\\Builder\\EntityListenerBuilder::bindEntityListener", "doc": "&quot;Lookup the entity class to find methods that match to event lifecycle names&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping\\Builder", "fromLink": "Doctrine/ORM/Mapping/Builder.html", "link": "Doctrine/ORM/Mapping/Builder/FieldBuilder.html", "name": "Doctrine\\ORM\\Mapping\\Builder\\FieldBuilder", "doc": "&quot;Field Builder&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\FieldBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/FieldBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/FieldBuilder.html#method___construct", "name": "Doctrine\\ORM\\Mapping\\Builder\\FieldBuilder::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\FieldBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/FieldBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/FieldBuilder.html#method_length", "name": "Doctrine\\ORM\\Mapping\\Builder\\FieldBuilder::length", "doc": "&quot;Sets length.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\FieldBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/FieldBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/FieldBuilder.html#method_nullable", "name": "Doctrine\\ORM\\Mapping\\Builder\\FieldBuilder::nullable", "doc": "&quot;Sets nullable.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\FieldBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/FieldBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/FieldBuilder.html#method_unique", "name": "Doctrine\\ORM\\Mapping\\Builder\\FieldBuilder::unique", "doc": "&quot;Sets Unique.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\FieldBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/FieldBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/FieldBuilder.html#method_columnName", "name": "Doctrine\\ORM\\Mapping\\Builder\\FieldBuilder::columnName", "doc": "&quot;Sets column name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\FieldBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/FieldBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/FieldBuilder.html#method_precision", "name": "Doctrine\\ORM\\Mapping\\Builder\\FieldBuilder::precision", "doc": "&quot;Sets Precision.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\FieldBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/FieldBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/FieldBuilder.html#method_scale", "name": "Doctrine\\ORM\\Mapping\\Builder\\FieldBuilder::scale", "doc": "&quot;Sets scale.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\FieldBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/FieldBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/FieldBuilder.html#method_isPrimaryKey", "name": "Doctrine\\ORM\\Mapping\\Builder\\FieldBuilder::isPrimaryKey", "doc": "&quot;Sets field as primary key.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\FieldBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/FieldBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/FieldBuilder.html#method_generatedValue", "name": "Doctrine\\ORM\\Mapping\\Builder\\FieldBuilder::generatedValue", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\FieldBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/FieldBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/FieldBuilder.html#method_isVersionField", "name": "Doctrine\\ORM\\Mapping\\Builder\\FieldBuilder::isVersionField", "doc": "&quot;Sets field versioned.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\FieldBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/FieldBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/FieldBuilder.html#method_setSequenceGenerator", "name": "Doctrine\\ORM\\Mapping\\Builder\\FieldBuilder::setSequenceGenerator", "doc": "&quot;Sets Sequence Generator.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\FieldBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/FieldBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/FieldBuilder.html#method_columnDefinition", "name": "Doctrine\\ORM\\Mapping\\Builder\\FieldBuilder::columnDefinition", "doc": "&quot;Sets column definition.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\FieldBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/FieldBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/FieldBuilder.html#method_build", "name": "Doctrine\\ORM\\Mapping\\Builder\\FieldBuilder::build", "doc": "&quot;Finalizes this field and attach it to the ClassMetadata.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping\\Builder", "fromLink": "Doctrine/ORM/Mapping/Builder.html", "link": "Doctrine/ORM/Mapping/Builder/ManyToManyAssociationBuilder.html", "name": "Doctrine\\ORM\\Mapping\\Builder\\ManyToManyAssociationBuilder", "doc": "&quot;ManyToMany Association Builder&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ManyToManyAssociationBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ManyToManyAssociationBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ManyToManyAssociationBuilder.html#method_setJoinTable", "name": "Doctrine\\ORM\\Mapping\\Builder\\ManyToManyAssociationBuilder::setJoinTable", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ManyToManyAssociationBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ManyToManyAssociationBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ManyToManyAssociationBuilder.html#method_addInverseJoinColumn", "name": "Doctrine\\ORM\\Mapping\\Builder\\ManyToManyAssociationBuilder::addInverseJoinColumn", "doc": "&quot;Adds Inverse Join Columns.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\ManyToManyAssociationBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/ManyToManyAssociationBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/ManyToManyAssociationBuilder.html#method_build", "name": "Doctrine\\ORM\\Mapping\\Builder\\ManyToManyAssociationBuilder::build", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping\\Builder", "fromLink": "Doctrine/ORM/Mapping/Builder.html", "link": "Doctrine/ORM/Mapping/Builder/OneToManyAssociationBuilder.html", "name": "Doctrine\\ORM\\Mapping\\Builder\\OneToManyAssociationBuilder", "doc": "&quot;OneToMany Association Builder&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\OneToManyAssociationBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/OneToManyAssociationBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/OneToManyAssociationBuilder.html#method_setOrderBy", "name": "Doctrine\\ORM\\Mapping\\Builder\\OneToManyAssociationBuilder::setOrderBy", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\OneToManyAssociationBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/OneToManyAssociationBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/OneToManyAssociationBuilder.html#method_setIndexBy", "name": "Doctrine\\ORM\\Mapping\\Builder\\OneToManyAssociationBuilder::setIndexBy", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Builder\\OneToManyAssociationBuilder", "fromLink": "Doctrine/ORM/Mapping/Builder/OneToManyAssociationBuilder.html", "link": "Doctrine/ORM/Mapping/Builder/OneToManyAssociationBuilder.html#method_build", "name": "Doctrine\\ORM\\Mapping\\Builder\\OneToManyAssociationBuilder::build", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/ChangeTrackingPolicy.html", "name": "Doctrine\\ORM\\Mapping\\ChangeTrackingPolicy", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/ClassMetadata.html", "name": "Doctrine\\ORM\\Mapping\\ClassMetadata", "doc": "&quot;{@inheritDoc}&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/ClassMetadataFactory.html", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataFactory", "doc": "&quot;The ClassMetadataFactory is used to create ClassMetadata objects that contain all the\nmetadata mapping information of a class which describes how a class should be mapped\nto a relational database.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataFactory", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataFactory.html", "link": "Doctrine/ORM/Mapping/ClassMetadataFactory.html#method_setEntityManager", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataFactory::setEntityManager", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataFactory", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataFactory.html", "link": "Doctrine/ORM/Mapping/ClassMetadataFactory.html#method_initialize", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataFactory::initialize", "doc": "&quot;{@inheritDoc}.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataFactory", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataFactory.html", "link": "Doctrine/ORM/Mapping/ClassMetadataFactory.html#method_doLoadMetadata", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataFactory::doLoadMetadata", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataFactory", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataFactory.html", "link": "Doctrine/ORM/Mapping/ClassMetadataFactory.html#method_validateRuntimeMetadata", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataFactory::validateRuntimeMetadata", "doc": "&quot;Validate runtime metadata is correctly defined.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataFactory", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataFactory.html", "link": "Doctrine/ORM/Mapping/ClassMetadataFactory.html#method_newClassMetadataInstance", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataFactory::newClassMetadataInstance", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataFactory", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataFactory.html", "link": "Doctrine/ORM/Mapping/ClassMetadataFactory.html#method_wakeupReflection", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataFactory::wakeupReflection", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataFactory", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataFactory.html", "link": "Doctrine/ORM/Mapping/ClassMetadataFactory.html#method_initializeReflection", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataFactory::initializeReflection", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataFactory", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataFactory.html", "link": "Doctrine/ORM/Mapping/ClassMetadataFactory.html#method_getFqcnFromAlias", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataFactory::getFqcnFromAlias", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataFactory", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataFactory.html", "link": "Doctrine/ORM/Mapping/ClassMetadataFactory.html#method_getDriver", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataFactory::getDriver", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataFactory", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataFactory.html", "link": "Doctrine/ORM/Mapping/ClassMetadataFactory.html#method_isEntity", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataFactory::isEntity", "doc": "&quot;{@inheritDoc}&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "doc": "&quot;A &lt;tt&gt;ClassMetadata&lt;\/tt&gt; instance holds all the object-relational mapping metadata\nof an entity and its associations.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method___construct", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::__construct", "doc": "&quot;Initializes a new ClassMetadata instance that will hold the object-relational mapping\nmetadata of the class with the given name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getReflectionProperties", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getReflectionProperties", "doc": "&quot;Gets the ReflectionProperties of the mapped class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getReflectionProperty", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getReflectionProperty", "doc": "&quot;Gets a ReflectionProperty for a specific field of the mapped class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getSingleIdReflectionProperty", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getSingleIdReflectionProperty", "doc": "&quot;Gets the ReflectionProperty for the single identifier field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getIdentifierValues", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getIdentifierValues", "doc": "&quot;Extracts the identifier values of an entity of this class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_setIdentifierValues", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::setIdentifierValues", "doc": "&quot;Populates the entity identifier of an entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_setFieldValue", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::setFieldValue", "doc": "&quot;Sets the specified field to the specified value on the given entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getFieldValue", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getFieldValue", "doc": "&quot;Gets the specified field&#039;s value off the given entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method___toString", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::__toString", "doc": "&quot;Creates a string representation of this instance.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method___sleep", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::__sleep", "doc": "&quot;Determines which fields get serialized.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_newInstance", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::newInstance", "doc": "&quot;Creates a new instance of the mapped class, without invoking the constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_wakeupReflection", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::wakeupReflection", "doc": "&quot;Restores some state that can not be serialized\/unserialized.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_initializeReflection", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::initializeReflection", "doc": "&quot;Initializes a new ClassMetadata instance that will hold the object-relational mapping\nmetadata of the class with the given name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_validateIdentifier", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::validateIdentifier", "doc": "&quot;Validates Identifier.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_validateAssociations", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::validateAssociations", "doc": "&quot;Validates association targets actually exist.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_validateLifecycleCallbacks", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::validateLifecycleCallbacks", "doc": "&quot;Validates lifecycle callbacks.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getReflectionClass", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getReflectionClass", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_setChangeTrackingPolicy", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::setChangeTrackingPolicy", "doc": "&quot;Sets the change tracking policy used by this class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_isChangeTrackingDeferredExplicit", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::isChangeTrackingDeferredExplicit", "doc": "&quot;Whether the change tracking policy of this class is \&quot;deferred explicit\&quot;.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_isChangeTrackingDeferredImplicit", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::isChangeTrackingDeferredImplicit", "doc": "&quot;Whether the change tracking policy of this class is \&quot;deferred implicit\&quot;.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_isChangeTrackingNotify", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::isChangeTrackingNotify", "doc": "&quot;Whether the change tracking policy of this class is \&quot;notify\&quot;.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_isIdentifier", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::isIdentifier", "doc": "&quot;Checks whether a field is part of the identifier\/primary key field(s).&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_isUniqueField", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::isUniqueField", "doc": "&quot;Checks if the field is unique.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_isNullable", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::isNullable", "doc": "&quot;Checks if the field is not null.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getColumnName", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getColumnName", "doc": "&quot;Gets a column name for a field name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getFieldMapping", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getFieldMapping", "doc": "&quot;Gets the mapping of a (regular) field that holds some data but not a\nreference to another object.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getAssociationMapping", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getAssociationMapping", "doc": "&quot;Gets the mapping of an association.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getAssociationMappings", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getAssociationMappings", "doc": "&quot;Gets all association mappings of the class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getFieldName", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getFieldName", "doc": "&quot;Gets the field name for a column name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getNamedQuery", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getNamedQuery", "doc": "&quot;Gets the named query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getNamedQueries", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getNamedQueries", "doc": "&quot;Gets all named queries of the class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getNamedNativeQuery", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getNamedNativeQuery", "doc": "&quot;Gets the named native query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getNamedNativeQueries", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getNamedNativeQueries", "doc": "&quot;Gets all named native queries of the class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getSqlResultSetMapping", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getSqlResultSetMapping", "doc": "&quot;Gets the result set mapping.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getSqlResultSetMappings", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getSqlResultSetMappings", "doc": "&quot;Gets all sql result set mappings of the class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method__validateAndCompleteFieldMapping", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::_validateAndCompleteFieldMapping", "doc": "&quot;Validates &amp;amp; completes the given field mapping.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method__validateAndCompleteAssociationMapping", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::_validateAndCompleteAssociationMapping", "doc": "&quot;Validates &amp;amp; completes the basic mapping information that is common to all\nassociation mappings (one-to-one, many-ot-one, one-to-many, many-to-many).&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method__validateAndCompleteOneToOneMapping", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::_validateAndCompleteOneToOneMapping", "doc": "&quot;Validates &amp;amp; completes a one-to-one association mapping.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method__validateAndCompleteOneToManyMapping", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::_validateAndCompleteOneToManyMapping", "doc": "&quot;Validates &amp;amp; completes a one-to-many association mapping.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method__validateAndCompleteManyToManyMapping", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::_validateAndCompleteManyToManyMapping", "doc": "&quot;Validates &amp;amp; completes a many-to-many association mapping.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getIdentifierFieldNames", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getIdentifierFieldNames", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getSingleIdentifierFieldName", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getSingleIdentifierFieldName", "doc": "&quot;Gets the name of the single id field. Note that this only works on\nentity classes that have a single-field pk.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getSingleIdentifierColumnName", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getSingleIdentifierColumnName", "doc": "&quot;Gets the column name of the single id column. Note that this only works on\nentity classes that have a single-field pk.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_setIdentifier", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::setIdentifier", "doc": "&quot;INTERNAL:\nSets the mapped identifier\/primary key fields of this class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getIdentifier", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getIdentifier", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_hasField", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::hasField", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getColumnNames", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getColumnNames", "doc": "&quot;Gets an array containing all the column names.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getIdentifierColumnNames", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getIdentifierColumnNames", "doc": "&quot;Returns an array with all the identifier column names.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_setIdGeneratorType", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::setIdGeneratorType", "doc": "&quot;Sets the type of Id generator to use for the mapped class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_usesIdGenerator", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::usesIdGenerator", "doc": "&quot;Checks whether the mapped class uses an Id generator.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_isInheritanceTypeNone", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::isInheritanceTypeNone", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_isInheritanceTypeJoined", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::isInheritanceTypeJoined", "doc": "&quot;Checks whether the mapped class uses the JOINED inheritance mapping strategy.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_isInheritanceTypeSingleTable", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::isInheritanceTypeSingleTable", "doc": "&quot;Checks whether the mapped class uses the SINGLE_TABLE inheritance mapping strategy.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_isInheritanceTypeTablePerClass", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::isInheritanceTypeTablePerClass", "doc": "&quot;Checks whether the mapped class uses the TABLE_PER_CLASS inheritance mapping strategy.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_isIdGeneratorIdentity", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::isIdGeneratorIdentity", "doc": "&quot;Checks whether the class uses an identity column for the Id generation.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_isIdGeneratorSequence", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::isIdGeneratorSequence", "doc": "&quot;Checks whether the class uses a sequence for id generation.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_isIdGeneratorTable", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::isIdGeneratorTable", "doc": "&quot;Checks whether the class uses a table for id generation.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_isIdentifierNatural", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::isIdentifierNatural", "doc": "&quot;Checks whether the class has a natural identifier\/pk (which means it does\nnot use any Id generator.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_isIdentifierUuid", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::isIdentifierUuid", "doc": "&quot;Checks whether the class use a UUID for id generation.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getTypeOfField", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getTypeOfField", "doc": "&quot;Gets the type of a field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getTypeOfColumn", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getTypeOfColumn", "doc": "&quot;Gets the type of a column.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getTableName", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getTableName", "doc": "&quot;Gets the name of the primary table.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getTemporaryIdTableName", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getTemporaryIdTableName", "doc": "&quot;Gets the table name to use for temporary identifier tables of this class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_setSubclasses", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::setSubclasses", "doc": "&quot;Sets the mapped subclasses of this class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_setParentClasses", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::setParentClasses", "doc": "&quot;Sets the parent class names.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_setInheritanceType", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::setInheritanceType", "doc": "&quot;Sets the inheritance type used by the class and its subclasses.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_setAssociationOverride", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::setAssociationOverride", "doc": "&quot;Sets the association to override association mapping of property for an entity relationship.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_setAttributeOverride", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::setAttributeOverride", "doc": "&quot;Sets the override for a mapped field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_isInheritedField", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::isInheritedField", "doc": "&quot;Checks whether a mapped field is inherited from an entity superclass.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_isRootEntity", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::isRootEntity", "doc": "&quot;Checks if this entity is the root in any entity-inheritance-hierarchy.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_isInheritedAssociation", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::isInheritedAssociation", "doc": "&quot;Checks whether a mapped association field is inherited from a superclass.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_setTableName", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::setTableName", "doc": "&quot;Sets the name of the primary table the class is mapped to.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_setPrimaryTable", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::setPrimaryTable", "doc": "&quot;Sets the primary table definition. The provided array supports the\nfollowing structure:&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_mapField", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::mapField", "doc": "&quot;Adds a mapped field to the class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_addInheritedAssociationMapping", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::addInheritedAssociationMapping", "doc": "&quot;INTERNAL:\nAdds an association mapping without completing\/validating it.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_addInheritedFieldMapping", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::addInheritedFieldMapping", "doc": "&quot;INTERNAL:\nAdds a field mapping without completing\/validating it.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_addNamedQuery", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::addNamedQuery", "doc": "&quot;INTERNAL:\nAdds a named query to this class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_addNamedNativeQuery", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::addNamedNativeQuery", "doc": "&quot;INTERNAL:\nAdds a named native query to this class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_addSqlResultSetMapping", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::addSqlResultSetMapping", "doc": "&quot;INTERNAL:\nAdds a sql result set mapping to this class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_mapOneToOne", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::mapOneToOne", "doc": "&quot;Adds a one-to-one mapping.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_mapOneToMany", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::mapOneToMany", "doc": "&quot;Adds a one-to-many mapping.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_mapManyToOne", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::mapManyToOne", "doc": "&quot;Adds a many-to-one mapping.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_mapManyToMany", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::mapManyToMany", "doc": "&quot;Adds a many-to-many mapping.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method__storeAssociationMapping", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::_storeAssociationMapping", "doc": "&quot;Stores the association mapping.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_setCustomRepositoryClass", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::setCustomRepositoryClass", "doc": "&quot;Registers a custom repository class for the entity class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_invokeLifecycleCallbacks", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::invokeLifecycleCallbacks", "doc": "&quot;Dispatches the lifecycle event of the given entity to the registered\nlifecycle callbacks and lifecycle listeners.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_hasLifecycleCallbacks", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::hasLifecycleCallbacks", "doc": "&quot;Whether the class has any attached lifecycle listeners or callbacks for a lifecycle event.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getLifecycleCallbacks", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getLifecycleCallbacks", "doc": "&quot;Gets the registered lifecycle callbacks for an event.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_addLifecycleCallback", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::addLifecycleCallback", "doc": "&quot;Adds a lifecycle callback for entities of this class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_setLifecycleCallbacks", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::setLifecycleCallbacks", "doc": "&quot;Sets the lifecycle callbacks for entities of this class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_addEntityListener", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::addEntityListener", "doc": "&quot;Adds a entity listener for entities of this class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_setDiscriminatorColumn", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::setDiscriminatorColumn", "doc": "&quot;Sets the discriminator column definition.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_setDiscriminatorMap", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::setDiscriminatorMap", "doc": "&quot;Sets the discriminator values used by this class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_addDiscriminatorMapClass", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::addDiscriminatorMapClass", "doc": "&quot;Adds one entry of the discriminator map with a new class and corresponding name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_hasNamedQuery", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::hasNamedQuery", "doc": "&quot;Checks whether the class has a named query with the given query name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_hasNamedNativeQuery", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::hasNamedNativeQuery", "doc": "&quot;Checks whether the class has a named native query with the given query name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_hasSqlResultSetMapping", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::hasSqlResultSetMapping", "doc": "&quot;Checks whether the class has a named native query with the given query name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_hasAssociation", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::hasAssociation", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_isSingleValuedAssociation", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::isSingleValuedAssociation", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_isCollectionValuedAssociation", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::isCollectionValuedAssociation", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_isAssociationWithSingleJoinColumn", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::isAssociationWithSingleJoinColumn", "doc": "&quot;Is this an association that only has a single join column?&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getSingleAssociationJoinColumnName", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getSingleAssociationJoinColumnName", "doc": "&quot;Returns the single association join column (if any).&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getSingleAssociationReferencedJoinColumnName", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getSingleAssociationReferencedJoinColumnName", "doc": "&quot;Returns the single association referenced join column name (if any).&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getFieldForColumn", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getFieldForColumn", "doc": "&quot;Used to retrieve a fieldname for either field or association from a given column.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_setIdGenerator", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::setIdGenerator", "doc": "&quot;Sets the ID generator used to generate IDs for instances of this class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_setCustomGeneratorDefinition", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::setCustomGeneratorDefinition", "doc": "&quot;Sets definition.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_setSequenceGeneratorDefinition", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::setSequenceGeneratorDefinition", "doc": "&quot;Sets the definition of the sequence ID generator for this class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_setVersionMapping", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::setVersionMapping", "doc": "&quot;Sets the version field mapping used for versioning. Sets the default\nvalue to use depending on the column type.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_setVersioned", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::setVersioned", "doc": "&quot;Sets whether this class is to be versioned for optimistic locking.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_setVersionField", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::setVersionField", "doc": "&quot;Sets the name of the field that is to be used for versioning if this class is\nversioned for optimistic locking.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_markReadOnly", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::markReadOnly", "doc": "&quot;Marks this class as read only, no change tracking is applied to it.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getFieldNames", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getFieldNames", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getAssociationNames", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getAssociationNames", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getAssociationTargetClass", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getAssociationTargetClass", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getName", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getName", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getQuotedIdentifierColumnNames", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getQuotedIdentifierColumnNames", "doc": "&quot;Gets the (possibly quoted) identifier column names for safe use in an SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getQuotedColumnName", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getQuotedColumnName", "doc": "&quot;Gets the (possibly quoted) column name of a mapped field for safe use  in an SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getQuotedTableName", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getQuotedTableName", "doc": "&quot;Gets the (possibly quoted) primary table name of this class for safe use in an SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getQuotedJoinTableName", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getQuotedJoinTableName", "doc": "&quot;Gets the (possibly quoted) name of the join table.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_isAssociationInverseSide", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::isAssociationInverseSide", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getAssociationMappedByTargetField", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getAssociationMappedByTargetField", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getAssociationsByTargetClass", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getAssociationsByTargetClass", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_fullyQualifiedClassName", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::fullyQualifiedClassName", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo", "fromLink": "Doctrine/ORM/Mapping/ClassMetadataInfo.html", "link": "Doctrine/ORM/Mapping/ClassMetadataInfo.html#method_getMetadataValue", "name": "Doctrine\\ORM\\Mapping\\ClassMetadataInfo::getMetadataValue", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/Column.html", "name": "Doctrine\\ORM\\Mapping\\Column", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/ColumnResult.html", "name": "Doctrine\\ORM\\Mapping\\ColumnResult", "doc": "&quot;References name of a column in the SELECT clause of a SQL query.&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/CustomIdGenerator.html", "name": "Doctrine\\ORM\\Mapping\\CustomIdGenerator", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/DefaultEntityListenerResolver.html", "name": "Doctrine\\ORM\\Mapping\\DefaultEntityListenerResolver", "doc": "&quot;The default DefaultEntityListener&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\DefaultEntityListenerResolver", "fromLink": "Doctrine/ORM/Mapping/DefaultEntityListenerResolver.html", "link": "Doctrine/ORM/Mapping/DefaultEntityListenerResolver.html#method_clear", "name": "Doctrine\\ORM\\Mapping\\DefaultEntityListenerResolver::clear", "doc": "&quot;Clear all instances from the set, or a specific class when given.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\DefaultEntityListenerResolver", "fromLink": "Doctrine/ORM/Mapping/DefaultEntityListenerResolver.html", "link": "Doctrine/ORM/Mapping/DefaultEntityListenerResolver.html#method_register", "name": "Doctrine\\ORM\\Mapping\\DefaultEntityListenerResolver::register", "doc": "&quot;Register a entity listener instance.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\DefaultEntityListenerResolver", "fromLink": "Doctrine/ORM/Mapping/DefaultEntityListenerResolver.html", "link": "Doctrine/ORM/Mapping/DefaultEntityListenerResolver.html#method_resolve", "name": "Doctrine\\ORM\\Mapping\\DefaultEntityListenerResolver::resolve", "doc": "&quot;Returns a entity listener instance for the given class name.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/DefaultNamingStrategy.html", "name": "Doctrine\\ORM\\Mapping\\DefaultNamingStrategy", "doc": "&quot;The default NamingStrategy&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\DefaultNamingStrategy", "fromLink": "Doctrine/ORM/Mapping/DefaultNamingStrategy.html", "link": "Doctrine/ORM/Mapping/DefaultNamingStrategy.html#method_classToTableName", "name": "Doctrine\\ORM\\Mapping\\DefaultNamingStrategy::classToTableName", "doc": "&quot;Returns a table name for an entity class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\DefaultNamingStrategy", "fromLink": "Doctrine/ORM/Mapping/DefaultNamingStrategy.html", "link": "Doctrine/ORM/Mapping/DefaultNamingStrategy.html#method_propertyToColumnName", "name": "Doctrine\\ORM\\Mapping\\DefaultNamingStrategy::propertyToColumnName", "doc": "&quot;Returns a column name for a property.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\DefaultNamingStrategy", "fromLink": "Doctrine/ORM/Mapping/DefaultNamingStrategy.html", "link": "Doctrine/ORM/Mapping/DefaultNamingStrategy.html#method_referenceColumnName", "name": "Doctrine\\ORM\\Mapping\\DefaultNamingStrategy::referenceColumnName", "doc": "&quot;Returns the default reference column name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\DefaultNamingStrategy", "fromLink": "Doctrine/ORM/Mapping/DefaultNamingStrategy.html", "link": "Doctrine/ORM/Mapping/DefaultNamingStrategy.html#method_joinColumnName", "name": "Doctrine\\ORM\\Mapping\\DefaultNamingStrategy::joinColumnName", "doc": "&quot;Returns a join column name for a property.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\DefaultNamingStrategy", "fromLink": "Doctrine/ORM/Mapping/DefaultNamingStrategy.html", "link": "Doctrine/ORM/Mapping/DefaultNamingStrategy.html#method_joinTableName", "name": "Doctrine\\ORM\\Mapping\\DefaultNamingStrategy::joinTableName", "doc": "&quot;Returns a join table name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\DefaultNamingStrategy", "fromLink": "Doctrine/ORM/Mapping/DefaultNamingStrategy.html", "link": "Doctrine/ORM/Mapping/DefaultNamingStrategy.html#method_joinKeyColumnName", "name": "Doctrine\\ORM\\Mapping\\DefaultNamingStrategy::joinKeyColumnName", "doc": "&quot;Returns the foreign key column name for the given parameters.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/DefaultQuoteStrategy.html", "name": "Doctrine\\ORM\\Mapping\\DefaultQuoteStrategy", "doc": "&quot;A set of rules for determining the physical column, alias and table quotes&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\DefaultQuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/DefaultQuoteStrategy.html", "link": "Doctrine/ORM/Mapping/DefaultQuoteStrategy.html#method_getColumnName", "name": "Doctrine\\ORM\\Mapping\\DefaultQuoteStrategy::getColumnName", "doc": "&quot;Gets the (possibly quoted) column name for safe use in an SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\DefaultQuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/DefaultQuoteStrategy.html", "link": "Doctrine/ORM/Mapping/DefaultQuoteStrategy.html#method_getTableName", "name": "Doctrine\\ORM\\Mapping\\DefaultQuoteStrategy::getTableName", "doc": "&quot;Gets the (possibly quoted) primary table name for safe use in an SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\DefaultQuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/DefaultQuoteStrategy.html", "link": "Doctrine/ORM/Mapping/DefaultQuoteStrategy.html#method_getSequenceName", "name": "Doctrine\\ORM\\Mapping\\DefaultQuoteStrategy::getSequenceName", "doc": "&quot;Gets the (possibly quoted) sequence name for safe use in an SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\DefaultQuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/DefaultQuoteStrategy.html", "link": "Doctrine/ORM/Mapping/DefaultQuoteStrategy.html#method_getJoinColumnName", "name": "Doctrine\\ORM\\Mapping\\DefaultQuoteStrategy::getJoinColumnName", "doc": "&quot;Gets the (possibly quoted) join column name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\DefaultQuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/DefaultQuoteStrategy.html", "link": "Doctrine/ORM/Mapping/DefaultQuoteStrategy.html#method_getReferencedJoinColumnName", "name": "Doctrine\\ORM\\Mapping\\DefaultQuoteStrategy::getReferencedJoinColumnName", "doc": "&quot;Gets the (possibly quoted) join column name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\DefaultQuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/DefaultQuoteStrategy.html", "link": "Doctrine/ORM/Mapping/DefaultQuoteStrategy.html#method_getJoinTableName", "name": "Doctrine\\ORM\\Mapping\\DefaultQuoteStrategy::getJoinTableName", "doc": "&quot;Gets the (possibly quoted) name of the join table.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\DefaultQuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/DefaultQuoteStrategy.html", "link": "Doctrine/ORM/Mapping/DefaultQuoteStrategy.html#method_getIdentifierColumnNames", "name": "Doctrine\\ORM\\Mapping\\DefaultQuoteStrategy::getIdentifierColumnNames", "doc": "&quot;Gets the (possibly quoted) identifier column names for safe use in an SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\DefaultQuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/DefaultQuoteStrategy.html", "link": "Doctrine/ORM/Mapping/DefaultQuoteStrategy.html#method_getColumnAlias", "name": "Doctrine\\ORM\\Mapping\\DefaultQuoteStrategy::getColumnAlias", "doc": "&quot;Gets the column alias.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/DiscriminatorColumn.html", "name": "Doctrine\\ORM\\Mapping\\DiscriminatorColumn", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/DiscriminatorMap.html", "name": "Doctrine\\ORM\\Mapping\\DiscriminatorMap", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping\\Driver", "fromLink": "Doctrine/ORM/Mapping/Driver.html", "link": "Doctrine/ORM/Mapping/Driver/AnnotationDriver.html", "name": "Doctrine\\ORM\\Mapping\\Driver\\AnnotationDriver", "doc": "&quot;The AnnotationDriver reads the mapping metadata from docblock annotations.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Driver\\AnnotationDriver", "fromLink": "Doctrine/ORM/Mapping/Driver/AnnotationDriver.html", "link": "Doctrine/ORM/Mapping/Driver/AnnotationDriver.html#method_loadMetadataForClass", "name": "Doctrine\\ORM\\Mapping\\Driver\\AnnotationDriver::loadMetadataForClass", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Driver\\AnnotationDriver", "fromLink": "Doctrine/ORM/Mapping/Driver/AnnotationDriver.html", "link": "Doctrine/ORM/Mapping/Driver/AnnotationDriver.html#method_create", "name": "Doctrine\\ORM\\Mapping\\Driver\\AnnotationDriver::create", "doc": "&quot;Factory method for the Annotation Driver.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping\\Driver", "fromLink": "Doctrine/ORM/Mapping/Driver.html", "link": "Doctrine/ORM/Mapping/Driver/DatabaseDriver.html", "name": "Doctrine\\ORM\\Mapping\\Driver\\DatabaseDriver", "doc": "&quot;The DatabaseDriver reverse engineers the mapping metadata from a database.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Driver\\DatabaseDriver", "fromLink": "Doctrine/ORM/Mapping/Driver/DatabaseDriver.html", "link": "Doctrine/ORM/Mapping/Driver/DatabaseDriver.html#method___construct", "name": "Doctrine\\ORM\\Mapping\\Driver\\DatabaseDriver::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Driver\\DatabaseDriver", "fromLink": "Doctrine/ORM/Mapping/Driver/DatabaseDriver.html", "link": "Doctrine/ORM/Mapping/Driver/DatabaseDriver.html#method_setNamespace", "name": "Doctrine\\ORM\\Mapping\\Driver\\DatabaseDriver::setNamespace", "doc": "&quot;Set the namespace for the generated entities.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Driver\\DatabaseDriver", "fromLink": "Doctrine/ORM/Mapping/Driver/DatabaseDriver.html", "link": "Doctrine/ORM/Mapping/Driver/DatabaseDriver.html#method_isTransient", "name": "Doctrine\\ORM\\Mapping\\Driver\\DatabaseDriver::isTransient", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Driver\\DatabaseDriver", "fromLink": "Doctrine/ORM/Mapping/Driver/DatabaseDriver.html", "link": "Doctrine/ORM/Mapping/Driver/DatabaseDriver.html#method_getAllClassNames", "name": "Doctrine\\ORM\\Mapping\\Driver\\DatabaseDriver::getAllClassNames", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Driver\\DatabaseDriver", "fromLink": "Doctrine/ORM/Mapping/Driver/DatabaseDriver.html", "link": "Doctrine/ORM/Mapping/Driver/DatabaseDriver.html#method_setClassNameForTable", "name": "Doctrine\\ORM\\Mapping\\Driver\\DatabaseDriver::setClassNameForTable", "doc": "&quot;Sets class name for a table.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Driver\\DatabaseDriver", "fromLink": "Doctrine/ORM/Mapping/Driver/DatabaseDriver.html", "link": "Doctrine/ORM/Mapping/Driver/DatabaseDriver.html#method_setFieldNameForColumn", "name": "Doctrine\\ORM\\Mapping\\Driver\\DatabaseDriver::setFieldNameForColumn", "doc": "&quot;Sets field name for a column on a specific table.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Driver\\DatabaseDriver", "fromLink": "Doctrine/ORM/Mapping/Driver/DatabaseDriver.html", "link": "Doctrine/ORM/Mapping/Driver/DatabaseDriver.html#method_setTables", "name": "Doctrine\\ORM\\Mapping\\Driver\\DatabaseDriver::setTables", "doc": "&quot;Sets tables manually instead of relying on the reverse engineering capabilities of SchemaManager.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Driver\\DatabaseDriver", "fromLink": "Doctrine/ORM/Mapping/Driver/DatabaseDriver.html", "link": "Doctrine/ORM/Mapping/Driver/DatabaseDriver.html#method_loadMetadataForClass", "name": "Doctrine\\ORM\\Mapping\\Driver\\DatabaseDriver::loadMetadataForClass", "doc": "&quot;{@inheritDoc}&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping\\Driver", "fromLink": "Doctrine/ORM/Mapping/Driver.html", "link": "Doctrine/ORM/Mapping/Driver/DriverChain.html", "name": "Doctrine\\ORM\\Mapping\\Driver\\DriverChain", "doc": "&quot;{@inheritDoc}&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping\\Driver", "fromLink": "Doctrine/ORM/Mapping/Driver.html", "link": "Doctrine/ORM/Mapping/Driver/PHPDriver.html", "name": "Doctrine\\ORM\\Mapping\\Driver\\PHPDriver", "doc": "&quot;{@inheritDoc}&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping\\Driver", "fromLink": "Doctrine/ORM/Mapping/Driver.html", "link": "Doctrine/ORM/Mapping/Driver/SimplifiedXmlDriver.html", "name": "Doctrine\\ORM\\Mapping\\Driver\\SimplifiedXmlDriver", "doc": "&quot;XmlDriver that additionally looks for mapping information in a global file.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Driver\\SimplifiedXmlDriver", "fromLink": "Doctrine/ORM/Mapping/Driver/SimplifiedXmlDriver.html", "link": "Doctrine/ORM/Mapping/Driver/SimplifiedXmlDriver.html#method___construct", "name": "Doctrine\\ORM\\Mapping\\Driver\\SimplifiedXmlDriver::__construct", "doc": "&quot;{@inheritDoc}&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping\\Driver", "fromLink": "Doctrine/ORM/Mapping/Driver.html", "link": "Doctrine/ORM/Mapping/Driver/SimplifiedYamlDriver.html", "name": "Doctrine\\ORM\\Mapping\\Driver\\SimplifiedYamlDriver", "doc": "&quot;YamlDriver that additionally looks for mapping information in a global file.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Driver\\SimplifiedYamlDriver", "fromLink": "Doctrine/ORM/Mapping/Driver/SimplifiedYamlDriver.html", "link": "Doctrine/ORM/Mapping/Driver/SimplifiedYamlDriver.html#method___construct", "name": "Doctrine\\ORM\\Mapping\\Driver\\SimplifiedYamlDriver::__construct", "doc": "&quot;{@inheritDoc}&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping\\Driver", "fromLink": "Doctrine/ORM/Mapping/Driver.html", "link": "Doctrine/ORM/Mapping/Driver/StaticPHPDriver.html", "name": "Doctrine\\ORM\\Mapping\\Driver\\StaticPHPDriver", "doc": "&quot;{@inheritDoc}&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping\\Driver", "fromLink": "Doctrine/ORM/Mapping/Driver.html", "link": "Doctrine/ORM/Mapping/Driver/XmlDriver.html", "name": "Doctrine\\ORM\\Mapping\\Driver\\XmlDriver", "doc": "&quot;XmlDriver is a metadata driver that enables mapping through XML files.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Driver\\XmlDriver", "fromLink": "Doctrine/ORM/Mapping/Driver/XmlDriver.html", "link": "Doctrine/ORM/Mapping/Driver/XmlDriver.html#method___construct", "name": "Doctrine\\ORM\\Mapping\\Driver\\XmlDriver::__construct", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Driver\\XmlDriver", "fromLink": "Doctrine/ORM/Mapping/Driver/XmlDriver.html", "link": "Doctrine/ORM/Mapping/Driver/XmlDriver.html#method_loadMetadataForClass", "name": "Doctrine\\ORM\\Mapping\\Driver\\XmlDriver::loadMetadataForClass", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Driver\\XmlDriver", "fromLink": "Doctrine/ORM/Mapping/Driver/XmlDriver.html", "link": "Doctrine/ORM/Mapping/Driver/XmlDriver.html#method_loadMappingFile", "name": "Doctrine\\ORM\\Mapping\\Driver\\XmlDriver::loadMappingFile", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Driver\\XmlDriver", "fromLink": "Doctrine/ORM/Mapping/Driver/XmlDriver.html", "link": "Doctrine/ORM/Mapping/Driver/XmlDriver.html#method_evaluateBoolean", "name": "Doctrine\\ORM\\Mapping\\Driver\\XmlDriver::evaluateBoolean", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping\\Driver", "fromLink": "Doctrine/ORM/Mapping/Driver.html", "link": "Doctrine/ORM/Mapping/Driver/YamlDriver.html", "name": "Doctrine\\ORM\\Mapping\\Driver\\YamlDriver", "doc": "&quot;The YamlDriver reads the mapping metadata from yaml schema files.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Driver\\YamlDriver", "fromLink": "Doctrine/ORM/Mapping/Driver/YamlDriver.html", "link": "Doctrine/ORM/Mapping/Driver/YamlDriver.html#method___construct", "name": "Doctrine\\ORM\\Mapping\\Driver\\YamlDriver::__construct", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Driver\\YamlDriver", "fromLink": "Doctrine/ORM/Mapping/Driver/YamlDriver.html", "link": "Doctrine/ORM/Mapping/Driver/YamlDriver.html#method_loadMetadataForClass", "name": "Doctrine\\ORM\\Mapping\\Driver\\YamlDriver::loadMetadataForClass", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\Driver\\YamlDriver", "fromLink": "Doctrine/ORM/Mapping/Driver/YamlDriver.html", "link": "Doctrine/ORM/Mapping/Driver/YamlDriver.html#method_loadMappingFile", "name": "Doctrine\\ORM\\Mapping\\Driver\\YamlDriver::loadMappingFile", "doc": "&quot;{@inheritDoc}&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/ElementCollection.html", "name": "Doctrine\\ORM\\Mapping\\ElementCollection", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/Entity.html", "name": "Doctrine\\ORM\\Mapping\\Entity", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/EntityListenerResolver.html", "name": "Doctrine\\ORM\\Mapping\\EntityListenerResolver", "doc": "&quot;A resolver is used to instantiate an entity listener.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\EntityListenerResolver", "fromLink": "Doctrine/ORM/Mapping/EntityListenerResolver.html", "link": "Doctrine/ORM/Mapping/EntityListenerResolver.html#method_clear", "name": "Doctrine\\ORM\\Mapping\\EntityListenerResolver::clear", "doc": "&quot;Clear all instances from the set, or a specific class when given.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\EntityListenerResolver", "fromLink": "Doctrine/ORM/Mapping/EntityListenerResolver.html", "link": "Doctrine/ORM/Mapping/EntityListenerResolver.html#method_resolve", "name": "Doctrine\\ORM\\Mapping\\EntityListenerResolver::resolve", "doc": "&quot;Returns a entity listener instance for the given class name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\EntityListenerResolver", "fromLink": "Doctrine/ORM/Mapping/EntityListenerResolver.html", "link": "Doctrine/ORM/Mapping/EntityListenerResolver.html#method_register", "name": "Doctrine\\ORM\\Mapping\\EntityListenerResolver::register", "doc": "&quot;Register a entity listener instance.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/EntityListeners.html", "name": "Doctrine\\ORM\\Mapping\\EntityListeners", "doc": "&quot;The EntityListeners annotation specifies the callback listener classes to be used for an entity or mapped superclass.&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/EntityResult.html", "name": "Doctrine\\ORM\\Mapping\\EntityResult", "doc": "&quot;References an entity in the SELECT clause of a SQL query.&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/FieldResult.html", "name": "Doctrine\\ORM\\Mapping\\FieldResult", "doc": "&quot;Is used to map the columns specified in the SELECT list of the query to the properties or fields of the entity class.&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/GeneratedValue.html", "name": "Doctrine\\ORM\\Mapping\\GeneratedValue", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/HasLifecycleCallbacks.html", "name": "Doctrine\\ORM\\Mapping\\HasLifecycleCallbacks", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/Id.html", "name": "Doctrine\\ORM\\Mapping\\Id", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/Index.html", "name": "Doctrine\\ORM\\Mapping\\Index", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/InheritanceType.html", "name": "Doctrine\\ORM\\Mapping\\InheritanceType", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/JoinColumn.html", "name": "Doctrine\\ORM\\Mapping\\JoinColumn", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/JoinColumns.html", "name": "Doctrine\\ORM\\Mapping\\JoinColumns", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/JoinTable.html", "name": "Doctrine\\ORM\\Mapping\\JoinTable", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/ManyToMany.html", "name": "Doctrine\\ORM\\Mapping\\ManyToMany", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/ManyToOne.html", "name": "Doctrine\\ORM\\Mapping\\ManyToOne", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/MappedSuperclass.html", "name": "Doctrine\\ORM\\Mapping\\MappedSuperclass", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/MappingException.html", "name": "Doctrine\\ORM\\Mapping\\MappingException", "doc": "&quot;A MappingException indicates that something is wrong with the mapping setup.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_pathRequired", "name": "Doctrine\\ORM\\Mapping\\MappingException::pathRequired", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_identifierRequired", "name": "Doctrine\\ORM\\Mapping\\MappingException::identifierRequired", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_invalidInheritanceType", "name": "Doctrine\\ORM\\Mapping\\MappingException::invalidInheritanceType", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_generatorNotAllowedWithCompositeId", "name": "Doctrine\\ORM\\Mapping\\MappingException::generatorNotAllowedWithCompositeId", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_missingFieldName", "name": "Doctrine\\ORM\\Mapping\\MappingException::missingFieldName", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_missingTargetEntity", "name": "Doctrine\\ORM\\Mapping\\MappingException::missingTargetEntity", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_missingSourceEntity", "name": "Doctrine\\ORM\\Mapping\\MappingException::missingSourceEntity", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_mappingFileNotFound", "name": "Doctrine\\ORM\\Mapping\\MappingException::mappingFileNotFound", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_invalidOverrideFieldName", "name": "Doctrine\\ORM\\Mapping\\MappingException::invalidOverrideFieldName", "doc": "&quot;Exception for invalid property name override.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_invalidOverrideFieldType", "name": "Doctrine\\ORM\\Mapping\\MappingException::invalidOverrideFieldType", "doc": "&quot;Exception for invalid property type override.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_mappingNotFound", "name": "Doctrine\\ORM\\Mapping\\MappingException::mappingNotFound", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_queryNotFound", "name": "Doctrine\\ORM\\Mapping\\MappingException::queryNotFound", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_resultMappingNotFound", "name": "Doctrine\\ORM\\Mapping\\MappingException::resultMappingNotFound", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_emptyQueryMapping", "name": "Doctrine\\ORM\\Mapping\\MappingException::emptyQueryMapping", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_nameIsMandatoryForQueryMapping", "name": "Doctrine\\ORM\\Mapping\\MappingException::nameIsMandatoryForQueryMapping", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_missingQueryMapping", "name": "Doctrine\\ORM\\Mapping\\MappingException::missingQueryMapping", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_missingResultSetMappingEntity", "name": "Doctrine\\ORM\\Mapping\\MappingException::missingResultSetMappingEntity", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_missingResultSetMappingFieldName", "name": "Doctrine\\ORM\\Mapping\\MappingException::missingResultSetMappingFieldName", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_nameIsMandatoryForSqlResultSetMapping", "name": "Doctrine\\ORM\\Mapping\\MappingException::nameIsMandatoryForSqlResultSetMapping", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_oneToManyRequiresMappedBy", "name": "Doctrine\\ORM\\Mapping\\MappingException::oneToManyRequiresMappedBy", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_joinTableRequired", "name": "Doctrine\\ORM\\Mapping\\MappingException::joinTableRequired", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_missingRequiredOption", "name": "Doctrine\\ORM\\Mapping\\MappingException::missingRequiredOption", "doc": "&quot;Called if a required option was not found but is required&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_invalidMapping", "name": "Doctrine\\ORM\\Mapping\\MappingException::invalidMapping", "doc": "&quot;Generic exception for invalid mappings.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_reflectionFailure", "name": "Doctrine\\ORM\\Mapping\\MappingException::reflectionFailure", "doc": "&quot;Exception for reflection exceptions - adds the entity name,\nbecause there might be long classnames that will be shortened\nwithin the stacktrace&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_joinColumnMustPointToMappedField", "name": "Doctrine\\ORM\\Mapping\\MappingException::joinColumnMustPointToMappedField", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_classIsNotAValidEntityOrMappedSuperClass", "name": "Doctrine\\ORM\\Mapping\\MappingException::classIsNotAValidEntityOrMappedSuperClass", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_propertyTypeIsRequired", "name": "Doctrine\\ORM\\Mapping\\MappingException::propertyTypeIsRequired", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_tableIdGeneratorNotImplemented", "name": "Doctrine\\ORM\\Mapping\\MappingException::tableIdGeneratorNotImplemented", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_duplicateFieldMapping", "name": "Doctrine\\ORM\\Mapping\\MappingException::duplicateFieldMapping", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_duplicateAssociationMapping", "name": "Doctrine\\ORM\\Mapping\\MappingException::duplicateAssociationMapping", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_duplicateQueryMapping", "name": "Doctrine\\ORM\\Mapping\\MappingException::duplicateQueryMapping", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_duplicateResultSetMapping", "name": "Doctrine\\ORM\\Mapping\\MappingException::duplicateResultSetMapping", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_singleIdNotAllowedOnCompositePrimaryKey", "name": "Doctrine\\ORM\\Mapping\\MappingException::singleIdNotAllowedOnCompositePrimaryKey", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_unsupportedOptimisticLockingType", "name": "Doctrine\\ORM\\Mapping\\MappingException::unsupportedOptimisticLockingType", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_fileMappingDriversRequireConfiguredDirectoryPath", "name": "Doctrine\\ORM\\Mapping\\MappingException::fileMappingDriversRequireConfiguredDirectoryPath", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_invalidClassInDiscriminatorMap", "name": "Doctrine\\ORM\\Mapping\\MappingException::invalidClassInDiscriminatorMap", "doc": "&quot;Returns an exception that indicates that a class used in a discriminator map does not exist.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_duplicateDiscriminatorEntry", "name": "Doctrine\\ORM\\Mapping\\MappingException::duplicateDiscriminatorEntry", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_missingDiscriminatorMap", "name": "Doctrine\\ORM\\Mapping\\MappingException::missingDiscriminatorMap", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_missingDiscriminatorColumn", "name": "Doctrine\\ORM\\Mapping\\MappingException::missingDiscriminatorColumn", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_invalidDiscriminatorColumnType", "name": "Doctrine\\ORM\\Mapping\\MappingException::invalidDiscriminatorColumnType", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_nameIsMandatoryForDiscriminatorColumns", "name": "Doctrine\\ORM\\Mapping\\MappingException::nameIsMandatoryForDiscriminatorColumns", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_cannotVersionIdField", "name": "Doctrine\\ORM\\Mapping\\MappingException::cannotVersionIdField", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_sqlConversionNotAllowedForIdentifiers", "name": "Doctrine\\ORM\\Mapping\\MappingException::sqlConversionNotAllowedForIdentifiers", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_duplicateColumnName", "name": "Doctrine\\ORM\\Mapping\\MappingException::duplicateColumnName", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_illegalToManyAssociationOnMappedSuperclass", "name": "Doctrine\\ORM\\Mapping\\MappingException::illegalToManyAssociationOnMappedSuperclass", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_cannotMapCompositePrimaryKeyEntitiesAsForeignId", "name": "Doctrine\\ORM\\Mapping\\MappingException::cannotMapCompositePrimaryKeyEntitiesAsForeignId", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_noSingleAssociationJoinColumnFound", "name": "Doctrine\\ORM\\Mapping\\MappingException::noSingleAssociationJoinColumnFound", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_noFieldNameFoundForColumn", "name": "Doctrine\\ORM\\Mapping\\MappingException::noFieldNameFoundForColumn", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_illegalOrphanRemovalOnIdentifierAssociation", "name": "Doctrine\\ORM\\Mapping\\MappingException::illegalOrphanRemovalOnIdentifierAssociation", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_illegalOrphanRemoval", "name": "Doctrine\\ORM\\Mapping\\MappingException::illegalOrphanRemoval", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_illegalInverseIdentifierAssociation", "name": "Doctrine\\ORM\\Mapping\\MappingException::illegalInverseIdentifierAssociation", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_illegalToManyIdentifierAssociation", "name": "Doctrine\\ORM\\Mapping\\MappingException::illegalToManyIdentifierAssociation", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_noInheritanceOnMappedSuperClass", "name": "Doctrine\\ORM\\Mapping\\MappingException::noInheritanceOnMappedSuperClass", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_mappedClassNotPartOfDiscriminatorMap", "name": "Doctrine\\ORM\\Mapping\\MappingException::mappedClassNotPartOfDiscriminatorMap", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_lifecycleCallbackMethodNotFound", "name": "Doctrine\\ORM\\Mapping\\MappingException::lifecycleCallbackMethodNotFound", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_entityListenerClassNotFound", "name": "Doctrine\\ORM\\Mapping\\MappingException::entityListenerClassNotFound", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_entityListenerMethodNotFound", "name": "Doctrine\\ORM\\Mapping\\MappingException::entityListenerMethodNotFound", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_invalidFetchMode", "name": "Doctrine\\ORM\\Mapping\\MappingException::invalidFetchMode", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_compositeKeyAssignedIdGeneratorRequired", "name": "Doctrine\\ORM\\Mapping\\MappingException::compositeKeyAssignedIdGeneratorRequired", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_invalidTargetEntityClass", "name": "Doctrine\\ORM\\Mapping\\MappingException::invalidTargetEntityClass", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_invalidCascadeOption", "name": "Doctrine\\ORM\\Mapping\\MappingException::invalidCascadeOption", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\MappingException", "fromLink": "Doctrine/ORM/Mapping/MappingException.html", "link": "Doctrine/ORM/Mapping/MappingException.html#method_missingSequenceName", "name": "Doctrine\\ORM\\Mapping\\MappingException::missingSequenceName", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/NamedNativeQueries.html", "name": "Doctrine\\ORM\\Mapping\\NamedNativeQueries", "doc": "&quot;Is used to specify an array of native SQL named queries.&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/NamedNativeQuery.html", "name": "Doctrine\\ORM\\Mapping\\NamedNativeQuery", "doc": "&quot;Is used to specify a native SQL named query.&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/NamedQueries.html", "name": "Doctrine\\ORM\\Mapping\\NamedQueries", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/NamedQuery.html", "name": "Doctrine\\ORM\\Mapping\\NamedQuery", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/NamingStrategy.html", "name": "Doctrine\\ORM\\Mapping\\NamingStrategy", "doc": "&quot;A set of rules for determining the physical column and table names&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\NamingStrategy", "fromLink": "Doctrine/ORM/Mapping/NamingStrategy.html", "link": "Doctrine/ORM/Mapping/NamingStrategy.html#method_classToTableName", "name": "Doctrine\\ORM\\Mapping\\NamingStrategy::classToTableName", "doc": "&quot;Returns a table name for an entity class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\NamingStrategy", "fromLink": "Doctrine/ORM/Mapping/NamingStrategy.html", "link": "Doctrine/ORM/Mapping/NamingStrategy.html#method_propertyToColumnName", "name": "Doctrine\\ORM\\Mapping\\NamingStrategy::propertyToColumnName", "doc": "&quot;Returns a column name for a property.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\NamingStrategy", "fromLink": "Doctrine/ORM/Mapping/NamingStrategy.html", "link": "Doctrine/ORM/Mapping/NamingStrategy.html#method_referenceColumnName", "name": "Doctrine\\ORM\\Mapping\\NamingStrategy::referenceColumnName", "doc": "&quot;Returns the default reference column name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\NamingStrategy", "fromLink": "Doctrine/ORM/Mapping/NamingStrategy.html", "link": "Doctrine/ORM/Mapping/NamingStrategy.html#method_joinColumnName", "name": "Doctrine\\ORM\\Mapping\\NamingStrategy::joinColumnName", "doc": "&quot;Returns a join column name for a property.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\NamingStrategy", "fromLink": "Doctrine/ORM/Mapping/NamingStrategy.html", "link": "Doctrine/ORM/Mapping/NamingStrategy.html#method_joinTableName", "name": "Doctrine\\ORM\\Mapping\\NamingStrategy::joinTableName", "doc": "&quot;Returns a join table name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\NamingStrategy", "fromLink": "Doctrine/ORM/Mapping/NamingStrategy.html", "link": "Doctrine/ORM/Mapping/NamingStrategy.html#method_joinKeyColumnName", "name": "Doctrine\\ORM\\Mapping\\NamingStrategy::joinKeyColumnName", "doc": "&quot;Returns the foreign key column name for the given parameters.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/OneToMany.html", "name": "Doctrine\\ORM\\Mapping\\OneToMany", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/OneToOne.html", "name": "Doctrine\\ORM\\Mapping\\OneToOne", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/OrderBy.html", "name": "Doctrine\\ORM\\Mapping\\OrderBy", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/PostLoad.html", "name": "Doctrine\\ORM\\Mapping\\PostLoad", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/PostPersist.html", "name": "Doctrine\\ORM\\Mapping\\PostPersist", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/PostRemove.html", "name": "Doctrine\\ORM\\Mapping\\PostRemove", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/PostUpdate.html", "name": "Doctrine\\ORM\\Mapping\\PostUpdate", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/PreFlush.html", "name": "Doctrine\\ORM\\Mapping\\PreFlush", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/PrePersist.html", "name": "Doctrine\\ORM\\Mapping\\PrePersist", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/PreRemove.html", "name": "Doctrine\\ORM\\Mapping\\PreRemove", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/PreUpdate.html", "name": "Doctrine\\ORM\\Mapping\\PreUpdate", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/QuoteStrategy.html", "name": "Doctrine\\ORM\\Mapping\\QuoteStrategy", "doc": "&quot;A set of rules for determining the column, alias and table quotes.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\QuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/QuoteStrategy.html", "link": "Doctrine/ORM/Mapping/QuoteStrategy.html#method_getColumnName", "name": "Doctrine\\ORM\\Mapping\\QuoteStrategy::getColumnName", "doc": "&quot;Gets the (possibly quoted) column name for safe use in an SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\QuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/QuoteStrategy.html", "link": "Doctrine/ORM/Mapping/QuoteStrategy.html#method_getTableName", "name": "Doctrine\\ORM\\Mapping\\QuoteStrategy::getTableName", "doc": "&quot;Gets the (possibly quoted) primary table name for safe use in an SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\QuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/QuoteStrategy.html", "link": "Doctrine/ORM/Mapping/QuoteStrategy.html#method_getSequenceName", "name": "Doctrine\\ORM\\Mapping\\QuoteStrategy::getSequenceName", "doc": "&quot;Gets the (possibly quoted) sequence name for safe use in an SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\QuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/QuoteStrategy.html", "link": "Doctrine/ORM/Mapping/QuoteStrategy.html#method_getJoinTableName", "name": "Doctrine\\ORM\\Mapping\\QuoteStrategy::getJoinTableName", "doc": "&quot;Gets the (possibly quoted) name of the join table.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\QuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/QuoteStrategy.html", "link": "Doctrine/ORM/Mapping/QuoteStrategy.html#method_getJoinColumnName", "name": "Doctrine\\ORM\\Mapping\\QuoteStrategy::getJoinColumnName", "doc": "&quot;Gets the (possibly quoted) join column name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\QuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/QuoteStrategy.html", "link": "Doctrine/ORM/Mapping/QuoteStrategy.html#method_getReferencedJoinColumnName", "name": "Doctrine\\ORM\\Mapping\\QuoteStrategy::getReferencedJoinColumnName", "doc": "&quot;Gets the (possibly quoted) join column name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\QuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/QuoteStrategy.html", "link": "Doctrine/ORM/Mapping/QuoteStrategy.html#method_getIdentifierColumnNames", "name": "Doctrine\\ORM\\Mapping\\QuoteStrategy::getIdentifierColumnNames", "doc": "&quot;Gets the (possibly quoted) identifier column names for safe use in an SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\QuoteStrategy", "fromLink": "Doctrine/ORM/Mapping/QuoteStrategy.html", "link": "Doctrine/ORM/Mapping/QuoteStrategy.html#method_getColumnAlias", "name": "Doctrine\\ORM\\Mapping\\QuoteStrategy::getColumnAlias", "doc": "&quot;Gets the column alias.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/SequenceGenerator.html", "name": "Doctrine\\ORM\\Mapping\\SequenceGenerator", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/SqlResultSetMapping.html", "name": "Doctrine\\ORM\\Mapping\\SqlResultSetMapping", "doc": "&quot;The SqlResultSetMapping annotation is used to specify the mapping of the result of a native SQL query.&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/SqlResultSetMappings.html", "name": "Doctrine\\ORM\\Mapping\\SqlResultSetMappings", "doc": "&quot;Is used to specify an array of mappings.&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/Table.html", "name": "Doctrine\\ORM\\Mapping\\Table", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/UnderscoreNamingStrategy.html", "name": "Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy", "doc": "&quot;Naming strategy implementing the underscore naming convention.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy", "fromLink": "Doctrine/ORM/Mapping/UnderscoreNamingStrategy.html", "link": "Doctrine/ORM/Mapping/UnderscoreNamingStrategy.html#method___construct", "name": "Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy::__construct", "doc": "&quot;Underscore naming strategy construct.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy", "fromLink": "Doctrine/ORM/Mapping/UnderscoreNamingStrategy.html", "link": "Doctrine/ORM/Mapping/UnderscoreNamingStrategy.html#method_getCase", "name": "Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy::getCase", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy", "fromLink": "Doctrine/ORM/Mapping/UnderscoreNamingStrategy.html", "link": "Doctrine/ORM/Mapping/UnderscoreNamingStrategy.html#method_setCase", "name": "Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy::setCase", "doc": "&quot;Sets string case CASE_LOWER | CASE_UPPER.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy", "fromLink": "Doctrine/ORM/Mapping/UnderscoreNamingStrategy.html", "link": "Doctrine/ORM/Mapping/UnderscoreNamingStrategy.html#method_classToTableName", "name": "Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy::classToTableName", "doc": "&quot;Returns a table name for an entity class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy", "fromLink": "Doctrine/ORM/Mapping/UnderscoreNamingStrategy.html", "link": "Doctrine/ORM/Mapping/UnderscoreNamingStrategy.html#method_propertyToColumnName", "name": "Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy::propertyToColumnName", "doc": "&quot;Returns a column name for a property.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy", "fromLink": "Doctrine/ORM/Mapping/UnderscoreNamingStrategy.html", "link": "Doctrine/ORM/Mapping/UnderscoreNamingStrategy.html#method_referenceColumnName", "name": "Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy::referenceColumnName", "doc": "&quot;Returns the default reference column name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy", "fromLink": "Doctrine/ORM/Mapping/UnderscoreNamingStrategy.html", "link": "Doctrine/ORM/Mapping/UnderscoreNamingStrategy.html#method_joinColumnName", "name": "Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy::joinColumnName", "doc": "&quot;Returns a join column name for a property.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy", "fromLink": "Doctrine/ORM/Mapping/UnderscoreNamingStrategy.html", "link": "Doctrine/ORM/Mapping/UnderscoreNamingStrategy.html#method_joinTableName", "name": "Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy::joinTableName", "doc": "&quot;Returns a join table name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy", "fromLink": "Doctrine/ORM/Mapping/UnderscoreNamingStrategy.html", "link": "Doctrine/ORM/Mapping/UnderscoreNamingStrategy.html#method_joinKeyColumnName", "name": "Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy::joinKeyColumnName", "doc": "&quot;Returns the foreign key column name for the given parameters.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/UniqueConstraint.html", "name": "Doctrine\\ORM\\Mapping\\UniqueConstraint", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Mapping", "fromLink": "Doctrine/ORM/Mapping.html", "link": "Doctrine/ORM/Mapping/Version.html", "name": "Doctrine\\ORM\\Mapping\\Version", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM", "fromLink": "Doctrine/ORM.html", "link": "Doctrine/ORM/NativeQuery.html", "name": "Doctrine\\ORM\\NativeQuery", "doc": "&quot;Represents a native SQL query.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\NativeQuery", "fromLink": "Doctrine/ORM/NativeQuery.html", "link": "Doctrine/ORM/NativeQuery.html#method_setSQL", "name": "Doctrine\\ORM\\NativeQuery::setSQL", "doc": "&quot;Sets the SQL of the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\NativeQuery", "fromLink": "Doctrine/ORM/NativeQuery.html", "link": "Doctrine/ORM/NativeQuery.html#method_getSQL", "name": "Doctrine\\ORM\\NativeQuery::getSQL", "doc": "&quot;Gets the SQL query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\NativeQuery", "fromLink": "Doctrine/ORM/NativeQuery.html", "link": "Doctrine/ORM/NativeQuery.html#method__doExecute", "name": "Doctrine\\ORM\\NativeQuery::_doExecute", "doc": "&quot;Executes the query and returns a the resulting Statement object.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM", "fromLink": "Doctrine/ORM.html", "link": "Doctrine/ORM/NoResultException.html", "name": "Doctrine\\ORM\\NoResultException", "doc": "&quot;Exception thrown when an ORM query unexpectedly does not return any results.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\NoResultException", "fromLink": "Doctrine/ORM/NoResultException.html", "link": "Doctrine/ORM/NoResultException.html#method___construct", "name": "Doctrine\\ORM\\NoResultException::__construct", "doc": "&quot;Constructor.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM", "fromLink": "Doctrine/ORM.html", "link": "Doctrine/ORM/NonUniqueResultException.html", "name": "Doctrine\\ORM\\NonUniqueResultException", "doc": "&quot;Exception thrown when an ORM query unexpectedly returns more than one result.&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM", "fromLink": "Doctrine/ORM.html", "link": "Doctrine/ORM/ORMException.html", "name": "Doctrine\\ORM\\ORMException", "doc": "&quot;Base exception class for all ORM exceptions.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\ORMException", "fromLink": "Doctrine/ORM/ORMException.html", "link": "Doctrine/ORM/ORMException.html#method_missingMappingDriverImpl", "name": "Doctrine\\ORM\\ORMException::missingMappingDriverImpl", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMException", "fromLink": "Doctrine/ORM/ORMException.html", "link": "Doctrine/ORM/ORMException.html#method_namedQueryNotFound", "name": "Doctrine\\ORM\\ORMException::namedQueryNotFound", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMException", "fromLink": "Doctrine/ORM/ORMException.html", "link": "Doctrine/ORM/ORMException.html#method_namedNativeQueryNotFound", "name": "Doctrine\\ORM\\ORMException::namedNativeQueryNotFound", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMException", "fromLink": "Doctrine/ORM/ORMException.html", "link": "Doctrine/ORM/ORMException.html#method_entityMissingForeignAssignedId", "name": "Doctrine\\ORM\\ORMException::entityMissingForeignAssignedId", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMException", "fromLink": "Doctrine/ORM/ORMException.html", "link": "Doctrine/ORM/ORMException.html#method_entityMissingAssignedIdForField", "name": "Doctrine\\ORM\\ORMException::entityMissingAssignedIdForField", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMException", "fromLink": "Doctrine/ORM/ORMException.html", "link": "Doctrine/ORM/ORMException.html#method_unrecognizedField", "name": "Doctrine\\ORM\\ORMException::unrecognizedField", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMException", "fromLink": "Doctrine/ORM/ORMException.html", "link": "Doctrine/ORM/ORMException.html#method_invalidOrientation", "name": "Doctrine\\ORM\\ORMException::invalidOrientation", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMException", "fromLink": "Doctrine/ORM/ORMException.html", "link": "Doctrine/ORM/ORMException.html#method_invalidFlushMode", "name": "Doctrine\\ORM\\ORMException::invalidFlushMode", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMException", "fromLink": "Doctrine/ORM/ORMException.html", "link": "Doctrine/ORM/ORMException.html#method_entityManagerClosed", "name": "Doctrine\\ORM\\ORMException::entityManagerClosed", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMException", "fromLink": "Doctrine/ORM/ORMException.html", "link": "Doctrine/ORM/ORMException.html#method_invalidHydrationMode", "name": "Doctrine\\ORM\\ORMException::invalidHydrationMode", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMException", "fromLink": "Doctrine/ORM/ORMException.html", "link": "Doctrine/ORM/ORMException.html#method_mismatchedEventManager", "name": "Doctrine\\ORM\\ORMException::mismatchedEventManager", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMException", "fromLink": "Doctrine/ORM/ORMException.html", "link": "Doctrine/ORM/ORMException.html#method_findByRequiresParameter", "name": "Doctrine\\ORM\\ORMException::findByRequiresParameter", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMException", "fromLink": "Doctrine/ORM/ORMException.html", "link": "Doctrine/ORM/ORMException.html#method_invalidFindByCall", "name": "Doctrine\\ORM\\ORMException::invalidFindByCall", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMException", "fromLink": "Doctrine/ORM/ORMException.html", "link": "Doctrine/ORM/ORMException.html#method_invalidFindByInverseAssociation", "name": "Doctrine\\ORM\\ORMException::invalidFindByInverseAssociation", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMException", "fromLink": "Doctrine/ORM/ORMException.html", "link": "Doctrine/ORM/ORMException.html#method_invalidResultCacheDriver", "name": "Doctrine\\ORM\\ORMException::invalidResultCacheDriver", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMException", "fromLink": "Doctrine/ORM/ORMException.html", "link": "Doctrine/ORM/ORMException.html#method_notSupported", "name": "Doctrine\\ORM\\ORMException::notSupported", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMException", "fromLink": "Doctrine/ORM/ORMException.html", "link": "Doctrine/ORM/ORMException.html#method_queryCacheNotConfigured", "name": "Doctrine\\ORM\\ORMException::queryCacheNotConfigured", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMException", "fromLink": "Doctrine/ORM/ORMException.html", "link": "Doctrine/ORM/ORMException.html#method_metadataCacheNotConfigured", "name": "Doctrine\\ORM\\ORMException::metadataCacheNotConfigured", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMException", "fromLink": "Doctrine/ORM/ORMException.html", "link": "Doctrine/ORM/ORMException.html#method_proxyClassesAlwaysRegenerating", "name": "Doctrine\\ORM\\ORMException::proxyClassesAlwaysRegenerating", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMException", "fromLink": "Doctrine/ORM/ORMException.html", "link": "Doctrine/ORM/ORMException.html#method_unknownEntityNamespace", "name": "Doctrine\\ORM\\ORMException::unknownEntityNamespace", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMException", "fromLink": "Doctrine/ORM/ORMException.html", "link": "Doctrine/ORM/ORMException.html#method_invalidEntityRepository", "name": "Doctrine\\ORM\\ORMException::invalidEntityRepository", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMException", "fromLink": "Doctrine/ORM/ORMException.html", "link": "Doctrine/ORM/ORMException.html#method_missingIdentifierField", "name": "Doctrine\\ORM\\ORMException::missingIdentifierField", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMException", "fromLink": "Doctrine/ORM/ORMException.html", "link": "Doctrine/ORM/ORMException.html#method_overwriteInternalDQLFunctionNotAllowed", "name": "Doctrine\\ORM\\ORMException::overwriteInternalDQLFunctionNotAllowed", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM", "fromLink": "Doctrine/ORM.html", "link": "Doctrine/ORM/ORMInvalidArgumentException.html", "name": "Doctrine\\ORM\\ORMInvalidArgumentException", "doc": "&quot;Contains exception messages for all invalid lifecycle state exceptions inside UnitOfWork&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\ORMInvalidArgumentException", "fromLink": "Doctrine/ORM/ORMInvalidArgumentException.html", "link": "Doctrine/ORM/ORMInvalidArgumentException.html#method_scheduleInsertForManagedEntity", "name": "Doctrine\\ORM\\ORMInvalidArgumentException::scheduleInsertForManagedEntity", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMInvalidArgumentException", "fromLink": "Doctrine/ORM/ORMInvalidArgumentException.html", "link": "Doctrine/ORM/ORMInvalidArgumentException.html#method_scheduleInsertForRemovedEntity", "name": "Doctrine\\ORM\\ORMInvalidArgumentException::scheduleInsertForRemovedEntity", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMInvalidArgumentException", "fromLink": "Doctrine/ORM/ORMInvalidArgumentException.html", "link": "Doctrine/ORM/ORMInvalidArgumentException.html#method_scheduleInsertTwice", "name": "Doctrine\\ORM\\ORMInvalidArgumentException::scheduleInsertTwice", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMInvalidArgumentException", "fromLink": "Doctrine/ORM/ORMInvalidArgumentException.html", "link": "Doctrine/ORM/ORMInvalidArgumentException.html#method_entityWithoutIdentity", "name": "Doctrine\\ORM\\ORMInvalidArgumentException::entityWithoutIdentity", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMInvalidArgumentException", "fromLink": "Doctrine/ORM/ORMInvalidArgumentException.html", "link": "Doctrine/ORM/ORMInvalidArgumentException.html#method_readOnlyRequiresManagedEntity", "name": "Doctrine\\ORM\\ORMInvalidArgumentException::readOnlyRequiresManagedEntity", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMInvalidArgumentException", "fromLink": "Doctrine/ORM/ORMInvalidArgumentException.html", "link": "Doctrine/ORM/ORMInvalidArgumentException.html#method_newEntityFoundThroughRelationship", "name": "Doctrine\\ORM\\ORMInvalidArgumentException::newEntityFoundThroughRelationship", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMInvalidArgumentException", "fromLink": "Doctrine/ORM/ORMInvalidArgumentException.html", "link": "Doctrine/ORM/ORMInvalidArgumentException.html#method_detachedEntityFoundThroughRelationship", "name": "Doctrine\\ORM\\ORMInvalidArgumentException::detachedEntityFoundThroughRelationship", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMInvalidArgumentException", "fromLink": "Doctrine/ORM/ORMInvalidArgumentException.html", "link": "Doctrine/ORM/ORMInvalidArgumentException.html#method_entityNotManaged", "name": "Doctrine\\ORM\\ORMInvalidArgumentException::entityNotManaged", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMInvalidArgumentException", "fromLink": "Doctrine/ORM/ORMInvalidArgumentException.html", "link": "Doctrine/ORM/ORMInvalidArgumentException.html#method_entityHasNoIdentity", "name": "Doctrine\\ORM\\ORMInvalidArgumentException::entityHasNoIdentity", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMInvalidArgumentException", "fromLink": "Doctrine/ORM/ORMInvalidArgumentException.html", "link": "Doctrine/ORM/ORMInvalidArgumentException.html#method_entityIsRemoved", "name": "Doctrine\\ORM\\ORMInvalidArgumentException::entityIsRemoved", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMInvalidArgumentException", "fromLink": "Doctrine/ORM/ORMInvalidArgumentException.html", "link": "Doctrine/ORM/ORMInvalidArgumentException.html#method_detachedEntityCannot", "name": "Doctrine\\ORM\\ORMInvalidArgumentException::detachedEntityCannot", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMInvalidArgumentException", "fromLink": "Doctrine/ORM/ORMInvalidArgumentException.html", "link": "Doctrine/ORM/ORMInvalidArgumentException.html#method_invalidObject", "name": "Doctrine\\ORM\\ORMInvalidArgumentException::invalidObject", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMInvalidArgumentException", "fromLink": "Doctrine/ORM/ORMInvalidArgumentException.html", "link": "Doctrine/ORM/ORMInvalidArgumentException.html#method_invalidCompositeIdentifier", "name": "Doctrine\\ORM\\ORMInvalidArgumentException::invalidCompositeIdentifier", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\ORMInvalidArgumentException", "fromLink": "Doctrine/ORM/ORMInvalidArgumentException.html", "link": "Doctrine/ORM/ORMInvalidArgumentException.html#method_invalidIdentifierBindingEntity", "name": "Doctrine\\ORM\\ORMInvalidArgumentException::invalidIdentifierBindingEntity", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM", "fromLink": "Doctrine/ORM.html", "link": "Doctrine/ORM/OptimisticLockException.html", "name": "Doctrine\\ORM\\OptimisticLockException", "doc": "&quot;An OptimisticLockException is thrown when a version check on an object\nthat uses optimistic locking through a version field fails.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\OptimisticLockException", "fromLink": "Doctrine/ORM/OptimisticLockException.html", "link": "Doctrine/ORM/OptimisticLockException.html#method___construct", "name": "Doctrine\\ORM\\OptimisticLockException::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\OptimisticLockException", "fromLink": "Doctrine/ORM/OptimisticLockException.html", "link": "Doctrine/ORM/OptimisticLockException.html#method_getEntity", "name": "Doctrine\\ORM\\OptimisticLockException::getEntity", "doc": "&quot;Gets the entity that caused the exception.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\OptimisticLockException", "fromLink": "Doctrine/ORM/OptimisticLockException.html", "link": "Doctrine/ORM/OptimisticLockException.html#method_lockFailed", "name": "Doctrine\\ORM\\OptimisticLockException::lockFailed", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\OptimisticLockException", "fromLink": "Doctrine/ORM/OptimisticLockException.html", "link": "Doctrine/ORM/OptimisticLockException.html#method_lockFailedVersionMismatch", "name": "Doctrine\\ORM\\OptimisticLockException::lockFailedVersionMismatch", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\OptimisticLockException", "fromLink": "Doctrine/ORM/OptimisticLockException.html", "link": "Doctrine/ORM/OptimisticLockException.html#method_notVersioned", "name": "Doctrine\\ORM\\OptimisticLockException::notVersioned", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM", "fromLink": "Doctrine/ORM.html", "link": "Doctrine/ORM/PersistentCollection.html", "name": "Doctrine\\ORM\\PersistentCollection", "doc": "&quot;A PersistentCollection represents a collection of elements that have persistent state.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method___construct", "name": "Doctrine\\ORM\\PersistentCollection::__construct", "doc": "&quot;Creates a new persistent collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_setOwner", "name": "Doctrine\\ORM\\PersistentCollection::setOwner", "doc": "&quot;INTERNAL:\nSets the collection&#039;s owning entity together with the AssociationMapping that\ndescribes the association between the owner and the elements of the collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_getOwner", "name": "Doctrine\\ORM\\PersistentCollection::getOwner", "doc": "&quot;INTERNAL:\nGets the collection owner.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_getTypeClass", "name": "Doctrine\\ORM\\PersistentCollection::getTypeClass", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_hydrateAdd", "name": "Doctrine\\ORM\\PersistentCollection::hydrateAdd", "doc": "&quot;INTERNAL:\nAdds an element to a collection during hydration. This will automatically\ncomplete bidirectional associations in the case of a one-to-many association.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_hydrateSet", "name": "Doctrine\\ORM\\PersistentCollection::hydrateSet", "doc": "&quot;INTERNAL:\nSets a keyed element in the collection during hydration.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_initialize", "name": "Doctrine\\ORM\\PersistentCollection::initialize", "doc": "&quot;Initializes the collection by loading its contents from the database\nif the collection is not yet initialized.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_takeSnapshot", "name": "Doctrine\\ORM\\PersistentCollection::takeSnapshot", "doc": "&quot;INTERNAL:\nTells this collection to take a snapshot of its current state.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_getSnapshot", "name": "Doctrine\\ORM\\PersistentCollection::getSnapshot", "doc": "&quot;INTERNAL:\nReturns the last snapshot of the elements in the collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_getDeleteDiff", "name": "Doctrine\\ORM\\PersistentCollection::getDeleteDiff", "doc": "&quot;INTERNAL:\ngetDeleteDiff&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_getInsertDiff", "name": "Doctrine\\ORM\\PersistentCollection::getInsertDiff", "doc": "&quot;INTERNAL:\ngetInsertDiff&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_getMapping", "name": "Doctrine\\ORM\\PersistentCollection::getMapping", "doc": "&quot;INTERNAL: Gets the association mapping of the collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_isDirty", "name": "Doctrine\\ORM\\PersistentCollection::isDirty", "doc": "&quot;Gets a boolean flag indicating whether this collection is dirty which means\nits state needs to be synchronized with the database.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_setDirty", "name": "Doctrine\\ORM\\PersistentCollection::setDirty", "doc": "&quot;Sets a boolean flag, indicating whether this collection is dirty.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_setInitialized", "name": "Doctrine\\ORM\\PersistentCollection::setInitialized", "doc": "&quot;Sets the initialized flag of the collection, forcing it into that state.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_isInitialized", "name": "Doctrine\\ORM\\PersistentCollection::isInitialized", "doc": "&quot;Checks whether this collection has been initialized.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_first", "name": "Doctrine\\ORM\\PersistentCollection::first", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_last", "name": "Doctrine\\ORM\\PersistentCollection::last", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_remove", "name": "Doctrine\\ORM\\PersistentCollection::remove", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_removeElement", "name": "Doctrine\\ORM\\PersistentCollection::removeElement", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_containsKey", "name": "Doctrine\\ORM\\PersistentCollection::containsKey", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_contains", "name": "Doctrine\\ORM\\PersistentCollection::contains", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_exists", "name": "Doctrine\\ORM\\PersistentCollection::exists", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_indexOf", "name": "Doctrine\\ORM\\PersistentCollection::indexOf", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_get", "name": "Doctrine\\ORM\\PersistentCollection::get", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_getKeys", "name": "Doctrine\\ORM\\PersistentCollection::getKeys", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_getValues", "name": "Doctrine\\ORM\\PersistentCollection::getValues", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_count", "name": "Doctrine\\ORM\\PersistentCollection::count", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_set", "name": "Doctrine\\ORM\\PersistentCollection::set", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_add", "name": "Doctrine\\ORM\\PersistentCollection::add", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_isEmpty", "name": "Doctrine\\ORM\\PersistentCollection::isEmpty", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_getIterator", "name": "Doctrine\\ORM\\PersistentCollection::getIterator", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_map", "name": "Doctrine\\ORM\\PersistentCollection::map", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_filter", "name": "Doctrine\\ORM\\PersistentCollection::filter", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_forAll", "name": "Doctrine\\ORM\\PersistentCollection::forAll", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_partition", "name": "Doctrine\\ORM\\PersistentCollection::partition", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_toArray", "name": "Doctrine\\ORM\\PersistentCollection::toArray", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_clear", "name": "Doctrine\\ORM\\PersistentCollection::clear", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method___sleep", "name": "Doctrine\\ORM\\PersistentCollection::__sleep", "doc": "&quot;Called by PHP when this collection is serialized. Ensures that only the\nelements are properly serialized.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_offsetExists", "name": "Doctrine\\ORM\\PersistentCollection::offsetExists", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_offsetGet", "name": "Doctrine\\ORM\\PersistentCollection::offsetGet", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_offsetSet", "name": "Doctrine\\ORM\\PersistentCollection::offsetSet", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_offsetUnset", "name": "Doctrine\\ORM\\PersistentCollection::offsetUnset", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_key", "name": "Doctrine\\ORM\\PersistentCollection::key", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_current", "name": "Doctrine\\ORM\\PersistentCollection::current", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_next", "name": "Doctrine\\ORM\\PersistentCollection::next", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_unwrap", "name": "Doctrine\\ORM\\PersistentCollection::unwrap", "doc": "&quot;Retrieves the wrapped Collection instance.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_slice", "name": "Doctrine\\ORM\\PersistentCollection::slice", "doc": "&quot;Extracts a slice of $length elements starting at position $offset from the Collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method___clone", "name": "Doctrine\\ORM\\PersistentCollection::__clone", "doc": "&quot;Cleans up internal state of cloned persistent collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\PersistentCollection", "fromLink": "Doctrine/ORM/PersistentCollection.html", "link": "Doctrine/ORM/PersistentCollection.html#method_matching", "name": "Doctrine\\ORM\\PersistentCollection::matching", "doc": "&quot;Selects all elements from a selectable that match the expression and\nreturn a new collection containing these elements.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Persisters", "fromLink": "Doctrine/ORM/Persisters.html", "link": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html", "name": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister", "doc": "&quot;Base class for all collection persisters.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister", "fromLink": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html", "link": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html#method___construct", "name": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister::__construct", "doc": "&quot;Initializes a new instance of a class derived from AbstractCollectionPersister.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister", "fromLink": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html", "link": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html#method_delete", "name": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister::delete", "doc": "&quot;Deletes the persistent state represented by the given collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister", "fromLink": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html", "link": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html#method_getDeleteSQL", "name": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister::getDeleteSQL", "doc": "&quot;Gets the SQL statement for deleting the given collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister", "fromLink": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html", "link": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html#method_getDeleteSQLParameters", "name": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister::getDeleteSQLParameters", "doc": "&quot;Gets the SQL parameters for the corresponding SQL statement to delete\nthe given collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister", "fromLink": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html", "link": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html#method_update", "name": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister::update", "doc": "&quot;Updates the given collection, synchronizing its state with the database\nby inserting, updating and deleting individual elements.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister", "fromLink": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html", "link": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html#method_deleteRows", "name": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister::deleteRows", "doc": "&quot;Deletes rows.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister", "fromLink": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html", "link": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html#method_insertRows", "name": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister::insertRows", "doc": "&quot;Inserts rows.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister", "fromLink": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html", "link": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html#method_count", "name": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister::count", "doc": "&quot;Counts the size of this persistent collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister", "fromLink": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html", "link": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html#method_slice", "name": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister::slice", "doc": "&quot;Slices elements.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister", "fromLink": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html", "link": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html#method_contains", "name": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister::contains", "doc": "&quot;Checks for existence of an element.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister", "fromLink": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html", "link": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html#method_containsKey", "name": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister::containsKey", "doc": "&quot;Checks for existence of a key.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister", "fromLink": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html", "link": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html#method_removeElement", "name": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister::removeElement", "doc": "&quot;Removes an element.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister", "fromLink": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html", "link": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html#method_removeKey", "name": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister::removeKey", "doc": "&quot;Removes an element by key.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister", "fromLink": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html", "link": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html#method_get", "name": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister::get", "doc": "&quot;Gets an element by key.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister", "fromLink": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html", "link": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html#method_getDeleteRowSQL", "name": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister::getDeleteRowSQL", "doc": "&quot;Gets the SQL statement used for deleting a row from the collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister", "fromLink": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html", "link": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html#method_getDeleteRowSQLParameters", "name": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister::getDeleteRowSQLParameters", "doc": "&quot;Gets the SQL parameters for the corresponding SQL statement to delete the given\nelement from the given collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister", "fromLink": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html", "link": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html#method_getUpdateRowSQL", "name": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister::getUpdateRowSQL", "doc": "&quot;Gets the SQL statement used for updating a row in the collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister", "fromLink": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html", "link": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html#method_getInsertRowSQL", "name": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister::getInsertRowSQL", "doc": "&quot;Gets the SQL statement used for inserting a row in the collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister", "fromLink": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html", "link": "Doctrine/ORM/Persisters/AbstractCollectionPersister.html#method_getInsertRowSQLParameters", "name": "Doctrine\\ORM\\Persisters\\AbstractCollectionPersister::getInsertRowSQLParameters", "doc": "&quot;Gets the SQL parameters for the corresponding SQL statement to insert the given\nelement of the given collection into the database.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Persisters", "fromLink": "Doctrine/ORM/Persisters.html", "link": "Doctrine/ORM/Persisters/AbstractEntityInheritancePersister.html", "name": "Doctrine\\ORM\\Persisters\\AbstractEntityInheritancePersister", "doc": "&quot;Base class for entity persisters that implement a certain inheritance mapping strategy.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\AbstractEntityInheritancePersister", "fromLink": "Doctrine/ORM/Persisters/AbstractEntityInheritancePersister.html", "link": "Doctrine/ORM/Persisters/AbstractEntityInheritancePersister.html#method_prepareInsertData", "name": "Doctrine\\ORM\\Persisters\\AbstractEntityInheritancePersister::prepareInsertData", "doc": "&quot;Prepares the data changeset of a managed entity for database insertion (initial INSERT).&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\AbstractEntityInheritancePersister", "fromLink": "Doctrine/ORM/Persisters/AbstractEntityInheritancePersister.html", "link": "Doctrine/ORM/Persisters/AbstractEntityInheritancePersister.html#method_getDiscriminatorColumnTableName", "name": "Doctrine\\ORM\\Persisters\\AbstractEntityInheritancePersister::getDiscriminatorColumnTableName", "doc": "&quot;Gets the name of the table that contains the discriminator column.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\AbstractEntityInheritancePersister", "fromLink": "Doctrine/ORM/Persisters/AbstractEntityInheritancePersister.html", "link": "Doctrine/ORM/Persisters/AbstractEntityInheritancePersister.html#method_getSelectColumnSQL", "name": "Doctrine\\ORM\\Persisters\\AbstractEntityInheritancePersister::getSelectColumnSQL", "doc": "&quot;Gets the SQL snippet of a qualified column name for the given field name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\AbstractEntityInheritancePersister", "fromLink": "Doctrine/ORM/Persisters/AbstractEntityInheritancePersister.html", "link": "Doctrine/ORM/Persisters/AbstractEntityInheritancePersister.html#method_getSelectJoinColumnSQL", "name": "Doctrine\\ORM\\Persisters\\AbstractEntityInheritancePersister::getSelectJoinColumnSQL", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Persisters", "fromLink": "Doctrine/ORM/Persisters.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "doc": "&quot;A BasicEntityPersister maps an entity to a single table in a relational database.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method___construct", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::__construct", "doc": "&quot;Initializes a new &lt;tt&gt;BasicEntityPersister&lt;\/tt&gt; that uses the given EntityManager\nand persists instances of the class described by the given ClassMetadata descriptor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_getClassMetadata", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::getClassMetadata", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_addInsert", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::addInsert", "doc": "&quot;Adds an entity to the queued insertions.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_executeInserts", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::executeInserts", "doc": "&quot;Executes all queued entity insertions and returns any generated post-insert\nidentifiers that were created as a result of the insertions.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_assignDefaultVersionValue", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::assignDefaultVersionValue", "doc": "&quot;Retrieves the default version value which was created\nby the preceding INSERT statement and assigns it back in to the\nentities version field.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_fetchVersionValue", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::fetchVersionValue", "doc": "&quot;Fetches the current version value of a versioned entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_update", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::update", "doc": "&quot;Updates a managed entity. The entity is updated according to its current changeset\nin the running UnitOfWork. If there is no changeset, nothing is updated.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_updateTable", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::updateTable", "doc": "&quot;Performs an UPDATE statement for an entity on a specific table.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_deleteJoinTableRecords", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::deleteJoinTableRecords", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_delete", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::delete", "doc": "&quot;Deletes a managed entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_prepareUpdateData", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::prepareUpdateData", "doc": "&quot;Prepares the changeset of an entity for database insertion (UPDATE).&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_prepareInsertData", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::prepareInsertData", "doc": "&quot;Prepares the data changeset of a managed entity for database insertion (initial INSERT).&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_getOwningTable", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::getOwningTable", "doc": "&quot;Gets the name of the table that owns the column the given field is mapped to.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_load", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::load", "doc": "&quot;Loads an entity by a list of field criteria.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_loadOneToOneEntity", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::loadOneToOneEntity", "doc": "&quot;Loads an entity of this persister&#039;s mapped class as part of a single-valued\nassociation from another entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_refresh", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::refresh", "doc": "&quot;Refreshes a managed entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_loadCriteria", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::loadCriteria", "doc": "&quot;Loads Entities matching the given Criteria object.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_loadAll", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::loadAll", "doc": "&quot;Loads a list of entities by a list of field criteria.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_getManyToManyCollection", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::getManyToManyCollection", "doc": "&quot;Gets (sliced or full) elements of the given collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_loadManyToManyCollection", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::loadManyToManyCollection", "doc": "&quot;Loads a collection of entities of a many-to-many association.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_getSelectSQL", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::getSelectSQL", "doc": "&quot;Gets the SELECT SQL to select one or more entities by a set of field criteria.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_getOrderBySQL", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::getOrderBySQL", "doc": "&quot;Gets the ORDER BY SQL snippet for ordered collections.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_getSelectColumnsSQL", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::getSelectColumnsSQL", "doc": "&quot;Gets the SQL fragment with the list of columns to select when querying for\nan entity in this persister.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_getSelectColumnAssociationSQL", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::getSelectColumnAssociationSQL", "doc": "&quot;Gets the SQL join fragment used when selecting entities from an association.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_getSelectManyToManyJoinSQL", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::getSelectManyToManyJoinSQL", "doc": "&quot;Gets the SQL join fragment used when selecting entities from a\nmany-to-many association.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_getInsertSQL", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::getInsertSQL", "doc": "&quot;Gets the INSERT SQL used by the persister to persist a new entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_getInsertColumnList", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::getInsertColumnList", "doc": "&quot;Gets the list of columns to put in the INSERT SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_getSelectColumnSQL", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::getSelectColumnSQL", "doc": "&quot;Gets the SQL snippet of a qualified column name for the given field name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_getSQLTableAlias", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::getSQLTableAlias", "doc": "&quot;Gets the SQL table alias for the given class name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_lock", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::lock", "doc": "&quot;Locks all rows of this entity matching the given criteria with the specified pessimistic lock mode.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_getLockTablesSql", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::getLockTablesSql", "doc": "&quot;Gets the FROM and optionally JOIN conditions to lock the entity managed by this persister.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_getSelectConditionCriteriaSQL", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::getSelectConditionCriteriaSQL", "doc": "&quot;Gets the Select Where Condition from a Criteria object.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_getSelectConditionStatementSQL", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::getSelectConditionStatementSQL", "doc": "&quot;Gets the SQL WHERE condition for matching a field with a given value.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_getSelectConditionStatementColumnSQL", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::getSelectConditionStatementColumnSQL", "doc": "&quot;Builds the left-hand-side of a where condition statement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_getSelectConditionSQL", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::getSelectConditionSQL", "doc": "&quot;Gets the conditional SQL fragment used in the WHERE clause when selecting\nentities in this persister.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_getOneToManyCollection", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::getOneToManyCollection", "doc": "&quot;Returns an array with (sliced or full list) of elements in the specified collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_loadOneToManyCollection", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::loadOneToManyCollection", "doc": "&quot;Loads a collection of entities in a one-to-many association.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_exists", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::exists", "doc": "&quot;Checks whether the given managed entity exists in the database.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_getJoinSQLForJoinColumns", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::getJoinSQLForJoinColumns", "doc": "&quot;Generates the appropriate join SQL for the given join column.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_getSQLColumnAlias", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::getSQLColumnAlias", "doc": "&quot;Gets an SQL column alias for a column name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\BasicEntityPersister", "fromLink": "Doctrine/ORM/Persisters/BasicEntityPersister.html", "link": "Doctrine/ORM/Persisters/BasicEntityPersister.html#method_generateFilterConditionSQL", "name": "Doctrine\\ORM\\Persisters\\BasicEntityPersister::generateFilterConditionSQL", "doc": "&quot;Generates the filter SQL for a given entity and table alias.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Persisters", "fromLink": "Doctrine/ORM/Persisters.html", "link": "Doctrine/ORM/Persisters/ElementCollectionPersister.html", "name": "Doctrine\\ORM\\Persisters\\ElementCollectionPersister", "doc": "&quot;Persister for collections of basic elements \/ value types.&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Persisters", "fromLink": "Doctrine/ORM/Persisters.html", "link": "Doctrine/ORM/Persisters/JoinedSubclassPersister.html", "name": "Doctrine\\ORM\\Persisters\\JoinedSubclassPersister", "doc": "&quot;The joined subclass persister maps a single entity instance to several tables in the\ndatabase as it is defined by the &lt;tt&gt;Class Table Inheritance&lt;\/tt&gt; strategy.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\JoinedSubclassPersister", "fromLink": "Doctrine/ORM/Persisters/JoinedSubclassPersister.html", "link": "Doctrine/ORM/Persisters/JoinedSubclassPersister.html#method_getDiscriminatorColumnTableName", "name": "Doctrine\\ORM\\Persisters\\JoinedSubclassPersister::getDiscriminatorColumnTableName", "doc": "&quot;Gets the name of the table that contains the discriminator column.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\JoinedSubclassPersister", "fromLink": "Doctrine/ORM/Persisters/JoinedSubclassPersister.html", "link": "Doctrine/ORM/Persisters/JoinedSubclassPersister.html#method_getOwningTable", "name": "Doctrine\\ORM\\Persisters\\JoinedSubclassPersister::getOwningTable", "doc": "&quot;Gets the name of the table that owns the column the given field is mapped to.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\JoinedSubclassPersister", "fromLink": "Doctrine/ORM/Persisters/JoinedSubclassPersister.html", "link": "Doctrine/ORM/Persisters/JoinedSubclassPersister.html#method_executeInserts", "name": "Doctrine\\ORM\\Persisters\\JoinedSubclassPersister::executeInserts", "doc": "&quot;Executes all queued entity insertions and returns any generated post-insert\nidentifiers that were created as a result of the insertions.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\JoinedSubclassPersister", "fromLink": "Doctrine/ORM/Persisters/JoinedSubclassPersister.html", "link": "Doctrine/ORM/Persisters/JoinedSubclassPersister.html#method_update", "name": "Doctrine\\ORM\\Persisters\\JoinedSubclassPersister::update", "doc": "&quot;Updates a managed entity. The entity is updated according to its current changeset\nin the running UnitOfWork. If there is no changeset, nothing is updated.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\JoinedSubclassPersister", "fromLink": "Doctrine/ORM/Persisters/JoinedSubclassPersister.html", "link": "Doctrine/ORM/Persisters/JoinedSubclassPersister.html#method_delete", "name": "Doctrine\\ORM\\Persisters\\JoinedSubclassPersister::delete", "doc": "&quot;Deletes a managed entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\JoinedSubclassPersister", "fromLink": "Doctrine/ORM/Persisters/JoinedSubclassPersister.html", "link": "Doctrine/ORM/Persisters/JoinedSubclassPersister.html#method_getSelectSQL", "name": "Doctrine\\ORM\\Persisters\\JoinedSubclassPersister::getSelectSQL", "doc": "&quot;Gets the SELECT SQL to select one or more entities by a set of field criteria.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\JoinedSubclassPersister", "fromLink": "Doctrine/ORM/Persisters/JoinedSubclassPersister.html", "link": "Doctrine/ORM/Persisters/JoinedSubclassPersister.html#method_getLockTablesSql", "name": "Doctrine\\ORM\\Persisters\\JoinedSubclassPersister::getLockTablesSql", "doc": "&quot;Gets the FROM and optionally JOIN conditions to lock the entity managed by this persister.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\JoinedSubclassPersister", "fromLink": "Doctrine/ORM/Persisters/JoinedSubclassPersister.html", "link": "Doctrine/ORM/Persisters/JoinedSubclassPersister.html#method_getSelectColumnsSQL", "name": "Doctrine\\ORM\\Persisters\\JoinedSubclassPersister::getSelectColumnsSQL", "doc": "&quot;Ensure this method is never called. This persister overrides getSelectEntitiesSQL directly.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\JoinedSubclassPersister", "fromLink": "Doctrine/ORM/Persisters/JoinedSubclassPersister.html", "link": "Doctrine/ORM/Persisters/JoinedSubclassPersister.html#method_getInsertColumnList", "name": "Doctrine\\ORM\\Persisters\\JoinedSubclassPersister::getInsertColumnList", "doc": "&quot;Gets the list of columns to put in the INSERT SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\JoinedSubclassPersister", "fromLink": "Doctrine/ORM/Persisters/JoinedSubclassPersister.html", "link": "Doctrine/ORM/Persisters/JoinedSubclassPersister.html#method_assignDefaultVersionValue", "name": "Doctrine\\ORM\\Persisters\\JoinedSubclassPersister::assignDefaultVersionValue", "doc": "&quot;Retrieves the default version value which was created\nby the preceding INSERT statement and assigns it back in to the\nentities version field.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Persisters", "fromLink": "Doctrine/ORM/Persisters.html", "link": "Doctrine/ORM/Persisters/ManyToManyPersister.html", "name": "Doctrine\\ORM\\Persisters\\ManyToManyPersister", "doc": "&quot;Persister for many-to-many collections.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\ManyToManyPersister", "fromLink": "Doctrine/ORM/Persisters/ManyToManyPersister.html", "link": "Doctrine/ORM/Persisters/ManyToManyPersister.html#method_getDeleteRowSQL", "name": "Doctrine\\ORM\\Persisters\\ManyToManyPersister::getDeleteRowSQL", "doc": "&quot;Gets the SQL statement used for deleting a row from the collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\ManyToManyPersister", "fromLink": "Doctrine/ORM/Persisters/ManyToManyPersister.html", "link": "Doctrine/ORM/Persisters/ManyToManyPersister.html#method_getDeleteRowSQLParameters", "name": "Doctrine\\ORM\\Persisters\\ManyToManyPersister::getDeleteRowSQLParameters", "doc": "&quot;Gets the SQL parameters for the corresponding SQL statement to delete the given\nelement from the given collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\ManyToManyPersister", "fromLink": "Doctrine/ORM/Persisters/ManyToManyPersister.html", "link": "Doctrine/ORM/Persisters/ManyToManyPersister.html#method_getUpdateRowSQL", "name": "Doctrine\\ORM\\Persisters\\ManyToManyPersister::getUpdateRowSQL", "doc": "&quot;Gets the SQL statement used for updating a row in the collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\ManyToManyPersister", "fromLink": "Doctrine/ORM/Persisters/ManyToManyPersister.html", "link": "Doctrine/ORM/Persisters/ManyToManyPersister.html#method_getInsertRowSQL", "name": "Doctrine\\ORM\\Persisters\\ManyToManyPersister::getInsertRowSQL", "doc": "&quot;Gets the SQL statement used for inserting a row in the collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\ManyToManyPersister", "fromLink": "Doctrine/ORM/Persisters/ManyToManyPersister.html", "link": "Doctrine/ORM/Persisters/ManyToManyPersister.html#method_getInsertRowSQLParameters", "name": "Doctrine\\ORM\\Persisters\\ManyToManyPersister::getInsertRowSQLParameters", "doc": "&quot;Gets the SQL parameters for the corresponding SQL statement to insert the given\nelement of the given collection into the database.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\ManyToManyPersister", "fromLink": "Doctrine/ORM/Persisters/ManyToManyPersister.html", "link": "Doctrine/ORM/Persisters/ManyToManyPersister.html#method_getDeleteSQL", "name": "Doctrine\\ORM\\Persisters\\ManyToManyPersister::getDeleteSQL", "doc": "&quot;Gets the SQL statement for deleting the given collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\ManyToManyPersister", "fromLink": "Doctrine/ORM/Persisters/ManyToManyPersister.html", "link": "Doctrine/ORM/Persisters/ManyToManyPersister.html#method_getDeleteSQLParameters", "name": "Doctrine\\ORM\\Persisters\\ManyToManyPersister::getDeleteSQLParameters", "doc": "&quot;Gets the SQL parameters for the corresponding SQL statement to delete\nthe given collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\ManyToManyPersister", "fromLink": "Doctrine/ORM/Persisters/ManyToManyPersister.html", "link": "Doctrine/ORM/Persisters/ManyToManyPersister.html#method_count", "name": "Doctrine\\ORM\\Persisters\\ManyToManyPersister::count", "doc": "&quot;Counts the size of this persistent collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\ManyToManyPersister", "fromLink": "Doctrine/ORM/Persisters/ManyToManyPersister.html", "link": "Doctrine/ORM/Persisters/ManyToManyPersister.html#method_slice", "name": "Doctrine\\ORM\\Persisters\\ManyToManyPersister::slice", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\ManyToManyPersister", "fromLink": "Doctrine/ORM/Persisters/ManyToManyPersister.html", "link": "Doctrine/ORM/Persisters/ManyToManyPersister.html#method_contains", "name": "Doctrine\\ORM\\Persisters\\ManyToManyPersister::contains", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\ManyToManyPersister", "fromLink": "Doctrine/ORM/Persisters/ManyToManyPersister.html", "link": "Doctrine/ORM/Persisters/ManyToManyPersister.html#method_removeElement", "name": "Doctrine\\ORM\\Persisters\\ManyToManyPersister::removeElement", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\ManyToManyPersister", "fromLink": "Doctrine/ORM/Persisters/ManyToManyPersister.html", "link": "Doctrine/ORM/Persisters/ManyToManyPersister.html#method_getFilterSql", "name": "Doctrine\\ORM\\Persisters\\ManyToManyPersister::getFilterSql", "doc": "&quot;Generates the filter SQL for a given mapping.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\ManyToManyPersister", "fromLink": "Doctrine/ORM/Persisters/ManyToManyPersister.html", "link": "Doctrine/ORM/Persisters/ManyToManyPersister.html#method_generateFilterConditionSQL", "name": "Doctrine\\ORM\\Persisters\\ManyToManyPersister::generateFilterConditionSQL", "doc": "&quot;Generates the filter SQL for a given entity and table alias.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Persisters", "fromLink": "Doctrine/ORM/Persisters.html", "link": "Doctrine/ORM/Persisters/OneToManyPersister.html", "name": "Doctrine\\ORM\\Persisters\\OneToManyPersister", "doc": "&quot;Persister for one-to-many collections.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\OneToManyPersister", "fromLink": "Doctrine/ORM/Persisters/OneToManyPersister.html", "link": "Doctrine/ORM/Persisters/OneToManyPersister.html#method_get", "name": "Doctrine\\ORM\\Persisters\\OneToManyPersister::get", "doc": "&quot;Gets an element by key.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\OneToManyPersister", "fromLink": "Doctrine/ORM/Persisters/OneToManyPersister.html", "link": "Doctrine/ORM/Persisters/OneToManyPersister.html#method_getDeleteRowSQL", "name": "Doctrine\\ORM\\Persisters\\OneToManyPersister::getDeleteRowSQL", "doc": "&quot;Generates the SQL UPDATE that updates a particular row&#039;s foreign\nkey to null.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\OneToManyPersister", "fromLink": "Doctrine/ORM/Persisters/OneToManyPersister.html", "link": "Doctrine/ORM/Persisters/OneToManyPersister.html#method_getDeleteRowSQLParameters", "name": "Doctrine\\ORM\\Persisters\\OneToManyPersister::getDeleteRowSQLParameters", "doc": "&quot;Gets the SQL parameters for the corresponding SQL statement to delete the given\nelement from the given collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\OneToManyPersister", "fromLink": "Doctrine/ORM/Persisters/OneToManyPersister.html", "link": "Doctrine/ORM/Persisters/OneToManyPersister.html#method_getInsertRowSQL", "name": "Doctrine\\ORM\\Persisters\\OneToManyPersister::getInsertRowSQL", "doc": "&quot;Gets the SQL statement used for inserting a row in the collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\OneToManyPersister", "fromLink": "Doctrine/ORM/Persisters/OneToManyPersister.html", "link": "Doctrine/ORM/Persisters/OneToManyPersister.html#method_getInsertRowSQLParameters", "name": "Doctrine\\ORM\\Persisters\\OneToManyPersister::getInsertRowSQLParameters", "doc": "&quot;Gets the SQL parameters for the corresponding SQL statement to insert the given\nelement of the given collection into the database.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\OneToManyPersister", "fromLink": "Doctrine/ORM/Persisters/OneToManyPersister.html", "link": "Doctrine/ORM/Persisters/OneToManyPersister.html#method_getUpdateRowSQL", "name": "Doctrine\\ORM\\Persisters\\OneToManyPersister::getUpdateRowSQL", "doc": "&quot;Gets the SQL statement used for updating a row in the collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\OneToManyPersister", "fromLink": "Doctrine/ORM/Persisters/OneToManyPersister.html", "link": "Doctrine/ORM/Persisters/OneToManyPersister.html#method_getDeleteSQL", "name": "Doctrine\\ORM\\Persisters\\OneToManyPersister::getDeleteSQL", "doc": "&quot;Gets the SQL statement for deleting the given collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\OneToManyPersister", "fromLink": "Doctrine/ORM/Persisters/OneToManyPersister.html", "link": "Doctrine/ORM/Persisters/OneToManyPersister.html#method_getDeleteSQLParameters", "name": "Doctrine\\ORM\\Persisters\\OneToManyPersister::getDeleteSQLParameters", "doc": "&quot;Gets the SQL parameters for the corresponding SQL statement to delete\nthe given collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\OneToManyPersister", "fromLink": "Doctrine/ORM/Persisters/OneToManyPersister.html", "link": "Doctrine/ORM/Persisters/OneToManyPersister.html#method_count", "name": "Doctrine\\ORM\\Persisters\\OneToManyPersister::count", "doc": "&quot;Counts the size of this persistent collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\OneToManyPersister", "fromLink": "Doctrine/ORM/Persisters/OneToManyPersister.html", "link": "Doctrine/ORM/Persisters/OneToManyPersister.html#method_slice", "name": "Doctrine\\ORM\\Persisters\\OneToManyPersister::slice", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\OneToManyPersister", "fromLink": "Doctrine/ORM/Persisters/OneToManyPersister.html", "link": "Doctrine/ORM/Persisters/OneToManyPersister.html#method_contains", "name": "Doctrine\\ORM\\Persisters\\OneToManyPersister::contains", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\OneToManyPersister", "fromLink": "Doctrine/ORM/Persisters/OneToManyPersister.html", "link": "Doctrine/ORM/Persisters/OneToManyPersister.html#method_removeElement", "name": "Doctrine\\ORM\\Persisters\\OneToManyPersister::removeElement", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Persisters", "fromLink": "Doctrine/ORM/Persisters.html", "link": "Doctrine/ORM/Persisters/PersisterException.html", "name": "Doctrine\\ORM\\Persisters\\PersisterException", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\PersisterException", "fromLink": "Doctrine/ORM/Persisters/PersisterException.html", "link": "Doctrine/ORM/Persisters/PersisterException.html#method_matchingAssocationFieldRequiresObject", "name": "Doctrine\\ORM\\Persisters\\PersisterException::matchingAssocationFieldRequiresObject", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Persisters", "fromLink": "Doctrine/ORM/Persisters.html", "link": "Doctrine/ORM/Persisters/SingleTablePersister.html", "name": "Doctrine\\ORM\\Persisters\\SingleTablePersister", "doc": "&quot;Persister for entities that participate in a hierarchy mapped with the\nSINGLE_TABLE strategy.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\SingleTablePersister", "fromLink": "Doctrine/ORM/Persisters/SingleTablePersister.html", "link": "Doctrine/ORM/Persisters/SingleTablePersister.html#method_getDiscriminatorColumnTableName", "name": "Doctrine\\ORM\\Persisters\\SingleTablePersister::getDiscriminatorColumnTableName", "doc": "&quot;Gets the name of the table that contains the discriminator column.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\SingleTablePersister", "fromLink": "Doctrine/ORM/Persisters/SingleTablePersister.html", "link": "Doctrine/ORM/Persisters/SingleTablePersister.html#method_getSelectColumnsSQL", "name": "Doctrine\\ORM\\Persisters\\SingleTablePersister::getSelectColumnsSQL", "doc": "&quot;Gets the SQL fragment with the list of columns to select when querying for\nan entity in this persister.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\SingleTablePersister", "fromLink": "Doctrine/ORM/Persisters/SingleTablePersister.html", "link": "Doctrine/ORM/Persisters/SingleTablePersister.html#method_getInsertColumnList", "name": "Doctrine\\ORM\\Persisters\\SingleTablePersister::getInsertColumnList", "doc": "&quot;Gets the list of columns to put in the INSERT SQL statement.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\SingleTablePersister", "fromLink": "Doctrine/ORM/Persisters/SingleTablePersister.html", "link": "Doctrine/ORM/Persisters/SingleTablePersister.html#method_getSQLTableAlias", "name": "Doctrine\\ORM\\Persisters\\SingleTablePersister::getSQLTableAlias", "doc": "&quot;Gets the SQL table alias for the given class name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\SingleTablePersister", "fromLink": "Doctrine/ORM/Persisters/SingleTablePersister.html", "link": "Doctrine/ORM/Persisters/SingleTablePersister.html#method_getSelectConditionSQL", "name": "Doctrine\\ORM\\Persisters\\SingleTablePersister::getSelectConditionSQL", "doc": "&quot;Gets the conditional SQL fragment used in the WHERE clause when selecting\nentities in this persister.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\SingleTablePersister", "fromLink": "Doctrine/ORM/Persisters/SingleTablePersister.html", "link": "Doctrine/ORM/Persisters/SingleTablePersister.html#method_getSelectConditionCriteriaSQL", "name": "Doctrine\\ORM\\Persisters\\SingleTablePersister::getSelectConditionCriteriaSQL", "doc": "&quot;Gets the Select Where Condition from a Criteria object.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\SingleTablePersister", "fromLink": "Doctrine/ORM/Persisters/SingleTablePersister.html", "link": "Doctrine/ORM/Persisters/SingleTablePersister.html#method_getSelectConditionDiscriminatorValueSQL", "name": "Doctrine\\ORM\\Persisters\\SingleTablePersister::getSelectConditionDiscriminatorValueSQL", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\SingleTablePersister", "fromLink": "Doctrine/ORM/Persisters/SingleTablePersister.html", "link": "Doctrine/ORM/Persisters/SingleTablePersister.html#method_generateFilterConditionSQL", "name": "Doctrine\\ORM\\Persisters\\SingleTablePersister::generateFilterConditionSQL", "doc": "&quot;Generates the filter SQL for a given entity and table alias.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Persisters", "fromLink": "Doctrine/ORM/Persisters.html", "link": "Doctrine/ORM/Persisters/SqlExpressionVisitor.html", "name": "Doctrine\\ORM\\Persisters\\SqlExpressionVisitor", "doc": "&quot;Visit Expressions and generate SQL WHERE conditions from them.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\SqlExpressionVisitor", "fromLink": "Doctrine/ORM/Persisters/SqlExpressionVisitor.html", "link": "Doctrine/ORM/Persisters/SqlExpressionVisitor.html#method___construct", "name": "Doctrine\\ORM\\Persisters\\SqlExpressionVisitor::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\SqlExpressionVisitor", "fromLink": "Doctrine/ORM/Persisters/SqlExpressionVisitor.html", "link": "Doctrine/ORM/Persisters/SqlExpressionVisitor.html#method_walkComparison", "name": "Doctrine\\ORM\\Persisters\\SqlExpressionVisitor::walkComparison", "doc": "&quot;Converts a comparison expression into the target query language output.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\SqlExpressionVisitor", "fromLink": "Doctrine/ORM/Persisters/SqlExpressionVisitor.html", "link": "Doctrine/ORM/Persisters/SqlExpressionVisitor.html#method_walkCompositeExpression", "name": "Doctrine\\ORM\\Persisters\\SqlExpressionVisitor::walkCompositeExpression", "doc": "&quot;Converts a composite expression into the target query language output.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\SqlExpressionVisitor", "fromLink": "Doctrine/ORM/Persisters/SqlExpressionVisitor.html", "link": "Doctrine/ORM/Persisters/SqlExpressionVisitor.html#method_walkValue", "name": "Doctrine\\ORM\\Persisters\\SqlExpressionVisitor::walkValue", "doc": "&quot;Converts a value expression into the target query language part.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Persisters", "fromLink": "Doctrine/ORM/Persisters.html", "link": "Doctrine/ORM/Persisters/SqlValueVisitor.html", "name": "Doctrine\\ORM\\Persisters\\SqlValueVisitor", "doc": "&quot;Extract the values from a criteria\/expression&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\SqlValueVisitor", "fromLink": "Doctrine/ORM/Persisters/SqlValueVisitor.html", "link": "Doctrine/ORM/Persisters/SqlValueVisitor.html#method_walkComparison", "name": "Doctrine\\ORM\\Persisters\\SqlValueVisitor::walkComparison", "doc": "&quot;Converts a comparison expression into the target query language output.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\SqlValueVisitor", "fromLink": "Doctrine/ORM/Persisters/SqlValueVisitor.html", "link": "Doctrine/ORM/Persisters/SqlValueVisitor.html#method_walkCompositeExpression", "name": "Doctrine\\ORM\\Persisters\\SqlValueVisitor::walkCompositeExpression", "doc": "&quot;Converts a composite expression into the target query language output.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\SqlValueVisitor", "fromLink": "Doctrine/ORM/Persisters/SqlValueVisitor.html", "link": "Doctrine/ORM/Persisters/SqlValueVisitor.html#method_walkValue", "name": "Doctrine\\ORM\\Persisters\\SqlValueVisitor::walkValue", "doc": "&quot;Converts a value expression into the target query language part.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\SqlValueVisitor", "fromLink": "Doctrine/ORM/Persisters/SqlValueVisitor.html", "link": "Doctrine/ORM/Persisters/SqlValueVisitor.html#method_getParamsAndTypes", "name": "Doctrine\\ORM\\Persisters\\SqlValueVisitor::getParamsAndTypes", "doc": "&quot;Returns the Parameters and Types necessary for matching the last visited expression.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Persisters\\SqlValueVisitor", "fromLink": "Doctrine/ORM/Persisters/SqlValueVisitor.html", "link": "Doctrine/ORM/Persisters/SqlValueVisitor.html#method_getValueFromComparison", "name": "Doctrine\\ORM\\Persisters\\SqlValueVisitor::getValueFromComparison", "doc": "&quot;Returns the value from a Comparison. In case of a CONTAINS comparison,\nthe value is wrapped in %-signs, because it will be used in a LIKE clause.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Persisters", "fromLink": "Doctrine/ORM/Persisters.html", "link": "Doctrine/ORM/Persisters/UnionSubclassPersister.html", "name": "Doctrine\\ORM\\Persisters\\UnionSubclassPersister", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM", "fromLink": "Doctrine/ORM.html", "link": "Doctrine/ORM/PessimisticLockException.html", "name": "Doctrine\\ORM\\PessimisticLockException", "doc": "&quot;Pessimistic Lock Exception&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\PessimisticLockException", "fromLink": "Doctrine/ORM/PessimisticLockException.html", "link": "Doctrine/ORM/PessimisticLockException.html#method_lockFailed", "name": "Doctrine\\ORM\\PessimisticLockException::lockFailed", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Proxy", "fromLink": "Doctrine/ORM/Proxy.html", "link": "Doctrine/ORM/Proxy/Autoloader.html", "name": "Doctrine\\ORM\\Proxy\\Autoloader", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Proxy", "fromLink": "Doctrine/ORM/Proxy.html", "link": "Doctrine/ORM/Proxy/Proxy.html", "name": "Doctrine\\ORM\\Proxy\\Proxy", "doc": "&quot;Interface for proxy classes.&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Proxy", "fromLink": "Doctrine/ORM/Proxy.html", "link": "Doctrine/ORM/Proxy/ProxyFactory.html", "name": "Doctrine\\ORM\\Proxy\\ProxyFactory", "doc": "&quot;This factory is used to create proxy objects for entities at runtime.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Proxy\\ProxyFactory", "fromLink": "Doctrine/ORM/Proxy/ProxyFactory.html", "link": "Doctrine/ORM/Proxy/ProxyFactory.html#method___construct", "name": "Doctrine\\ORM\\Proxy\\ProxyFactory::__construct", "doc": "&quot;Initializes a new instance of the &lt;tt&gt;ProxyFactory&lt;\/tt&gt; class that is\nconnected to the given &lt;tt&gt;EntityManager&lt;\/tt&gt;.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Proxy\\ProxyFactory", "fromLink": "Doctrine/ORM/Proxy/ProxyFactory.html", "link": "Doctrine/ORM/Proxy/ProxyFactory.html#method_skipClass", "name": "Doctrine\\ORM\\Proxy\\ProxyFactory::skipClass", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Proxy\\ProxyFactory", "fromLink": "Doctrine/ORM/Proxy/ProxyFactory.html", "link": "Doctrine/ORM/Proxy/ProxyFactory.html#method_createProxyDefinition", "name": "Doctrine\\ORM\\Proxy\\ProxyFactory::createProxyDefinition", "doc": "&quot;{@inheritDoc}&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM", "fromLink": "Doctrine/ORM.html", "link": "Doctrine/ORM/Query.html", "name": "Doctrine\\ORM\\Query", "doc": "&quot;A Query object represents a DQL query.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query.html#method_getSQL", "name": "Doctrine\\ORM\\Query::getSQL", "doc": "&quot;Gets the SQL query\/queries that correspond to this DQL query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query.html#method_getAST", "name": "Doctrine\\ORM\\Query::getAST", "doc": "&quot;Returns the corresponding AST for this DQL query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query.html#method__doExecute", "name": "Doctrine\\ORM\\Query::_doExecute", "doc": "&quot;Executes the query and returns a the resulting Statement object.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query.html#method_setQueryCacheDriver", "name": "Doctrine\\ORM\\Query::setQueryCacheDriver", "doc": "&quot;Defines a cache driver to be used for caching queries.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query.html#method_useQueryCache", "name": "Doctrine\\ORM\\Query::useQueryCache", "doc": "&quot;Defines whether the query should make use of a query cache, if available.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query.html#method_getQueryCacheDriver", "name": "Doctrine\\ORM\\Query::getQueryCacheDriver", "doc": "&quot;Returns the cache driver used for query caching.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query.html#method_setQueryCacheLifetime", "name": "Doctrine\\ORM\\Query::setQueryCacheLifetime", "doc": "&quot;Defines how long the query cache will be active before expire.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query.html#method_getQueryCacheLifetime", "name": "Doctrine\\ORM\\Query::getQueryCacheLifetime", "doc": "&quot;Retrieves the lifetime of resultset cache.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query.html#method_expireQueryCache", "name": "Doctrine\\ORM\\Query::expireQueryCache", "doc": "&quot;Defines if the query cache is active or not.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query.html#method_getExpireQueryCache", "name": "Doctrine\\ORM\\Query::getExpireQueryCache", "doc": "&quot;Retrieves if the query cache is active or not.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query.html#method_free", "name": "Doctrine\\ORM\\Query::free", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query.html#method_setDQL", "name": "Doctrine\\ORM\\Query::setDQL", "doc": "&quot;Sets a DQL query string.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query.html#method_getDQL", "name": "Doctrine\\ORM\\Query::getDQL", "doc": "&quot;Returns the DQL query that is represented by this query object.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query.html#method_getState", "name": "Doctrine\\ORM\\Query::getState", "doc": "&quot;Returns the state of this query object\nBy default the type is Doctrine_ORM_Query_Abstract::STATE_CLEAN but if it appears any unprocessed DQL\npart, it is switched to Doctrine_ORM_Query_Abstract::STATE_DIRTY.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query.html#method_contains", "name": "Doctrine\\ORM\\Query::contains", "doc": "&quot;Method to check if an arbitrary piece of DQL exists&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query.html#method_setFirstResult", "name": "Doctrine\\ORM\\Query::setFirstResult", "doc": "&quot;Sets the position of the first result to retrieve (the \&quot;offset\&quot;).&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query.html#method_getFirstResult", "name": "Doctrine\\ORM\\Query::getFirstResult", "doc": "&quot;Gets the position of the first result the query object was set to retrieve (the \&quot;offset\&quot;).&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query.html#method_setMaxResults", "name": "Doctrine\\ORM\\Query::setMaxResults", "doc": "&quot;Sets the maximum number of results to retrieve (the \&quot;limit\&quot;).&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query.html#method_getMaxResults", "name": "Doctrine\\ORM\\Query::getMaxResults", "doc": "&quot;Gets the maximum number of results the query object was set to retrieve (the \&quot;limit\&quot;).&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query.html#method_iterate", "name": "Doctrine\\ORM\\Query::iterate", "doc": "&quot;Executes the query and returns an IterableResult that can be used to incrementally\niterated over the result.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query.html#method_setHint", "name": "Doctrine\\ORM\\Query::setHint", "doc": "&quot;Sets a query hint. If the hint name is not recognized, it is silently ignored.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query.html#method_setHydrationMode", "name": "Doctrine\\ORM\\Query::setHydrationMode", "doc": "&quot;Defines the processing mode to be used during hydration \/ result set transformation.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query.html#method_setLockMode", "name": "Doctrine\\ORM\\Query::setLockMode", "doc": "&quot;Set the lock mode for this Query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query.html#method_getLockMode", "name": "Doctrine\\ORM\\Query::getLockMode", "doc": "&quot;Get the current lock mode for this query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query.html#method__getQueryCacheId", "name": "Doctrine\\ORM\\Query::_getQueryCacheId", "doc": "&quot;Generate a cache id for the query cache - reusing the Result-Cache-Id generator.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query.html#method___clone", "name": "Doctrine\\ORM\\Query::__clone", "doc": "&quot;Cleanup Query resource when clone is called.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM", "fromLink": "Doctrine/ORM.html", "link": "Doctrine/ORM/QueryBuilder.html", "name": "Doctrine\\ORM\\QueryBuilder", "doc": "&quot;This class is responsible for building DQL query strings via an object oriented\nPHP interface.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method___construct", "name": "Doctrine\\ORM\\QueryBuilder::__construct", "doc": "&quot;Initializes a new &lt;tt&gt;QueryBuilder&lt;\/tt&gt; that uses the given &lt;tt&gt;EntityManager&lt;\/tt&gt;.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_expr", "name": "Doctrine\\ORM\\QueryBuilder::expr", "doc": "&quot;Gets an ExpressionBuilder used for object-oriented construction of query expressions.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_getType", "name": "Doctrine\\ORM\\QueryBuilder::getType", "doc": "&quot;Gets the type of the currently built query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_getEntityManager", "name": "Doctrine\\ORM\\QueryBuilder::getEntityManager", "doc": "&quot;Gets the associated EntityManager for this query builder.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_getState", "name": "Doctrine\\ORM\\QueryBuilder::getState", "doc": "&quot;Gets the state of this query builder instance.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_getDQL", "name": "Doctrine\\ORM\\QueryBuilder::getDQL", "doc": "&quot;Gets the complete DQL string formed by the current specifications of this QueryBuilder.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_getQuery", "name": "Doctrine\\ORM\\QueryBuilder::getQuery", "doc": "&quot;Constructs a Query instance from the current specifications of the builder.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_getRootAlias", "name": "Doctrine\\ORM\\QueryBuilder::getRootAlias", "doc": "&quot;Gets the FIRST root alias of the query. This is the first entity alias involved\nin the construction of the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_getRootAliases", "name": "Doctrine\\ORM\\QueryBuilder::getRootAliases", "doc": "&quot;Gets the root aliases of the query. This is the entity aliases involved\nin the construction of the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_getRootEntities", "name": "Doctrine\\ORM\\QueryBuilder::getRootEntities", "doc": "&quot;Gets the root entities of the query. This is the entity aliases involved\nin the construction of the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_setParameter", "name": "Doctrine\\ORM\\QueryBuilder::setParameter", "doc": "&quot;Sets a query parameter for the query being constructed.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_setParameters", "name": "Doctrine\\ORM\\QueryBuilder::setParameters", "doc": "&quot;Sets a collection of query parameters for the query being constructed.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_getParameters", "name": "Doctrine\\ORM\\QueryBuilder::getParameters", "doc": "&quot;Gets all defined query parameters for the query being constructed.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_getParameter", "name": "Doctrine\\ORM\\QueryBuilder::getParameter", "doc": "&quot;Gets a (previously set) query parameter of the query being constructed.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_setFirstResult", "name": "Doctrine\\ORM\\QueryBuilder::setFirstResult", "doc": "&quot;Sets the position of the first result to retrieve (the \&quot;offset\&quot;).&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_getFirstResult", "name": "Doctrine\\ORM\\QueryBuilder::getFirstResult", "doc": "&quot;Gets the position of the first result the query object was set to retrieve (the \&quot;offset\&quot;).&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_setMaxResults", "name": "Doctrine\\ORM\\QueryBuilder::setMaxResults", "doc": "&quot;Sets the maximum number of results to retrieve (the \&quot;limit\&quot;).&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_getMaxResults", "name": "Doctrine\\ORM\\QueryBuilder::getMaxResults", "doc": "&quot;Gets the maximum number of results the query object was set to retrieve (the \&quot;limit\&quot;).&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_add", "name": "Doctrine\\ORM\\QueryBuilder::add", "doc": "&quot;Either appends to or replaces a single, generic query part.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_select", "name": "Doctrine\\ORM\\QueryBuilder::select", "doc": "&quot;Specifies an item that is to be returned in the query result.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_distinct", "name": "Doctrine\\ORM\\QueryBuilder::distinct", "doc": "&quot;Adds a DISTINCT flag to this query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_addSelect", "name": "Doctrine\\ORM\\QueryBuilder::addSelect", "doc": "&quot;Adds an item that is to be returned in the query result.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_delete", "name": "Doctrine\\ORM\\QueryBuilder::delete", "doc": "&quot;Turns the query being built into a bulk delete query that ranges over\na certain entity type.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_update", "name": "Doctrine\\ORM\\QueryBuilder::update", "doc": "&quot;Turns the query being built into a bulk update query that ranges over\na certain entity type.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_from", "name": "Doctrine\\ORM\\QueryBuilder::from", "doc": "&quot;Creates and adds a query root corresponding to the entity identified by the given alias,\nforming a cartesian product with any existing query roots.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_join", "name": "Doctrine\\ORM\\QueryBuilder::join", "doc": "&quot;Creates and adds a join over an entity association to the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_innerJoin", "name": "Doctrine\\ORM\\QueryBuilder::innerJoin", "doc": "&quot;Creates and adds a join over an entity association to the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_leftJoin", "name": "Doctrine\\ORM\\QueryBuilder::leftJoin", "doc": "&quot;Creates and adds a left join over an entity association to the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_set", "name": "Doctrine\\ORM\\QueryBuilder::set", "doc": "&quot;Sets a new value for a field in a bulk update query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_where", "name": "Doctrine\\ORM\\QueryBuilder::where", "doc": "&quot;Specifies one or more restrictions to the query result.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_andWhere", "name": "Doctrine\\ORM\\QueryBuilder::andWhere", "doc": "&quot;Adds one or more restrictions to the query results, forming a logical\nconjunction with any previously specified restrictions.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_orWhere", "name": "Doctrine\\ORM\\QueryBuilder::orWhere", "doc": "&quot;Adds one or more restrictions to the query results, forming a logical\ndisjunction with any previously specified restrictions.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_groupBy", "name": "Doctrine\\ORM\\QueryBuilder::groupBy", "doc": "&quot;Specifies a grouping over the results of the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_addGroupBy", "name": "Doctrine\\ORM\\QueryBuilder::addGroupBy", "doc": "&quot;Adds a grouping expression to the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_having", "name": "Doctrine\\ORM\\QueryBuilder::having", "doc": "&quot;Specifies a restriction over the groups of the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_andHaving", "name": "Doctrine\\ORM\\QueryBuilder::andHaving", "doc": "&quot;Adds a restriction over the groups of the query, forming a logical\nconjunction with any existing having restrictions.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_orHaving", "name": "Doctrine\\ORM\\QueryBuilder::orHaving", "doc": "&quot;Adds a restriction over the groups of the query, forming a logical\ndisjunction with any existing having restrictions.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_orderBy", "name": "Doctrine\\ORM\\QueryBuilder::orderBy", "doc": "&quot;Specifies an ordering for the query results.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_addOrderBy", "name": "Doctrine\\ORM\\QueryBuilder::addOrderBy", "doc": "&quot;Adds an ordering to the query results.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_addCriteria", "name": "Doctrine\\ORM\\QueryBuilder::addCriteria", "doc": "&quot;Adds criteria to the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_getDQLPart", "name": "Doctrine\\ORM\\QueryBuilder::getDQLPart", "doc": "&quot;Gets a query part by its name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_getDQLParts", "name": "Doctrine\\ORM\\QueryBuilder::getDQLParts", "doc": "&quot;Gets all query parts.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_resetDQLParts", "name": "Doctrine\\ORM\\QueryBuilder::resetDQLParts", "doc": "&quot;Resets DQL parts.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method_resetDQLPart", "name": "Doctrine\\ORM\\QueryBuilder::resetDQLPart", "doc": "&quot;Resets single DQL part.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method___toString", "name": "Doctrine\\ORM\\QueryBuilder::__toString", "doc": "&quot;Gets a string representation of this QueryBuilder which corresponds to\nthe final DQL query being constructed.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\QueryBuilder", "fromLink": "Doctrine/ORM/QueryBuilder.html", "link": "Doctrine/ORM/QueryBuilder.html#method___clone", "name": "Doctrine\\ORM\\QueryBuilder::__clone", "doc": "&quot;Deep clones all expression objects in the DQL parts.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/ASTException.html", "name": "Doctrine\\ORM\\Query\\AST\\ASTException", "doc": "&quot;Base exception class for AST exceptions.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\ASTException", "fromLink": "Doctrine/ORM/Query/AST/ASTException.html", "link": "Doctrine/ORM/Query/AST/ASTException.html#method_noDispatchForNode", "name": "Doctrine\\ORM\\Query\\AST\\ASTException::noDispatchForNode", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/AggregateExpression.html", "name": "Doctrine\\ORM\\Query\\AST\\AggregateExpression", "doc": "&quot;Description of AggregateExpression.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\AggregateExpression", "fromLink": "Doctrine/ORM/Query/AST/AggregateExpression.html", "link": "Doctrine/ORM/Query/AST/AggregateExpression.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\AggregateExpression::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\AggregateExpression", "fromLink": "Doctrine/ORM/Query/AST/AggregateExpression.html", "link": "Doctrine/ORM/Query/AST/AggregateExpression.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\AggregateExpression::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/ArithmeticExpression.html", "name": "Doctrine\\ORM\\Query\\AST\\ArithmeticExpression", "doc": "&quot;ArithmeticExpression ::= SimpleArithmeticExpression | \&quot;(\&quot; Subselect \&quot;)\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\ArithmeticExpression", "fromLink": "Doctrine/ORM/Query/AST/ArithmeticExpression.html", "link": "Doctrine/ORM/Query/AST/ArithmeticExpression.html#method_isSimpleArithmeticExpression", "name": "Doctrine\\ORM\\Query\\AST\\ArithmeticExpression::isSimpleArithmeticExpression", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\ArithmeticExpression", "fromLink": "Doctrine/ORM/Query/AST/ArithmeticExpression.html", "link": "Doctrine/ORM/Query/AST/ArithmeticExpression.html#method_isSubselect", "name": "Doctrine\\ORM\\Query\\AST\\ArithmeticExpression::isSubselect", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\ArithmeticExpression", "fromLink": "Doctrine/ORM/Query/AST/ArithmeticExpression.html", "link": "Doctrine/ORM/Query/AST/ArithmeticExpression.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\ArithmeticExpression::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/ArithmeticFactor.html", "name": "Doctrine\\ORM\\Query\\AST\\ArithmeticFactor", "doc": "&quot;ArithmeticFactor ::= [(\&quot;+\&quot; | \&quot;-\&quot;)] ArithmeticPrimary&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\ArithmeticFactor", "fromLink": "Doctrine/ORM/Query/AST/ArithmeticFactor.html", "link": "Doctrine/ORM/Query/AST/ArithmeticFactor.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\ArithmeticFactor::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\ArithmeticFactor", "fromLink": "Doctrine/ORM/Query/AST/ArithmeticFactor.html", "link": "Doctrine/ORM/Query/AST/ArithmeticFactor.html#method_isPositiveSigned", "name": "Doctrine\\ORM\\Query\\AST\\ArithmeticFactor::isPositiveSigned", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\ArithmeticFactor", "fromLink": "Doctrine/ORM/Query/AST/ArithmeticFactor.html", "link": "Doctrine/ORM/Query/AST/ArithmeticFactor.html#method_isNegativeSigned", "name": "Doctrine\\ORM\\Query\\AST\\ArithmeticFactor::isNegativeSigned", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\ArithmeticFactor", "fromLink": "Doctrine/ORM/Query/AST/ArithmeticFactor.html", "link": "Doctrine/ORM/Query/AST/ArithmeticFactor.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\ArithmeticFactor::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/ArithmeticTerm.html", "name": "Doctrine\\ORM\\Query\\AST\\ArithmeticTerm", "doc": "&quot;ArithmeticTerm ::= ArithmeticFactor {(\&quot;&lt;em&gt;\&quot; | \&quot;\/\&quot;) ArithmeticFactor}&lt;\/em&gt;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\ArithmeticTerm", "fromLink": "Doctrine/ORM/Query/AST/ArithmeticTerm.html", "link": "Doctrine/ORM/Query/AST/ArithmeticTerm.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\ArithmeticTerm::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\ArithmeticTerm", "fromLink": "Doctrine/ORM/Query/AST/ArithmeticTerm.html", "link": "Doctrine/ORM/Query/AST/ArithmeticTerm.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\ArithmeticTerm::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/BetweenExpression.html", "name": "Doctrine\\ORM\\Query\\AST\\BetweenExpression", "doc": "&quot;Description of BetweenExpression.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\BetweenExpression", "fromLink": "Doctrine/ORM/Query/AST/BetweenExpression.html", "link": "Doctrine/ORM/Query/AST/BetweenExpression.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\BetweenExpression::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\BetweenExpression", "fromLink": "Doctrine/ORM/Query/AST/BetweenExpression.html", "link": "Doctrine/ORM/Query/AST/BetweenExpression.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\BetweenExpression::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/CoalesceExpression.html", "name": "Doctrine\\ORM\\Query\\AST\\CoalesceExpression", "doc": "&quot;CoalesceExpression ::= \&quot;COALESCE\&quot; \&quot;(\&quot; ScalarExpression {\&quot;,\&quot; ScalarExpression}* \&quot;)\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\CoalesceExpression", "fromLink": "Doctrine/ORM/Query/AST/CoalesceExpression.html", "link": "Doctrine/ORM/Query/AST/CoalesceExpression.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\CoalesceExpression::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\CoalesceExpression", "fromLink": "Doctrine/ORM/Query/AST/CoalesceExpression.html", "link": "Doctrine/ORM/Query/AST/CoalesceExpression.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\CoalesceExpression::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/CollectionMemberExpression.html", "name": "Doctrine\\ORM\\Query\\AST\\CollectionMemberExpression", "doc": "&quot;CollectionMemberExpression ::= EntityExpression [\&quot;NOT\&quot;] \&quot;MEMBER\&quot; [\&quot;OF\&quot;] CollectionValuedPathExpression&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\CollectionMemberExpression", "fromLink": "Doctrine/ORM/Query/AST/CollectionMemberExpression.html", "link": "Doctrine/ORM/Query/AST/CollectionMemberExpression.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\CollectionMemberExpression::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\CollectionMemberExpression", "fromLink": "Doctrine/ORM/Query/AST/CollectionMemberExpression.html", "link": "Doctrine/ORM/Query/AST/CollectionMemberExpression.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\CollectionMemberExpression::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/ComparisonExpression.html", "name": "Doctrine\\ORM\\Query\\AST\\ComparisonExpression", "doc": "&quot;ComparisonExpression ::= ArithmeticExpression ComparisonOperator ( QuantifiedExpression | ArithmeticExpression ) |\n                         StringExpression ComparisonOperator (StringExpression | QuantifiedExpression) |\n                         BooleanExpression (\&quot;=\&quot; | \&quot;&amp;lt;&gt;\&quot; | \&quot;!=\&quot;) (BooleanExpression | QuantifiedExpression) |\n                         EnumExpression (\&quot;=\&quot; | \&quot;&amp;lt;&gt;\&quot; | \&quot;!=\&quot;) (EnumExpression | QuantifiedExpression) |\n                         DatetimeExpression ComparisonOperator (DatetimeExpression | QuantifiedExpression) |\n                         EntityExpression (\&quot;=\&quot; | \&quot;&amp;lt;&gt;\&quot;) (EntityExpression | QuantifiedExpression)&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\ComparisonExpression", "fromLink": "Doctrine/ORM/Query/AST/ComparisonExpression.html", "link": "Doctrine/ORM/Query/AST/ComparisonExpression.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\ComparisonExpression::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\ComparisonExpression", "fromLink": "Doctrine/ORM/Query/AST/ComparisonExpression.html", "link": "Doctrine/ORM/Query/AST/ComparisonExpression.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\ComparisonExpression::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/ConditionalExpression.html", "name": "Doctrine\\ORM\\Query\\AST\\ConditionalExpression", "doc": "&quot;ConditionalExpression ::= ConditionalTerm {\&quot;OR\&quot; ConditionalTerm}*&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\ConditionalExpression", "fromLink": "Doctrine/ORM/Query/AST/ConditionalExpression.html", "link": "Doctrine/ORM/Query/AST/ConditionalExpression.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\ConditionalExpression::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\ConditionalExpression", "fromLink": "Doctrine/ORM/Query/AST/ConditionalExpression.html", "link": "Doctrine/ORM/Query/AST/ConditionalExpression.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\ConditionalExpression::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/ConditionalFactor.html", "name": "Doctrine\\ORM\\Query\\AST\\ConditionalFactor", "doc": "&quot;ConditionalFactor ::= [\&quot;NOT\&quot;] ConditionalPrimary&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\ConditionalFactor", "fromLink": "Doctrine/ORM/Query/AST/ConditionalFactor.html", "link": "Doctrine/ORM/Query/AST/ConditionalFactor.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\ConditionalFactor::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\ConditionalFactor", "fromLink": "Doctrine/ORM/Query/AST/ConditionalFactor.html", "link": "Doctrine/ORM/Query/AST/ConditionalFactor.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\ConditionalFactor::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/ConditionalPrimary.html", "name": "Doctrine\\ORM\\Query\\AST\\ConditionalPrimary", "doc": "&quot;ConditionalPrimary ::= SimpleConditionalExpression | \&quot;(\&quot; ConditionalExpression \&quot;)\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\ConditionalPrimary", "fromLink": "Doctrine/ORM/Query/AST/ConditionalPrimary.html", "link": "Doctrine/ORM/Query/AST/ConditionalPrimary.html#method_isSimpleConditionalExpression", "name": "Doctrine\\ORM\\Query\\AST\\ConditionalPrimary::isSimpleConditionalExpression", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\ConditionalPrimary", "fromLink": "Doctrine/ORM/Query/AST/ConditionalPrimary.html", "link": "Doctrine/ORM/Query/AST/ConditionalPrimary.html#method_isConditionalExpression", "name": "Doctrine\\ORM\\Query\\AST\\ConditionalPrimary::isConditionalExpression", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\ConditionalPrimary", "fromLink": "Doctrine/ORM/Query/AST/ConditionalPrimary.html", "link": "Doctrine/ORM/Query/AST/ConditionalPrimary.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\ConditionalPrimary::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/ConditionalTerm.html", "name": "Doctrine\\ORM\\Query\\AST\\ConditionalTerm", "doc": "&quot;ConditionalTerm ::= ConditionalFactor {\&quot;AND\&quot; ConditionalFactor}*&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\ConditionalTerm", "fromLink": "Doctrine/ORM/Query/AST/ConditionalTerm.html", "link": "Doctrine/ORM/Query/AST/ConditionalTerm.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\ConditionalTerm::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\ConditionalTerm", "fromLink": "Doctrine/ORM/Query/AST/ConditionalTerm.html", "link": "Doctrine/ORM/Query/AST/ConditionalTerm.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\ConditionalTerm::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/DeleteClause.html", "name": "Doctrine\\ORM\\Query\\AST\\DeleteClause", "doc": "&quot;DeleteClause ::= \&quot;DELETE\&quot; [\&quot;FROM\&quot;] AbstractSchemaName [[\&quot;AS\&quot;] AliasIdentificationVariable]&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\DeleteClause", "fromLink": "Doctrine/ORM/Query/AST/DeleteClause.html", "link": "Doctrine/ORM/Query/AST/DeleteClause.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\DeleteClause::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\DeleteClause", "fromLink": "Doctrine/ORM/Query/AST/DeleteClause.html", "link": "Doctrine/ORM/Query/AST/DeleteClause.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\DeleteClause::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/DeleteStatement.html", "name": "Doctrine\\ORM\\Query\\AST\\DeleteStatement", "doc": "&quot;DeleteStatement = DeleteClause [WhereClause]&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\DeleteStatement", "fromLink": "Doctrine/ORM/Query/AST/DeleteStatement.html", "link": "Doctrine/ORM/Query/AST/DeleteStatement.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\DeleteStatement::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\DeleteStatement", "fromLink": "Doctrine/ORM/Query/AST/DeleteStatement.html", "link": "Doctrine/ORM/Query/AST/DeleteStatement.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\DeleteStatement::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/EmptyCollectionComparisonExpression.html", "name": "Doctrine\\ORM\\Query\\AST\\EmptyCollectionComparisonExpression", "doc": "&quot;EmptyCollectionComparisonExpression ::= CollectionValuedPathExpression \&quot;IS\&quot; [\&quot;NOT\&quot;] \&quot;EMPTY\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\EmptyCollectionComparisonExpression", "fromLink": "Doctrine/ORM/Query/AST/EmptyCollectionComparisonExpression.html", "link": "Doctrine/ORM/Query/AST/EmptyCollectionComparisonExpression.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\EmptyCollectionComparisonExpression::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\EmptyCollectionComparisonExpression", "fromLink": "Doctrine/ORM/Query/AST/EmptyCollectionComparisonExpression.html", "link": "Doctrine/ORM/Query/AST/EmptyCollectionComparisonExpression.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\EmptyCollectionComparisonExpression::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/ExistsExpression.html", "name": "Doctrine\\ORM\\Query\\AST\\ExistsExpression", "doc": "&quot;ExistsExpression ::= [\&quot;NOT\&quot;] \&quot;EXISTS\&quot; \&quot;(\&quot; Subselect \&quot;)\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\ExistsExpression", "fromLink": "Doctrine/ORM/Query/AST/ExistsExpression.html", "link": "Doctrine/ORM/Query/AST/ExistsExpression.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\ExistsExpression::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\ExistsExpression", "fromLink": "Doctrine/ORM/Query/AST/ExistsExpression.html", "link": "Doctrine/ORM/Query/AST/ExistsExpression.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\ExistsExpression::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/FromClause.html", "name": "Doctrine\\ORM\\Query\\AST\\FromClause", "doc": "&quot;FromClause ::= \&quot;FROM\&quot; IdentificationVariableDeclaration {\&quot;,\&quot; IdentificationVariableDeclaration}&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\FromClause", "fromLink": "Doctrine/ORM/Query/AST/FromClause.html", "link": "Doctrine/ORM/Query/AST/FromClause.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\FromClause::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\FromClause", "fromLink": "Doctrine/ORM/Query/AST/FromClause.html", "link": "Doctrine/ORM/Query/AST/FromClause.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\FromClause::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions", "fromLink": "Doctrine/ORM/Query/AST/Functions.html", "link": "Doctrine/ORM/Query/AST/Functions/AbsFunction.html", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\AbsFunction", "doc": "&quot;\&quot;ABS\&quot; \&quot;(\&quot; SimpleArithmeticExpression \&quot;)\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\AbsFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/AbsFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/AbsFunction.html#method_getSql", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\AbsFunction::getSql", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\AbsFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/AbsFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/AbsFunction.html#method_parse", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\AbsFunction::parse", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions", "fromLink": "Doctrine/ORM/Query/AST/Functions.html", "link": "Doctrine/ORM/Query/AST/Functions/BitAndFunction.html", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\BitAndFunction", "doc": "&quot;\&quot;BIT_AND\&quot; \&quot;(\&quot; ArithmeticPrimary \&quot;,\&quot; ArithmeticPrimary \&quot;)\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\BitAndFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/BitAndFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/BitAndFunction.html#method_getSql", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\BitAndFunction::getSql", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\BitAndFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/BitAndFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/BitAndFunction.html#method_parse", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\BitAndFunction::parse", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions", "fromLink": "Doctrine/ORM/Query/AST/Functions.html", "link": "Doctrine/ORM/Query/AST/Functions/BitOrFunction.html", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\BitOrFunction", "doc": "&quot;\&quot;BIT_OR\&quot; \&quot;(\&quot; ArithmeticPrimary \&quot;,\&quot; ArithmeticPrimary \&quot;)\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\BitOrFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/BitOrFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/BitOrFunction.html#method_getSql", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\BitOrFunction::getSql", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\BitOrFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/BitOrFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/BitOrFunction.html#method_parse", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\BitOrFunction::parse", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions", "fromLink": "Doctrine/ORM/Query/AST/Functions.html", "link": "Doctrine/ORM/Query/AST/Functions/ConcatFunction.html", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\ConcatFunction", "doc": "&quot;\&quot;CONCAT\&quot; \&quot;(\&quot; StringPrimary \&quot;,\&quot; StringPrimary {\&quot;,\&quot; StringPrimary }* \&quot;)\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\ConcatFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/ConcatFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/ConcatFunction.html#method_getSql", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\ConcatFunction::getSql", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\ConcatFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/ConcatFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/ConcatFunction.html#method_parse", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\ConcatFunction::parse", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions", "fromLink": "Doctrine/ORM/Query/AST/Functions.html", "link": "Doctrine/ORM/Query/AST/Functions/CurrentDateFunction.html", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\CurrentDateFunction", "doc": "&quot;\&quot;CURRENT_DATE\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\CurrentDateFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/CurrentDateFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/CurrentDateFunction.html#method_getSql", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\CurrentDateFunction::getSql", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\CurrentDateFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/CurrentDateFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/CurrentDateFunction.html#method_parse", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\CurrentDateFunction::parse", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions", "fromLink": "Doctrine/ORM/Query/AST/Functions.html", "link": "Doctrine/ORM/Query/AST/Functions/CurrentTimeFunction.html", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\CurrentTimeFunction", "doc": "&quot;\&quot;CURRENT_TIME\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\CurrentTimeFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/CurrentTimeFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/CurrentTimeFunction.html#method_getSql", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\CurrentTimeFunction::getSql", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\CurrentTimeFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/CurrentTimeFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/CurrentTimeFunction.html#method_parse", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\CurrentTimeFunction::parse", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions", "fromLink": "Doctrine/ORM/Query/AST/Functions.html", "link": "Doctrine/ORM/Query/AST/Functions/CurrentTimestampFunction.html", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\CurrentTimestampFunction", "doc": "&quot;\&quot;CURRENT_TIMESTAMP\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\CurrentTimestampFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/CurrentTimestampFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/CurrentTimestampFunction.html#method_getSql", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\CurrentTimestampFunction::getSql", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\CurrentTimestampFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/CurrentTimestampFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/CurrentTimestampFunction.html#method_parse", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\CurrentTimestampFunction::parse", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions", "fromLink": "Doctrine/ORM/Query/AST/Functions.html", "link": "Doctrine/ORM/Query/AST/Functions/DateAddFunction.html", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\DateAddFunction", "doc": "&quot;\&quot;DATE_ADD\&quot; \&quot;(\&quot; ArithmeticPrimary \&quot;,\&quot; ArithmeticPrimary \&quot;,\&quot; StringPrimary \&quot;)\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\DateAddFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/DateAddFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/DateAddFunction.html#method_getSql", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\DateAddFunction::getSql", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\DateAddFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/DateAddFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/DateAddFunction.html#method_parse", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\DateAddFunction::parse", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions", "fromLink": "Doctrine/ORM/Query/AST/Functions.html", "link": "Doctrine/ORM/Query/AST/Functions/DateDiffFunction.html", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\DateDiffFunction", "doc": "&quot;\&quot;DATE_DIFF\&quot; \&quot;(\&quot; ArithmeticPrimary \&quot;,\&quot; ArithmeticPrimary \&quot;)\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\DateDiffFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/DateDiffFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/DateDiffFunction.html#method_getSql", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\DateDiffFunction::getSql", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\DateDiffFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/DateDiffFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/DateDiffFunction.html#method_parse", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\DateDiffFunction::parse", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions", "fromLink": "Doctrine/ORM/Query/AST/Functions.html", "link": "Doctrine/ORM/Query/AST/Functions/DateSubFunction.html", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\DateSubFunction", "doc": "&quot;\&quot;DATE_ADD(date1, interval, unit)\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\DateSubFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/DateSubFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/DateSubFunction.html#method_getSql", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\DateSubFunction::getSql", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions", "fromLink": "Doctrine/ORM/Query/AST/Functions.html", "link": "Doctrine/ORM/Query/AST/Functions/FunctionNode.html", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\FunctionNode", "doc": "&quot;Abstract Function Node.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\FunctionNode", "fromLink": "Doctrine/ORM/Query/AST/Functions/FunctionNode.html", "link": "Doctrine/ORM/Query/AST/Functions/FunctionNode.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\FunctionNode::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\FunctionNode", "fromLink": "Doctrine/ORM/Query/AST/Functions/FunctionNode.html", "link": "Doctrine/ORM/Query/AST/Functions/FunctionNode.html#method_getSql", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\FunctionNode::getSql", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\FunctionNode", "fromLink": "Doctrine/ORM/Query/AST/Functions/FunctionNode.html", "link": "Doctrine/ORM/Query/AST/Functions/FunctionNode.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\FunctionNode::dispatch", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\FunctionNode", "fromLink": "Doctrine/ORM/Query/AST/Functions/FunctionNode.html", "link": "Doctrine/ORM/Query/AST/Functions/FunctionNode.html#method_parse", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\FunctionNode::parse", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions", "fromLink": "Doctrine/ORM/Query/AST/Functions.html", "link": "Doctrine/ORM/Query/AST/Functions/IdentityFunction.html", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\IdentityFunction", "doc": "&quot;\&quot;IDENTITY\&quot; \&quot;(\&quot; SingleValuedAssociationPathExpression {\&quot;,\&quot; string} \&quot;)\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\IdentityFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/IdentityFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/IdentityFunction.html#method_getSql", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\IdentityFunction::getSql", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\IdentityFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/IdentityFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/IdentityFunction.html#method_parse", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\IdentityFunction::parse", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions", "fromLink": "Doctrine/ORM/Query/AST/Functions.html", "link": "Doctrine/ORM/Query/AST/Functions/LengthFunction.html", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\LengthFunction", "doc": "&quot;\&quot;LENGTH\&quot; \&quot;(\&quot; StringPrimary \&quot;)\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\LengthFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/LengthFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/LengthFunction.html#method_getSql", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\LengthFunction::getSql", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\LengthFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/LengthFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/LengthFunction.html#method_parse", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\LengthFunction::parse", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions", "fromLink": "Doctrine/ORM/Query/AST/Functions.html", "link": "Doctrine/ORM/Query/AST/Functions/LocateFunction.html", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\LocateFunction", "doc": "&quot;\&quot;LOCATE\&quot; \&quot;(\&quot; StringPrimary \&quot;,\&quot; StringPrimary [\&quot;,\&quot; SimpleArithmeticExpression]\&quot;)\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\LocateFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/LocateFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/LocateFunction.html#method_getSql", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\LocateFunction::getSql", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\LocateFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/LocateFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/LocateFunction.html#method_parse", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\LocateFunction::parse", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions", "fromLink": "Doctrine/ORM/Query/AST/Functions.html", "link": "Doctrine/ORM/Query/AST/Functions/LowerFunction.html", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\LowerFunction", "doc": "&quot;\&quot;LOWER\&quot; \&quot;(\&quot; StringPrimary \&quot;)\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\LowerFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/LowerFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/LowerFunction.html#method_getSql", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\LowerFunction::getSql", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\LowerFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/LowerFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/LowerFunction.html#method_parse", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\LowerFunction::parse", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions", "fromLink": "Doctrine/ORM/Query/AST/Functions.html", "link": "Doctrine/ORM/Query/AST/Functions/ModFunction.html", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\ModFunction", "doc": "&quot;\&quot;MOD\&quot; \&quot;(\&quot; SimpleArithmeticExpression \&quot;,\&quot; SimpleArithmeticExpression \&quot;)\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\ModFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/ModFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/ModFunction.html#method_getSql", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\ModFunction::getSql", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\ModFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/ModFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/ModFunction.html#method_parse", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\ModFunction::parse", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions", "fromLink": "Doctrine/ORM/Query/AST/Functions.html", "link": "Doctrine/ORM/Query/AST/Functions/SizeFunction.html", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\SizeFunction", "doc": "&quot;\&quot;SIZE\&quot; \&quot;(\&quot; CollectionValuedPathExpression \&quot;)\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\SizeFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/SizeFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/SizeFunction.html#method_getSql", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\SizeFunction::getSql", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\SizeFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/SizeFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/SizeFunction.html#method_parse", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\SizeFunction::parse", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions", "fromLink": "Doctrine/ORM/Query/AST/Functions.html", "link": "Doctrine/ORM/Query/AST/Functions/SqrtFunction.html", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\SqrtFunction", "doc": "&quot;\&quot;SQRT\&quot; \&quot;(\&quot; SimpleArithmeticExpression \&quot;)\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\SqrtFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/SqrtFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/SqrtFunction.html#method_getSql", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\SqrtFunction::getSql", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\SqrtFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/SqrtFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/SqrtFunction.html#method_parse", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\SqrtFunction::parse", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions", "fromLink": "Doctrine/ORM/Query/AST/Functions.html", "link": "Doctrine/ORM/Query/AST/Functions/SubstringFunction.html", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\SubstringFunction", "doc": "&quot;\&quot;SUBSTRING\&quot; \&quot;(\&quot; StringPrimary \&quot;,\&quot; SimpleArithmeticExpression \&quot;,\&quot; SimpleArithmeticExpression \&quot;)\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\SubstringFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/SubstringFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/SubstringFunction.html#method_getSql", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\SubstringFunction::getSql", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\SubstringFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/SubstringFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/SubstringFunction.html#method_parse", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\SubstringFunction::parse", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions", "fromLink": "Doctrine/ORM/Query/AST/Functions.html", "link": "Doctrine/ORM/Query/AST/Functions/TrimFunction.html", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\TrimFunction", "doc": "&quot;\&quot;TRIM\&quot; \&quot;(\&quot; [[\&quot;LEADING\&quot; | \&quot;TRAILING\&quot; | \&quot;BOTH\&quot;] [char] \&quot;FROM\&quot;] StringPrimary \&quot;)\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\TrimFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/TrimFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/TrimFunction.html#method_getSql", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\TrimFunction::getSql", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\TrimFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/TrimFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/TrimFunction.html#method_parse", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\TrimFunction::parse", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions", "fromLink": "Doctrine/ORM/Query/AST/Functions.html", "link": "Doctrine/ORM/Query/AST/Functions/UpperFunction.html", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\UpperFunction", "doc": "&quot;\&quot;UPPER\&quot; \&quot;(\&quot; StringPrimary \&quot;)\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\UpperFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/UpperFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/UpperFunction.html#method_getSql", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\UpperFunction::getSql", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Functions\\UpperFunction", "fromLink": "Doctrine/ORM/Query/AST/Functions/UpperFunction.html", "link": "Doctrine/ORM/Query/AST/Functions/UpperFunction.html#method_parse", "name": "Doctrine\\ORM\\Query\\AST\\Functions\\UpperFunction::parse", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/GeneralCaseExpression.html", "name": "Doctrine\\ORM\\Query\\AST\\GeneralCaseExpression", "doc": "&quot;GeneralCaseExpression ::= \&quot;CASE\&quot; WhenClause {WhenClause}* \&quot;ELSE\&quot; ScalarExpression \&quot;END\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\GeneralCaseExpression", "fromLink": "Doctrine/ORM/Query/AST/GeneralCaseExpression.html", "link": "Doctrine/ORM/Query/AST/GeneralCaseExpression.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\GeneralCaseExpression::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\GeneralCaseExpression", "fromLink": "Doctrine/ORM/Query/AST/GeneralCaseExpression.html", "link": "Doctrine/ORM/Query/AST/GeneralCaseExpression.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\GeneralCaseExpression::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/GroupByClause.html", "name": "Doctrine\\ORM\\Query\\AST\\GroupByClause", "doc": "&quot;Description of GroupByClause.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\GroupByClause", "fromLink": "Doctrine/ORM/Query/AST/GroupByClause.html", "link": "Doctrine/ORM/Query/AST/GroupByClause.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\GroupByClause::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\GroupByClause", "fromLink": "Doctrine/ORM/Query/AST/GroupByClause.html", "link": "Doctrine/ORM/Query/AST/GroupByClause.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\GroupByClause::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/HavingClause.html", "name": "Doctrine\\ORM\\Query\\AST\\HavingClause", "doc": "&quot;Description of HavingClause.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\HavingClause", "fromLink": "Doctrine/ORM/Query/AST/HavingClause.html", "link": "Doctrine/ORM/Query/AST/HavingClause.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\HavingClause::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\HavingClause", "fromLink": "Doctrine/ORM/Query/AST/HavingClause.html", "link": "Doctrine/ORM/Query/AST/HavingClause.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\HavingClause::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/IdentificationVariableDeclaration.html", "name": "Doctrine\\ORM\\Query\\AST\\IdentificationVariableDeclaration", "doc": "&quot;IdentificationVariableDeclaration ::= RangeVariableDeclaration [IndexBy] {JoinVariableDeclaration}*&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\IdentificationVariableDeclaration", "fromLink": "Doctrine/ORM/Query/AST/IdentificationVariableDeclaration.html", "link": "Doctrine/ORM/Query/AST/IdentificationVariableDeclaration.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\IdentificationVariableDeclaration::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\IdentificationVariableDeclaration", "fromLink": "Doctrine/ORM/Query/AST/IdentificationVariableDeclaration.html", "link": "Doctrine/ORM/Query/AST/IdentificationVariableDeclaration.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\IdentificationVariableDeclaration::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/InExpression.html", "name": "Doctrine\\ORM\\Query\\AST\\InExpression", "doc": "&quot;InExpression ::= StateFieldPathExpression [\&quot;NOT\&quot;] \&quot;IN\&quot; \&quot;(\&quot; (Literal {\&quot;,\&quot; Literal}* | Subselect) \&quot;)\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\InExpression", "fromLink": "Doctrine/ORM/Query/AST/InExpression.html", "link": "Doctrine/ORM/Query/AST/InExpression.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\InExpression::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\InExpression", "fromLink": "Doctrine/ORM/Query/AST/InExpression.html", "link": "Doctrine/ORM/Query/AST/InExpression.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\InExpression::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/IndexBy.html", "name": "Doctrine\\ORM\\Query\\AST\\IndexBy", "doc": "&quot;IndexBy ::= \&quot;INDEX\&quot; \&quot;BY\&quot; SimpleStateFieldPathExpression&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\IndexBy", "fromLink": "Doctrine/ORM/Query/AST/IndexBy.html", "link": "Doctrine/ORM/Query/AST/IndexBy.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\IndexBy::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\IndexBy", "fromLink": "Doctrine/ORM/Query/AST/IndexBy.html", "link": "Doctrine/ORM/Query/AST/IndexBy.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\IndexBy::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/InputParameter.html", "name": "Doctrine\\ORM\\Query\\AST\\InputParameter", "doc": "&quot;Description of InputParameter.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\InputParameter", "fromLink": "Doctrine/ORM/Query/AST/InputParameter.html", "link": "Doctrine/ORM/Query/AST/InputParameter.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\InputParameter::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\InputParameter", "fromLink": "Doctrine/ORM/Query/AST/InputParameter.html", "link": "Doctrine/ORM/Query/AST/InputParameter.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\InputParameter::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/InstanceOfExpression.html", "name": "Doctrine\\ORM\\Query\\AST\\InstanceOfExpression", "doc": "&quot;InstanceOfExpression ::= IdentificationVariable [\&quot;NOT\&quot;] \&quot;INSTANCE\&quot; [\&quot;OF\&quot;] (InstanceOfParameter | \&quot;(\&quot; InstanceOfParameter {\&quot;,\&quot; InstanceOfParameter}* \&quot;)\&quot;)\nInstanceOfParameter  ::= AbstractSchemaName | InputParameter&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\InstanceOfExpression", "fromLink": "Doctrine/ORM/Query/AST/InstanceOfExpression.html", "link": "Doctrine/ORM/Query/AST/InstanceOfExpression.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\InstanceOfExpression::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\InstanceOfExpression", "fromLink": "Doctrine/ORM/Query/AST/InstanceOfExpression.html", "link": "Doctrine/ORM/Query/AST/InstanceOfExpression.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\InstanceOfExpression::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/Join.html", "name": "Doctrine\\ORM\\Query\\AST\\Join", "doc": "&quot;Join ::= [\&quot;LEFT\&quot; [\&quot;OUTER\&quot;] | \&quot;INNER\&quot;] \&quot;JOIN\&quot; JoinAssociationPathExpression\n         [\&quot;AS\&quot;] AliasIdentificationVariable [(\&quot;ON\&quot; | \&quot;WITH\&quot;) ConditionalExpression]&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Join", "fromLink": "Doctrine/ORM/Query/AST/Join.html", "link": "Doctrine/ORM/Query/AST/Join.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\Join::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Join", "fromLink": "Doctrine/ORM/Query/AST/Join.html", "link": "Doctrine/ORM/Query/AST/Join.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\Join::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/JoinAssociationDeclaration.html", "name": "Doctrine\\ORM\\Query\\AST\\JoinAssociationDeclaration", "doc": "&quot;JoinAssociationDeclaration ::= JoinAssociationPathExpression [\&quot;AS\&quot;] AliasIdentificationVariable&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\JoinAssociationDeclaration", "fromLink": "Doctrine/ORM/Query/AST/JoinAssociationDeclaration.html", "link": "Doctrine/ORM/Query/AST/JoinAssociationDeclaration.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\JoinAssociationDeclaration::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\JoinAssociationDeclaration", "fromLink": "Doctrine/ORM/Query/AST/JoinAssociationDeclaration.html", "link": "Doctrine/ORM/Query/AST/JoinAssociationDeclaration.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\JoinAssociationDeclaration::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/JoinAssociationPathExpression.html", "name": "Doctrine\\ORM\\Query\\AST\\JoinAssociationPathExpression", "doc": "&quot;JoinAssociationPathExpression ::= IdentificationVariable \&quot;.\&quot; (SingleValuedAssociationField | CollectionValuedAssociationField)&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\JoinAssociationPathExpression", "fromLink": "Doctrine/ORM/Query/AST/JoinAssociationPathExpression.html", "link": "Doctrine/ORM/Query/AST/JoinAssociationPathExpression.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\JoinAssociationPathExpression::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\JoinAssociationPathExpression", "fromLink": "Doctrine/ORM/Query/AST/JoinAssociationPathExpression.html", "link": "Doctrine/ORM/Query/AST/JoinAssociationPathExpression.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\JoinAssociationPathExpression::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/JoinClassPathExpression.html", "name": "Doctrine\\ORM\\Query\\AST\\JoinClassPathExpression", "doc": "&quot;JoinClassPathExpression ::= AbstractSchemaName [\&quot;AS\&quot;] AliasIdentificationVariable&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\JoinClassPathExpression", "fromLink": "Doctrine/ORM/Query/AST/JoinClassPathExpression.html", "link": "Doctrine/ORM/Query/AST/JoinClassPathExpression.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\JoinClassPathExpression::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\JoinClassPathExpression", "fromLink": "Doctrine/ORM/Query/AST/JoinClassPathExpression.html", "link": "Doctrine/ORM/Query/AST/JoinClassPathExpression.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\JoinClassPathExpression::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/LikeExpression.html", "name": "Doctrine\\ORM\\Query\\AST\\LikeExpression", "doc": "&quot;LikeExpression ::= StringExpression [\&quot;NOT\&quot;] \&quot;LIKE\&quot; string [\&quot;ESCAPE\&quot; char]&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\LikeExpression", "fromLink": "Doctrine/ORM/Query/AST/LikeExpression.html", "link": "Doctrine/ORM/Query/AST/LikeExpression.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\LikeExpression::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\LikeExpression", "fromLink": "Doctrine/ORM/Query/AST/LikeExpression.html", "link": "Doctrine/ORM/Query/AST/LikeExpression.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\LikeExpression::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/Literal.html", "name": "Doctrine\\ORM\\Query\\AST\\Literal", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Literal", "fromLink": "Doctrine/ORM/Query/AST/Literal.html", "link": "Doctrine/ORM/Query/AST/Literal.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\Literal::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Literal", "fromLink": "Doctrine/ORM/Query/AST/Literal.html", "link": "Doctrine/ORM/Query/AST/Literal.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\Literal::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/NewObjectExpression.html", "name": "Doctrine\\ORM\\Query\\AST\\NewObjectExpression", "doc": "&quot;NewObjectExpression ::= \&quot;NEW\&quot; IdentificationVariable \&quot;(\&quot; NewObjectArg {\&quot;,\&quot; NewObjectArg}* \&quot;)\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\NewObjectExpression", "fromLink": "Doctrine/ORM/Query/AST/NewObjectExpression.html", "link": "Doctrine/ORM/Query/AST/NewObjectExpression.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\NewObjectExpression::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\NewObjectExpression", "fromLink": "Doctrine/ORM/Query/AST/NewObjectExpression.html", "link": "Doctrine/ORM/Query/AST/NewObjectExpression.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\NewObjectExpression::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/Node.html", "name": "Doctrine\\ORM\\Query\\AST\\Node", "doc": "&quot;Abstract class of an AST node.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Node", "fromLink": "Doctrine/ORM/Query/AST/Node.html", "link": "Doctrine/ORM/Query/AST/Node.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\Node::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Node", "fromLink": "Doctrine/ORM/Query/AST/Node.html", "link": "Doctrine/ORM/Query/AST/Node.html#method___toString", "name": "Doctrine\\ORM\\Query\\AST\\Node::__toString", "doc": "&quot;Dumps the AST Node into a string representation for information purpose only.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Node", "fromLink": "Doctrine/ORM/Query/AST/Node.html", "link": "Doctrine/ORM/Query/AST/Node.html#method_dump", "name": "Doctrine\\ORM\\Query\\AST\\Node::dump", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/NullComparisonExpression.html", "name": "Doctrine\\ORM\\Query\\AST\\NullComparisonExpression", "doc": "&quot;NullComparisonExpression ::= (SingleValuedPathExpression | InputParameter) \&quot;IS\&quot; [\&quot;NOT\&quot;] \&quot;NULL\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\NullComparisonExpression", "fromLink": "Doctrine/ORM/Query/AST/NullComparisonExpression.html", "link": "Doctrine/ORM/Query/AST/NullComparisonExpression.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\NullComparisonExpression::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\NullComparisonExpression", "fromLink": "Doctrine/ORM/Query/AST/NullComparisonExpression.html", "link": "Doctrine/ORM/Query/AST/NullComparisonExpression.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\NullComparisonExpression::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/NullIfExpression.html", "name": "Doctrine\\ORM\\Query\\AST\\NullIfExpression", "doc": "&quot;NullIfExpression ::= \&quot;NULLIF\&quot; \&quot;(\&quot; ScalarExpression \&quot;,\&quot; ScalarExpression \&quot;)\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\NullIfExpression", "fromLink": "Doctrine/ORM/Query/AST/NullIfExpression.html", "link": "Doctrine/ORM/Query/AST/NullIfExpression.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\NullIfExpression::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\NullIfExpression", "fromLink": "Doctrine/ORM/Query/AST/NullIfExpression.html", "link": "Doctrine/ORM/Query/AST/NullIfExpression.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\NullIfExpression::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/OrderByClause.html", "name": "Doctrine\\ORM\\Query\\AST\\OrderByClause", "doc": "&quot;OrderByClause ::= \&quot;ORDER\&quot; \&quot;BY\&quot; OrderByItem {\&quot;,\&quot; OrderByItem}*&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\OrderByClause", "fromLink": "Doctrine/ORM/Query/AST/OrderByClause.html", "link": "Doctrine/ORM/Query/AST/OrderByClause.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\OrderByClause::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\OrderByClause", "fromLink": "Doctrine/ORM/Query/AST/OrderByClause.html", "link": "Doctrine/ORM/Query/AST/OrderByClause.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\OrderByClause::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/OrderByItem.html", "name": "Doctrine\\ORM\\Query\\AST\\OrderByItem", "doc": "&quot;OrderByItem ::= (ResultVariable | StateFieldPathExpression) [\&quot;ASC\&quot; | \&quot;DESC\&quot;]&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\OrderByItem", "fromLink": "Doctrine/ORM/Query/AST/OrderByItem.html", "link": "Doctrine/ORM/Query/AST/OrderByItem.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\OrderByItem::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\OrderByItem", "fromLink": "Doctrine/ORM/Query/AST/OrderByItem.html", "link": "Doctrine/ORM/Query/AST/OrderByItem.html#method_isAsc", "name": "Doctrine\\ORM\\Query\\AST\\OrderByItem::isAsc", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\OrderByItem", "fromLink": "Doctrine/ORM/Query/AST/OrderByItem.html", "link": "Doctrine/ORM/Query/AST/OrderByItem.html#method_isDesc", "name": "Doctrine\\ORM\\Query\\AST\\OrderByItem::isDesc", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\OrderByItem", "fromLink": "Doctrine/ORM/Query/AST/OrderByItem.html", "link": "Doctrine/ORM/Query/AST/OrderByItem.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\OrderByItem::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/ParenthesisExpression.html", "name": "Doctrine\\ORM\\Query\\AST\\ParenthesisExpression", "doc": "&quot;ParenthesisExpression ::= \&quot;(\&quot; ArithmeticPrimary \&quot;)\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\ParenthesisExpression", "fromLink": "Doctrine/ORM/Query/AST/ParenthesisExpression.html", "link": "Doctrine/ORM/Query/AST/ParenthesisExpression.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\ParenthesisExpression::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\ParenthesisExpression", "fromLink": "Doctrine/ORM/Query/AST/ParenthesisExpression.html", "link": "Doctrine/ORM/Query/AST/ParenthesisExpression.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\ParenthesisExpression::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/PartialObjectExpression.html", "name": "Doctrine\\ORM\\Query\\AST\\PartialObjectExpression", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\PartialObjectExpression", "fromLink": "Doctrine/ORM/Query/AST/PartialObjectExpression.html", "link": "Doctrine/ORM/Query/AST/PartialObjectExpression.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\PartialObjectExpression::__construct", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/PathExpression.html", "name": "Doctrine\\ORM\\Query\\AST\\PathExpression", "doc": "&quot;AssociationPathExpression ::= CollectionValuedPathExpression | SingleValuedAssociationPathExpression\nSingleValuedPathExpression ::= StateFieldPathExpression | SingleValuedAssociationPathExpression\nStateFieldPathExpression ::= SimpleStateFieldPathExpression | SimpleStateFieldAssociationPathExpression\nSingleValuedAssociationPathExpression ::= IdentificationVariable \&quot;.\&quot; SingleValuedAssociationField\nCollectionValuedPathExpression ::= IdentificationVariable \&quot;.\&quot; CollectionValuedAssociationField\nStateField ::= {EmbeddedClassStateField \&quot;.\&quot;}* SimpleStateField\nSimpleStateFieldPathExpression ::= IdentificationVariable \&quot;.\&quot; StateField&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\PathExpression", "fromLink": "Doctrine/ORM/Query/AST/PathExpression.html", "link": "Doctrine/ORM/Query/AST/PathExpression.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\PathExpression::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\PathExpression", "fromLink": "Doctrine/ORM/Query/AST/PathExpression.html", "link": "Doctrine/ORM/Query/AST/PathExpression.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\PathExpression::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/QuantifiedExpression.html", "name": "Doctrine\\ORM\\Query\\AST\\QuantifiedExpression", "doc": "&quot;QuantifiedExpression ::= (\&quot;ALL\&quot; | \&quot;ANY\&quot; | \&quot;SOME\&quot;) \&quot;(\&quot; Subselect \&quot;)\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\QuantifiedExpression", "fromLink": "Doctrine/ORM/Query/AST/QuantifiedExpression.html", "link": "Doctrine/ORM/Query/AST/QuantifiedExpression.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\QuantifiedExpression::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\QuantifiedExpression", "fromLink": "Doctrine/ORM/Query/AST/QuantifiedExpression.html", "link": "Doctrine/ORM/Query/AST/QuantifiedExpression.html#method_isAll", "name": "Doctrine\\ORM\\Query\\AST\\QuantifiedExpression::isAll", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\QuantifiedExpression", "fromLink": "Doctrine/ORM/Query/AST/QuantifiedExpression.html", "link": "Doctrine/ORM/Query/AST/QuantifiedExpression.html#method_isAny", "name": "Doctrine\\ORM\\Query\\AST\\QuantifiedExpression::isAny", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\QuantifiedExpression", "fromLink": "Doctrine/ORM/Query/AST/QuantifiedExpression.html", "link": "Doctrine/ORM/Query/AST/QuantifiedExpression.html#method_isSome", "name": "Doctrine\\ORM\\Query\\AST\\QuantifiedExpression::isSome", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\QuantifiedExpression", "fromLink": "Doctrine/ORM/Query/AST/QuantifiedExpression.html", "link": "Doctrine/ORM/Query/AST/QuantifiedExpression.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\QuantifiedExpression::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/RangeVariableDeclaration.html", "name": "Doctrine\\ORM\\Query\\AST\\RangeVariableDeclaration", "doc": "&quot;RangeVariableDeclaration ::= AbstractSchemaName [\&quot;AS\&quot;] AliasIdentificationVariable&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\RangeVariableDeclaration", "fromLink": "Doctrine/ORM/Query/AST/RangeVariableDeclaration.html", "link": "Doctrine/ORM/Query/AST/RangeVariableDeclaration.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\RangeVariableDeclaration::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\RangeVariableDeclaration", "fromLink": "Doctrine/ORM/Query/AST/RangeVariableDeclaration.html", "link": "Doctrine/ORM/Query/AST/RangeVariableDeclaration.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\RangeVariableDeclaration::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/SelectClause.html", "name": "Doctrine\\ORM\\Query\\AST\\SelectClause", "doc": "&quot;SelectClause = \&quot;SELECT\&quot; [\&quot;DISTINCT\&quot;] SelectExpression {\&quot;,\&quot; SelectExpression}&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\SelectClause", "fromLink": "Doctrine/ORM/Query/AST/SelectClause.html", "link": "Doctrine/ORM/Query/AST/SelectClause.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\SelectClause::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\SelectClause", "fromLink": "Doctrine/ORM/Query/AST/SelectClause.html", "link": "Doctrine/ORM/Query/AST/SelectClause.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\SelectClause::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/SelectExpression.html", "name": "Doctrine\\ORM\\Query\\AST\\SelectExpression", "doc": "&quot;SelectExpression ::= IdentificationVariable [\&quot;.\&quot; \&quot;*\&quot;] | StateFieldPathExpression |\n                    (AggregateExpression | \&quot;(\&quot; Subselect \&quot;)\&quot;) [[\&quot;AS\&quot;] [\&quot;HIDDEN\&quot;] FieldAliasIdentificationVariable]&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\SelectExpression", "fromLink": "Doctrine/ORM/Query/AST/SelectExpression.html", "link": "Doctrine/ORM/Query/AST/SelectExpression.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\SelectExpression::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\SelectExpression", "fromLink": "Doctrine/ORM/Query/AST/SelectExpression.html", "link": "Doctrine/ORM/Query/AST/SelectExpression.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\SelectExpression::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/SelectStatement.html", "name": "Doctrine\\ORM\\Query\\AST\\SelectStatement", "doc": "&quot;SelectStatement = SelectClause FromClause [WhereClause] [GroupByClause] [HavingClause] [OrderByClause]&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\SelectStatement", "fromLink": "Doctrine/ORM/Query/AST/SelectStatement.html", "link": "Doctrine/ORM/Query/AST/SelectStatement.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\SelectStatement::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\SelectStatement", "fromLink": "Doctrine/ORM/Query/AST/SelectStatement.html", "link": "Doctrine/ORM/Query/AST/SelectStatement.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\SelectStatement::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/SimpleArithmeticExpression.html", "name": "Doctrine\\ORM\\Query\\AST\\SimpleArithmeticExpression", "doc": "&quot;SimpleArithmeticExpression ::= ArithmeticTerm {(\&quot;+\&quot; | \&quot;-\&quot;) ArithmeticTerm}*&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\SimpleArithmeticExpression", "fromLink": "Doctrine/ORM/Query/AST/SimpleArithmeticExpression.html", "link": "Doctrine/ORM/Query/AST/SimpleArithmeticExpression.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\SimpleArithmeticExpression::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\SimpleArithmeticExpression", "fromLink": "Doctrine/ORM/Query/AST/SimpleArithmeticExpression.html", "link": "Doctrine/ORM/Query/AST/SimpleArithmeticExpression.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\SimpleArithmeticExpression::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/SimpleCaseExpression.html", "name": "Doctrine\\ORM\\Query\\AST\\SimpleCaseExpression", "doc": "&quot;SimpleCaseExpression ::= \&quot;CASE\&quot; CaseOperand SimpleWhenClause {SimpleWhenClause}* \&quot;ELSE\&quot; ScalarExpression \&quot;END\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\SimpleCaseExpression", "fromLink": "Doctrine/ORM/Query/AST/SimpleCaseExpression.html", "link": "Doctrine/ORM/Query/AST/SimpleCaseExpression.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\SimpleCaseExpression::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\SimpleCaseExpression", "fromLink": "Doctrine/ORM/Query/AST/SimpleCaseExpression.html", "link": "Doctrine/ORM/Query/AST/SimpleCaseExpression.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\SimpleCaseExpression::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/SimpleSelectClause.html", "name": "Doctrine\\ORM\\Query\\AST\\SimpleSelectClause", "doc": "&quot;SimpleSelectClause  ::= \&quot;SELECT\&quot; [\&quot;DISTINCT\&quot;] SimpleSelectExpression&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\SimpleSelectClause", "fromLink": "Doctrine/ORM/Query/AST/SimpleSelectClause.html", "link": "Doctrine/ORM/Query/AST/SimpleSelectClause.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\SimpleSelectClause::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\SimpleSelectClause", "fromLink": "Doctrine/ORM/Query/AST/SimpleSelectClause.html", "link": "Doctrine/ORM/Query/AST/SimpleSelectClause.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\SimpleSelectClause::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/SimpleSelectExpression.html", "name": "Doctrine\\ORM\\Query\\AST\\SimpleSelectExpression", "doc": "&quot;SimpleSelectExpression ::= StateFieldPathExpression | IdentificationVariable\n                         | (AggregateExpression [[\&quot;AS\&quot;] FieldAliasIdentificationVariable])&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\SimpleSelectExpression", "fromLink": "Doctrine/ORM/Query/AST/SimpleSelectExpression.html", "link": "Doctrine/ORM/Query/AST/SimpleSelectExpression.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\SimpleSelectExpression::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\SimpleSelectExpression", "fromLink": "Doctrine/ORM/Query/AST/SimpleSelectExpression.html", "link": "Doctrine/ORM/Query/AST/SimpleSelectExpression.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\SimpleSelectExpression::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/SimpleWhenClause.html", "name": "Doctrine\\ORM\\Query\\AST\\SimpleWhenClause", "doc": "&quot;SimpleWhenClause ::= \&quot;WHEN\&quot; ScalarExpression \&quot;THEN\&quot; ScalarExpression&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\SimpleWhenClause", "fromLink": "Doctrine/ORM/Query/AST/SimpleWhenClause.html", "link": "Doctrine/ORM/Query/AST/SimpleWhenClause.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\SimpleWhenClause::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\SimpleWhenClause", "fromLink": "Doctrine/ORM/Query/AST/SimpleWhenClause.html", "link": "Doctrine/ORM/Query/AST/SimpleWhenClause.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\SimpleWhenClause::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/Subselect.html", "name": "Doctrine\\ORM\\Query\\AST\\Subselect", "doc": "&quot;Subselect ::= SimpleSelectClause SubselectFromClause [WhereClause] [GroupByClause] [HavingClause] [OrderByClause]&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Subselect", "fromLink": "Doctrine/ORM/Query/AST/Subselect.html", "link": "Doctrine/ORM/Query/AST/Subselect.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\Subselect::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\Subselect", "fromLink": "Doctrine/ORM/Query/AST/Subselect.html", "link": "Doctrine/ORM/Query/AST/Subselect.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\Subselect::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/SubselectFromClause.html", "name": "Doctrine\\ORM\\Query\\AST\\SubselectFromClause", "doc": "&quot;SubselectFromClause ::= \&quot;FROM\&quot; SubselectIdentificationVariableDeclaration {\&quot;,\&quot; SubselectIdentificationVariableDeclaration}*&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\SubselectFromClause", "fromLink": "Doctrine/ORM/Query/AST/SubselectFromClause.html", "link": "Doctrine/ORM/Query/AST/SubselectFromClause.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\SubselectFromClause::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\SubselectFromClause", "fromLink": "Doctrine/ORM/Query/AST/SubselectFromClause.html", "link": "Doctrine/ORM/Query/AST/SubselectFromClause.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\SubselectFromClause::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/UpdateClause.html", "name": "Doctrine\\ORM\\Query\\AST\\UpdateClause", "doc": "&quot;UpdateClause ::= \&quot;UPDATE\&quot; AbstractSchemaName [[\&quot;AS\&quot;] AliasIdentificationVariable] \&quot;SET\&quot; UpdateItem {\&quot;,\&quot; UpdateItem}*&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\UpdateClause", "fromLink": "Doctrine/ORM/Query/AST/UpdateClause.html", "link": "Doctrine/ORM/Query/AST/UpdateClause.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\UpdateClause::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\UpdateClause", "fromLink": "Doctrine/ORM/Query/AST/UpdateClause.html", "link": "Doctrine/ORM/Query/AST/UpdateClause.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\UpdateClause::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/UpdateItem.html", "name": "Doctrine\\ORM\\Query\\AST\\UpdateItem", "doc": "&quot;UpdateItem ::= [IdentificationVariable \&quot;.\&quot;] {StateField | SingleValuedAssociationField} \&quot;=\&quot; NewValue\nNewValue ::= SimpleArithmeticExpression | StringPrimary | DatetimePrimary | BooleanPrimary |\n             EnumPrimary | SimpleEntityExpression | \&quot;NULL\&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\UpdateItem", "fromLink": "Doctrine/ORM/Query/AST/UpdateItem.html", "link": "Doctrine/ORM/Query/AST/UpdateItem.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\UpdateItem::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\UpdateItem", "fromLink": "Doctrine/ORM/Query/AST/UpdateItem.html", "link": "Doctrine/ORM/Query/AST/UpdateItem.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\UpdateItem::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/UpdateStatement.html", "name": "Doctrine\\ORM\\Query\\AST\\UpdateStatement", "doc": "&quot;UpdateStatement = UpdateClause [WhereClause]&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\UpdateStatement", "fromLink": "Doctrine/ORM/Query/AST/UpdateStatement.html", "link": "Doctrine/ORM/Query/AST/UpdateStatement.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\UpdateStatement::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\UpdateStatement", "fromLink": "Doctrine/ORM/Query/AST/UpdateStatement.html", "link": "Doctrine/ORM/Query/AST/UpdateStatement.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\UpdateStatement::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/WhenClause.html", "name": "Doctrine\\ORM\\Query\\AST\\WhenClause", "doc": "&quot;WhenClause ::= \&quot;WHEN\&quot; ConditionalExpression \&quot;THEN\&quot; ScalarExpression&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\WhenClause", "fromLink": "Doctrine/ORM/Query/AST/WhenClause.html", "link": "Doctrine/ORM/Query/AST/WhenClause.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\WhenClause::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\WhenClause", "fromLink": "Doctrine/ORM/Query/AST/WhenClause.html", "link": "Doctrine/ORM/Query/AST/WhenClause.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\WhenClause::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\AST", "fromLink": "Doctrine/ORM/Query/AST.html", "link": "Doctrine/ORM/Query/AST/WhereClause.html", "name": "Doctrine\\ORM\\Query\\AST\\WhereClause", "doc": "&quot;WhereClause ::= \&quot;WHERE\&quot; ConditionalExpression&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\WhereClause", "fromLink": "Doctrine/ORM/Query/AST/WhereClause.html", "link": "Doctrine/ORM/Query/AST/WhereClause.html#method___construct", "name": "Doctrine\\ORM\\Query\\AST\\WhereClause::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\AST\\WhereClause", "fromLink": "Doctrine/ORM/Query/AST/WhereClause.html", "link": "Doctrine/ORM/Query/AST/WhereClause.html#method_dispatch", "name": "Doctrine\\ORM\\Query\\AST\\WhereClause::dispatch", "doc": "&quot;Double-dispatch method, supposed to dispatch back to the walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\Exec", "fromLink": "Doctrine/ORM/Query/Exec.html", "link": "Doctrine/ORM/Query/Exec/AbstractSqlExecutor.html", "name": "Doctrine\\ORM\\Query\\Exec\\AbstractSqlExecutor", "doc": "&quot;Base class for SQL statement executors.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Exec\\AbstractSqlExecutor", "fromLink": "Doctrine/ORM/Query/Exec/AbstractSqlExecutor.html", "link": "Doctrine/ORM/Query/Exec/AbstractSqlExecutor.html#method_getSqlStatements", "name": "Doctrine\\ORM\\Query\\Exec\\AbstractSqlExecutor::getSqlStatements", "doc": "&quot;Gets the SQL statements that are executed by the executor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Exec\\AbstractSqlExecutor", "fromLink": "Doctrine/ORM/Query/Exec/AbstractSqlExecutor.html", "link": "Doctrine/ORM/Query/Exec/AbstractSqlExecutor.html#method_setQueryCacheProfile", "name": "Doctrine\\ORM\\Query\\Exec\\AbstractSqlExecutor::setQueryCacheProfile", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Exec\\AbstractSqlExecutor", "fromLink": "Doctrine/ORM/Query/Exec/AbstractSqlExecutor.html", "link": "Doctrine/ORM/Query/Exec/AbstractSqlExecutor.html#method_execute", "name": "Doctrine\\ORM\\Query\\Exec\\AbstractSqlExecutor::execute", "doc": "&quot;Executes all sql statements.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\Exec", "fromLink": "Doctrine/ORM/Query/Exec.html", "link": "Doctrine/ORM/Query/Exec/MultiTableDeleteExecutor.html", "name": "Doctrine\\ORM\\Query\\Exec\\MultiTableDeleteExecutor", "doc": "&quot;Executes the SQL statements for bulk DQL DELETE statements on classes in\nClass Table Inheritance (JOINED).&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Exec\\MultiTableDeleteExecutor", "fromLink": "Doctrine/ORM/Query/Exec/MultiTableDeleteExecutor.html", "link": "Doctrine/ORM/Query/Exec/MultiTableDeleteExecutor.html#method___construct", "name": "Doctrine\\ORM\\Query\\Exec\\MultiTableDeleteExecutor::__construct", "doc": "&quot;Initializes a new &lt;tt&gt;MultiTableDeleteExecutor&lt;\/tt&gt;.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Exec\\MultiTableDeleteExecutor", "fromLink": "Doctrine/ORM/Query/Exec/MultiTableDeleteExecutor.html", "link": "Doctrine/ORM/Query/Exec/MultiTableDeleteExecutor.html#method_execute", "name": "Doctrine\\ORM\\Query\\Exec\\MultiTableDeleteExecutor::execute", "doc": "&quot;Executes all sql statements.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\Exec", "fromLink": "Doctrine/ORM/Query/Exec.html", "link": "Doctrine/ORM/Query/Exec/MultiTableUpdateExecutor.html", "name": "Doctrine\\ORM\\Query\\Exec\\MultiTableUpdateExecutor", "doc": "&quot;Executes the SQL statements for bulk DQL UPDATE statements on classes in\nClass Table Inheritance (JOINED).&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Exec\\MultiTableUpdateExecutor", "fromLink": "Doctrine/ORM/Query/Exec/MultiTableUpdateExecutor.html", "link": "Doctrine/ORM/Query/Exec/MultiTableUpdateExecutor.html#method___construct", "name": "Doctrine\\ORM\\Query\\Exec\\MultiTableUpdateExecutor::__construct", "doc": "&quot;Initializes a new &lt;tt&gt;MultiTableUpdateExecutor&lt;\/tt&gt;.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Exec\\MultiTableUpdateExecutor", "fromLink": "Doctrine/ORM/Query/Exec/MultiTableUpdateExecutor.html", "link": "Doctrine/ORM/Query/Exec/MultiTableUpdateExecutor.html#method_execute", "name": "Doctrine\\ORM\\Query\\Exec\\MultiTableUpdateExecutor::execute", "doc": "&quot;Executes all sql statements.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\Exec", "fromLink": "Doctrine/ORM/Query/Exec.html", "link": "Doctrine/ORM/Query/Exec/SingleSelectExecutor.html", "name": "Doctrine\\ORM\\Query\\Exec\\SingleSelectExecutor", "doc": "&quot;Executor that executes the SQL statement for simple DQL SELECT statements.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Exec\\SingleSelectExecutor", "fromLink": "Doctrine/ORM/Query/Exec/SingleSelectExecutor.html", "link": "Doctrine/ORM/Query/Exec/SingleSelectExecutor.html#method___construct", "name": "Doctrine\\ORM\\Query\\Exec\\SingleSelectExecutor::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Exec\\SingleSelectExecutor", "fromLink": "Doctrine/ORM/Query/Exec/SingleSelectExecutor.html", "link": "Doctrine/ORM/Query/Exec/SingleSelectExecutor.html#method_execute", "name": "Doctrine\\ORM\\Query\\Exec\\SingleSelectExecutor::execute", "doc": "&quot;Executes all sql statements.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\Exec", "fromLink": "Doctrine/ORM/Query/Exec.html", "link": "Doctrine/ORM/Query/Exec/SingleTableDeleteUpdateExecutor.html", "name": "Doctrine\\ORM\\Query\\Exec\\SingleTableDeleteUpdateExecutor", "doc": "&quot;Executor that executes the SQL statements for DQL DELETE\/UPDATE statements on classes\nthat are mapped to a single table.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Exec\\SingleTableDeleteUpdateExecutor", "fromLink": "Doctrine/ORM/Query/Exec/SingleTableDeleteUpdateExecutor.html", "link": "Doctrine/ORM/Query/Exec/SingleTableDeleteUpdateExecutor.html#method___construct", "name": "Doctrine\\ORM\\Query\\Exec\\SingleTableDeleteUpdateExecutor::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Exec\\SingleTableDeleteUpdateExecutor", "fromLink": "Doctrine/ORM/Query/Exec/SingleTableDeleteUpdateExecutor.html", "link": "Doctrine/ORM/Query/Exec/SingleTableDeleteUpdateExecutor.html#method_execute", "name": "Doctrine\\ORM\\Query\\Exec\\SingleTableDeleteUpdateExecutor::execute", "doc": "&quot;Executes all sql statements.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query/Expr.html", "name": "Doctrine\\ORM\\Query\\Expr", "doc": "&quot;This class is used to generate DQL expressions via a set of PHP static functions.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_andX", "name": "Doctrine\\ORM\\Query\\Expr::andX", "doc": "&quot;Creates a conjunction of the given boolean expressions.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_orX", "name": "Doctrine\\ORM\\Query\\Expr::orX", "doc": "&quot;Creates a disjunction of the given boolean expressions.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_asc", "name": "Doctrine\\ORM\\Query\\Expr::asc", "doc": "&quot;Creates an ASCending order expression.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_desc", "name": "Doctrine\\ORM\\Query\\Expr::desc", "doc": "&quot;Creates a DESCending order expression.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_eq", "name": "Doctrine\\ORM\\Query\\Expr::eq", "doc": "&quot;Creates an equality comparison expression with the given arguments.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_neq", "name": "Doctrine\\ORM\\Query\\Expr::neq", "doc": "&quot;Creates an instance of Expr\\Comparison, with the given arguments.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_lt", "name": "Doctrine\\ORM\\Query\\Expr::lt", "doc": "&quot;Creates an instance of Expr\\Comparison, with the given arguments.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_lte", "name": "Doctrine\\ORM\\Query\\Expr::lte", "doc": "&quot;Creates an instance of Expr\\Comparison, with the given arguments.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_gt", "name": "Doctrine\\ORM\\Query\\Expr::gt", "doc": "&quot;Creates an instance of Expr\\Comparison, with the given arguments.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_gte", "name": "Doctrine\\ORM\\Query\\Expr::gte", "doc": "&quot;Creates an instance of Expr\\Comparison, with the given arguments.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_avg", "name": "Doctrine\\ORM\\Query\\Expr::avg", "doc": "&quot;Creates an instance of AVG() function, with the given argument.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_max", "name": "Doctrine\\ORM\\Query\\Expr::max", "doc": "&quot;Creates an instance of MAX() function, with the given argument.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_min", "name": "Doctrine\\ORM\\Query\\Expr::min", "doc": "&quot;Creates an instance of MIN() function, with the given argument.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_count", "name": "Doctrine\\ORM\\Query\\Expr::count", "doc": "&quot;Creates an instance of COUNT() function, with the given argument.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_countDistinct", "name": "Doctrine\\ORM\\Query\\Expr::countDistinct", "doc": "&quot;Creates an instance of COUNT(DISTINCT) function, with the given argument.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_exists", "name": "Doctrine\\ORM\\Query\\Expr::exists", "doc": "&quot;Creates an instance of EXISTS() function, with the given DQL Subquery.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_all", "name": "Doctrine\\ORM\\Query\\Expr::all", "doc": "&quot;Creates an instance of ALL() function, with the given DQL Subquery.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_some", "name": "Doctrine\\ORM\\Query\\Expr::some", "doc": "&quot;Creates a SOME() function expression with the given DQL subquery.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_any", "name": "Doctrine\\ORM\\Query\\Expr::any", "doc": "&quot;Creates an ANY() function expression with the given DQL subquery.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_not", "name": "Doctrine\\ORM\\Query\\Expr::not", "doc": "&quot;Creates a negation expression of the given restriction.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_abs", "name": "Doctrine\\ORM\\Query\\Expr::abs", "doc": "&quot;Creates an ABS() function expression with the given argument.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_prod", "name": "Doctrine\\ORM\\Query\\Expr::prod", "doc": "&quot;Creates a product mathematical expression with the given arguments.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_diff", "name": "Doctrine\\ORM\\Query\\Expr::diff", "doc": "&quot;Creates a difference mathematical expression with the given arguments.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_sum", "name": "Doctrine\\ORM\\Query\\Expr::sum", "doc": "&quot;Creates a sum mathematical expression with the given arguments.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_quot", "name": "Doctrine\\ORM\\Query\\Expr::quot", "doc": "&quot;Creates a quotient mathematical expression with the given arguments.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_sqrt", "name": "Doctrine\\ORM\\Query\\Expr::sqrt", "doc": "&quot;Creates a SQRT() function expression with the given argument.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_in", "name": "Doctrine\\ORM\\Query\\Expr::in", "doc": "&quot;Creates an IN() expression with the given arguments.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_notIn", "name": "Doctrine\\ORM\\Query\\Expr::notIn", "doc": "&quot;Creates a NOT IN() expression with the given arguments.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_isNull", "name": "Doctrine\\ORM\\Query\\Expr::isNull", "doc": "&quot;Creates an IS NULL expression with the given arguments.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_isNotNull", "name": "Doctrine\\ORM\\Query\\Expr::isNotNull", "doc": "&quot;Creates an IS NOT NULL expression with the given arguments.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_like", "name": "Doctrine\\ORM\\Query\\Expr::like", "doc": "&quot;Creates a LIKE() comparison expression with the given arguments.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_notLike", "name": "Doctrine\\ORM\\Query\\Expr::notLike", "doc": "&quot;Creates a NOT LIKE() comparison expression with the given arguments.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_concat", "name": "Doctrine\\ORM\\Query\\Expr::concat", "doc": "&quot;Creates a CONCAT() function expression with the given arguments.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_substring", "name": "Doctrine\\ORM\\Query\\Expr::substring", "doc": "&quot;Creates a SUBSTRING() function expression with the given arguments.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_lower", "name": "Doctrine\\ORM\\Query\\Expr::lower", "doc": "&quot;Creates a LOWER() function expression with the given argument.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_upper", "name": "Doctrine\\ORM\\Query\\Expr::upper", "doc": "&quot;Creates an UPPER() function expression with the given argument.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_length", "name": "Doctrine\\ORM\\Query\\Expr::length", "doc": "&quot;Creates a LENGTH() function expression with the given argument.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_literal", "name": "Doctrine\\ORM\\Query\\Expr::literal", "doc": "&quot;Creates a literal expression of the given argument.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_between", "name": "Doctrine\\ORM\\Query\\Expr::between", "doc": "&quot;Creates an instance of BETWEEN() function, with the given argument.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr.html#method_trim", "name": "Doctrine\\ORM\\Query\\Expr::trim", "doc": "&quot;Creates an instance of TRIM() function, with the given argument.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr/Andx.html", "name": "Doctrine\\ORM\\Query\\Expr\\Andx", "doc": "&quot;Expression class for building DQL and parts.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Andx", "fromLink": "Doctrine/ORM/Query/Expr/Andx.html", "link": "Doctrine/ORM/Query/Expr/Andx.html#method_getParts", "name": "Doctrine\\ORM\\Query\\Expr\\Andx::getParts", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr/Base.html", "name": "Doctrine\\ORM\\Query\\Expr\\Base", "doc": "&quot;Abstract base Expr class for building DQL parts.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Base", "fromLink": "Doctrine/ORM/Query/Expr/Base.html", "link": "Doctrine/ORM/Query/Expr/Base.html#method___construct", "name": "Doctrine\\ORM\\Query\\Expr\\Base::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Base", "fromLink": "Doctrine/ORM/Query/Expr/Base.html", "link": "Doctrine/ORM/Query/Expr/Base.html#method_addMultiple", "name": "Doctrine\\ORM\\Query\\Expr\\Base::addMultiple", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Base", "fromLink": "Doctrine/ORM/Query/Expr/Base.html", "link": "Doctrine/ORM/Query/Expr/Base.html#method_add", "name": "Doctrine\\ORM\\Query\\Expr\\Base::add", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Base", "fromLink": "Doctrine/ORM/Query/Expr/Base.html", "link": "Doctrine/ORM/Query/Expr/Base.html#method_count", "name": "Doctrine\\ORM\\Query\\Expr\\Base::count", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Base", "fromLink": "Doctrine/ORM/Query/Expr/Base.html", "link": "Doctrine/ORM/Query/Expr/Base.html#method___toString", "name": "Doctrine\\ORM\\Query\\Expr\\Base::__toString", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr/Comparison.html", "name": "Doctrine\\ORM\\Query\\Expr\\Comparison", "doc": "&quot;Expression class for DQL comparison expressions.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Comparison", "fromLink": "Doctrine/ORM/Query/Expr/Comparison.html", "link": "Doctrine/ORM/Query/Expr/Comparison.html#method___construct", "name": "Doctrine\\ORM\\Query\\Expr\\Comparison::__construct", "doc": "&quot;Creates a comparison expression with the given arguments.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Comparison", "fromLink": "Doctrine/ORM/Query/Expr/Comparison.html", "link": "Doctrine/ORM/Query/Expr/Comparison.html#method_getLeftExpr", "name": "Doctrine\\ORM\\Query\\Expr\\Comparison::getLeftExpr", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Comparison", "fromLink": "Doctrine/ORM/Query/Expr/Comparison.html", "link": "Doctrine/ORM/Query/Expr/Comparison.html#method_getOperator", "name": "Doctrine\\ORM\\Query\\Expr\\Comparison::getOperator", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Comparison", "fromLink": "Doctrine/ORM/Query/Expr/Comparison.html", "link": "Doctrine/ORM/Query/Expr/Comparison.html#method_getRightExpr", "name": "Doctrine\\ORM\\Query\\Expr\\Comparison::getRightExpr", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Comparison", "fromLink": "Doctrine/ORM/Query/Expr/Comparison.html", "link": "Doctrine/ORM/Query/Expr/Comparison.html#method___toString", "name": "Doctrine\\ORM\\Query\\Expr\\Comparison::__toString", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr/Composite.html", "name": "Doctrine\\ORM\\Query\\Expr\\Composite", "doc": "&quot;Expression class for building DQL and parts.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Composite", "fromLink": "Doctrine/ORM/Query/Expr/Composite.html", "link": "Doctrine/ORM/Query/Expr/Composite.html#method___toString", "name": "Doctrine\\ORM\\Query\\Expr\\Composite::__toString", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr/From.html", "name": "Doctrine\\ORM\\Query\\Expr\\From", "doc": "&quot;Expression class for DQL from.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\From", "fromLink": "Doctrine/ORM/Query/Expr/From.html", "link": "Doctrine/ORM/Query/Expr/From.html#method___construct", "name": "Doctrine\\ORM\\Query\\Expr\\From::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\From", "fromLink": "Doctrine/ORM/Query/Expr/From.html", "link": "Doctrine/ORM/Query/Expr/From.html#method_getFrom", "name": "Doctrine\\ORM\\Query\\Expr\\From::getFrom", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\From", "fromLink": "Doctrine/ORM/Query/Expr/From.html", "link": "Doctrine/ORM/Query/Expr/From.html#method_getAlias", "name": "Doctrine\\ORM\\Query\\Expr\\From::getAlias", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\From", "fromLink": "Doctrine/ORM/Query/Expr/From.html", "link": "Doctrine/ORM/Query/Expr/From.html#method_getIndexBy", "name": "Doctrine\\ORM\\Query\\Expr\\From::getIndexBy", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\From", "fromLink": "Doctrine/ORM/Query/Expr/From.html", "link": "Doctrine/ORM/Query/Expr/From.html#method___toString", "name": "Doctrine\\ORM\\Query\\Expr\\From::__toString", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr/Func.html", "name": "Doctrine\\ORM\\Query\\Expr\\Func", "doc": "&quot;Expression class for generating DQL functions.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Func", "fromLink": "Doctrine/ORM/Query/Expr/Func.html", "link": "Doctrine/ORM/Query/Expr/Func.html#method___construct", "name": "Doctrine\\ORM\\Query\\Expr\\Func::__construct", "doc": "&quot;Creates a function, with the given argument.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Func", "fromLink": "Doctrine/ORM/Query/Expr/Func.html", "link": "Doctrine/ORM/Query/Expr/Func.html#method_getName", "name": "Doctrine\\ORM\\Query\\Expr\\Func::getName", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Func", "fromLink": "Doctrine/ORM/Query/Expr/Func.html", "link": "Doctrine/ORM/Query/Expr/Func.html#method_getArguments", "name": "Doctrine\\ORM\\Query\\Expr\\Func::getArguments", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Func", "fromLink": "Doctrine/ORM/Query/Expr/Func.html", "link": "Doctrine/ORM/Query/Expr/Func.html#method___toString", "name": "Doctrine\\ORM\\Query\\Expr\\Func::__toString", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr/GroupBy.html", "name": "Doctrine\\ORM\\Query\\Expr\\GroupBy", "doc": "&quot;Expression class for building DQL Group By parts.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\GroupBy", "fromLink": "Doctrine/ORM/Query/Expr/GroupBy.html", "link": "Doctrine/ORM/Query/Expr/GroupBy.html#method_getParts", "name": "Doctrine\\ORM\\Query\\Expr\\GroupBy::getParts", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr/Join.html", "name": "Doctrine\\ORM\\Query\\Expr\\Join", "doc": "&quot;Expression class for DQL join.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Join", "fromLink": "Doctrine/ORM/Query/Expr/Join.html", "link": "Doctrine/ORM/Query/Expr/Join.html#method___construct", "name": "Doctrine\\ORM\\Query\\Expr\\Join::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Join", "fromLink": "Doctrine/ORM/Query/Expr/Join.html", "link": "Doctrine/ORM/Query/Expr/Join.html#method_getJoinType", "name": "Doctrine\\ORM\\Query\\Expr\\Join::getJoinType", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Join", "fromLink": "Doctrine/ORM/Query/Expr/Join.html", "link": "Doctrine/ORM/Query/Expr/Join.html#method_getJoin", "name": "Doctrine\\ORM\\Query\\Expr\\Join::getJoin", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Join", "fromLink": "Doctrine/ORM/Query/Expr/Join.html", "link": "Doctrine/ORM/Query/Expr/Join.html#method_getAlias", "name": "Doctrine\\ORM\\Query\\Expr\\Join::getAlias", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Join", "fromLink": "Doctrine/ORM/Query/Expr/Join.html", "link": "Doctrine/ORM/Query/Expr/Join.html#method_getConditionType", "name": "Doctrine\\ORM\\Query\\Expr\\Join::getConditionType", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Join", "fromLink": "Doctrine/ORM/Query/Expr/Join.html", "link": "Doctrine/ORM/Query/Expr/Join.html#method_getCondition", "name": "Doctrine\\ORM\\Query\\Expr\\Join::getCondition", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Join", "fromLink": "Doctrine/ORM/Query/Expr/Join.html", "link": "Doctrine/ORM/Query/Expr/Join.html#method_getIndexBy", "name": "Doctrine\\ORM\\Query\\Expr\\Join::getIndexBy", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Join", "fromLink": "Doctrine/ORM/Query/Expr/Join.html", "link": "Doctrine/ORM/Query/Expr/Join.html#method___toString", "name": "Doctrine\\ORM\\Query\\Expr\\Join::__toString", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr/Literal.html", "name": "Doctrine\\ORM\\Query\\Expr\\Literal", "doc": "&quot;Expression class for generating DQL functions.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Literal", "fromLink": "Doctrine/ORM/Query/Expr/Literal.html", "link": "Doctrine/ORM/Query/Expr/Literal.html#method_getParts", "name": "Doctrine\\ORM\\Query\\Expr\\Literal::getParts", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr/Math.html", "name": "Doctrine\\ORM\\Query\\Expr\\Math", "doc": "&quot;Expression class for DQL math statements.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Math", "fromLink": "Doctrine/ORM/Query/Expr/Math.html", "link": "Doctrine/ORM/Query/Expr/Math.html#method___construct", "name": "Doctrine\\ORM\\Query\\Expr\\Math::__construct", "doc": "&quot;Creates a mathematical expression with the given arguments.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Math", "fromLink": "Doctrine/ORM/Query/Expr/Math.html", "link": "Doctrine/ORM/Query/Expr/Math.html#method_getLeftExpr", "name": "Doctrine\\ORM\\Query\\Expr\\Math::getLeftExpr", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Math", "fromLink": "Doctrine/ORM/Query/Expr/Math.html", "link": "Doctrine/ORM/Query/Expr/Math.html#method_getOperator", "name": "Doctrine\\ORM\\Query\\Expr\\Math::getOperator", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Math", "fromLink": "Doctrine/ORM/Query/Expr/Math.html", "link": "Doctrine/ORM/Query/Expr/Math.html#method_getRightExpr", "name": "Doctrine\\ORM\\Query\\Expr\\Math::getRightExpr", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Math", "fromLink": "Doctrine/ORM/Query/Expr/Math.html", "link": "Doctrine/ORM/Query/Expr/Math.html#method___toString", "name": "Doctrine\\ORM\\Query\\Expr\\Math::__toString", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr/OrderBy.html", "name": "Doctrine\\ORM\\Query\\Expr\\OrderBy", "doc": "&quot;Expression class for building DQL Order By parts.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\OrderBy", "fromLink": "Doctrine/ORM/Query/Expr/OrderBy.html", "link": "Doctrine/ORM/Query/Expr/OrderBy.html#method___construct", "name": "Doctrine\\ORM\\Query\\Expr\\OrderBy::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\OrderBy", "fromLink": "Doctrine/ORM/Query/Expr/OrderBy.html", "link": "Doctrine/ORM/Query/Expr/OrderBy.html#method_add", "name": "Doctrine\\ORM\\Query\\Expr\\OrderBy::add", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\OrderBy", "fromLink": "Doctrine/ORM/Query/Expr/OrderBy.html", "link": "Doctrine/ORM/Query/Expr/OrderBy.html#method_count", "name": "Doctrine\\ORM\\Query\\Expr\\OrderBy::count", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\OrderBy", "fromLink": "Doctrine/ORM/Query/Expr/OrderBy.html", "link": "Doctrine/ORM/Query/Expr/OrderBy.html#method_getParts", "name": "Doctrine\\ORM\\Query\\Expr\\OrderBy::getParts", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\OrderBy", "fromLink": "Doctrine/ORM/Query/Expr/OrderBy.html", "link": "Doctrine/ORM/Query/Expr/OrderBy.html#method___tostring", "name": "Doctrine\\ORM\\Query\\Expr\\OrderBy::__tostring", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr/Orx.html", "name": "Doctrine\\ORM\\Query\\Expr\\Orx", "doc": "&quot;Expression class for building DQL OR clauses.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Orx", "fromLink": "Doctrine/ORM/Query/Expr/Orx.html", "link": "Doctrine/ORM/Query/Expr/Orx.html#method_getParts", "name": "Doctrine\\ORM\\Query\\Expr\\Orx::getParts", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\Expr", "fromLink": "Doctrine/ORM/Query/Expr.html", "link": "Doctrine/ORM/Query/Expr/Select.html", "name": "Doctrine\\ORM\\Query\\Expr\\Select", "doc": "&quot;Expression class for building DQL select statements.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Expr\\Select", "fromLink": "Doctrine/ORM/Query/Expr/Select.html", "link": "Doctrine/ORM/Query/Expr/Select.html#method_getParts", "name": "Doctrine\\ORM\\Query\\Expr\\Select::getParts", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query/FilterCollection.html", "name": "Doctrine\\ORM\\Query\\FilterCollection", "doc": "&quot;Collection class for all the query filters.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\FilterCollection", "fromLink": "Doctrine/ORM/Query/FilterCollection.html", "link": "Doctrine/ORM/Query/FilterCollection.html#method___construct", "name": "Doctrine\\ORM\\Query\\FilterCollection::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\FilterCollection", "fromLink": "Doctrine/ORM/Query/FilterCollection.html", "link": "Doctrine/ORM/Query/FilterCollection.html#method_getEnabledFilters", "name": "Doctrine\\ORM\\Query\\FilterCollection::getEnabledFilters", "doc": "&quot;Gets all the enabled filters.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\FilterCollection", "fromLink": "Doctrine/ORM/Query/FilterCollection.html", "link": "Doctrine/ORM/Query/FilterCollection.html#method_enable", "name": "Doctrine\\ORM\\Query\\FilterCollection::enable", "doc": "&quot;Enables a filter from the collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\FilterCollection", "fromLink": "Doctrine/ORM/Query/FilterCollection.html", "link": "Doctrine/ORM/Query/FilterCollection.html#method_disable", "name": "Doctrine\\ORM\\Query\\FilterCollection::disable", "doc": "&quot;Disables a filter.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\FilterCollection", "fromLink": "Doctrine/ORM/Query/FilterCollection.html", "link": "Doctrine/ORM/Query/FilterCollection.html#method_getFilter", "name": "Doctrine\\ORM\\Query\\FilterCollection::getFilter", "doc": "&quot;Gets an enabled filter from the collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\FilterCollection", "fromLink": "Doctrine/ORM/Query/FilterCollection.html", "link": "Doctrine/ORM/Query/FilterCollection.html#method_isEnabled", "name": "Doctrine\\ORM\\Query\\FilterCollection::isEnabled", "doc": "&quot;Checks if a filter is enabled.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\FilterCollection", "fromLink": "Doctrine/ORM/Query/FilterCollection.html", "link": "Doctrine/ORM/Query/FilterCollection.html#method_isClean", "name": "Doctrine\\ORM\\Query\\FilterCollection::isClean", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\FilterCollection", "fromLink": "Doctrine/ORM/Query/FilterCollection.html", "link": "Doctrine/ORM/Query/FilterCollection.html#method_getHash", "name": "Doctrine\\ORM\\Query\\FilterCollection::getHash", "doc": "&quot;Generates a string of currently enabled filters to use for the cache id.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\FilterCollection", "fromLink": "Doctrine/ORM/Query/FilterCollection.html", "link": "Doctrine/ORM/Query/FilterCollection.html#method_setFiltersStateDirty", "name": "Doctrine\\ORM\\Query\\FilterCollection::setFiltersStateDirty", "doc": "&quot;Sets the filter state to dirty.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query\\Filter", "fromLink": "Doctrine/ORM/Query/Filter.html", "link": "Doctrine/ORM/Query/Filter/SQLFilter.html", "name": "Doctrine\\ORM\\Query\\Filter\\SQLFilter", "doc": "&quot;The base class that user defined filters should extend.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Filter\\SQLFilter", "fromLink": "Doctrine/ORM/Query/Filter/SQLFilter.html", "link": "Doctrine/ORM/Query/Filter/SQLFilter.html#method___construct", "name": "Doctrine\\ORM\\Query\\Filter\\SQLFilter::__construct", "doc": "&quot;Constructs the SQLFilter object.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Filter\\SQLFilter", "fromLink": "Doctrine/ORM/Query/Filter/SQLFilter.html", "link": "Doctrine/ORM/Query/Filter/SQLFilter.html#method_setParameter", "name": "Doctrine\\ORM\\Query\\Filter\\SQLFilter::setParameter", "doc": "&quot;Sets a parameter that can be used by the filter.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Filter\\SQLFilter", "fromLink": "Doctrine/ORM/Query/Filter/SQLFilter.html", "link": "Doctrine/ORM/Query/Filter/SQLFilter.html#method_getParameter", "name": "Doctrine\\ORM\\Query\\Filter\\SQLFilter::getParameter", "doc": "&quot;Gets a parameter to use in a query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Filter\\SQLFilter", "fromLink": "Doctrine/ORM/Query/Filter/SQLFilter.html", "link": "Doctrine/ORM/Query/Filter/SQLFilter.html#method___toString", "name": "Doctrine\\ORM\\Query\\Filter\\SQLFilter::__toString", "doc": "&quot;Returns as string representation of the SQLFilter parameters (the state).&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Filter\\SQLFilter", "fromLink": "Doctrine/ORM/Query/Filter/SQLFilter.html", "link": "Doctrine/ORM/Query/Filter/SQLFilter.html#method_addFilterConstraint", "name": "Doctrine\\ORM\\Query\\Filter\\SQLFilter::addFilterConstraint", "doc": "&quot;Gets the SQL query part to add to a query.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query/Lexer.html", "name": "Doctrine\\ORM\\Query\\Lexer", "doc": "&quot;Scans a DQL query for tokens.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Lexer", "fromLink": "Doctrine/ORM/Query/Lexer.html", "link": "Doctrine/ORM/Query/Lexer.html#method___construct", "name": "Doctrine\\ORM\\Query\\Lexer::__construct", "doc": "&quot;Creates a new query scanner object.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Lexer", "fromLink": "Doctrine/ORM/Query/Lexer.html", "link": "Doctrine/ORM/Query/Lexer.html#method_getCatchablePatterns", "name": "Doctrine\\ORM\\Query\\Lexer::getCatchablePatterns", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Lexer", "fromLink": "Doctrine/ORM/Query/Lexer.html", "link": "Doctrine/ORM/Query/Lexer.html#method_getNonCatchablePatterns", "name": "Doctrine\\ORM\\Query\\Lexer::getNonCatchablePatterns", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Lexer", "fromLink": "Doctrine/ORM/Query/Lexer.html", "link": "Doctrine/ORM/Query/Lexer.html#method_getType", "name": "Doctrine\\ORM\\Query\\Lexer::getType", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query/Parameter.html", "name": "Doctrine\\ORM\\Query\\Parameter", "doc": "&quot;Defines a Query Parameter.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parameter", "fromLink": "Doctrine/ORM/Query/Parameter.html", "link": "Doctrine/ORM/Query/Parameter.html#method___construct", "name": "Doctrine\\ORM\\Query\\Parameter::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parameter", "fromLink": "Doctrine/ORM/Query/Parameter.html", "link": "Doctrine/ORM/Query/Parameter.html#method_getName", "name": "Doctrine\\ORM\\Query\\Parameter::getName", "doc": "&quot;Retrieves the Parameter name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parameter", "fromLink": "Doctrine/ORM/Query/Parameter.html", "link": "Doctrine/ORM/Query/Parameter.html#method_getValue", "name": "Doctrine\\ORM\\Query\\Parameter::getValue", "doc": "&quot;Retrieves the Parameter value.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parameter", "fromLink": "Doctrine/ORM/Query/Parameter.html", "link": "Doctrine/ORM/Query/Parameter.html#method_getType", "name": "Doctrine\\ORM\\Query\\Parameter::getType", "doc": "&quot;Retrieves the Parameter type.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parameter", "fromLink": "Doctrine/ORM/Query/Parameter.html", "link": "Doctrine/ORM/Query/Parameter.html#method_setValue", "name": "Doctrine\\ORM\\Query\\Parameter::setValue", "doc": "&quot;Defines the Parameter value.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query/ParameterTypeInferer.html", "name": "Doctrine\\ORM\\Query\\ParameterTypeInferer", "doc": "&quot;Provides an enclosed support for parameter inferring.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ParameterTypeInferer", "fromLink": "Doctrine/ORM/Query/ParameterTypeInferer.html", "link": "Doctrine/ORM/Query/ParameterTypeInferer.html#method_inferType", "name": "Doctrine\\ORM\\Query\\ParameterTypeInferer::inferType", "doc": "&quot;Infers type of a given value, returning a compatible constant:\n- Type (\\Doctrine\\DBAL\\Types\\Type::&lt;em&gt;)\n- Connection (\\Doctrine\\DBAL\\Connection::PARAM_&lt;\/em&gt;)&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query/Parser.html", "name": "Doctrine\\ORM\\Query\\Parser", "doc": "&quot;An LL(*) recursive-descent parser for the context-free grammar of the Doctrine Query Language.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_isInternalFunction", "name": "Doctrine\\ORM\\Query\\Parser::isInternalFunction", "doc": "&quot;Checks if a function is internally defined. Used to prevent overwriting\nof built-in functions through user-defined functions.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method___construct", "name": "Doctrine\\ORM\\Query\\Parser::__construct", "doc": "&quot;Creates a new query parser object.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_setCustomOutputTreeWalker", "name": "Doctrine\\ORM\\Query\\Parser::setCustomOutputTreeWalker", "doc": "&quot;Sets a custom tree walker that produces output.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_addCustomTreeWalker", "name": "Doctrine\\ORM\\Query\\Parser::addCustomTreeWalker", "doc": "&quot;Adds a custom tree walker for modifying the AST.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_getLexer", "name": "Doctrine\\ORM\\Query\\Parser::getLexer", "doc": "&quot;Gets the lexer used by the parser.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_getParserResult", "name": "Doctrine\\ORM\\Query\\Parser::getParserResult", "doc": "&quot;Gets the ParserResult that is being filled with information during parsing.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_getEntityManager", "name": "Doctrine\\ORM\\Query\\Parser::getEntityManager", "doc": "&quot;Gets the EntityManager used by the parser.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_getAST", "name": "Doctrine\\ORM\\Query\\Parser::getAST", "doc": "&quot;Parses and builds AST for the given Query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_match", "name": "Doctrine\\ORM\\Query\\Parser::match", "doc": "&quot;Attempts to match the given token with the current lookahead token.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_free", "name": "Doctrine\\ORM\\Query\\Parser::free", "doc": "&quot;Frees this parser, enabling it to be reused.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_parse", "name": "Doctrine\\ORM\\Query\\Parser::parse", "doc": "&quot;Parses a query string.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_syntaxError", "name": "Doctrine\\ORM\\Query\\Parser::syntaxError", "doc": "&quot;Generates a new syntax error.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_semanticalError", "name": "Doctrine\\ORM\\Query\\Parser::semanticalError", "doc": "&quot;Generates a new semantical error.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_QueryLanguage", "name": "Doctrine\\ORM\\Query\\Parser::QueryLanguage", "doc": "&quot;QueryLanguage ::= SelectStatement | UpdateStatement | DeleteStatement&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_SelectStatement", "name": "Doctrine\\ORM\\Query\\Parser::SelectStatement", "doc": "&quot;SelectStatement ::= SelectClause FromClause [WhereClause] [GroupByClause] [HavingClause] [OrderByClause]&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_UpdateStatement", "name": "Doctrine\\ORM\\Query\\Parser::UpdateStatement", "doc": "&quot;UpdateStatement ::= UpdateClause [WhereClause]&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_DeleteStatement", "name": "Doctrine\\ORM\\Query\\Parser::DeleteStatement", "doc": "&quot;DeleteStatement ::= DeleteClause [WhereClause]&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_IdentificationVariable", "name": "Doctrine\\ORM\\Query\\Parser::IdentificationVariable", "doc": "&quot;IdentificationVariable ::= identifier&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_AliasIdentificationVariable", "name": "Doctrine\\ORM\\Query\\Parser::AliasIdentificationVariable", "doc": "&quot;AliasIdentificationVariable = identifier&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_AbstractSchemaName", "name": "Doctrine\\ORM\\Query\\Parser::AbstractSchemaName", "doc": "&quot;AbstractSchemaName ::= identifier&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_AliasResultVariable", "name": "Doctrine\\ORM\\Query\\Parser::AliasResultVariable", "doc": "&quot;AliasResultVariable ::= identifier&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_ResultVariable", "name": "Doctrine\\ORM\\Query\\Parser::ResultVariable", "doc": "&quot;ResultVariable ::= identifier&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_JoinAssociationPathExpression", "name": "Doctrine\\ORM\\Query\\Parser::JoinAssociationPathExpression", "doc": "&quot;JoinAssociationPathExpression ::= IdentificationVariable \&quot;.\&quot; (CollectionValuedAssociationField | SingleValuedAssociationField)&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_PathExpression", "name": "Doctrine\\ORM\\Query\\Parser::PathExpression", "doc": "&quot;Parses an arbitrary path expression and defers semantical validation\nbased on expected types.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_AssociationPathExpression", "name": "Doctrine\\ORM\\Query\\Parser::AssociationPathExpression", "doc": "&quot;AssociationPathExpression ::= CollectionValuedPathExpression | SingleValuedAssociationPathExpression&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_SingleValuedPathExpression", "name": "Doctrine\\ORM\\Query\\Parser::SingleValuedPathExpression", "doc": "&quot;SingleValuedPathExpression ::= StateFieldPathExpression | SingleValuedAssociationPathExpression&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_StateFieldPathExpression", "name": "Doctrine\\ORM\\Query\\Parser::StateFieldPathExpression", "doc": "&quot;StateFieldPathExpression ::= IdentificationVariable \&quot;.\&quot; StateField&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_SingleValuedAssociationPathExpression", "name": "Doctrine\\ORM\\Query\\Parser::SingleValuedAssociationPathExpression", "doc": "&quot;SingleValuedAssociationPathExpression ::= IdentificationVariable \&quot;.\&quot; SingleValuedAssociationField&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_CollectionValuedPathExpression", "name": "Doctrine\\ORM\\Query\\Parser::CollectionValuedPathExpression", "doc": "&quot;CollectionValuedPathExpression ::= IdentificationVariable \&quot;.\&quot; CollectionValuedAssociationField&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_SelectClause", "name": "Doctrine\\ORM\\Query\\Parser::SelectClause", "doc": "&quot;SelectClause ::= \&quot;SELECT\&quot; [\&quot;DISTINCT\&quot;] SelectExpression {\&quot;,\&quot; SelectExpression}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_SimpleSelectClause", "name": "Doctrine\\ORM\\Query\\Parser::SimpleSelectClause", "doc": "&quot;SimpleSelectClause ::= \&quot;SELECT\&quot; [\&quot;DISTINCT\&quot;] SimpleSelectExpression&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_UpdateClause", "name": "Doctrine\\ORM\\Query\\Parser::UpdateClause", "doc": "&quot;UpdateClause ::= \&quot;UPDATE\&quot; AbstractSchemaName [\&quot;AS\&quot;] AliasIdentificationVariable \&quot;SET\&quot; UpdateItem {\&quot;,\&quot; UpdateItem}*&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_DeleteClause", "name": "Doctrine\\ORM\\Query\\Parser::DeleteClause", "doc": "&quot;DeleteClause ::= \&quot;DELETE\&quot; [\&quot;FROM\&quot;] AbstractSchemaName [\&quot;AS\&quot;] AliasIdentificationVariable&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_FromClause", "name": "Doctrine\\ORM\\Query\\Parser::FromClause", "doc": "&quot;FromClause ::= \&quot;FROM\&quot; IdentificationVariableDeclaration {\&quot;,\&quot; IdentificationVariableDeclaration}*&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_SubselectFromClause", "name": "Doctrine\\ORM\\Query\\Parser::SubselectFromClause", "doc": "&quot;SubselectFromClause ::= \&quot;FROM\&quot; SubselectIdentificationVariableDeclaration {\&quot;,\&quot; SubselectIdentificationVariableDeclaration}*&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_WhereClause", "name": "Doctrine\\ORM\\Query\\Parser::WhereClause", "doc": "&quot;WhereClause ::= \&quot;WHERE\&quot; ConditionalExpression&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_HavingClause", "name": "Doctrine\\ORM\\Query\\Parser::HavingClause", "doc": "&quot;HavingClause ::= \&quot;HAVING\&quot; ConditionalExpression&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_GroupByClause", "name": "Doctrine\\ORM\\Query\\Parser::GroupByClause", "doc": "&quot;GroupByClause ::= \&quot;GROUP\&quot; \&quot;BY\&quot; GroupByItem {\&quot;,\&quot; GroupByItem}*&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_OrderByClause", "name": "Doctrine\\ORM\\Query\\Parser::OrderByClause", "doc": "&quot;OrderByClause ::= \&quot;ORDER\&quot; \&quot;BY\&quot; OrderByItem {\&quot;,\&quot; OrderByItem}*&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_Subselect", "name": "Doctrine\\ORM\\Query\\Parser::Subselect", "doc": "&quot;Subselect ::= SimpleSelectClause SubselectFromClause [WhereClause] [GroupByClause] [HavingClause] [OrderByClause]&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_UpdateItem", "name": "Doctrine\\ORM\\Query\\Parser::UpdateItem", "doc": "&quot;UpdateItem ::= SingleValuedPathExpression \&quot;=\&quot; NewValue&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_GroupByItem", "name": "Doctrine\\ORM\\Query\\Parser::GroupByItem", "doc": "&quot;GroupByItem ::= IdentificationVariable | ResultVariable | SingleValuedPathExpression&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_OrderByItem", "name": "Doctrine\\ORM\\Query\\Parser::OrderByItem", "doc": "&quot;OrderByItem ::= (\n     SimpleArithmeticExpression | SingleValuedPathExpression |\n     ScalarExpression | ResultVariable\n) [\&quot;ASC\&quot; | \&quot;DESC\&quot;]&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_NewValue", "name": "Doctrine\\ORM\\Query\\Parser::NewValue", "doc": "&quot;NewValue ::= SimpleArithmeticExpression | StringPrimary | DatetimePrimary | BooleanPrimary |\n     EnumPrimary | SimpleEntityExpression | \&quot;NULL\&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_IdentificationVariableDeclaration", "name": "Doctrine\\ORM\\Query\\Parser::IdentificationVariableDeclaration", "doc": "&quot;IdentificationVariableDeclaration ::= RangeVariableDeclaration [IndexBy] {Join}*&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_SubselectIdentificationVariableDeclaration", "name": "Doctrine\\ORM\\Query\\Parser::SubselectIdentificationVariableDeclaration", "doc": "&quot;SubselectIdentificationVariableDeclaration ::= IdentificationVariableDeclaration | (AssociationPathExpression [\&quot;AS\&quot;] AliasIdentificationVariable)&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_Join", "name": "Doctrine\\ORM\\Query\\Parser::Join", "doc": "&quot;Join ::= [\&quot;LEFT\&quot; [\&quot;OUTER\&quot;] | \&quot;INNER\&quot;] \&quot;JOIN\&quot;\n         (JoinAssociationDeclaration | RangeVariableDeclaration)\n         [\&quot;WITH\&quot; ConditionalExpression]&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_RangeVariableDeclaration", "name": "Doctrine\\ORM\\Query\\Parser::RangeVariableDeclaration", "doc": "&quot;RangeVariableDeclaration ::= AbstractSchemaName [\&quot;AS\&quot;] AliasIdentificationVariable&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_JoinAssociationDeclaration", "name": "Doctrine\\ORM\\Query\\Parser::JoinAssociationDeclaration", "doc": "&quot;JoinAssociationDeclaration ::= JoinAssociationPathExpression [\&quot;AS\&quot;] AliasIdentificationVariable [IndexBy]&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_PartialObjectExpression", "name": "Doctrine\\ORM\\Query\\Parser::PartialObjectExpression", "doc": "&quot;PartialObjectExpression ::= \&quot;PARTIAL\&quot; IdentificationVariable \&quot;.\&quot; PartialFieldSet\nPartialFieldSet ::= \&quot;{\&quot; SimpleStateField {\&quot;,\&quot; SimpleStateField}* \&quot;}\&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_NewObjectExpression", "name": "Doctrine\\ORM\\Query\\Parser::NewObjectExpression", "doc": "&quot;NewObjectExpression ::= \&quot;NEW\&quot; IdentificationVariable \&quot;(\&quot; NewObjectArg {\&quot;,\&quot; NewObjectArg}* \&quot;)\&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_NewObjectArg", "name": "Doctrine\\ORM\\Query\\Parser::NewObjectArg", "doc": "&quot;NewObjectArg ::= ScalarExpression&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_IndexBy", "name": "Doctrine\\ORM\\Query\\Parser::IndexBy", "doc": "&quot;IndexBy ::= \&quot;INDEX\&quot; \&quot;BY\&quot; StateFieldPathExpression&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_ScalarExpression", "name": "Doctrine\\ORM\\Query\\Parser::ScalarExpression", "doc": "&quot;ScalarExpression ::= SimpleArithmeticExpression | StringPrimary | DateTimePrimary |\n                     StateFieldPathExpression | BooleanPrimary | CaseExpression |\n                     InstanceOfExpression&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_CaseExpression", "name": "Doctrine\\ORM\\Query\\Parser::CaseExpression", "doc": "&quot;CaseExpression ::= GeneralCaseExpression | SimpleCaseExpression | CoalesceExpression | NullifExpression\nGeneralCaseExpression ::= \&quot;CASE\&quot; WhenClause {WhenClause}* \&quot;ELSE\&quot; ScalarExpression \&quot;END\&quot;\nWhenClause ::= \&quot;WHEN\&quot; ConditionalExpression \&quot;THEN\&quot; ScalarExpression\nSimpleCaseExpression ::= \&quot;CASE\&quot; CaseOperand SimpleWhenClause {SimpleWhenClause}* \&quot;ELSE\&quot; ScalarExpression \&quot;END\&quot;\nCaseOperand ::= StateFieldPathExpression | TypeDiscriminator\nSimpleWhenClause ::= \&quot;WHEN\&quot; ScalarExpression \&quot;THEN\&quot; ScalarExpression\nCoalesceExpression ::= \&quot;COALESCE\&quot; \&quot;(\&quot; ScalarExpression {\&quot;,\&quot; ScalarExpression}* \&quot;)\&quot;\nNullifExpression ::= \&quot;NULLIF\&quot; \&quot;(\&quot; ScalarExpression \&quot;,\&quot; ScalarExpression \&quot;)\&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_CoalesceExpression", "name": "Doctrine\\ORM\\Query\\Parser::CoalesceExpression", "doc": "&quot;CoalesceExpression ::= \&quot;COALESCE\&quot; \&quot;(\&quot; ScalarExpression {\&quot;,\&quot; ScalarExpression}* \&quot;)\&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_NullIfExpression", "name": "Doctrine\\ORM\\Query\\Parser::NullIfExpression", "doc": "&quot;NullIfExpression ::= \&quot;NULLIF\&quot; \&quot;(\&quot; ScalarExpression \&quot;,\&quot; ScalarExpression \&quot;)\&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_GeneralCaseExpression", "name": "Doctrine\\ORM\\Query\\Parser::GeneralCaseExpression", "doc": "&quot;GeneralCaseExpression ::= \&quot;CASE\&quot; WhenClause {WhenClause}* \&quot;ELSE\&quot; ScalarExpression \&quot;END\&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_SimpleCaseExpression", "name": "Doctrine\\ORM\\Query\\Parser::SimpleCaseExpression", "doc": "&quot;SimpleCaseExpression ::= \&quot;CASE\&quot; CaseOperand SimpleWhenClause {SimpleWhenClause}* \&quot;ELSE\&quot; ScalarExpression \&quot;END\&quot;\nCaseOperand ::= StateFieldPathExpression | TypeDiscriminator&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_WhenClause", "name": "Doctrine\\ORM\\Query\\Parser::WhenClause", "doc": "&quot;WhenClause ::= \&quot;WHEN\&quot; ConditionalExpression \&quot;THEN\&quot; ScalarExpression&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_SimpleWhenClause", "name": "Doctrine\\ORM\\Query\\Parser::SimpleWhenClause", "doc": "&quot;SimpleWhenClause ::= \&quot;WHEN\&quot; ScalarExpression \&quot;THEN\&quot; ScalarExpression&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_SelectExpression", "name": "Doctrine\\ORM\\Query\\Parser::SelectExpression", "doc": "&quot;SelectExpression ::= (\n    IdentificationVariable | ScalarExpression | AggregateExpression | FunctionDeclaration |\n    PartialObjectExpression | \&quot;(\&quot; Subselect \&quot;)\&quot; | CaseExpression\n) [[\&quot;AS\&quot;] [\&quot;HIDDEN\&quot;] AliasResultVariable]&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_SimpleSelectExpression", "name": "Doctrine\\ORM\\Query\\Parser::SimpleSelectExpression", "doc": "&quot;SimpleSelectExpression ::= (\n     StateFieldPathExpression | IdentificationVariable | FunctionDeclaration |\n     AggregateExpression | \&quot;(\&quot; Subselect \&quot;)\&quot; | ScalarExpression\n) [[\&quot;AS\&quot;] AliasResultVariable]&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_ConditionalExpression", "name": "Doctrine\\ORM\\Query\\Parser::ConditionalExpression", "doc": "&quot;ConditionalExpression ::= ConditionalTerm {\&quot;OR\&quot; ConditionalTerm}*&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_ConditionalTerm", "name": "Doctrine\\ORM\\Query\\Parser::ConditionalTerm", "doc": "&quot;ConditionalTerm ::= ConditionalFactor {\&quot;AND\&quot; ConditionalFactor}*&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_ConditionalFactor", "name": "Doctrine\\ORM\\Query\\Parser::ConditionalFactor", "doc": "&quot;ConditionalFactor ::= [\&quot;NOT\&quot;] ConditionalPrimary&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_ConditionalPrimary", "name": "Doctrine\\ORM\\Query\\Parser::ConditionalPrimary", "doc": "&quot;ConditionalPrimary ::= SimpleConditionalExpression | \&quot;(\&quot; ConditionalExpression \&quot;)\&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_SimpleConditionalExpression", "name": "Doctrine\\ORM\\Query\\Parser::SimpleConditionalExpression", "doc": "&quot;SimpleConditionalExpression ::=\n     ComparisonExpression | BetweenExpression | LikeExpression |\n     InExpression | NullComparisonExpression | ExistsExpression |\n     EmptyCollectionComparisonExpression | CollectionMemberExpression |\n     InstanceOfExpression&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_EmptyCollectionComparisonExpression", "name": "Doctrine\\ORM\\Query\\Parser::EmptyCollectionComparisonExpression", "doc": "&quot;EmptyCollectionComparisonExpression ::= CollectionValuedPathExpression \&quot;IS\&quot; [\&quot;NOT\&quot;] \&quot;EMPTY\&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_CollectionMemberExpression", "name": "Doctrine\\ORM\\Query\\Parser::CollectionMemberExpression", "doc": "&quot;CollectionMemberExpression ::= EntityExpression [\&quot;NOT\&quot;] \&quot;MEMBER\&quot; [\&quot;OF\&quot;] CollectionValuedPathExpression&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_Literal", "name": "Doctrine\\ORM\\Query\\Parser::Literal", "doc": "&quot;Literal ::= string | char | integer | float | boolean&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_InParameter", "name": "Doctrine\\ORM\\Query\\Parser::InParameter", "doc": "&quot;InParameter ::= Literal | InputParameter&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_InputParameter", "name": "Doctrine\\ORM\\Query\\Parser::InputParameter", "doc": "&quot;InputParameter ::= PositionalParameter | NamedParameter&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_ArithmeticExpression", "name": "Doctrine\\ORM\\Query\\Parser::ArithmeticExpression", "doc": "&quot;ArithmeticExpression ::= SimpleArithmeticExpression | \&quot;(\&quot; Subselect \&quot;)\&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_SimpleArithmeticExpression", "name": "Doctrine\\ORM\\Query\\Parser::SimpleArithmeticExpression", "doc": "&quot;SimpleArithmeticExpression ::= ArithmeticTerm {(\&quot;+\&quot; | \&quot;-\&quot;) ArithmeticTerm}*&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_ArithmeticTerm", "name": "Doctrine\\ORM\\Query\\Parser::ArithmeticTerm", "doc": "&quot;ArithmeticTerm ::= ArithmeticFactor {(\&quot;&lt;em&gt;\&quot; | \&quot;\/\&quot;) ArithmeticFactor}&lt;\/em&gt;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_ArithmeticFactor", "name": "Doctrine\\ORM\\Query\\Parser::ArithmeticFactor", "doc": "&quot;ArithmeticFactor ::= [(\&quot;+\&quot; | \&quot;-\&quot;)] ArithmeticPrimary&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_ArithmeticPrimary", "name": "Doctrine\\ORM\\Query\\Parser::ArithmeticPrimary", "doc": "&quot;ArithmeticPrimary ::= SingleValuedPathExpression | Literal | ParenthesisExpression\n         | FunctionsReturningNumerics | AggregateExpression | FunctionsReturningStrings\n         | FunctionsReturningDatetime | IdentificationVariable | ResultVariable\n         | InputParameter | CaseExpression&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_StringExpression", "name": "Doctrine\\ORM\\Query\\Parser::StringExpression", "doc": "&quot;StringExpression ::= StringPrimary | \&quot;(\&quot; Subselect \&quot;)\&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_StringPrimary", "name": "Doctrine\\ORM\\Query\\Parser::StringPrimary", "doc": "&quot;StringPrimary ::= StateFieldPathExpression | string | InputParameter | FunctionsReturningStrings | AggregateExpression | CaseExpression&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_EntityExpression", "name": "Doctrine\\ORM\\Query\\Parser::EntityExpression", "doc": "&quot;EntityExpression ::= SingleValuedAssociationPathExpression | SimpleEntityExpression&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_SimpleEntityExpression", "name": "Doctrine\\ORM\\Query\\Parser::SimpleEntityExpression", "doc": "&quot;SimpleEntityExpression ::= IdentificationVariable | InputParameter&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_AggregateExpression", "name": "Doctrine\\ORM\\Query\\Parser::AggregateExpression", "doc": "&quot;AggregateExpression ::=\n (\&quot;AVG\&quot; | \&quot;MAX\&quot; | \&quot;MIN\&quot; | \&quot;SUM\&quot;) \&quot;(\&quot; [\&quot;DISTINCT\&quot;] StateFieldPathExpression \&quot;)\&quot; |\n \&quot;COUNT\&quot; \&quot;(\&quot; [\&quot;DISTINCT\&quot;] (IdentificationVariable | SingleValuedPathExpression) \&quot;)\&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_QuantifiedExpression", "name": "Doctrine\\ORM\\Query\\Parser::QuantifiedExpression", "doc": "&quot;QuantifiedExpression ::= (\&quot;ALL\&quot; | \&quot;ANY\&quot; | \&quot;SOME\&quot;) \&quot;(\&quot; Subselect \&quot;)\&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_BetweenExpression", "name": "Doctrine\\ORM\\Query\\Parser::BetweenExpression", "doc": "&quot;BetweenExpression ::= ArithmeticExpression [\&quot;NOT\&quot;] \&quot;BETWEEN\&quot; ArithmeticExpression \&quot;AND\&quot; ArithmeticExpression&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_ComparisonExpression", "name": "Doctrine\\ORM\\Query\\Parser::ComparisonExpression", "doc": "&quot;ComparisonExpression ::= ArithmeticExpression ComparisonOperator ( QuantifiedExpression | ArithmeticExpression )&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_InExpression", "name": "Doctrine\\ORM\\Query\\Parser::InExpression", "doc": "&quot;InExpression ::= SingleValuedPathExpression [\&quot;NOT\&quot;] \&quot;IN\&quot; \&quot;(\&quot; (InParameter {\&quot;,\&quot; InParameter}* | Subselect) \&quot;)\&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_InstanceOfExpression", "name": "Doctrine\\ORM\\Query\\Parser::InstanceOfExpression", "doc": "&quot;InstanceOfExpression ::= IdentificationVariable [\&quot;NOT\&quot;] \&quot;INSTANCE\&quot; [\&quot;OF\&quot;] (InstanceOfParameter | \&quot;(\&quot; InstanceOfParameter {\&quot;,\&quot; InstanceOfParameter}* \&quot;)\&quot;)&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_InstanceOfParameter", "name": "Doctrine\\ORM\\Query\\Parser::InstanceOfParameter", "doc": "&quot;InstanceOfParameter ::= AbstractSchemaName | InputParameter&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_LikeExpression", "name": "Doctrine\\ORM\\Query\\Parser::LikeExpression", "doc": "&quot;LikeExpression ::= StringExpression [\&quot;NOT\&quot;] \&quot;LIKE\&quot; StringPrimary [\&quot;ESCAPE\&quot; char]&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_NullComparisonExpression", "name": "Doctrine\\ORM\\Query\\Parser::NullComparisonExpression", "doc": "&quot;NullComparisonExpression ::= (InputParameter | NullIfExpression | CoalesceExpression | SingleValuedPathExpression) \&quot;IS\&quot; [\&quot;NOT\&quot;] \&quot;NULL\&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_ExistsExpression", "name": "Doctrine\\ORM\\Query\\Parser::ExistsExpression", "doc": "&quot;ExistsExpression ::= [\&quot;NOT\&quot;] \&quot;EXISTS\&quot; \&quot;(\&quot; Subselect \&quot;)\&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_ComparisonOperator", "name": "Doctrine\\ORM\\Query\\Parser::ComparisonOperator", "doc": "&quot;ComparisonOperator ::= \&quot;=\&quot; | \&quot;&amp;lt;\&quot; | \&quot;&amp;lt;=\&quot; | \&quot;&amp;lt;&gt;\&quot; | \&quot;&gt;\&quot; | \&quot;&gt;=\&quot; | \&quot;!=\&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_FunctionDeclaration", "name": "Doctrine\\ORM\\Query\\Parser::FunctionDeclaration", "doc": "&quot;FunctionDeclaration ::= FunctionsReturningStrings | FunctionsReturningNumerics | FunctionsReturningDatetime&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_FunctionsReturningNumerics", "name": "Doctrine\\ORM\\Query\\Parser::FunctionsReturningNumerics", "doc": "&quot;FunctionsReturningNumerics ::=\n     \&quot;LENGTH\&quot; \&quot;(\&quot; StringPrimary \&quot;)\&quot; |\n     \&quot;LOCATE\&quot; \&quot;(\&quot; StringPrimary \&quot;,\&quot; StringPrimary [\&quot;,\&quot; SimpleArithmeticExpression]\&quot;)\&quot; |\n     \&quot;ABS\&quot; \&quot;(\&quot; SimpleArithmeticExpression \&quot;)\&quot; |\n     \&quot;SQRT\&quot; \&quot;(\&quot; SimpleArithmeticExpression \&quot;)\&quot; |\n     \&quot;MOD\&quot; \&quot;(\&quot; SimpleArithmeticExpression \&quot;,\&quot; SimpleArithmeticExpression \&quot;)\&quot; |\n     \&quot;SIZE\&quot; \&quot;(\&quot; CollectionValuedPathExpression \&quot;)\&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_CustomFunctionsReturningNumerics", "name": "Doctrine\\ORM\\Query\\Parser::CustomFunctionsReturningNumerics", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_FunctionsReturningDatetime", "name": "Doctrine\\ORM\\Query\\Parser::FunctionsReturningDatetime", "doc": "&quot;FunctionsReturningDateTime ::= \&quot;CURRENT_DATE\&quot; | \&quot;CURRENT_TIME\&quot; | \&quot;CURRENT_TIMESTAMP\&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_CustomFunctionsReturningDatetime", "name": "Doctrine\\ORM\\Query\\Parser::CustomFunctionsReturningDatetime", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_FunctionsReturningStrings", "name": "Doctrine\\ORM\\Query\\Parser::FunctionsReturningStrings", "doc": "&quot;FunctionsReturningStrings ::=\n  \&quot;CONCAT\&quot; \&quot;(\&quot; StringPrimary \&quot;,\&quot; StringPrimary \&quot;)\&quot; |\n  \&quot;SUBSTRING\&quot; \&quot;(\&quot; StringPrimary \&quot;,\&quot; SimpleArithmeticExpression \&quot;,\&quot; SimpleArithmeticExpression \&quot;)\&quot; |\n  \&quot;TRIM\&quot; \&quot;(\&quot; [[\&quot;LEADING\&quot; | \&quot;TRAILING\&quot; | \&quot;BOTH\&quot;] [char] \&quot;FROM\&quot;] StringPrimary \&quot;)\&quot; |\n  \&quot;LOWER\&quot; \&quot;(\&quot; StringPrimary \&quot;)\&quot; |\n  \&quot;UPPER\&quot; \&quot;(\&quot; StringPrimary \&quot;)\&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Parser", "fromLink": "Doctrine/ORM/Query/Parser.html", "link": "Doctrine/ORM/Query/Parser.html#method_CustomFunctionsReturningStrings", "name": "Doctrine\\ORM\\Query\\Parser::CustomFunctionsReturningStrings", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query/ParserResult.html", "name": "Doctrine\\ORM\\Query\\ParserResult", "doc": "&quot;Encapsulates the resulting components from a DQL query parsing process that\ncan be serialized.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ParserResult", "fromLink": "Doctrine/ORM/Query/ParserResult.html", "link": "Doctrine/ORM/Query/ParserResult.html#method___construct", "name": "Doctrine\\ORM\\Query\\ParserResult::__construct", "doc": "&quot;Initializes a new instance of the &lt;tt&gt;ParserResult&lt;\/tt&gt; class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ParserResult", "fromLink": "Doctrine/ORM/Query/ParserResult.html", "link": "Doctrine/ORM/Query/ParserResult.html#method_getResultSetMapping", "name": "Doctrine\\ORM\\Query\\ParserResult::getResultSetMapping", "doc": "&quot;Gets the ResultSetMapping for the parsed query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ParserResult", "fromLink": "Doctrine/ORM/Query/ParserResult.html", "link": "Doctrine/ORM/Query/ParserResult.html#method_setResultSetMapping", "name": "Doctrine\\ORM\\Query\\ParserResult::setResultSetMapping", "doc": "&quot;Sets the ResultSetMapping of the parsed query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ParserResult", "fromLink": "Doctrine/ORM/Query/ParserResult.html", "link": "Doctrine/ORM/Query/ParserResult.html#method_setSqlExecutor", "name": "Doctrine\\ORM\\Query\\ParserResult::setSqlExecutor", "doc": "&quot;Sets the SQL executor that should be used for this ParserResult.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ParserResult", "fromLink": "Doctrine/ORM/Query/ParserResult.html", "link": "Doctrine/ORM/Query/ParserResult.html#method_getSqlExecutor", "name": "Doctrine\\ORM\\Query\\ParserResult::getSqlExecutor", "doc": "&quot;Gets the SQL executor used by this ParserResult.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ParserResult", "fromLink": "Doctrine/ORM/Query/ParserResult.html", "link": "Doctrine/ORM/Query/ParserResult.html#method_addParameterMapping", "name": "Doctrine\\ORM\\Query\\ParserResult::addParameterMapping", "doc": "&quot;Adds a DQL to SQL parameter mapping. One DQL parameter name\/position can map to\nseveral SQL parameter positions.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ParserResult", "fromLink": "Doctrine/ORM/Query/ParserResult.html", "link": "Doctrine/ORM/Query/ParserResult.html#method_getParameterMappings", "name": "Doctrine\\ORM\\Query\\ParserResult::getParameterMappings", "doc": "&quot;Gets all DQL to SQL parameter mappings.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ParserResult", "fromLink": "Doctrine/ORM/Query/ParserResult.html", "link": "Doctrine/ORM/Query/ParserResult.html#method_getSqlParameterPositions", "name": "Doctrine\\ORM\\Query\\ParserResult::getSqlParameterPositions", "doc": "&quot;Gets the SQL parameter positions for a DQL parameter name\/position.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query/Printer.html", "name": "Doctrine\\ORM\\Query\\Printer", "doc": "&quot;A parse tree printer for Doctrine Query Language parser.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Printer", "fromLink": "Doctrine/ORM/Query/Printer.html", "link": "Doctrine/ORM/Query/Printer.html#method___construct", "name": "Doctrine\\ORM\\Query\\Printer::__construct", "doc": "&quot;Constructs a new parse tree printer.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Printer", "fromLink": "Doctrine/ORM/Query/Printer.html", "link": "Doctrine/ORM/Query/Printer.html#method_startProduction", "name": "Doctrine\\ORM\\Query\\Printer::startProduction", "doc": "&quot;Prints an opening parenthesis followed by production name and increases\nindentation level by one.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Printer", "fromLink": "Doctrine/ORM/Query/Printer.html", "link": "Doctrine/ORM/Query/Printer.html#method_endProduction", "name": "Doctrine\\ORM\\Query\\Printer::endProduction", "doc": "&quot;Decreases indentation level by one and prints a closing parenthesis.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\Printer", "fromLink": "Doctrine/ORM/Query/Printer.html", "link": "Doctrine/ORM/Query/Printer.html#method_println", "name": "Doctrine\\ORM\\Query\\Printer::println", "doc": "&quot;Prints text indented with spaces depending on current indentation level.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query/QueryException.html", "name": "Doctrine\\ORM\\Query\\QueryException", "doc": "&quot;Description of QueryException.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\QueryException", "fromLink": "Doctrine/ORM/Query/QueryException.html", "link": "Doctrine/ORM/Query/QueryException.html#method_dqlError", "name": "Doctrine\\ORM\\Query\\QueryException::dqlError", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\QueryException", "fromLink": "Doctrine/ORM/Query/QueryException.html", "link": "Doctrine/ORM/Query/QueryException.html#method_syntaxError", "name": "Doctrine\\ORM\\Query\\QueryException::syntaxError", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\QueryException", "fromLink": "Doctrine/ORM/Query/QueryException.html", "link": "Doctrine/ORM/Query/QueryException.html#method_semanticalError", "name": "Doctrine\\ORM\\Query\\QueryException::semanticalError", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\QueryException", "fromLink": "Doctrine/ORM/Query/QueryException.html", "link": "Doctrine/ORM/Query/QueryException.html#method_invalidLockMode", "name": "Doctrine\\ORM\\Query\\QueryException::invalidLockMode", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\QueryException", "fromLink": "Doctrine/ORM/Query/QueryException.html", "link": "Doctrine/ORM/Query/QueryException.html#method_invalidParameterType", "name": "Doctrine\\ORM\\Query\\QueryException::invalidParameterType", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\QueryException", "fromLink": "Doctrine/ORM/Query/QueryException.html", "link": "Doctrine/ORM/Query/QueryException.html#method_invalidParameterPosition", "name": "Doctrine\\ORM\\Query\\QueryException::invalidParameterPosition", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\QueryException", "fromLink": "Doctrine/ORM/Query/QueryException.html", "link": "Doctrine/ORM/Query/QueryException.html#method_invalidParameterNumber", "name": "Doctrine\\ORM\\Query\\QueryException::invalidParameterNumber", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\QueryException", "fromLink": "Doctrine/ORM/Query/QueryException.html", "link": "Doctrine/ORM/Query/QueryException.html#method_invalidParameterFormat", "name": "Doctrine\\ORM\\Query\\QueryException::invalidParameterFormat", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\QueryException", "fromLink": "Doctrine/ORM/Query/QueryException.html", "link": "Doctrine/ORM/Query/QueryException.html#method_unknownParameter", "name": "Doctrine\\ORM\\Query\\QueryException::unknownParameter", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\QueryException", "fromLink": "Doctrine/ORM/Query/QueryException.html", "link": "Doctrine/ORM/Query/QueryException.html#method_parameterTypeMismatch", "name": "Doctrine\\ORM\\Query\\QueryException::parameterTypeMismatch", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\QueryException", "fromLink": "Doctrine/ORM/Query/QueryException.html", "link": "Doctrine/ORM/Query/QueryException.html#method_invalidPathExpression", "name": "Doctrine\\ORM\\Query\\QueryException::invalidPathExpression", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\QueryException", "fromLink": "Doctrine/ORM/Query/QueryException.html", "link": "Doctrine/ORM/Query/QueryException.html#method_invalidLiteral", "name": "Doctrine\\ORM\\Query\\QueryException::invalidLiteral", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\QueryException", "fromLink": "Doctrine/ORM/Query/QueryException.html", "link": "Doctrine/ORM/Query/QueryException.html#method_iterateWithFetchJoinCollectionNotAllowed", "name": "Doctrine\\ORM\\Query\\QueryException::iterateWithFetchJoinCollectionNotAllowed", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\QueryException", "fromLink": "Doctrine/ORM/Query/QueryException.html", "link": "Doctrine/ORM/Query/QueryException.html#method_partialObjectsAreDangerous", "name": "Doctrine\\ORM\\Query\\QueryException::partialObjectsAreDangerous", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\QueryException", "fromLink": "Doctrine/ORM/Query/QueryException.html", "link": "Doctrine/ORM/Query/QueryException.html#method_overwritingJoinConditionsNotYetSupported", "name": "Doctrine\\ORM\\Query\\QueryException::overwritingJoinConditionsNotYetSupported", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\QueryException", "fromLink": "Doctrine/ORM/Query/QueryException.html", "link": "Doctrine/ORM/Query/QueryException.html#method_associationPathInverseSideNotSupported", "name": "Doctrine\\ORM\\Query\\QueryException::associationPathInverseSideNotSupported", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\QueryException", "fromLink": "Doctrine/ORM/Query/QueryException.html", "link": "Doctrine/ORM/Query/QueryException.html#method_iterateWithFetchJoinNotAllowed", "name": "Doctrine\\ORM\\Query\\QueryException::iterateWithFetchJoinNotAllowed", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\QueryException", "fromLink": "Doctrine/ORM/Query/QueryException.html", "link": "Doctrine/ORM/Query/QueryException.html#method_associationPathCompositeKeyNotSupported", "name": "Doctrine\\ORM\\Query\\QueryException::associationPathCompositeKeyNotSupported", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\QueryException", "fromLink": "Doctrine/ORM/Query/QueryException.html", "link": "Doctrine/ORM/Query/QueryException.html#method_instanceOfUnrelatedClass", "name": "Doctrine\\ORM\\Query\\QueryException::instanceOfUnrelatedClass", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\QueryException", "fromLink": "Doctrine/ORM/Query/QueryException.html", "link": "Doctrine/ORM/Query/QueryException.html#method_invalidQueryComponent", "name": "Doctrine\\ORM\\Query\\QueryException::invalidQueryComponent", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query/QueryExpressionVisitor.html", "name": "Doctrine\\ORM\\Query\\QueryExpressionVisitor", "doc": "&quot;Converts Collection expressions to Query expressions.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\QueryExpressionVisitor", "fromLink": "Doctrine/ORM/Query/QueryExpressionVisitor.html", "link": "Doctrine/ORM/Query/QueryExpressionVisitor.html#method___construct", "name": "Doctrine\\ORM\\Query\\QueryExpressionVisitor::__construct", "doc": "&quot;Constructor&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\QueryExpressionVisitor", "fromLink": "Doctrine/ORM/Query/QueryExpressionVisitor.html", "link": "Doctrine/ORM/Query/QueryExpressionVisitor.html#method_getParameters", "name": "Doctrine\\ORM\\Query\\QueryExpressionVisitor::getParameters", "doc": "&quot;Gets bound parameters.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\QueryExpressionVisitor", "fromLink": "Doctrine/ORM/Query/QueryExpressionVisitor.html", "link": "Doctrine/ORM/Query/QueryExpressionVisitor.html#method_clearParameters", "name": "Doctrine\\ORM\\Query\\QueryExpressionVisitor::clearParameters", "doc": "&quot;Clears parameters.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\QueryExpressionVisitor", "fromLink": "Doctrine/ORM/Query/QueryExpressionVisitor.html", "link": "Doctrine/ORM/Query/QueryExpressionVisitor.html#method_walkCompositeExpression", "name": "Doctrine\\ORM\\Query\\QueryExpressionVisitor::walkCompositeExpression", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\QueryExpressionVisitor", "fromLink": "Doctrine/ORM/Query/QueryExpressionVisitor.html", "link": "Doctrine/ORM/Query/QueryExpressionVisitor.html#method_walkComparison", "name": "Doctrine\\ORM\\Query\\QueryExpressionVisitor::walkComparison", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\QueryExpressionVisitor", "fromLink": "Doctrine/ORM/Query/QueryExpressionVisitor.html", "link": "Doctrine/ORM/Query/QueryExpressionVisitor.html#method_walkValue", "name": "Doctrine\\ORM\\Query\\QueryExpressionVisitor::walkValue", "doc": "&quot;{@inheritDoc}&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query/ResultSetMapping.html", "name": "Doctrine\\ORM\\Query\\ResultSetMapping", "doc": "&quot;A ResultSetMapping describes how a result set of an SQL query maps to a Doctrine result.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMapping", "fromLink": "Doctrine/ORM/Query/ResultSetMapping.html", "link": "Doctrine/ORM/Query/ResultSetMapping.html#method_addEntityResult", "name": "Doctrine\\ORM\\Query\\ResultSetMapping::addEntityResult", "doc": "&quot;Adds an entity result to this ResultSetMapping.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMapping", "fromLink": "Doctrine/ORM/Query/ResultSetMapping.html", "link": "Doctrine/ORM/Query/ResultSetMapping.html#method_setDiscriminatorColumn", "name": "Doctrine\\ORM\\Query\\ResultSetMapping::setDiscriminatorColumn", "doc": "&quot;Sets a discriminator column for an entity result or joined entity result.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMapping", "fromLink": "Doctrine/ORM/Query/ResultSetMapping.html", "link": "Doctrine/ORM/Query/ResultSetMapping.html#method_addIndexBy", "name": "Doctrine\\ORM\\Query\\ResultSetMapping::addIndexBy", "doc": "&quot;Sets a field to use for indexing an entity result or joined entity result.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMapping", "fromLink": "Doctrine/ORM/Query/ResultSetMapping.html", "link": "Doctrine/ORM/Query/ResultSetMapping.html#method_addIndexByScalar", "name": "Doctrine\\ORM\\Query\\ResultSetMapping::addIndexByScalar", "doc": "&quot;Sets to index by a scalar result column name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMapping", "fromLink": "Doctrine/ORM/Query/ResultSetMapping.html", "link": "Doctrine/ORM/Query/ResultSetMapping.html#method_addIndexByColumn", "name": "Doctrine\\ORM\\Query\\ResultSetMapping::addIndexByColumn", "doc": "&quot;Sets a column to use for indexing an entity or joined entity result by the given alias name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMapping", "fromLink": "Doctrine/ORM/Query/ResultSetMapping.html", "link": "Doctrine/ORM/Query/ResultSetMapping.html#method_hasIndexBy", "name": "Doctrine\\ORM\\Query\\ResultSetMapping::hasIndexBy", "doc": "&quot;Checks whether an entity result or joined entity result with a given alias has\na field set for indexing.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMapping", "fromLink": "Doctrine/ORM/Query/ResultSetMapping.html", "link": "Doctrine/ORM/Query/ResultSetMapping.html#method_isFieldResult", "name": "Doctrine\\ORM\\Query\\ResultSetMapping::isFieldResult", "doc": "&quot;Checks whether the column with the given name is mapped as a field result\nas part of an entity result or joined entity result.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMapping", "fromLink": "Doctrine/ORM/Query/ResultSetMapping.html", "link": "Doctrine/ORM/Query/ResultSetMapping.html#method_addFieldResult", "name": "Doctrine\\ORM\\Query\\ResultSetMapping::addFieldResult", "doc": "&quot;Adds a field to the result that belongs to an entity or joined entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMapping", "fromLink": "Doctrine/ORM/Query/ResultSetMapping.html", "link": "Doctrine/ORM/Query/ResultSetMapping.html#method_addJoinedEntityResult", "name": "Doctrine\\ORM\\Query\\ResultSetMapping::addJoinedEntityResult", "doc": "&quot;Adds a joined entity result.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMapping", "fromLink": "Doctrine/ORM/Query/ResultSetMapping.html", "link": "Doctrine/ORM/Query/ResultSetMapping.html#method_addScalarResult", "name": "Doctrine\\ORM\\Query\\ResultSetMapping::addScalarResult", "doc": "&quot;Adds a scalar result mapping.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMapping", "fromLink": "Doctrine/ORM/Query/ResultSetMapping.html", "link": "Doctrine/ORM/Query/ResultSetMapping.html#method_addMetadataParameterMapping", "name": "Doctrine\\ORM\\Query\\ResultSetMapping::addMetadataParameterMapping", "doc": "&quot;Adds a metadata parameter mappings.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMapping", "fromLink": "Doctrine/ORM/Query/ResultSetMapping.html", "link": "Doctrine/ORM/Query/ResultSetMapping.html#method_isScalarResult", "name": "Doctrine\\ORM\\Query\\ResultSetMapping::isScalarResult", "doc": "&quot;Checks whether a column with a given name is mapped as a scalar result.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMapping", "fromLink": "Doctrine/ORM/Query/ResultSetMapping.html", "link": "Doctrine/ORM/Query/ResultSetMapping.html#method_getClassName", "name": "Doctrine\\ORM\\Query\\ResultSetMapping::getClassName", "doc": "&quot;Gets the name of the class of an entity result or joined entity result,\nidentified by the given unique alias.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMapping", "fromLink": "Doctrine/ORM/Query/ResultSetMapping.html", "link": "Doctrine/ORM/Query/ResultSetMapping.html#method_getScalarAlias", "name": "Doctrine\\ORM\\Query\\ResultSetMapping::getScalarAlias", "doc": "&quot;Gets the field alias for a column that is mapped as a scalar value.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMapping", "fromLink": "Doctrine/ORM/Query/ResultSetMapping.html", "link": "Doctrine/ORM/Query/ResultSetMapping.html#method_getDeclaringClass", "name": "Doctrine\\ORM\\Query\\ResultSetMapping::getDeclaringClass", "doc": "&quot;Gets the name of the class that owns a field mapping for the specified column.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMapping", "fromLink": "Doctrine/ORM/Query/ResultSetMapping.html", "link": "Doctrine/ORM/Query/ResultSetMapping.html#method_getRelation", "name": "Doctrine\\ORM\\Query\\ResultSetMapping::getRelation", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMapping", "fromLink": "Doctrine/ORM/Query/ResultSetMapping.html", "link": "Doctrine/ORM/Query/ResultSetMapping.html#method_isRelation", "name": "Doctrine\\ORM\\Query\\ResultSetMapping::isRelation", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMapping", "fromLink": "Doctrine/ORM/Query/ResultSetMapping.html", "link": "Doctrine/ORM/Query/ResultSetMapping.html#method_getEntityAlias", "name": "Doctrine\\ORM\\Query\\ResultSetMapping::getEntityAlias", "doc": "&quot;Gets the alias of the class that owns a field mapping for the specified column.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMapping", "fromLink": "Doctrine/ORM/Query/ResultSetMapping.html", "link": "Doctrine/ORM/Query/ResultSetMapping.html#method_getParentAlias", "name": "Doctrine\\ORM\\Query\\ResultSetMapping::getParentAlias", "doc": "&quot;Gets the parent alias of the given alias.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMapping", "fromLink": "Doctrine/ORM/Query/ResultSetMapping.html", "link": "Doctrine/ORM/Query/ResultSetMapping.html#method_hasParentAlias", "name": "Doctrine\\ORM\\Query\\ResultSetMapping::hasParentAlias", "doc": "&quot;Checks whether the given alias has a parent alias.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMapping", "fromLink": "Doctrine/ORM/Query/ResultSetMapping.html", "link": "Doctrine/ORM/Query/ResultSetMapping.html#method_getFieldName", "name": "Doctrine\\ORM\\Query\\ResultSetMapping::getFieldName", "doc": "&quot;Gets the field name for a column name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMapping", "fromLink": "Doctrine/ORM/Query/ResultSetMapping.html", "link": "Doctrine/ORM/Query/ResultSetMapping.html#method_getAliasMap", "name": "Doctrine\\ORM\\Query\\ResultSetMapping::getAliasMap", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMapping", "fromLink": "Doctrine/ORM/Query/ResultSetMapping.html", "link": "Doctrine/ORM/Query/ResultSetMapping.html#method_getEntityResultCount", "name": "Doctrine\\ORM\\Query\\ResultSetMapping::getEntityResultCount", "doc": "&quot;Gets the number of different entities that appear in the mapped result.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMapping", "fromLink": "Doctrine/ORM/Query/ResultSetMapping.html", "link": "Doctrine/ORM/Query/ResultSetMapping.html#method_isMixedResult", "name": "Doctrine\\ORM\\Query\\ResultSetMapping::isMixedResult", "doc": "&quot;Checks whether this ResultSetMapping defines a mixed result.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMapping", "fromLink": "Doctrine/ORM/Query/ResultSetMapping.html", "link": "Doctrine/ORM/Query/ResultSetMapping.html#method_addMetaResult", "name": "Doctrine\\ORM\\Query\\ResultSetMapping::addMetaResult", "doc": "&quot;Adds a meta column (foreign key or discriminator column) to the result set.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query/ResultSetMappingBuilder.html", "name": "Doctrine\\ORM\\Query\\ResultSetMappingBuilder", "doc": "&quot;A ResultSetMappingBuilder uses the EntityManager to automatically populate entity fields.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMappingBuilder", "fromLink": "Doctrine/ORM/Query/ResultSetMappingBuilder.html", "link": "Doctrine/ORM/Query/ResultSetMappingBuilder.html#method___construct", "name": "Doctrine\\ORM\\Query\\ResultSetMappingBuilder::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMappingBuilder", "fromLink": "Doctrine/ORM/Query/ResultSetMappingBuilder.html", "link": "Doctrine/ORM/Query/ResultSetMappingBuilder.html#method_addRootEntityFromClassMetadata", "name": "Doctrine\\ORM\\Query\\ResultSetMappingBuilder::addRootEntityFromClassMetadata", "doc": "&quot;Adds a root entity and all of its fields to the result set.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMappingBuilder", "fromLink": "Doctrine/ORM/Query/ResultSetMappingBuilder.html", "link": "Doctrine/ORM/Query/ResultSetMappingBuilder.html#method_addJoinedEntityFromClassMetadata", "name": "Doctrine\\ORM\\Query\\ResultSetMappingBuilder::addJoinedEntityFromClassMetadata", "doc": "&quot;Adds a joined entity and all of its fields to the result set.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMappingBuilder", "fromLink": "Doctrine/ORM/Query/ResultSetMappingBuilder.html", "link": "Doctrine/ORM/Query/ResultSetMappingBuilder.html#method_addAllClassFields", "name": "Doctrine\\ORM\\Query\\ResultSetMappingBuilder::addAllClassFields", "doc": "&quot;Adds all fields of the given class to the result set mapping (columns and meta fields).&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMappingBuilder", "fromLink": "Doctrine/ORM/Query/ResultSetMappingBuilder.html", "link": "Doctrine/ORM/Query/ResultSetMappingBuilder.html#method_addNamedNativeQueryMapping", "name": "Doctrine\\ORM\\Query\\ResultSetMappingBuilder::addNamedNativeQueryMapping", "doc": "&quot;Adds the mappings of the results of native SQL queries to the result set.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMappingBuilder", "fromLink": "Doctrine/ORM/Query/ResultSetMappingBuilder.html", "link": "Doctrine/ORM/Query/ResultSetMappingBuilder.html#method_addNamedNativeQueryResultClassMapping", "name": "Doctrine\\ORM\\Query\\ResultSetMappingBuilder::addNamedNativeQueryResultClassMapping", "doc": "&quot;Adds the class mapping of the results of native SQL queries to the result set.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMappingBuilder", "fromLink": "Doctrine/ORM/Query/ResultSetMappingBuilder.html", "link": "Doctrine/ORM/Query/ResultSetMappingBuilder.html#method_addNamedNativeQueryResultSetMapping", "name": "Doctrine\\ORM\\Query\\ResultSetMappingBuilder::addNamedNativeQueryResultSetMapping", "doc": "&quot;Adds the result set mapping of the results of native SQL queries to the result set.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMappingBuilder", "fromLink": "Doctrine/ORM/Query/ResultSetMappingBuilder.html", "link": "Doctrine/ORM/Query/ResultSetMappingBuilder.html#method_addNamedNativeQueryEntityResultMapping", "name": "Doctrine\\ORM\\Query\\ResultSetMappingBuilder::addNamedNativeQueryEntityResultMapping", "doc": "&quot;Adds the entity result mapping of the results of native SQL queries to the result set.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMappingBuilder", "fromLink": "Doctrine/ORM/Query/ResultSetMappingBuilder.html", "link": "Doctrine/ORM/Query/ResultSetMappingBuilder.html#method_generateSelectClause", "name": "Doctrine\\ORM\\Query\\ResultSetMappingBuilder::generateSelectClause", "doc": "&quot;Generates the Select clause from this ResultSetMappingBuilder.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\ResultSetMappingBuilder", "fromLink": "Doctrine/ORM/Query/ResultSetMappingBuilder.html", "link": "Doctrine/ORM/Query/ResultSetMappingBuilder.html#method___toString", "name": "Doctrine\\ORM\\Query\\ResultSetMappingBuilder::__toString", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query/SqlWalker.html", "name": "Doctrine\\ORM\\Query\\SqlWalker", "doc": "&quot;The SqlWalker is a TreeWalker that walks over a DQL AST and constructs\nthe corresponding SQL.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method___construct", "name": "Doctrine\\ORM\\Query\\SqlWalker::__construct", "doc": "&quot;Initializes TreeWalker with important information about the ASTs to be walked.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_getQuery", "name": "Doctrine\\ORM\\Query\\SqlWalker::getQuery", "doc": "&quot;Gets the Query instance used by the walker.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_getConnection", "name": "Doctrine\\ORM\\Query\\SqlWalker::getConnection", "doc": "&quot;Gets the Connection used by the walker.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_getEntityManager", "name": "Doctrine\\ORM\\Query\\SqlWalker::getEntityManager", "doc": "&quot;Gets the EntityManager used by the walker.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_getQueryComponent", "name": "Doctrine\\ORM\\Query\\SqlWalker::getQueryComponent", "doc": "&quot;Gets the information about a single query component.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_getQueryComponents", "name": "Doctrine\\ORM\\Query\\SqlWalker::getQueryComponents", "doc": "&quot;Returns internal queryComponents array.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_setQueryComponent", "name": "Doctrine\\ORM\\Query\\SqlWalker::setQueryComponent", "doc": "&quot;Sets or overrides a query component for a given dql alias.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_getExecutor", "name": "Doctrine\\ORM\\Query\\SqlWalker::getExecutor", "doc": "&quot;Gets an executor that can be used to execute the result of this walker.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_getSQLTableAlias", "name": "Doctrine\\ORM\\Query\\SqlWalker::getSQLTableAlias", "doc": "&quot;Generates a unique, short SQL table alias.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_setSQLTableAlias", "name": "Doctrine\\ORM\\Query\\SqlWalker::setSQLTableAlias", "doc": "&quot;Forces the SqlWalker to use a specific alias for a table name, rather than\ngenerating an alias on its own.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_getSQLColumnAlias", "name": "Doctrine\\ORM\\Query\\SqlWalker::getSQLColumnAlias", "doc": "&quot;Gets an SQL column alias for a column name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkSelectStatement", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkSelectStatement", "doc": "&quot;Walks down a SelectStatement AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkUpdateStatement", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkUpdateStatement", "doc": "&quot;Walks down an UpdateStatement AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkDeleteStatement", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkDeleteStatement", "doc": "&quot;Walks down a DeleteStatement AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkEntityIdentificationVariable", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkEntityIdentificationVariable", "doc": "&quot;Walks down an IdentificationVariable AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkIdentificationVariable", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkIdentificationVariable", "doc": "&quot;Walks down an IdentificationVariable (no AST node associated), thereby generating the SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkPathExpression", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkPathExpression", "doc": "&quot;Walks down a PathExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkSelectClause", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkSelectClause", "doc": "&quot;Walks down a SelectClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkFromClause", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkFromClause", "doc": "&quot;Walks down a FromClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkRangeVariableDeclaration", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkRangeVariableDeclaration", "doc": "&quot;Walks down a RangeVariableDeclaration AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkJoinAssociationDeclaration", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkJoinAssociationDeclaration", "doc": "&quot;Walks down a JoinAssociationDeclaration AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkFunction", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkFunction", "doc": "&quot;Walks down a FunctionNode AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkOrderByClause", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkOrderByClause", "doc": "&quot;Walks down an OrderByClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkOrderByItem", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkOrderByItem", "doc": "&quot;Walks down an OrderByItem AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkHavingClause", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkHavingClause", "doc": "&quot;Walks down a HavingClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkJoin", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkJoin", "doc": "&quot;Walks down a Join AST node and creates the corresponding SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkCaseExpression", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkCaseExpression", "doc": "&quot;Walks down a CaseExpression AST node and generates the corresponding SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkCoalesceExpression", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkCoalesceExpression", "doc": "&quot;Walks down a CoalesceExpression AST node and generates the corresponding SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkNullIfExpression", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkNullIfExpression", "doc": "&quot;Walks down a NullIfExpression AST node and generates the corresponding SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkGeneralCaseExpression", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkGeneralCaseExpression", "doc": "&quot;Walks down a GeneralCaseExpression AST node and generates the corresponding SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkSimpleCaseExpression", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkSimpleCaseExpression", "doc": "&quot;Walks down a SimpleCaseExpression AST node and generates the corresponding SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkSelectExpression", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkSelectExpression", "doc": "&quot;Walks down a SelectExpression AST node and generates the corresponding SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkQuantifiedExpression", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkQuantifiedExpression", "doc": "&quot;Walks down a QuantifiedExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkSubselect", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkSubselect", "doc": "&quot;Walks down a Subselect AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkSubselectFromClause", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkSubselectFromClause", "doc": "&quot;Walks down a SubselectFromClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkSimpleSelectClause", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkSimpleSelectClause", "doc": "&quot;Walks down a SimpleSelectClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkParenthesisExpression", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkParenthesisExpression", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkNewObject", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkNewObject", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkSimpleSelectExpression", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkSimpleSelectExpression", "doc": "&quot;Walks down a SimpleSelectExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkAggregateExpression", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkAggregateExpression", "doc": "&quot;Walks down an AggregateExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkGroupByClause", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkGroupByClause", "doc": "&quot;Walks down a GroupByClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkGroupByItem", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkGroupByItem", "doc": "&quot;Walks down a GroupByItem AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkDeleteClause", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkDeleteClause", "doc": "&quot;Walks down a DeleteClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkUpdateClause", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkUpdateClause", "doc": "&quot;Walks down an UpdateClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkUpdateItem", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkUpdateItem", "doc": "&quot;Walks down an UpdateItem AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkWhereClause", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkWhereClause", "doc": "&quot;Walks down a WhereClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkConditionalExpression", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkConditionalExpression", "doc": "&quot;Walk down a ConditionalExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkConditionalTerm", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkConditionalTerm", "doc": "&quot;Walks down a ConditionalTerm AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkConditionalFactor", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkConditionalFactor", "doc": "&quot;Walks down a ConditionalFactor AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkConditionalPrimary", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkConditionalPrimary", "doc": "&quot;Walks down a ConditionalPrimary AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkExistsExpression", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkExistsExpression", "doc": "&quot;Walks down an ExistsExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkCollectionMemberExpression", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkCollectionMemberExpression", "doc": "&quot;Walks down a CollectionMemberExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkEmptyCollectionComparisonExpression", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkEmptyCollectionComparisonExpression", "doc": "&quot;Walks down an EmptyCollectionComparisonExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkNullComparisonExpression", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkNullComparisonExpression", "doc": "&quot;Walks down a NullComparisonExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkInExpression", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkInExpression", "doc": "&quot;Walks down an InExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkInstanceOfExpression", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkInstanceOfExpression", "doc": "&quot;Walks down an InstanceOfExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkInParameter", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkInParameter", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkLiteral", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkLiteral", "doc": "&quot;Walks down a literal that represents an AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkBetweenExpression", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkBetweenExpression", "doc": "&quot;Walks down a BetweenExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkLikeExpression", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkLikeExpression", "doc": "&quot;Walks down a LikeExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkStateFieldPathExpression", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkStateFieldPathExpression", "doc": "&quot;Walks down a StateFieldPathExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkComparisonExpression", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkComparisonExpression", "doc": "&quot;Walks down a ComparisonExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkInputParameter", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkInputParameter", "doc": "&quot;Walks down an InputParameter AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkArithmeticExpression", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkArithmeticExpression", "doc": "&quot;Walks down an ArithmeticExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkSimpleArithmeticExpression", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkSimpleArithmeticExpression", "doc": "&quot;Walks down an SimpleArithmeticExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkArithmeticTerm", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkArithmeticTerm", "doc": "&quot;Walks down an ArithmeticTerm AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkArithmeticFactor", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkArithmeticFactor", "doc": "&quot;Walks down an ArithmeticFactor that represents an AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkArithmeticPrimary", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkArithmeticPrimary", "doc": "&quot;Walks down an ArithmeticPrimary that represents an AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkStringPrimary", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkStringPrimary", "doc": "&quot;Walks down a StringPrimary that represents an AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\SqlWalker", "fromLink": "Doctrine/ORM/Query/SqlWalker.html", "link": "Doctrine/ORM/Query/SqlWalker.html#method_walkResultVariable", "name": "Doctrine\\ORM\\Query\\SqlWalker::walkResultVariable", "doc": "&quot;Walks down a ResultVariable that represents an AST node, thereby generating the appropriate SQL.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query/TreeWalker.html", "name": "Doctrine\\ORM\\Query\\TreeWalker", "doc": "&quot;Interface for walkers of DQL ASTs (abstract syntax trees).&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method___construct", "name": "Doctrine\\ORM\\Query\\TreeWalker::__construct", "doc": "&quot;Initializes TreeWalker with important information about the ASTs to be walked.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_getQueryComponents", "name": "Doctrine\\ORM\\Query\\TreeWalker::getQueryComponents", "doc": "&quot;Returns internal queryComponents array.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_setQueryComponent", "name": "Doctrine\\ORM\\Query\\TreeWalker::setQueryComponent", "doc": "&quot;Sets or overrides a query component for a given dql alias.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkSelectStatement", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkSelectStatement", "doc": "&quot;Walks down a SelectStatement AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkSelectClause", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkSelectClause", "doc": "&quot;Walks down a SelectClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkFromClause", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkFromClause", "doc": "&quot;Walks down a FromClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkFunction", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkFunction", "doc": "&quot;Walks down a FunctionNode AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkOrderByClause", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkOrderByClause", "doc": "&quot;Walks down an OrderByClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkOrderByItem", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkOrderByItem", "doc": "&quot;Walks down an OrderByItem AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkHavingClause", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkHavingClause", "doc": "&quot;Walks down a HavingClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkJoin", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkJoin", "doc": "&quot;Walks down a Join AST node and creates the corresponding SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkSelectExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkSelectExpression", "doc": "&quot;Walks down a SelectExpression AST node and generates the corresponding SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkQuantifiedExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkQuantifiedExpression", "doc": "&quot;Walks down a QuantifiedExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkSubselect", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkSubselect", "doc": "&quot;Walks down a Subselect AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkSubselectFromClause", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkSubselectFromClause", "doc": "&quot;Walks down a SubselectFromClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkSimpleSelectClause", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkSimpleSelectClause", "doc": "&quot;Walks down a SimpleSelectClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkSimpleSelectExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkSimpleSelectExpression", "doc": "&quot;Walks down a SimpleSelectExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkAggregateExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkAggregateExpression", "doc": "&quot;Walks down an AggregateExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkGroupByClause", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkGroupByClause", "doc": "&quot;Walks down a GroupByClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkGroupByItem", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkGroupByItem", "doc": "&quot;Walks down a GroupByItem AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkUpdateStatement", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkUpdateStatement", "doc": "&quot;Walks down an UpdateStatement AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkDeleteStatement", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkDeleteStatement", "doc": "&quot;Walks down a DeleteStatement AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkDeleteClause", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkDeleteClause", "doc": "&quot;Walks down a DeleteClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkUpdateClause", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkUpdateClause", "doc": "&quot;Walks down an UpdateClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkUpdateItem", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkUpdateItem", "doc": "&quot;Walks down an UpdateItem AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkWhereClause", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkWhereClause", "doc": "&quot;Walks down a WhereClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkConditionalExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkConditionalExpression", "doc": "&quot;Walk down a ConditionalExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkConditionalTerm", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkConditionalTerm", "doc": "&quot;Walks down a ConditionalTerm AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkConditionalFactor", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkConditionalFactor", "doc": "&quot;Walks down a ConditionalFactor AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkConditionalPrimary", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkConditionalPrimary", "doc": "&quot;Walks down a ConditionalPrimary AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkExistsExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkExistsExpression", "doc": "&quot;Walks down an ExistsExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkCollectionMemberExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkCollectionMemberExpression", "doc": "&quot;Walks down a CollectionMemberExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkEmptyCollectionComparisonExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkEmptyCollectionComparisonExpression", "doc": "&quot;Walks down an EmptyCollectionComparisonExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkNullComparisonExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkNullComparisonExpression", "doc": "&quot;Walks down a NullComparisonExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkInExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkInExpression", "doc": "&quot;Walks down an InExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkInstanceOfExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkInstanceOfExpression", "doc": "&quot;Walks down an InstanceOfExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkLiteral", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkLiteral", "doc": "&quot;Walks down a literal that represents an AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkBetweenExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkBetweenExpression", "doc": "&quot;Walks down a BetweenExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkLikeExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkLikeExpression", "doc": "&quot;Walks down a LikeExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkStateFieldPathExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkStateFieldPathExpression", "doc": "&quot;Walks down a StateFieldPathExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkComparisonExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkComparisonExpression", "doc": "&quot;Walks down a ComparisonExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkInputParameter", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkInputParameter", "doc": "&quot;Walks down an InputParameter AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkArithmeticExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkArithmeticExpression", "doc": "&quot;Walks down an ArithmeticExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkArithmeticTerm", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkArithmeticTerm", "doc": "&quot;Walks down an ArithmeticTerm AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkStringPrimary", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkStringPrimary", "doc": "&quot;Walks down a StringPrimary that represents an AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkArithmeticFactor", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkArithmeticFactor", "doc": "&quot;Walks down an ArithmeticFactor that represents an AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkSimpleArithmeticExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkSimpleArithmeticExpression", "doc": "&quot;Walks down an SimpleArithmeticExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkPathExpression", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkPathExpression", "doc": "&quot;Walks down a PathExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_walkResultVariable", "name": "Doctrine\\ORM\\Query\\TreeWalker::walkResultVariable", "doc": "&quot;Walks down a ResultVariable that represents an AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalker", "fromLink": "Doctrine/ORM/Query/TreeWalker.html", "link": "Doctrine/ORM/Query/TreeWalker.html#method_getExecutor", "name": "Doctrine\\ORM\\Query\\TreeWalker::getExecutor", "doc": "&quot;Gets an executor that can be used to execute the result of this walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "doc": "&quot;An adapter implementation of the TreeWalker interface. The methods in this class\nare empty. \ufeffThis class exists as convenience for creating tree walkers.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method___construct", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::__construct", "doc": "&quot;Initializes TreeWalker with important information about the ASTs to be walked.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_getQueryComponents", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::getQueryComponents", "doc": "&quot;Returns internal queryComponents array.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_setQueryComponent", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::setQueryComponent", "doc": "&quot;Sets or overrides a query component for a given dql alias.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method__getQueryComponents", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::_getQueryComponents", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method__getQuery", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::_getQuery", "doc": "&quot;Retrieves the Query Instance responsible for the current walkers execution.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method__getParserResult", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::_getParserResult", "doc": "&quot;Retrieves the ParserResult.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkSelectStatement", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkSelectStatement", "doc": "&quot;Walks down a SelectStatement AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkSelectClause", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkSelectClause", "doc": "&quot;Walks down a SelectClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkFromClause", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkFromClause", "doc": "&quot;Walks down a FromClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkFunction", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkFunction", "doc": "&quot;Walks down a FunctionNode AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkOrderByClause", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkOrderByClause", "doc": "&quot;Walks down an OrderByClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkOrderByItem", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkOrderByItem", "doc": "&quot;Walks down an OrderByItem AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkHavingClause", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkHavingClause", "doc": "&quot;Walks down a HavingClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkJoin", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkJoin", "doc": "&quot;Walks down a Join AST node and creates the corresponding SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkSelectExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkSelectExpression", "doc": "&quot;Walks down a SelectExpression AST node and generates the corresponding SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkQuantifiedExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkQuantifiedExpression", "doc": "&quot;Walks down a QuantifiedExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkSubselect", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkSubselect", "doc": "&quot;Walks down a Subselect AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkSubselectFromClause", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkSubselectFromClause", "doc": "&quot;Walks down a SubselectFromClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkSimpleSelectClause", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkSimpleSelectClause", "doc": "&quot;Walks down a SimpleSelectClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkSimpleSelectExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkSimpleSelectExpression", "doc": "&quot;Walks down a SimpleSelectExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkAggregateExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkAggregateExpression", "doc": "&quot;Walks down an AggregateExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkGroupByClause", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkGroupByClause", "doc": "&quot;Walks down a GroupByClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkGroupByItem", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkGroupByItem", "doc": "&quot;Walks down a GroupByItem AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkUpdateStatement", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkUpdateStatement", "doc": "&quot;Walks down an UpdateStatement AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkDeleteStatement", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkDeleteStatement", "doc": "&quot;Walks down a DeleteStatement AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkDeleteClause", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkDeleteClause", "doc": "&quot;Walks down a DeleteClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkUpdateClause", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkUpdateClause", "doc": "&quot;Walks down an UpdateClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkUpdateItem", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkUpdateItem", "doc": "&quot;Walks down an UpdateItem AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkWhereClause", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkWhereClause", "doc": "&quot;Walks down a WhereClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkConditionalExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkConditionalExpression", "doc": "&quot;Walk down a ConditionalExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkConditionalTerm", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkConditionalTerm", "doc": "&quot;Walks down a ConditionalTerm AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkConditionalFactor", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkConditionalFactor", "doc": "&quot;Walks down a ConditionalFactor AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkConditionalPrimary", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkConditionalPrimary", "doc": "&quot;Walks down a ConditionalPrimary AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkExistsExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkExistsExpression", "doc": "&quot;Walks down an ExistsExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkCollectionMemberExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkCollectionMemberExpression", "doc": "&quot;Walks down a CollectionMemberExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkEmptyCollectionComparisonExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkEmptyCollectionComparisonExpression", "doc": "&quot;Walks down an EmptyCollectionComparisonExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkNullComparisonExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkNullComparisonExpression", "doc": "&quot;Walks down a NullComparisonExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkInExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkInExpression", "doc": "&quot;Walks down an InExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkInstanceOfExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkInstanceOfExpression", "doc": "&quot;Walks down an InstanceOfExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkLiteral", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkLiteral", "doc": "&quot;Walks down a literal that represents an AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkBetweenExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkBetweenExpression", "doc": "&quot;Walks down a BetweenExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkLikeExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkLikeExpression", "doc": "&quot;Walks down a LikeExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkStateFieldPathExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkStateFieldPathExpression", "doc": "&quot;Walks down a StateFieldPathExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkComparisonExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkComparisonExpression", "doc": "&quot;Walks down a ComparisonExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkInputParameter", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkInputParameter", "doc": "&quot;Walks down an InputParameter AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkArithmeticExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkArithmeticExpression", "doc": "&quot;Walks down an ArithmeticExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkArithmeticTerm", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkArithmeticTerm", "doc": "&quot;Walks down an ArithmeticTerm AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkStringPrimary", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkStringPrimary", "doc": "&quot;Walks down a StringPrimary that represents an AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkArithmeticFactor", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkArithmeticFactor", "doc": "&quot;Walks down an ArithmeticFactor that represents an AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkSimpleArithmeticExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkSimpleArithmeticExpression", "doc": "&quot;Walks down an SimpleArithmeticExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkPathExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkPathExpression", "doc": "&quot;Walks down a PathExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_walkResultVariable", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::walkResultVariable", "doc": "&quot;Walks down a ResultVariable that represents an AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerAdapter", "fromLink": "Doctrine/ORM/Query/TreeWalkerAdapter.html", "link": "Doctrine/ORM/Query/TreeWalkerAdapter.html#method_getExecutor", "name": "Doctrine\\ORM\\Query\\TreeWalkerAdapter::getExecutor", "doc": "&quot;Gets an executor that can be used to execute the result of this walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Query", "fromLink": "Doctrine/ORM/Query.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain", "doc": "&quot;Represents a chain of tree walkers that modify an AST and finally emit output.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_getQueryComponents", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::getQueryComponents", "doc": "&quot;Returns the internal queryComponents array.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_setQueryComponent", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::setQueryComponent", "doc": "&quot;Sets or overrides a query component for a given dql alias.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method___construct", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::__construct", "doc": "&quot;Initializes TreeWalker with important information about the ASTs to be walked.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_addTreeWalker", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::addTreeWalker", "doc": "&quot;Adds a tree walker to the chain.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkSelectStatement", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkSelectStatement", "doc": "&quot;Walks down a SelectStatement AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkSelectClause", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkSelectClause", "doc": "&quot;Walks down a SelectClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkFromClause", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkFromClause", "doc": "&quot;Walks down a FromClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkFunction", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkFunction", "doc": "&quot;Walks down a FunctionNode AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkOrderByClause", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkOrderByClause", "doc": "&quot;Walks down an OrderByClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkOrderByItem", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkOrderByItem", "doc": "&quot;Walks down an OrderByItem AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkHavingClause", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkHavingClause", "doc": "&quot;Walks down a HavingClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkJoin", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkJoin", "doc": "&quot;Walks down a Join AST node and creates the corresponding SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkSelectExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkSelectExpression", "doc": "&quot;Walks down a SelectExpression AST node and generates the corresponding SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkQuantifiedExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkQuantifiedExpression", "doc": "&quot;Walks down a QuantifiedExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkSubselect", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkSubselect", "doc": "&quot;Walks down a Subselect AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkSubselectFromClause", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkSubselectFromClause", "doc": "&quot;Walks down a SubselectFromClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkSimpleSelectClause", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkSimpleSelectClause", "doc": "&quot;Walks down a SimpleSelectClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkSimpleSelectExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkSimpleSelectExpression", "doc": "&quot;Walks down a SimpleSelectExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkAggregateExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkAggregateExpression", "doc": "&quot;Walks down an AggregateExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkGroupByClause", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkGroupByClause", "doc": "&quot;Walks down a GroupByClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkGroupByItem", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkGroupByItem", "doc": "&quot;Walks down a GroupByItem AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkUpdateStatement", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkUpdateStatement", "doc": "&quot;Walks down an UpdateStatement AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkDeleteStatement", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkDeleteStatement", "doc": "&quot;Walks down a DeleteStatement AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkDeleteClause", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkDeleteClause", "doc": "&quot;Walks down a DeleteClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkUpdateClause", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkUpdateClause", "doc": "&quot;Walks down an UpdateClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkUpdateItem", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkUpdateItem", "doc": "&quot;Walks down an UpdateItem AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkWhereClause", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkWhereClause", "doc": "&quot;Walks down a WhereClause AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkConditionalExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkConditionalExpression", "doc": "&quot;Walk down a ConditionalExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkConditionalTerm", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkConditionalTerm", "doc": "&quot;Walks down a ConditionalTerm AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkConditionalFactor", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkConditionalFactor", "doc": "&quot;Walks down a ConditionalFactor AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkConditionalPrimary", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkConditionalPrimary", "doc": "&quot;Walks down a ConditionalPrimary AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkExistsExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkExistsExpression", "doc": "&quot;Walks down an ExistsExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkCollectionMemberExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkCollectionMemberExpression", "doc": "&quot;Walks down a CollectionMemberExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkEmptyCollectionComparisonExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkEmptyCollectionComparisonExpression", "doc": "&quot;Walks down an EmptyCollectionComparisonExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkNullComparisonExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkNullComparisonExpression", "doc": "&quot;Walks down a NullComparisonExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkInExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkInExpression", "doc": "&quot;Walks down an InExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkInstanceOfExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkInstanceOfExpression", "doc": "&quot;Walks down an InstanceOfExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkLiteral", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkLiteral", "doc": "&quot;Walks down a literal that represents an AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkBetweenExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkBetweenExpression", "doc": "&quot;Walks down a BetweenExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkLikeExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkLikeExpression", "doc": "&quot;Walks down a LikeExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkStateFieldPathExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkStateFieldPathExpression", "doc": "&quot;Walks down a StateFieldPathExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkComparisonExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkComparisonExpression", "doc": "&quot;Walks down a ComparisonExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkInputParameter", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkInputParameter", "doc": "&quot;Walks down an InputParameter AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkArithmeticExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkArithmeticExpression", "doc": "&quot;Walks down an ArithmeticExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkArithmeticTerm", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkArithmeticTerm", "doc": "&quot;Walks down an ArithmeticTerm AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkStringPrimary", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkStringPrimary", "doc": "&quot;Walks down a StringPrimary that represents an AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkArithmeticFactor", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkArithmeticFactor", "doc": "&quot;Walks down an ArithmeticFactor that represents an AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkSimpleArithmeticExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkSimpleArithmeticExpression", "doc": "&quot;Walks down an SimpleArithmeticExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkPathExpression", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkPathExpression", "doc": "&quot;Walks down a PathExpression AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_walkResultVariable", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::walkResultVariable", "doc": "&quot;Walks down a ResultVariable that represents an AST node, thereby generating the appropriate SQL.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Query\\TreeWalkerChain", "fromLink": "Doctrine/ORM/Query/TreeWalkerChain.html", "link": "Doctrine/ORM/Query/TreeWalkerChain.html#method_getExecutor", "name": "Doctrine\\ORM\\Query\\TreeWalkerChain::getExecutor", "doc": "&quot;Gets an executor that can be used to execute the result of this walker.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Repository", "fromLink": "Doctrine/ORM/Repository.html", "link": "Doctrine/ORM/Repository/DefaultRepositoryFactory.html", "name": "Doctrine\\ORM\\Repository\\DefaultRepositoryFactory", "doc": "&quot;This factory is used to create default repository objects for entities at runtime.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Repository\\DefaultRepositoryFactory", "fromLink": "Doctrine/ORM/Repository/DefaultRepositoryFactory.html", "link": "Doctrine/ORM/Repository/DefaultRepositoryFactory.html#method_getRepository", "name": "Doctrine\\ORM\\Repository\\DefaultRepositoryFactory::getRepository", "doc": "&quot;Gets the repository for an entity class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Repository\\DefaultRepositoryFactory", "fromLink": "Doctrine/ORM/Repository/DefaultRepositoryFactory.html", "link": "Doctrine/ORM/Repository/DefaultRepositoryFactory.html#method_createRepository", "name": "Doctrine\\ORM\\Repository\\DefaultRepositoryFactory::createRepository", "doc": "&quot;Create a new repository instance for an entity class.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Repository", "fromLink": "Doctrine/ORM/Repository.html", "link": "Doctrine/ORM/Repository/RepositoryFactory.html", "name": "Doctrine\\ORM\\Repository\\RepositoryFactory", "doc": "&quot;Interface for entity repository factory.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Repository\\RepositoryFactory", "fromLink": "Doctrine/ORM/Repository/RepositoryFactory.html", "link": "Doctrine/ORM/Repository/RepositoryFactory.html#method_getRepository", "name": "Doctrine\\ORM\\Repository\\RepositoryFactory::getRepository", "doc": "&quot;Gets the repository for an entity class.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache", "fromLink": "Doctrine/ORM/Tools/Console/Command/ClearCache.html", "link": "Doctrine/ORM/Tools/Console/Command/ClearCache/MetadataCommand.html", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache\\MetadataCommand", "doc": "&quot;Command to clear the metadata cache of the various cache drivers.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache\\MetadataCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/ClearCache/MetadataCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/ClearCache/MetadataCommand.html#method_configure", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache\\MetadataCommand::configure", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache\\MetadataCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/ClearCache/MetadataCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/ClearCache/MetadataCommand.html#method_execute", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache\\MetadataCommand::execute", "doc": "&quot;{@inheritdoc}&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache", "fromLink": "Doctrine/ORM/Tools/Console/Command/ClearCache.html", "link": "Doctrine/ORM/Tools/Console/Command/ClearCache/QueryCommand.html", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache\\QueryCommand", "doc": "&quot;Command to clear the query cache of the various cache drivers.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache\\QueryCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/ClearCache/QueryCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/ClearCache/QueryCommand.html#method_configure", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache\\QueryCommand::configure", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache\\QueryCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/ClearCache/QueryCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/ClearCache/QueryCommand.html#method_execute", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache\\QueryCommand::execute", "doc": "&quot;{@inheritdoc}&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache", "fromLink": "Doctrine/ORM/Tools/Console/Command/ClearCache.html", "link": "Doctrine/ORM/Tools/Console/Command/ClearCache/ResultCommand.html", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache\\ResultCommand", "doc": "&quot;Command to clear the result cache of the various cache drivers.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache\\ResultCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/ClearCache/ResultCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/ClearCache/ResultCommand.html#method_configure", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache\\ResultCommand::configure", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache\\ResultCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/ClearCache/ResultCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/ClearCache/ResultCommand.html#method_execute", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache\\ResultCommand::execute", "doc": "&quot;{@inheritdoc}&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command", "fromLink": "Doctrine/ORM/Tools/Console/Command.html", "link": "Doctrine/ORM/Tools/Console/Command/ConvertDoctrine1SchemaCommand.html", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\ConvertDoctrine1SchemaCommand", "doc": "&quot;Command to convert a Doctrine 1 schema to a Doctrine 2 mapping file.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\ConvertDoctrine1SchemaCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/ConvertDoctrine1SchemaCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/ConvertDoctrine1SchemaCommand.html#method_getEntityGenerator", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\ConvertDoctrine1SchemaCommand::getEntityGenerator", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\ConvertDoctrine1SchemaCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/ConvertDoctrine1SchemaCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/ConvertDoctrine1SchemaCommand.html#method_setEntityGenerator", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\ConvertDoctrine1SchemaCommand::setEntityGenerator", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\ConvertDoctrine1SchemaCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/ConvertDoctrine1SchemaCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/ConvertDoctrine1SchemaCommand.html#method_getMetadataExporter", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\ConvertDoctrine1SchemaCommand::getMetadataExporter", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\ConvertDoctrine1SchemaCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/ConvertDoctrine1SchemaCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/ConvertDoctrine1SchemaCommand.html#method_setMetadataExporter", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\ConvertDoctrine1SchemaCommand::setMetadataExporter", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\ConvertDoctrine1SchemaCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/ConvertDoctrine1SchemaCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/ConvertDoctrine1SchemaCommand.html#method_configure", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\ConvertDoctrine1SchemaCommand::configure", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\ConvertDoctrine1SchemaCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/ConvertDoctrine1SchemaCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/ConvertDoctrine1SchemaCommand.html#method_execute", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\ConvertDoctrine1SchemaCommand::execute", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\ConvertDoctrine1SchemaCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/ConvertDoctrine1SchemaCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/ConvertDoctrine1SchemaCommand.html#method_convertDoctrine1Schema", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\ConvertDoctrine1SchemaCommand::convertDoctrine1Schema", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command", "fromLink": "Doctrine/ORM/Tools/Console/Command.html", "link": "Doctrine/ORM/Tools/Console/Command/ConvertMappingCommand.html", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\ConvertMappingCommand", "doc": "&quot;Command to convert your mapping information between the various formats.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\ConvertMappingCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/ConvertMappingCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/ConvertMappingCommand.html#method_configure", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\ConvertMappingCommand::configure", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\ConvertMappingCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/ConvertMappingCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/ConvertMappingCommand.html#method_execute", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\ConvertMappingCommand::execute", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\ConvertMappingCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/ConvertMappingCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/ConvertMappingCommand.html#method_getExporter", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\ConvertMappingCommand::getExporter", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command", "fromLink": "Doctrine/ORM/Tools/Console/Command.html", "link": "Doctrine/ORM/Tools/Console/Command/EnsureProductionSettingsCommand.html", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\EnsureProductionSettingsCommand", "doc": "&quot;Command to ensure that Doctrine is properly configured for a production environment.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\EnsureProductionSettingsCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/EnsureProductionSettingsCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/EnsureProductionSettingsCommand.html#method_configure", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\EnsureProductionSettingsCommand::configure", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\EnsureProductionSettingsCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/EnsureProductionSettingsCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/EnsureProductionSettingsCommand.html#method_execute", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\EnsureProductionSettingsCommand::execute", "doc": "&quot;{@inheritdoc}&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command", "fromLink": "Doctrine/ORM/Tools/Console/Command.html", "link": "Doctrine/ORM/Tools/Console/Command/GenerateEntitiesCommand.html", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\GenerateEntitiesCommand", "doc": "&quot;Command to generate entity classes and method stubs from your mapping information.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\GenerateEntitiesCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/GenerateEntitiesCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/GenerateEntitiesCommand.html#method_configure", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\GenerateEntitiesCommand::configure", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\GenerateEntitiesCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/GenerateEntitiesCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/GenerateEntitiesCommand.html#method_execute", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\GenerateEntitiesCommand::execute", "doc": "&quot;{@inheritdoc}&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command", "fromLink": "Doctrine/ORM/Tools/Console/Command.html", "link": "Doctrine/ORM/Tools/Console/Command/GenerateProxiesCommand.html", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\GenerateProxiesCommand", "doc": "&quot;Command to (re)generate the proxy classes used by doctrine.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\GenerateProxiesCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/GenerateProxiesCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/GenerateProxiesCommand.html#method_configure", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\GenerateProxiesCommand::configure", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\GenerateProxiesCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/GenerateProxiesCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/GenerateProxiesCommand.html#method_execute", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\GenerateProxiesCommand::execute", "doc": "&quot;{@inheritdoc}&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command", "fromLink": "Doctrine/ORM/Tools/Console/Command.html", "link": "Doctrine/ORM/Tools/Console/Command/GenerateRepositoriesCommand.html", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\GenerateRepositoriesCommand", "doc": "&quot;Command to generate repository classes for mapping information.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\GenerateRepositoriesCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/GenerateRepositoriesCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/GenerateRepositoriesCommand.html#method_configure", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\GenerateRepositoriesCommand::configure", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\GenerateRepositoriesCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/GenerateRepositoriesCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/GenerateRepositoriesCommand.html#method_execute", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\GenerateRepositoriesCommand::execute", "doc": "&quot;{@inheritdoc}&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command", "fromLink": "Doctrine/ORM/Tools/Console/Command.html", "link": "Doctrine/ORM/Tools/Console/Command/InfoCommand.html", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\InfoCommand", "doc": "&quot;Show information about mapped entities.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\InfoCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/InfoCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/InfoCommand.html#method_configure", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\InfoCommand::configure", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\InfoCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/InfoCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/InfoCommand.html#method_execute", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\InfoCommand::execute", "doc": "&quot;{@inheritdoc}&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command", "fromLink": "Doctrine/ORM/Tools/Console/Command.html", "link": "Doctrine/ORM/Tools/Console/Command/RunDqlCommand.html", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\RunDqlCommand", "doc": "&quot;Command to execute DQL queries in a given EntityManager.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\RunDqlCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/RunDqlCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/RunDqlCommand.html#method_configure", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\RunDqlCommand::configure", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\RunDqlCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/RunDqlCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/RunDqlCommand.html#method_execute", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\RunDqlCommand::execute", "doc": "&quot;{@inheritdoc}&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool", "fromLink": "Doctrine/ORM/Tools/Console/Command/SchemaTool.html", "link": "Doctrine/ORM/Tools/Console/Command/SchemaTool/AbstractCommand.html", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\AbstractCommand", "doc": "&quot;Base class for CreateCommand, DropCommand and UpdateCommand.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\AbstractCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/SchemaTool/AbstractCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/SchemaTool/AbstractCommand.html#method_executeSchemaCommand", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\AbstractCommand::executeSchemaCommand", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\AbstractCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/SchemaTool/AbstractCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/SchemaTool/AbstractCommand.html#method_execute", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\AbstractCommand::execute", "doc": "&quot;{@inheritdoc}&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool", "fromLink": "Doctrine/ORM/Tools/Console/Command/SchemaTool.html", "link": "Doctrine/ORM/Tools/Console/Command/SchemaTool/CreateCommand.html", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\CreateCommand", "doc": "&quot;Command to create the database schema for a set of classes based on their mappings.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\CreateCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/SchemaTool/CreateCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/SchemaTool/CreateCommand.html#method_configure", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\CreateCommand::configure", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\CreateCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/SchemaTool/CreateCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/SchemaTool/CreateCommand.html#method_executeSchemaCommand", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\CreateCommand::executeSchemaCommand", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool", "fromLink": "Doctrine/ORM/Tools/Console/Command/SchemaTool.html", "link": "Doctrine/ORM/Tools/Console/Command/SchemaTool/DropCommand.html", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\DropCommand", "doc": "&quot;Command to drop the database schema for a set of classes based on their mappings.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\DropCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/SchemaTool/DropCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/SchemaTool/DropCommand.html#method_configure", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\DropCommand::configure", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\DropCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/SchemaTool/DropCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/SchemaTool/DropCommand.html#method_executeSchemaCommand", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\DropCommand::executeSchemaCommand", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool", "fromLink": "Doctrine/ORM/Tools/Console/Command/SchemaTool.html", "link": "Doctrine/ORM/Tools/Console/Command/SchemaTool/UpdateCommand.html", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\UpdateCommand", "doc": "&quot;Command to generate the SQL needed to update the database schema to match\nthe current mapping information.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\UpdateCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/SchemaTool/UpdateCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/SchemaTool/UpdateCommand.html#method_configure", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\UpdateCommand::configure", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\UpdateCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/SchemaTool/UpdateCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/SchemaTool/UpdateCommand.html#method_executeSchemaCommand", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\UpdateCommand::executeSchemaCommand", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command", "fromLink": "Doctrine/ORM/Tools/Console/Command.html", "link": "Doctrine/ORM/Tools/Console/Command/ValidateSchemaCommand.html", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\ValidateSchemaCommand", "doc": "&quot;Command to validate that the current mapping is valid.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\ValidateSchemaCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/ValidateSchemaCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/ValidateSchemaCommand.html#method_configure", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\ValidateSchemaCommand::configure", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Command\\ValidateSchemaCommand", "fromLink": "Doctrine/ORM/Tools/Console/Command/ValidateSchemaCommand.html", "link": "Doctrine/ORM/Tools/Console/Command/ValidateSchemaCommand.html#method_execute", "name": "Doctrine\\ORM\\Tools\\Console\\Command\\ValidateSchemaCommand::execute", "doc": "&quot;{@inheritdoc}&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Console", "fromLink": "Doctrine/ORM/Tools/Console.html", "link": "Doctrine/ORM/Tools/Console/ConsoleRunner.html", "name": "Doctrine\\ORM\\Tools\\Console\\ConsoleRunner", "doc": "&quot;Handles running the Console Tools inside Symfony Console context.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\ConsoleRunner", "fromLink": "Doctrine/ORM/Tools/Console/ConsoleRunner.html", "link": "Doctrine/ORM/Tools/Console/ConsoleRunner.html#method_createHelperSet", "name": "Doctrine\\ORM\\Tools\\Console\\ConsoleRunner::createHelperSet", "doc": "&quot;Create a Symfony Console HelperSet&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\ConsoleRunner", "fromLink": "Doctrine/ORM/Tools/Console/ConsoleRunner.html", "link": "Doctrine/ORM/Tools/Console/ConsoleRunner.html#method_run", "name": "Doctrine\\ORM\\Tools\\Console\\ConsoleRunner::run", "doc": "&quot;Runs console with the given helperset.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\ConsoleRunner", "fromLink": "Doctrine/ORM/Tools/Console/ConsoleRunner.html", "link": "Doctrine/ORM/Tools/Console/ConsoleRunner.html#method_addCommands", "name": "Doctrine\\ORM\\Tools\\Console\\ConsoleRunner::addCommands", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\ConsoleRunner", "fromLink": "Doctrine/ORM/Tools/Console/ConsoleRunner.html", "link": "Doctrine/ORM/Tools/Console/ConsoleRunner.html#method_printCliConfigTemplate", "name": "Doctrine\\ORM\\Tools\\Console\\ConsoleRunner::printCliConfigTemplate", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Console\\Helper", "fromLink": "Doctrine/ORM/Tools/Console/Helper.html", "link": "Doctrine/ORM/Tools/Console/Helper/EntityManagerHelper.html", "name": "Doctrine\\ORM\\Tools\\Console\\Helper\\EntityManagerHelper", "doc": "&quot;Doctrine CLI Connection Helper.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Helper\\EntityManagerHelper", "fromLink": "Doctrine/ORM/Tools/Console/Helper/EntityManagerHelper.html", "link": "Doctrine/ORM/Tools/Console/Helper/EntityManagerHelper.html#method___construct", "name": "Doctrine\\ORM\\Tools\\Console\\Helper\\EntityManagerHelper::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Helper\\EntityManagerHelper", "fromLink": "Doctrine/ORM/Tools/Console/Helper/EntityManagerHelper.html", "link": "Doctrine/ORM/Tools/Console/Helper/EntityManagerHelper.html#method_getEntityManager", "name": "Doctrine\\ORM\\Tools\\Console\\Helper\\EntityManagerHelper::getEntityManager", "doc": "&quot;Retrieves Doctrine ORM EntityManager.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\Helper\\EntityManagerHelper", "fromLink": "Doctrine/ORM/Tools/Console/Helper/EntityManagerHelper.html", "link": "Doctrine/ORM/Tools/Console/Helper/EntityManagerHelper.html#method_getName", "name": "Doctrine\\ORM\\Tools\\Console\\Helper\\EntityManagerHelper::getName", "doc": "&quot;{@inheritdoc}&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Console", "fromLink": "Doctrine/ORM/Tools/Console.html", "link": "Doctrine/ORM/Tools/Console/MetadataFilter.html", "name": "Doctrine\\ORM\\Tools\\Console\\MetadataFilter", "doc": "&quot;Used by CLI Tools to restrict entity-based commands to given patterns.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\MetadataFilter", "fromLink": "Doctrine/ORM/Tools/Console/MetadataFilter.html", "link": "Doctrine/ORM/Tools/Console/MetadataFilter.html#method_filter", "name": "Doctrine\\ORM\\Tools\\Console\\MetadataFilter::filter", "doc": "&quot;Filter Metadatas by one or more filter options.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\MetadataFilter", "fromLink": "Doctrine/ORM/Tools/Console/MetadataFilter.html", "link": "Doctrine/ORM/Tools/Console/MetadataFilter.html#method___construct", "name": "Doctrine\\ORM\\Tools\\Console\\MetadataFilter::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\MetadataFilter", "fromLink": "Doctrine/ORM/Tools/Console/MetadataFilter.html", "link": "Doctrine/ORM/Tools/Console/MetadataFilter.html#method_accept", "name": "Doctrine\\ORM\\Tools\\Console\\MetadataFilter::accept", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Console\\MetadataFilter", "fromLink": "Doctrine/ORM/Tools/Console/MetadataFilter.html", "link": "Doctrine/ORM/Tools/Console/MetadataFilter.html#method_count", "name": "Doctrine\\ORM\\Tools\\Console\\MetadataFilter::count", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools", "fromLink": "Doctrine/ORM/Tools.html", "link": "Doctrine/ORM/Tools/ConvertDoctrine1Schema.html", "name": "Doctrine\\ORM\\Tools\\ConvertDoctrine1Schema", "doc": "&quot;Class to help with converting Doctrine 1 schema files to Doctrine 2 mapping files&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\ConvertDoctrine1Schema", "fromLink": "Doctrine/ORM/Tools/ConvertDoctrine1Schema.html", "link": "Doctrine/ORM/Tools/ConvertDoctrine1Schema.html#method___construct", "name": "Doctrine\\ORM\\Tools\\ConvertDoctrine1Schema::__construct", "doc": "&quot;Constructor passes the directory or array of directories\nto convert the Doctrine 1 schema files from.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\ConvertDoctrine1Schema", "fromLink": "Doctrine/ORM/Tools/ConvertDoctrine1Schema.html", "link": "Doctrine/ORM/Tools/ConvertDoctrine1Schema.html#method_getMetadata", "name": "Doctrine\\ORM\\Tools\\ConvertDoctrine1Schema::getMetadata", "doc": "&quot;Gets an array of ClassMetadataInfo instances from the passed\nDoctrine 1 schema.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools", "fromLink": "Doctrine/ORM/Tools.html", "link": "Doctrine/ORM/Tools/DebugUnitOfWorkListener.html", "name": "Doctrine\\ORM\\Tools\\DebugUnitOfWorkListener", "doc": "&quot;Use this logger to dump the identity map during the onFlush event. This is useful for debugging\nweird UnitOfWork behavior with complex operations.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\DebugUnitOfWorkListener", "fromLink": "Doctrine/ORM/Tools/DebugUnitOfWorkListener.html", "link": "Doctrine/ORM/Tools/DebugUnitOfWorkListener.html#method___construct", "name": "Doctrine\\ORM\\Tools\\DebugUnitOfWorkListener::__construct", "doc": "&quot;Pass a stream and context information for the debugging session.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\DebugUnitOfWorkListener", "fromLink": "Doctrine/ORM/Tools/DebugUnitOfWorkListener.html", "link": "Doctrine/ORM/Tools/DebugUnitOfWorkListener.html#method_onFlush", "name": "Doctrine\\ORM\\Tools\\DebugUnitOfWorkListener::onFlush", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\DebugUnitOfWorkListener", "fromLink": "Doctrine/ORM/Tools/DebugUnitOfWorkListener.html", "link": "Doctrine/ORM/Tools/DebugUnitOfWorkListener.html#method_dumpIdentityMap", "name": "Doctrine\\ORM\\Tools\\DebugUnitOfWorkListener::dumpIdentityMap", "doc": "&quot;Dumps the contents of the identity map into a stream.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools", "fromLink": "Doctrine/ORM/Tools.html", "link": "Doctrine/ORM/Tools/DisconnectedClassMetadataFactory.html", "name": "Doctrine\\ORM\\Tools\\DisconnectedClassMetadataFactory", "doc": "&quot;The DisconnectedClassMetadataFactory is used to create ClassMetadataInfo objects\nthat do not require the entity class actually exist. This allows us to\nload some mapping information and use it to do things like generate code\nfrom the mapping information.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\DisconnectedClassMetadataFactory", "fromLink": "Doctrine/ORM/Tools/DisconnectedClassMetadataFactory.html", "link": "Doctrine/ORM/Tools/DisconnectedClassMetadataFactory.html#method_getReflectionService", "name": "Doctrine\\ORM\\Tools\\DisconnectedClassMetadataFactory::getReflectionService", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools", "fromLink": "Doctrine/ORM/Tools.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html", "name": "Doctrine\\ORM\\Tools\\EntityGenerator", "doc": "&quot;Generic class used to generate PHP5 entity classes from ClassMetadataInfo instances.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method___construct", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_generate", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::generate", "doc": "&quot;Generates and writes entity classes for the given array of ClassMetadataInfo instances.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_writeEntityClass", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::writeEntityClass", "doc": "&quot;Generates and writes entity class to disk for the given ClassMetadataInfo instance.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_generateEntityClass", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::generateEntityClass", "doc": "&quot;Generates a PHP5 Doctrine 2 entity class from the given ClassMetadataInfo instance.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_generateUpdatedEntityClass", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::generateUpdatedEntityClass", "doc": "&quot;Generates the updated code for the given ClassMetadataInfo and entity at path.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_setNumSpaces", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::setNumSpaces", "doc": "&quot;Sets the number of spaces the exported class should have.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_setExtension", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::setExtension", "doc": "&quot;Sets the extension to use when writing php files to disk.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_setClassToExtend", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::setClassToExtend", "doc": "&quot;Sets the name of the class the generated classes should extend from.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_setGenerateAnnotations", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::setGenerateAnnotations", "doc": "&quot;Sets whether or not to generate annotations for the entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_setFieldVisibility", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::setFieldVisibility", "doc": "&quot;Sets the class fields visibility for the entity (can either be private or protected).&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_setAnnotationPrefix", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::setAnnotationPrefix", "doc": "&quot;Sets an annotation prefix.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_setUpdateEntityIfExists", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::setUpdateEntityIfExists", "doc": "&quot;Sets whether or not to try and update the entity if it already exists.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_setRegenerateEntityIfExists", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::setRegenerateEntityIfExists", "doc": "&quot;Sets whether or not to regenerate the entity if it exists.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_setGenerateStubMethods", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::setGenerateStubMethods", "doc": "&quot;Sets whether or not to generate stub methods for the entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_setBackupExisting", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::setBackupExisting", "doc": "&quot;Should an existing entity be backed up if it already exists?&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_getType", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::getType", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_generateEntityNamespace", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::generateEntityNamespace", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_generateEntityClassName", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::generateEntityClassName", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_generateEntityBody", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::generateEntityBody", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_generateEntityConstructor", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::generateEntityConstructor", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_parseTokensInEntityFile", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::parseTokensInEntityFile", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_hasProperty", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::hasProperty", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_hasMethod", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::hasMethod", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_hasNamespace", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::hasNamespace", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_extendsClass", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::extendsClass", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_getClassToExtend", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::getClassToExtend", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_getClassToExtendName", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::getClassToExtendName", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_getClassName", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::getClassName", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_getNamespace", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::getNamespace", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_generateEntityDocBlock", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::generateEntityDocBlock", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_generateTableAnnotation", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::generateTableAnnotation", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_generateTableConstraints", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::generateTableConstraints", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_generateInheritanceAnnotation", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::generateInheritanceAnnotation", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_generateDiscriminatorColumnAnnotation", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::generateDiscriminatorColumnAnnotation", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_generateDiscriminatorMapAnnotation", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::generateDiscriminatorMapAnnotation", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_generateEntityStubMethods", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::generateEntityStubMethods", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_isAssociationIsNullable", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::isAssociationIsNullable", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_generateEntityLifecycleCallbackMethods", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::generateEntityLifecycleCallbackMethods", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_generateEntityAssociationMappingProperties", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::generateEntityAssociationMappingProperties", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_generateEntityFieldMappingProperties", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::generateEntityFieldMappingProperties", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_generateEntityStubMethod", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::generateEntityStubMethod", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_generateLifecycleCallbackMethod", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::generateLifecycleCallbackMethod", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_generateJoinColumnAnnotation", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::generateJoinColumnAnnotation", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_generateAssociationMappingPropertyDocBlock", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::generateAssociationMappingPropertyDocBlock", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_generateFieldMappingPropertyDocBlock", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::generateFieldMappingPropertyDocBlock", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_prefixCodeWithSpaces", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::prefixCodeWithSpaces", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_getInheritanceTypeString", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::getInheritanceTypeString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_getChangeTrackingPolicyString", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::getChangeTrackingPolicyString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityGenerator", "fromLink": "Doctrine/ORM/Tools/EntityGenerator.html", "link": "Doctrine/ORM/Tools/EntityGenerator.html#method_getIdGeneratorTypeString", "name": "Doctrine\\ORM\\Tools\\EntityGenerator::getIdGeneratorTypeString", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools", "fromLink": "Doctrine/ORM/Tools.html", "link": "Doctrine/ORM/Tools/EntityRepositoryGenerator.html", "name": "Doctrine\\ORM\\Tools\\EntityRepositoryGenerator", "doc": "&quot;Class to generate entity repository classes&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityRepositoryGenerator", "fromLink": "Doctrine/ORM/Tools/EntityRepositoryGenerator.html", "link": "Doctrine/ORM/Tools/EntityRepositoryGenerator.html#method_generateEntityRepositoryClass", "name": "Doctrine\\ORM\\Tools\\EntityRepositoryGenerator::generateEntityRepositoryClass", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\EntityRepositoryGenerator", "fromLink": "Doctrine/ORM/Tools/EntityRepositoryGenerator.html", "link": "Doctrine/ORM/Tools/EntityRepositoryGenerator.html#method_writeEntityRepositoryClass", "name": "Doctrine\\ORM\\Tools\\EntityRepositoryGenerator::writeEntityRepositoryClass", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Event", "fromLink": "Doctrine/ORM/Tools/Event.html", "link": "Doctrine/ORM/Tools/Event/GenerateSchemaEventArgs.html", "name": "Doctrine\\ORM\\Tools\\Event\\GenerateSchemaEventArgs", "doc": "&quot;Event Args used for the Events::postGenerateSchema event.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Event\\GenerateSchemaEventArgs", "fromLink": "Doctrine/ORM/Tools/Event/GenerateSchemaEventArgs.html", "link": "Doctrine/ORM/Tools/Event/GenerateSchemaEventArgs.html#method___construct", "name": "Doctrine\\ORM\\Tools\\Event\\GenerateSchemaEventArgs::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Event\\GenerateSchemaEventArgs", "fromLink": "Doctrine/ORM/Tools/Event/GenerateSchemaEventArgs.html", "link": "Doctrine/ORM/Tools/Event/GenerateSchemaEventArgs.html#method_getEntityManager", "name": "Doctrine\\ORM\\Tools\\Event\\GenerateSchemaEventArgs::getEntityManager", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Event\\GenerateSchemaEventArgs", "fromLink": "Doctrine/ORM/Tools/Event/GenerateSchemaEventArgs.html", "link": "Doctrine/ORM/Tools/Event/GenerateSchemaEventArgs.html#method_getSchema", "name": "Doctrine\\ORM\\Tools\\Event\\GenerateSchemaEventArgs::getSchema", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Event", "fromLink": "Doctrine/ORM/Tools/Event.html", "link": "Doctrine/ORM/Tools/Event/GenerateSchemaTableEventArgs.html", "name": "Doctrine\\ORM\\Tools\\Event\\GenerateSchemaTableEventArgs", "doc": "&quot;Event Args used for the Events::postGenerateSchemaTable event.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Event\\GenerateSchemaTableEventArgs", "fromLink": "Doctrine/ORM/Tools/Event/GenerateSchemaTableEventArgs.html", "link": "Doctrine/ORM/Tools/Event/GenerateSchemaTableEventArgs.html#method___construct", "name": "Doctrine\\ORM\\Tools\\Event\\GenerateSchemaTableEventArgs::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Event\\GenerateSchemaTableEventArgs", "fromLink": "Doctrine/ORM/Tools/Event/GenerateSchemaTableEventArgs.html", "link": "Doctrine/ORM/Tools/Event/GenerateSchemaTableEventArgs.html#method_getClassMetadata", "name": "Doctrine\\ORM\\Tools\\Event\\GenerateSchemaTableEventArgs::getClassMetadata", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Event\\GenerateSchemaTableEventArgs", "fromLink": "Doctrine/ORM/Tools/Event/GenerateSchemaTableEventArgs.html", "link": "Doctrine/ORM/Tools/Event/GenerateSchemaTableEventArgs.html#method_getSchema", "name": "Doctrine\\ORM\\Tools\\Event\\GenerateSchemaTableEventArgs::getSchema", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Event\\GenerateSchemaTableEventArgs", "fromLink": "Doctrine/ORM/Tools/Event/GenerateSchemaTableEventArgs.html", "link": "Doctrine/ORM/Tools/Event/GenerateSchemaTableEventArgs.html#method_getClassTable", "name": "Doctrine\\ORM\\Tools\\Event\\GenerateSchemaTableEventArgs::getClassTable", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Export", "fromLink": "Doctrine/ORM/Tools/Export.html", "link": "Doctrine/ORM/Tools/Export/ClassMetadataExporter.html", "name": "Doctrine\\ORM\\Tools\\Export\\ClassMetadataExporter", "doc": "&quot;Class used for converting your mapping information between the\nsupported formats: yaml, xml, and php\/annotation.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Export\\ClassMetadataExporter", "fromLink": "Doctrine/ORM/Tools/Export/ClassMetadataExporter.html", "link": "Doctrine/ORM/Tools/Export/ClassMetadataExporter.html#method_registerExportDriver", "name": "Doctrine\\ORM\\Tools\\Export\\ClassMetadataExporter::registerExportDriver", "doc": "&quot;Registers a new exporter driver class under a specified name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Export\\ClassMetadataExporter", "fromLink": "Doctrine/ORM/Tools/Export/ClassMetadataExporter.html", "link": "Doctrine/ORM/Tools/Export/ClassMetadataExporter.html#method_getExporter", "name": "Doctrine\\ORM\\Tools\\Export\\ClassMetadataExporter::getExporter", "doc": "&quot;Gets an exporter driver instance.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Export\\Driver", "fromLink": "Doctrine/ORM/Tools/Export/Driver.html", "link": "Doctrine/ORM/Tools/Export/Driver/AbstractExporter.html", "name": "Doctrine\\ORM\\Tools\\Export\\Driver\\AbstractExporter", "doc": "&quot;Abstract base class which is to be used for the Exporter drivers\nwhich can be found in \\Doctrine\\ORM\\Tools\\Export\\Driver.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Export\\Driver\\AbstractExporter", "fromLink": "Doctrine/ORM/Tools/Export/Driver/AbstractExporter.html", "link": "Doctrine/ORM/Tools/Export/Driver/AbstractExporter.html#method___construct", "name": "Doctrine\\ORM\\Tools\\Export\\Driver\\AbstractExporter::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Export\\Driver\\AbstractExporter", "fromLink": "Doctrine/ORM/Tools/Export/Driver/AbstractExporter.html", "link": "Doctrine/ORM/Tools/Export/Driver/AbstractExporter.html#method_setOverwriteExistingFiles", "name": "Doctrine\\ORM\\Tools\\Export\\Driver\\AbstractExporter::setOverwriteExistingFiles", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Export\\Driver\\AbstractExporter", "fromLink": "Doctrine/ORM/Tools/Export/Driver/AbstractExporter.html", "link": "Doctrine/ORM/Tools/Export/Driver/AbstractExporter.html#method_exportClassMetadata", "name": "Doctrine\\ORM\\Tools\\Export\\Driver\\AbstractExporter::exportClassMetadata", "doc": "&quot;Converts a single ClassMetadata instance to the exported format\nand returns it.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Export\\Driver\\AbstractExporter", "fromLink": "Doctrine/ORM/Tools/Export/Driver/AbstractExporter.html", "link": "Doctrine/ORM/Tools/Export/Driver/AbstractExporter.html#method_setMetadata", "name": "Doctrine\\ORM\\Tools\\Export\\Driver\\AbstractExporter::setMetadata", "doc": "&quot;Sets the array of ClassMetadataInfo instances to export.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Export\\Driver\\AbstractExporter", "fromLink": "Doctrine/ORM/Tools/Export/Driver/AbstractExporter.html", "link": "Doctrine/ORM/Tools/Export/Driver/AbstractExporter.html#method_getExtension", "name": "Doctrine\\ORM\\Tools\\Export\\Driver\\AbstractExporter::getExtension", "doc": "&quot;Gets the extension used to generated the path to a class.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Export\\Driver\\AbstractExporter", "fromLink": "Doctrine/ORM/Tools/Export/Driver/AbstractExporter.html", "link": "Doctrine/ORM/Tools/Export/Driver/AbstractExporter.html#method_setOutputDir", "name": "Doctrine\\ORM\\Tools\\Export\\Driver\\AbstractExporter::setOutputDir", "doc": "&quot;Sets the directory to output the mapping files to.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Export\\Driver\\AbstractExporter", "fromLink": "Doctrine/ORM/Tools/Export/Driver/AbstractExporter.html", "link": "Doctrine/ORM/Tools/Export/Driver/AbstractExporter.html#method_export", "name": "Doctrine\\ORM\\Tools\\Export\\Driver\\AbstractExporter::export", "doc": "&quot;Exports each ClassMetadata instance to a single Doctrine Mapping file\nnamed after the entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Export\\Driver\\AbstractExporter", "fromLink": "Doctrine/ORM/Tools/Export/Driver/AbstractExporter.html", "link": "Doctrine/ORM/Tools/Export/Driver/AbstractExporter.html#method__generateOutputPath", "name": "Doctrine\\ORM\\Tools\\Export\\Driver\\AbstractExporter::_generateOutputPath", "doc": "&quot;Generates the path to write the class for the given ClassMetadataInfo instance.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Export\\Driver\\AbstractExporter", "fromLink": "Doctrine/ORM/Tools/Export/Driver/AbstractExporter.html", "link": "Doctrine/ORM/Tools/Export/Driver/AbstractExporter.html#method_setExtension", "name": "Doctrine\\ORM\\Tools\\Export\\Driver\\AbstractExporter::setExtension", "doc": "&quot;Sets the directory to output the mapping files to.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Export\\Driver\\AbstractExporter", "fromLink": "Doctrine/ORM/Tools/Export/Driver/AbstractExporter.html", "link": "Doctrine/ORM/Tools/Export/Driver/AbstractExporter.html#method__getInheritanceTypeString", "name": "Doctrine\\ORM\\Tools\\Export\\Driver\\AbstractExporter::_getInheritanceTypeString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Export\\Driver\\AbstractExporter", "fromLink": "Doctrine/ORM/Tools/Export/Driver/AbstractExporter.html", "link": "Doctrine/ORM/Tools/Export/Driver/AbstractExporter.html#method__getChangeTrackingPolicyString", "name": "Doctrine\\ORM\\Tools\\Export\\Driver\\AbstractExporter::_getChangeTrackingPolicyString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Export\\Driver\\AbstractExporter", "fromLink": "Doctrine/ORM/Tools/Export/Driver/AbstractExporter.html", "link": "Doctrine/ORM/Tools/Export/Driver/AbstractExporter.html#method__getIdGeneratorTypeString", "name": "Doctrine\\ORM\\Tools\\Export\\Driver\\AbstractExporter::_getIdGeneratorTypeString", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Export\\Driver", "fromLink": "Doctrine/ORM/Tools/Export/Driver.html", "link": "Doctrine/ORM/Tools/Export/Driver/AnnotationExporter.html", "name": "Doctrine\\ORM\\Tools\\Export\\Driver\\AnnotationExporter", "doc": "&quot;ClassMetadata exporter for PHP classes with annotations.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Export\\Driver\\AnnotationExporter", "fromLink": "Doctrine/ORM/Tools/Export/Driver/AnnotationExporter.html", "link": "Doctrine/ORM/Tools/Export/Driver/AnnotationExporter.html#method_exportClassMetadata", "name": "Doctrine\\ORM\\Tools\\Export\\Driver\\AnnotationExporter::exportClassMetadata", "doc": "&quot;Converts a single ClassMetadata instance to the exported format\nand returns it.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Export\\Driver\\AnnotationExporter", "fromLink": "Doctrine/ORM/Tools/Export/Driver/AnnotationExporter.html", "link": "Doctrine/ORM/Tools/Export/Driver/AnnotationExporter.html#method__generateOutputPath", "name": "Doctrine\\ORM\\Tools\\Export\\Driver\\AnnotationExporter::_generateOutputPath", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Export\\Driver\\AnnotationExporter", "fromLink": "Doctrine/ORM/Tools/Export/Driver/AnnotationExporter.html", "link": "Doctrine/ORM/Tools/Export/Driver/AnnotationExporter.html#method_setEntityGenerator", "name": "Doctrine\\ORM\\Tools\\Export\\Driver\\AnnotationExporter::setEntityGenerator", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Export\\Driver", "fromLink": "Doctrine/ORM/Tools/Export/Driver.html", "link": "Doctrine/ORM/Tools/Export/Driver/PhpExporter.html", "name": "Doctrine\\ORM\\Tools\\Export\\Driver\\PhpExporter", "doc": "&quot;ClassMetadata exporter for PHP code.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Export\\Driver\\PhpExporter", "fromLink": "Doctrine/ORM/Tools/Export/Driver/PhpExporter.html", "link": "Doctrine/ORM/Tools/Export/Driver/PhpExporter.html#method_exportClassMetadata", "name": "Doctrine\\ORM\\Tools\\Export\\Driver\\PhpExporter::exportClassMetadata", "doc": "&quot;Converts a single ClassMetadata instance to the exported format\nand returns it.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Export\\Driver\\PhpExporter", "fromLink": "Doctrine/ORM/Tools/Export/Driver/PhpExporter.html", "link": "Doctrine/ORM/Tools/Export/Driver/PhpExporter.html#method__varExport", "name": "Doctrine\\ORM\\Tools\\Export\\Driver\\PhpExporter::_varExport", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Export\\Driver", "fromLink": "Doctrine/ORM/Tools/Export/Driver.html", "link": "Doctrine/ORM/Tools/Export/Driver/XmlExporter.html", "name": "Doctrine\\ORM\\Tools\\Export\\Driver\\XmlExporter", "doc": "&quot;ClassMetadata exporter for Doctrine XML mapping files.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Export\\Driver\\XmlExporter", "fromLink": "Doctrine/ORM/Tools/Export/Driver/XmlExporter.html", "link": "Doctrine/ORM/Tools/Export/Driver/XmlExporter.html#method_exportClassMetadata", "name": "Doctrine\\ORM\\Tools\\Export\\Driver\\XmlExporter::exportClassMetadata", "doc": "&quot;Converts a single ClassMetadata instance to the exported format\nand returns it.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Export\\Driver", "fromLink": "Doctrine/ORM/Tools/Export/Driver.html", "link": "Doctrine/ORM/Tools/Export/Driver/YamlExporter.html", "name": "Doctrine\\ORM\\Tools\\Export\\Driver\\YamlExporter", "doc": "&quot;ClassMetadata exporter for Doctrine YAML mapping files.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Export\\Driver\\YamlExporter", "fromLink": "Doctrine/ORM/Tools/Export/Driver/YamlExporter.html", "link": "Doctrine/ORM/Tools/Export/Driver/YamlExporter.html#method_exportClassMetadata", "name": "Doctrine\\ORM\\Tools\\Export\\Driver\\YamlExporter::exportClassMetadata", "doc": "&quot;Converts a single ClassMetadata instance to the exported format\nand returns it.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Export", "fromLink": "Doctrine/ORM/Tools/Export.html", "link": "Doctrine/ORM/Tools/Export/ExportException.html", "name": "Doctrine\\ORM\\Tools\\Export\\ExportException", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Export\\ExportException", "fromLink": "Doctrine/ORM/Tools/Export/ExportException.html", "link": "Doctrine/ORM/Tools/Export/ExportException.html#method_invalidExporterDriverType", "name": "Doctrine\\ORM\\Tools\\Export\\ExportException::invalidExporterDriverType", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Export\\ExportException", "fromLink": "Doctrine/ORM/Tools/Export/ExportException.html", "link": "Doctrine/ORM/Tools/Export/ExportException.html#method_invalidMappingDriverType", "name": "Doctrine\\ORM\\Tools\\Export\\ExportException::invalidMappingDriverType", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Export\\ExportException", "fromLink": "Doctrine/ORM/Tools/Export/ExportException.html", "link": "Doctrine/ORM/Tools/Export/ExportException.html#method_attemptOverwriteExistingFile", "name": "Doctrine\\ORM\\Tools\\Export\\ExportException::attemptOverwriteExistingFile", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Pagination", "fromLink": "Doctrine/ORM/Tools/Pagination.html", "link": "Doctrine/ORM/Tools/Pagination/CountOutputWalker.html", "name": "Doctrine\\ORM\\Tools\\Pagination\\CountOutputWalker", "doc": "&quot;Wraps the query in order to accurately count the root objects.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Pagination\\CountOutputWalker", "fromLink": "Doctrine/ORM/Tools/Pagination/CountOutputWalker.html", "link": "Doctrine/ORM/Tools/Pagination/CountOutputWalker.html#method___construct", "name": "Doctrine\\ORM\\Tools\\Pagination\\CountOutputWalker::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Pagination\\CountOutputWalker", "fromLink": "Doctrine/ORM/Tools/Pagination/CountOutputWalker.html", "link": "Doctrine/ORM/Tools/Pagination/CountOutputWalker.html#method_walkSelectStatement", "name": "Doctrine\\ORM\\Tools\\Pagination\\CountOutputWalker::walkSelectStatement", "doc": "&quot;Walks down a SelectStatement AST node, wrapping it in a COUNT (SELECT DISTINCT).&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Pagination", "fromLink": "Doctrine/ORM/Tools/Pagination.html", "link": "Doctrine/ORM/Tools/Pagination/CountWalker.html", "name": "Doctrine\\ORM\\Tools\\Pagination\\CountWalker", "doc": "&quot;Replaces the selectClause of the AST with a COUNT statement.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Pagination\\CountWalker", "fromLink": "Doctrine/ORM/Tools/Pagination/CountWalker.html", "link": "Doctrine/ORM/Tools/Pagination/CountWalker.html#method_walkSelectStatement", "name": "Doctrine\\ORM\\Tools\\Pagination\\CountWalker::walkSelectStatement", "doc": "&quot;Walks down a SelectStatement AST node, modifying it to retrieve a COUNT.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Pagination", "fromLink": "Doctrine/ORM/Tools/Pagination.html", "link": "Doctrine/ORM/Tools/Pagination/LimitSubqueryOutputWalker.html", "name": "Doctrine\\ORM\\Tools\\Pagination\\LimitSubqueryOutputWalker", "doc": "&quot;Wraps the query in order to select root entity IDs for pagination.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Pagination\\LimitSubqueryOutputWalker", "fromLink": "Doctrine/ORM/Tools/Pagination/LimitSubqueryOutputWalker.html", "link": "Doctrine/ORM/Tools/Pagination/LimitSubqueryOutputWalker.html#method___construct", "name": "Doctrine\\ORM\\Tools\\Pagination\\LimitSubqueryOutputWalker::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Pagination\\LimitSubqueryOutputWalker", "fromLink": "Doctrine/ORM/Tools/Pagination/LimitSubqueryOutputWalker.html", "link": "Doctrine/ORM/Tools/Pagination/LimitSubqueryOutputWalker.html#method_walkSelectStatement", "name": "Doctrine\\ORM\\Tools\\Pagination\\LimitSubqueryOutputWalker::walkSelectStatement", "doc": "&quot;Walks down a SelectStatement AST node, wrapping it in a SELECT DISTINCT.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Pagination\\LimitSubqueryOutputWalker", "fromLink": "Doctrine/ORM/Tools/Pagination/LimitSubqueryOutputWalker.html", "link": "Doctrine/ORM/Tools/Pagination/LimitSubqueryOutputWalker.html#method_preserveSqlOrdering", "name": "Doctrine\\ORM\\Tools\\Pagination\\LimitSubqueryOutputWalker::preserveSqlOrdering", "doc": "&quot;Generates new SQL for Postgresql or Oracle if necessary.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Pagination", "fromLink": "Doctrine/ORM/Tools/Pagination.html", "link": "Doctrine/ORM/Tools/Pagination/LimitSubqueryWalker.html", "name": "Doctrine\\ORM\\Tools\\Pagination\\LimitSubqueryWalker", "doc": "&quot;Replaces the selectClause of the AST with a SELECT DISTINCT root.id equivalent.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Pagination\\LimitSubqueryWalker", "fromLink": "Doctrine/ORM/Tools/Pagination/LimitSubqueryWalker.html", "link": "Doctrine/ORM/Tools/Pagination/LimitSubqueryWalker.html#method_walkSelectStatement", "name": "Doctrine\\ORM\\Tools\\Pagination\\LimitSubqueryWalker::walkSelectStatement", "doc": "&quot;Walks down a SelectStatement AST node, modifying it to retrieve DISTINCT ids\nof the root Entity.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Pagination", "fromLink": "Doctrine/ORM/Tools/Pagination.html", "link": "Doctrine/ORM/Tools/Pagination/Paginator.html", "name": "Doctrine\\ORM\\Tools\\Pagination\\Paginator", "doc": "&quot;The paginator can handle various complex scenarios with DQL.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Pagination\\Paginator", "fromLink": "Doctrine/ORM/Tools/Pagination/Paginator.html", "link": "Doctrine/ORM/Tools/Pagination/Paginator.html#method___construct", "name": "Doctrine\\ORM\\Tools\\Pagination\\Paginator::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Pagination\\Paginator", "fromLink": "Doctrine/ORM/Tools/Pagination/Paginator.html", "link": "Doctrine/ORM/Tools/Pagination/Paginator.html#method_getQuery", "name": "Doctrine\\ORM\\Tools\\Pagination\\Paginator::getQuery", "doc": "&quot;Returns the query.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Pagination\\Paginator", "fromLink": "Doctrine/ORM/Tools/Pagination/Paginator.html", "link": "Doctrine/ORM/Tools/Pagination/Paginator.html#method_getFetchJoinCollection", "name": "Doctrine\\ORM\\Tools\\Pagination\\Paginator::getFetchJoinCollection", "doc": "&quot;Returns whether the query joins a collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Pagination\\Paginator", "fromLink": "Doctrine/ORM/Tools/Pagination/Paginator.html", "link": "Doctrine/ORM/Tools/Pagination/Paginator.html#method_getUseOutputWalkers", "name": "Doctrine\\ORM\\Tools\\Pagination\\Paginator::getUseOutputWalkers", "doc": "&quot;Returns whether the paginator will use an output walker.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Pagination\\Paginator", "fromLink": "Doctrine/ORM/Tools/Pagination/Paginator.html", "link": "Doctrine/ORM/Tools/Pagination/Paginator.html#method_setUseOutputWalkers", "name": "Doctrine\\ORM\\Tools\\Pagination\\Paginator::setUseOutputWalkers", "doc": "&quot;Sets whether the paginator will use an output walker.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Pagination\\Paginator", "fromLink": "Doctrine/ORM/Tools/Pagination/Paginator.html", "link": "Doctrine/ORM/Tools/Pagination/Paginator.html#method_count", "name": "Doctrine\\ORM\\Tools\\Pagination\\Paginator::count", "doc": "&quot;{@inheritdoc}&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Pagination\\Paginator", "fromLink": "Doctrine/ORM/Tools/Pagination/Paginator.html", "link": "Doctrine/ORM/Tools/Pagination/Paginator.html#method_getIterator", "name": "Doctrine\\ORM\\Tools\\Pagination\\Paginator::getIterator", "doc": "&quot;{@inheritdoc}&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools\\Pagination", "fromLink": "Doctrine/ORM/Tools/Pagination.html", "link": "Doctrine/ORM/Tools/Pagination/WhereInWalker.html", "name": "Doctrine\\ORM\\Tools\\Pagination\\WhereInWalker", "doc": "&quot;Replaces the whereClause of the AST with a WHERE id IN (:foo_1, :foo_2) equivalent.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Pagination\\WhereInWalker", "fromLink": "Doctrine/ORM/Tools/Pagination/WhereInWalker.html", "link": "Doctrine/ORM/Tools/Pagination/WhereInWalker.html#method_walkSelectStatement", "name": "Doctrine\\ORM\\Tools\\Pagination\\WhereInWalker::walkSelectStatement", "doc": "&quot;Replaces the whereClause in the AST.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools", "fromLink": "Doctrine/ORM/Tools.html", "link": "Doctrine/ORM/Tools/ResolveTargetEntityListener.html", "name": "Doctrine\\ORM\\Tools\\ResolveTargetEntityListener", "doc": "&quot;ResolveTargetEntityListener&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\ResolveTargetEntityListener", "fromLink": "Doctrine/ORM/Tools/ResolveTargetEntityListener.html", "link": "Doctrine/ORM/Tools/ResolveTargetEntityListener.html#method_addResolveTargetEntity", "name": "Doctrine\\ORM\\Tools\\ResolveTargetEntityListener::addResolveTargetEntity", "doc": "&quot;Adds a target-entity class name to resolve to a new class name.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\ResolveTargetEntityListener", "fromLink": "Doctrine/ORM/Tools/ResolveTargetEntityListener.html", "link": "Doctrine/ORM/Tools/ResolveTargetEntityListener.html#method_loadClassMetadata", "name": "Doctrine\\ORM\\Tools\\ResolveTargetEntityListener::loadClassMetadata", "doc": "&quot;Processes event and resolves new target entity names.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools", "fromLink": "Doctrine/ORM/Tools.html", "link": "Doctrine/ORM/Tools/SchemaTool.html", "name": "Doctrine\\ORM\\Tools\\SchemaTool", "doc": "&quot;The SchemaTool is a tool to create\/drop\/update database schemas based on\n&lt;tt&gt;ClassMetadata&lt;\/tt&gt; class descriptors.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\SchemaTool", "fromLink": "Doctrine/ORM/Tools/SchemaTool.html", "link": "Doctrine/ORM/Tools/SchemaTool.html#method___construct", "name": "Doctrine\\ORM\\Tools\\SchemaTool::__construct", "doc": "&quot;Initializes a new SchemaTool instance that uses the connection of the\nprovided EntityManager.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\SchemaTool", "fromLink": "Doctrine/ORM/Tools/SchemaTool.html", "link": "Doctrine/ORM/Tools/SchemaTool.html#method_createSchema", "name": "Doctrine\\ORM\\Tools\\SchemaTool::createSchema", "doc": "&quot;Creates the database schema for the given array of ClassMetadata instances.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\SchemaTool", "fromLink": "Doctrine/ORM/Tools/SchemaTool.html", "link": "Doctrine/ORM/Tools/SchemaTool.html#method_getCreateSchemaSql", "name": "Doctrine\\ORM\\Tools\\SchemaTool::getCreateSchemaSql", "doc": "&quot;Gets the list of DDL statements that are required to create the database schema for\nthe given list of ClassMetadata instances.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\SchemaTool", "fromLink": "Doctrine/ORM/Tools/SchemaTool.html", "link": "Doctrine/ORM/Tools/SchemaTool.html#method_getSchemaFromMetadata", "name": "Doctrine\\ORM\\Tools\\SchemaTool::getSchemaFromMetadata", "doc": "&quot;Creates a Schema instance from a given set of metadata classes.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\SchemaTool", "fromLink": "Doctrine/ORM/Tools/SchemaTool.html", "link": "Doctrine/ORM/Tools/SchemaTool.html#method_dropSchema", "name": "Doctrine\\ORM\\Tools\\SchemaTool::dropSchema", "doc": "&quot;Drops the database schema for the given classes.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\SchemaTool", "fromLink": "Doctrine/ORM/Tools/SchemaTool.html", "link": "Doctrine/ORM/Tools/SchemaTool.html#method_dropDatabase", "name": "Doctrine\\ORM\\Tools\\SchemaTool::dropDatabase", "doc": "&quot;Drops all elements in the database of the current connection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\SchemaTool", "fromLink": "Doctrine/ORM/Tools/SchemaTool.html", "link": "Doctrine/ORM/Tools/SchemaTool.html#method_getDropDatabaseSQL", "name": "Doctrine\\ORM\\Tools\\SchemaTool::getDropDatabaseSQL", "doc": "&quot;Gets the SQL needed to drop the database schema for the connections database.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\SchemaTool", "fromLink": "Doctrine/ORM/Tools/SchemaTool.html", "link": "Doctrine/ORM/Tools/SchemaTool.html#method_getDropSchemaSQL", "name": "Doctrine\\ORM\\Tools\\SchemaTool::getDropSchemaSQL", "doc": "&quot;Gets SQL to drop the tables defined by the passed classes.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\SchemaTool", "fromLink": "Doctrine/ORM/Tools/SchemaTool.html", "link": "Doctrine/ORM/Tools/SchemaTool.html#method_updateSchema", "name": "Doctrine\\ORM\\Tools\\SchemaTool::updateSchema", "doc": "&quot;Updates the database schema of the given classes by comparing the ClassMetadata\ninstances to the current database schema that is inspected. If $saveMode is set\nto true the command is executed in the Database, else SQL is returned.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\SchemaTool", "fromLink": "Doctrine/ORM/Tools/SchemaTool.html", "link": "Doctrine/ORM/Tools/SchemaTool.html#method_getUpdateSchemaSql", "name": "Doctrine\\ORM\\Tools\\SchemaTool::getUpdateSchemaSql", "doc": "&quot;Gets the sequence of SQL statements that need to be performed in order\nto bring the given class mappings in-synch with the relational schema.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools", "fromLink": "Doctrine/ORM/Tools.html", "link": "Doctrine/ORM/Tools/SchemaValidator.html", "name": "Doctrine\\ORM\\Tools\\SchemaValidator", "doc": "&quot;Performs strict validation of the mapping schema&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\SchemaValidator", "fromLink": "Doctrine/ORM/Tools/SchemaValidator.html", "link": "Doctrine/ORM/Tools/SchemaValidator.html#method___construct", "name": "Doctrine\\ORM\\Tools\\SchemaValidator::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\SchemaValidator", "fromLink": "Doctrine/ORM/Tools/SchemaValidator.html", "link": "Doctrine/ORM/Tools/SchemaValidator.html#method_validateMapping", "name": "Doctrine\\ORM\\Tools\\SchemaValidator::validateMapping", "doc": "&quot;Checks the internal consistency of all mapping files.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\SchemaValidator", "fromLink": "Doctrine/ORM/Tools/SchemaValidator.html", "link": "Doctrine/ORM/Tools/SchemaValidator.html#method_validateClass", "name": "Doctrine\\ORM\\Tools\\SchemaValidator::validateClass", "doc": "&quot;Validates a single class of the current.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\SchemaValidator", "fromLink": "Doctrine/ORM/Tools/SchemaValidator.html", "link": "Doctrine/ORM/Tools/SchemaValidator.html#method_schemaInSyncWithMetadata", "name": "Doctrine\\ORM\\Tools\\SchemaValidator::schemaInSyncWithMetadata", "doc": "&quot;Checks if the Database Schema is in sync with the current metadata state.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools", "fromLink": "Doctrine/ORM/Tools.html", "link": "Doctrine/ORM/Tools/Setup.html", "name": "Doctrine\\ORM\\Tools\\Setup", "doc": "&quot;Convenience class for setting up Doctrine from different installations and configurations.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Setup", "fromLink": "Doctrine/ORM/Tools/Setup.html", "link": "Doctrine/ORM/Tools/Setup.html#method_registerAutoloadDirectory", "name": "Doctrine\\ORM\\Tools\\Setup::registerAutoloadDirectory", "doc": "&quot;Use this method to register all autoloads for a downloaded Doctrine library.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Setup", "fromLink": "Doctrine/ORM/Tools/Setup.html", "link": "Doctrine/ORM/Tools/Setup.html#method_createAnnotationMetadataConfiguration", "name": "Doctrine\\ORM\\Tools\\Setup::createAnnotationMetadataConfiguration", "doc": "&quot;Creates a configuration with an annotation metadata driver.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Setup", "fromLink": "Doctrine/ORM/Tools/Setup.html", "link": "Doctrine/ORM/Tools/Setup.html#method_createXMLMetadataConfiguration", "name": "Doctrine\\ORM\\Tools\\Setup::createXMLMetadataConfiguration", "doc": "&quot;Creates a configuration with a xml metadata driver.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Setup", "fromLink": "Doctrine/ORM/Tools/Setup.html", "link": "Doctrine/ORM/Tools/Setup.html#method_createYAMLMetadataConfiguration", "name": "Doctrine\\ORM\\Tools\\Setup::createYAMLMetadataConfiguration", "doc": "&quot;Creates a configuration with a yaml metadata driver.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\Setup", "fromLink": "Doctrine/ORM/Tools/Setup.html", "link": "Doctrine/ORM/Tools/Setup.html#method_createConfiguration", "name": "Doctrine\\ORM\\Tools\\Setup::createConfiguration", "doc": "&quot;Creates a configuration without a metadata driver.&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools", "fromLink": "Doctrine/ORM/Tools.html", "link": "Doctrine/ORM/Tools/ToolEvents.html", "name": "Doctrine\\ORM\\Tools\\ToolEvents", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM\\Tools", "fromLink": "Doctrine/ORM/Tools.html", "link": "Doctrine/ORM/Tools/ToolsException.html", "name": "Doctrine\\ORM\\Tools\\ToolsException", "doc": "&quot;Tools related Exceptions.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\ToolsException", "fromLink": "Doctrine/ORM/Tools/ToolsException.html", "link": "Doctrine/ORM/Tools/ToolsException.html#method_schemaToolFailure", "name": "Doctrine\\ORM\\Tools\\ToolsException::schemaToolFailure", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\Tools\\ToolsException", "fromLink": "Doctrine/ORM/Tools/ToolsException.html", "link": "Doctrine/ORM/Tools/ToolsException.html#method_couldNotMapDoctrine1Type", "name": "Doctrine\\ORM\\Tools\\ToolsException::couldNotMapDoctrine1Type", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM", "fromLink": "Doctrine/ORM.html", "link": "Doctrine/ORM/TransactionRequiredException.html", "name": "Doctrine\\ORM\\TransactionRequiredException", "doc": "&quot;Is thrown when a transaction is required for the current operation, but there is none open.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\TransactionRequiredException", "fromLink": "Doctrine/ORM/TransactionRequiredException.html", "link": "Doctrine/ORM/TransactionRequiredException.html#method_transactionRequired", "name": "Doctrine\\ORM\\TransactionRequiredException::transactionRequired", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM", "fromLink": "Doctrine/ORM.html", "link": "Doctrine/ORM/UnexpectedResultException.html", "name": "Doctrine\\ORM\\UnexpectedResultException", "doc": "&quot;Exception for a unexpected query result.&quot;"},
                    
            {"type": "Class", "fromName": "Doctrine\\ORM", "fromLink": "Doctrine/ORM.html", "link": "Doctrine/ORM/UnitOfWork.html", "name": "Doctrine\\ORM\\UnitOfWork", "doc": "&quot;The UnitOfWork is responsible for tracking changes to objects during an\n\&quot;object-level\&quot; transaction and for writing out changes to the database\nin the correct order.&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method___construct", "name": "Doctrine\\ORM\\UnitOfWork::__construct", "doc": "&quot;Initializes a new UnitOfWork instance, bound to the given EntityManager.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_commit", "name": "Doctrine\\ORM\\UnitOfWork::commit", "doc": "&quot;Commits the UnitOfWork, executing all operations that have been postponed\nup to this point. The state of all managed entities will be synchronized with\nthe database.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_getEntityChangeSet", "name": "Doctrine\\ORM\\UnitOfWork::getEntityChangeSet", "doc": "&quot;Gets the changeset for an entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_computeChangeSet", "name": "Doctrine\\ORM\\UnitOfWork::computeChangeSet", "doc": "&quot;Computes the changes that happened to a single entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_computeChangeSets", "name": "Doctrine\\ORM\\UnitOfWork::computeChangeSets", "doc": "&quot;Computes all the changes that have been done to entities and collections\nsince the last commit and stores these changes in the _entityChangeSet map\ntemporarily for access by the persisters, until the UoW commit is finished.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_recomputeSingleEntityChangeSet", "name": "Doctrine\\ORM\\UnitOfWork::recomputeSingleEntityChangeSet", "doc": "&quot;INTERNAL:\nComputes the changeset of an individual entity, independently of the\ncomputeChangeSets() routine that is used at the beginning of a UnitOfWork#commit().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_scheduleForInsert", "name": "Doctrine\\ORM\\UnitOfWork::scheduleForInsert", "doc": "&quot;Schedules an entity for insertion into the database.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_isScheduledForInsert", "name": "Doctrine\\ORM\\UnitOfWork::isScheduledForInsert", "doc": "&quot;Checks whether an entity is scheduled for insertion.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_scheduleForUpdate", "name": "Doctrine\\ORM\\UnitOfWork::scheduleForUpdate", "doc": "&quot;Schedules an entity for being updated.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_scheduleExtraUpdate", "name": "Doctrine\\ORM\\UnitOfWork::scheduleExtraUpdate", "doc": "&quot;INTERNAL:\nSchedules an extra update that will be executed immediately after the\nregular entity updates within the currently running commit cycle.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_isScheduledForUpdate", "name": "Doctrine\\ORM\\UnitOfWork::isScheduledForUpdate", "doc": "&quot;Checks whether an entity is registered as dirty in the unit of work.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_isScheduledForDirtyCheck", "name": "Doctrine\\ORM\\UnitOfWork::isScheduledForDirtyCheck", "doc": "&quot;Checks whether an entity is registered to be checked in the unit of work.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_scheduleForDelete", "name": "Doctrine\\ORM\\UnitOfWork::scheduleForDelete", "doc": "&quot;INTERNAL:\nSchedules an entity for deletion.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_isScheduledForDelete", "name": "Doctrine\\ORM\\UnitOfWork::isScheduledForDelete", "doc": "&quot;Checks whether an entity is registered as removed\/deleted with the unit\nof work.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_isEntityScheduled", "name": "Doctrine\\ORM\\UnitOfWork::isEntityScheduled", "doc": "&quot;Checks whether an entity is scheduled for insertion, update or deletion.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_addToIdentityMap", "name": "Doctrine\\ORM\\UnitOfWork::addToIdentityMap", "doc": "&quot;INTERNAL:\nRegisters an entity in the identity map.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_getEntityState", "name": "Doctrine\\ORM\\UnitOfWork::getEntityState", "doc": "&quot;Gets the state of an entity with regard to the current unit of work.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_removeFromIdentityMap", "name": "Doctrine\\ORM\\UnitOfWork::removeFromIdentityMap", "doc": "&quot;INTERNAL:\nRemoves an entity from the identity map. This effectively detaches the\nentity from the persistence management of Doctrine.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_getByIdHash", "name": "Doctrine\\ORM\\UnitOfWork::getByIdHash", "doc": "&quot;INTERNAL:\nGets an entity in the identity map by its identifier hash.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_tryGetByIdHash", "name": "Doctrine\\ORM\\UnitOfWork::tryGetByIdHash", "doc": "&quot;INTERNAL:\nTries to get an entity by its identifier hash. If no entity is found for\nthe given hash, FALSE is returned.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_isInIdentityMap", "name": "Doctrine\\ORM\\UnitOfWork::isInIdentityMap", "doc": "&quot;Checks whether an entity is registered in the identity map of this UnitOfWork.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_containsIdHash", "name": "Doctrine\\ORM\\UnitOfWork::containsIdHash", "doc": "&quot;INTERNAL:\nChecks whether an identifier hash exists in the identity map.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_persist", "name": "Doctrine\\ORM\\UnitOfWork::persist", "doc": "&quot;Persists an entity as part of the current unit of work.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_remove", "name": "Doctrine\\ORM\\UnitOfWork::remove", "doc": "&quot;Deletes an entity as part of the current unit of work.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_merge", "name": "Doctrine\\ORM\\UnitOfWork::merge", "doc": "&quot;Merges the state of the given detached entity into this UnitOfWork.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_detach", "name": "Doctrine\\ORM\\UnitOfWork::detach", "doc": "&quot;Detaches an entity from the persistence management. It&#039;s persistence will\nno longer be managed by Doctrine.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_refresh", "name": "Doctrine\\ORM\\UnitOfWork::refresh", "doc": "&quot;Refreshes the state of the given entity from the database, overwriting\nany local, unpersisted changes.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_lock", "name": "Doctrine\\ORM\\UnitOfWork::lock", "doc": "&quot;Acquire a lock on the given entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_getCommitOrderCalculator", "name": "Doctrine\\ORM\\UnitOfWork::getCommitOrderCalculator", "doc": "&quot;Gets the CommitOrderCalculator used by the UnitOfWork to order commits.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_clear", "name": "Doctrine\\ORM\\UnitOfWork::clear", "doc": "&quot;Clears the UnitOfWork.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_scheduleOrphanRemoval", "name": "Doctrine\\ORM\\UnitOfWork::scheduleOrphanRemoval", "doc": "&quot;INTERNAL:\nSchedules an orphaned entity for removal. The remove() operation will be\ninvoked on that entity at the beginning of the next commit of this\nUnitOfWork.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_scheduleCollectionDeletion", "name": "Doctrine\\ORM\\UnitOfWork::scheduleCollectionDeletion", "doc": "&quot;INTERNAL:\nSchedules a complete collection for removal when this UnitOfWork commits.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_isCollectionScheduledForDeletion", "name": "Doctrine\\ORM\\UnitOfWork::isCollectionScheduledForDeletion", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_createEntity", "name": "Doctrine\\ORM\\UnitOfWork::createEntity", "doc": "&quot;INTERNAL:\nCreates an entity. Used for reconstitution of persistent entities.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_triggerEagerLoads", "name": "Doctrine\\ORM\\UnitOfWork::triggerEagerLoads", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_loadCollection", "name": "Doctrine\\ORM\\UnitOfWork::loadCollection", "doc": "&quot;Initializes (loads) an uninitialized persistent collection of an entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_getIdentityMap", "name": "Doctrine\\ORM\\UnitOfWork::getIdentityMap", "doc": "&quot;Gets the identity map of the UnitOfWork.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_getOriginalEntityData", "name": "Doctrine\\ORM\\UnitOfWork::getOriginalEntityData", "doc": "&quot;Gets the original data of an entity. The original data is the data that was\npresent at the time the entity was reconstituted from the database.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_setOriginalEntityData", "name": "Doctrine\\ORM\\UnitOfWork::setOriginalEntityData", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_setOriginalEntityProperty", "name": "Doctrine\\ORM\\UnitOfWork::setOriginalEntityProperty", "doc": "&quot;INTERNAL:\nSets a property value of the original data array of an entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_getEntityIdentifier", "name": "Doctrine\\ORM\\UnitOfWork::getEntityIdentifier", "doc": "&quot;Gets the identifier of an entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_getSingleIdentifierValue", "name": "Doctrine\\ORM\\UnitOfWork::getSingleIdentifierValue", "doc": "&quot;Processes an entity instance to extract their identifier values.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_tryGetById", "name": "Doctrine\\ORM\\UnitOfWork::tryGetById", "doc": "&quot;Tries to find an entity with the given identifier in the identity map of\nthis UnitOfWork.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_scheduleForDirtyCheck", "name": "Doctrine\\ORM\\UnitOfWork::scheduleForDirtyCheck", "doc": "&quot;Schedules an entity for dirty-checking at commit-time.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_hasPendingInsertions", "name": "Doctrine\\ORM\\UnitOfWork::hasPendingInsertions", "doc": "&quot;Checks whether the UnitOfWork has any pending insertions.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_size", "name": "Doctrine\\ORM\\UnitOfWork::size", "doc": "&quot;Calculates the size of the UnitOfWork. The size of the UnitOfWork is the\nnumber of entities in the identity map.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_getEntityPersister", "name": "Doctrine\\ORM\\UnitOfWork::getEntityPersister", "doc": "&quot;Gets the EntityPersister for an Entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_getCollectionPersister", "name": "Doctrine\\ORM\\UnitOfWork::getCollectionPersister", "doc": "&quot;Gets a collection persister for a collection-valued association.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_registerManaged", "name": "Doctrine\\ORM\\UnitOfWork::registerManaged", "doc": "&quot;INTERNAL:\nRegisters an entity as managed.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_clearEntityChangeSet", "name": "Doctrine\\ORM\\UnitOfWork::clearEntityChangeSet", "doc": "&quot;INTERNAL:\nClears the property changeset of the entity with the given OID.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_propertyChanged", "name": "Doctrine\\ORM\\UnitOfWork::propertyChanged", "doc": "&quot;Notifies this UnitOfWork of a property change in an entity.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_getScheduledEntityInsertions", "name": "Doctrine\\ORM\\UnitOfWork::getScheduledEntityInsertions", "doc": "&quot;Gets the currently scheduled entity insertions in this UnitOfWork.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_getScheduledEntityUpdates", "name": "Doctrine\\ORM\\UnitOfWork::getScheduledEntityUpdates", "doc": "&quot;Gets the currently scheduled entity updates in this UnitOfWork.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_getScheduledEntityDeletions", "name": "Doctrine\\ORM\\UnitOfWork::getScheduledEntityDeletions", "doc": "&quot;Gets the currently scheduled entity deletions in this UnitOfWork.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_getScheduledCollectionDeletions", "name": "Doctrine\\ORM\\UnitOfWork::getScheduledCollectionDeletions", "doc": "&quot;Gets the currently scheduled complete collection deletions&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_getScheduledCollectionUpdates", "name": "Doctrine\\ORM\\UnitOfWork::getScheduledCollectionUpdates", "doc": "&quot;Gets the currently scheduled collection inserts, updates and deletes.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_initializeObject", "name": "Doctrine\\ORM\\UnitOfWork::initializeObject", "doc": "&quot;Helper method to initialize a lazy loading proxy or persistent collection.&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_markReadOnly", "name": "Doctrine\\ORM\\UnitOfWork::markReadOnly", "doc": "&quot;Marks an entity as read-only so that it will not be considered for updates during UnitOfWork#commit().&quot;"},
                    {"type": "Method", "fromName": "Doctrine\\ORM\\UnitOfWork", "fromLink": "Doctrine/ORM/UnitOfWork.html", "link": "Doctrine/ORM/UnitOfWork.html#method_isReadOnly", "name": "Doctrine\\ORM\\UnitOfWork::isReadOnly", "doc": "&quot;Is this entity read only?&quot;"},
            
            {"type": "Class", "fromName": "Doctrine\\ORM", "fromLink": "Doctrine/ORM.html", "link": "Doctrine/ORM/Version.html", "name": "Doctrine\\ORM\\Version", "doc": "&quot;Class to store and retrieve the version of Doctrine&quot;"},
                                                        {"type": "Method", "fromName": "Doctrine\\ORM\\Version", "fromLink": "Doctrine/ORM/Version.html", "link": "Doctrine/ORM/Version.html#method_compare", "name": "Doctrine\\ORM\\Version::compare", "doc": "&quot;Compares a Doctrine version with the current one.&quot;"},
            
            
                                        // Fix trailing commas in the index
        {}
    ];

    /** Tokenizes strings by namespaces and functions */
    function tokenizer(term) {
        if (!term) {
            return [];
        }

        var tokens = [term];
        var meth = term.indexOf('::');

        // Split tokens into methods if "::" is found.
        if (meth > -1) {
            tokens.push(term.substr(meth + 2));
            term = term.substr(0, meth - 2);
        }

        // Split by namespace or fake namespace.
        if (term.indexOf('\\') > -1) {
            tokens = tokens.concat(term.split('\\'));
        } else if (term.indexOf('_') > 0) {
            tokens = tokens.concat(term.split('_'));
        }

        // Merge in splitting the string by case and return
        tokens = tokens.concat(term.match(/(([A-Z]?[^A-Z]*)|([a-z]?[^a-z]*))/g).slice(0,-1));

        return tokens;
    };

    root.Sami = {
        /**
         * Cleans the provided term. If no term is provided, then one is
         * grabbed from the query string "search" parameter.
         */
        cleanSearchTerm: function(term) {
            // Grab from the query string
            if (typeof term === 'undefined') {
                var name = 'search';
                var regex = new RegExp("[\\?&]" + name + "=([^&#]*)");
                var results = regex.exec(location.search);
                if (results === null) {
                    return null;
                }
                term = decodeURIComponent(results[1].replace(/\+/g, " "));
            }

            return term.replace(/<(?:.|\n)*?>/gm, '');
        },

        /** Searches through the index for a given term */
        search: function(term) {
            // Create a new search index if needed
            if (!bhIndex) {
                bhIndex = new Bloodhound({
                    limit: 500,
                    local: searchIndex,
                    datumTokenizer: function (d) {
                        return tokenizer(d.name);
                    },
                    queryTokenizer: Bloodhound.tokenizers.whitespace
                });
                bhIndex.initialize();
            }

            results = [];
            bhIndex.get(term, function(matches) {
                results = matches;
            });

            if (!rootPath) {
                return results;
            }

            // Fix the element links based on the current page depth.
            return $.map(results, function(ele) {
                if (ele.link.indexOf('..') > -1) {
                    return ele;
                }
                ele.link = rootPath + ele.link;
                if (ele.fromLink) {
                    ele.fromLink = rootPath + ele.fromLink;
                }
                return ele;
            });
        },

        /** Get a search class for a specific type */
        getSearchClass: function(type) {
            return searchTypeClasses[type] || searchTypeClasses['_'];
        },

        /** Add the left-nav tree to the site */
        injectApiTree: function(ele) {
            ele.html(treeHtml);
        }
    };

    $(function() {
        // Modify the HTML to work correctly based on the current depth
        rootPath = $('body').attr('data-root-path');
        treeHtml = treeHtml.replace(/href="/g, 'href="' + rootPath);
        Sami.injectApiTree($('#api-tree'));
    });

    return root.Sami;
})(window);

$(function() {

    // Enable the version switcher
    $('#version-switcher').change(function() {
        window.location = $(this).val()
    });

    
        // Toggle left-nav divs on click
        $('#api-tree .hd span').click(function() {
            $(this).parent().parent().toggleClass('opened');
        });

        // Expand the parent namespaces of the current page.
        var expected = $('body').attr('data-name');

        if (expected) {
            // Open the currently selected node and its parents.
            var container = $('#api-tree');
            var node = $('#api-tree li[data-name="' + expected + '"]');
            // Node might not be found when simulating namespaces
            if (node.length > 0) {
                node.addClass('active').addClass('opened');
                node.parents('li').addClass('opened');
                var scrollPos = node.offset().top - container.offset().top + container.scrollTop();
                // Position the item nearer to the top of the screen.
                scrollPos -= 200;
                container.scrollTop(scrollPos);
            }
        }

    
    
        var form = $('#search-form .typeahead');
        form.typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        }, {
            name: 'search',
            displayKey: 'name',
            source: function (q, cb) {
                cb(Sami.search(q));
            }
        });

        // The selection is direct-linked when the user selects a suggestion.
        form.on('typeahead:selected', function(e, suggestion) {
            window.location = suggestion.link;
        });

        // The form is submitted when the user hits enter.
        form.keypress(function (e) {
            if (e.which == 13) {
                $('#search-form').submit();
                return true;
            }
        });

    
});


